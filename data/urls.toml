# Internal links
[Cortex]
    [Cortex.Blogs]
        MainDoc = "/blog/"
        [Cortex.Blogs.News]
            MainDoc = "/blog/news"
        [Cortex.Blogs.Releases]
            MainDoc = "/blog/releases"
            [Cortex.Blogs.Releases.2022.X]
                MainDoc = "/blog/releases/2022.x"    
                [Cortex.Blogs.Releases.2022.9]
                    MainDoc =  "/blog/2022/10/27/2022.9/"
                    ImprovedPerformance =  "/blog/2022/10/27/2022.9/#improved-performance-vs-7x"
                    NewEngine =  "/blog/2022/10/27/2022.9/#new-innovation-engine"
                    HAArchitecture =  "/blog/2022/10/27/2022.9/#new-ha-architecture"
                    180NewBlocks =  "/blog/2022/10/27/2022.9/#180-new-blocks"
                    EncryptableAndEncryptedText = "/blog/2022/10/27/2022.9/#new-concept-of-encryptable-and-encrypted-text"
                    NewPropertyEditor =  "/blog/2022/10/27/2022.9/#new-property-editor"
                    Messages =  "/blog/2022/10/27/2022.9/#messages"
                    FlowContract =  "/blog/2022/10/27/2022.9/#flow-contract"
                    CallingOtherFlows =  "/blog/2022/10/27/2022.9/#calling-other-flows"
                    DebugWithInputVariables =  "/blog/2022/10/27/2022.9/#debug-with-input-variables"
                    PackageManagement =  "/blog/2022/10/27/2022.9/#package-management"
                    StructuredLogging =  "/blog/2022/10/27/2022.9/#structured-logging"
                    GrafanaDashboards =  "/blog/2022/10/27/2022.9/#grafana-dashboards"
                    SimplifiedInstallation =  "/blog/2022/10/27/2022.9/#simplified-installation"
                    VersionedAPIs =  "/blog/2022/10/27/2022.9/#versioned-apis"
                    ProductPortal =  "/blog/2022/10/27/2022.9/#product-portal"
    [Cortex.Faqs]
        MainDoc = "/docs/faqs/"
    [Cortex.GettingStarted]
        MainDoc = "/docs/getting-started/"
        [Cortex.GettingStarted.OnPremise]
            MainDoc = "/docs/getting-started/on-premise/"
            [Cortex.GettingStarted.OnPremise.InstallInnovationOnly]
                MainDoc = "/docs/getting-started/on-premise/install-innovation-only/"
                [Cortex.GettingStarted.OnPremise.InstallInnovationOnly.Advanced]
                    AdvancedConfig = "/docs/getting-started/on-premise/install-innovation-only/advanced/advanced-config-changes"
                    AdvancedConfigSingleServer = "/docs/getting-started/on-premise/install-innovation-only/advanced/advanced-config-changes#single-server-without-ha"
                    AdvancedConfigMultipleServer = "/docs/getting-started/on-premise/install-innovation-only/advanced/advanced-config-changes#multiple-server-with-ha"
                    AlternativeArchitectures = "/docs/getting-started/on-premise/install-innovation-only/advanced/alternative-architectures"
                    ApplyTDE = "/docs/getting-started/on-premise/install-innovation-only/advanced/tde"
                    ConfigureFirewalls = "/docs/getting-started/on-premise/install-innovation-only/advanced/configure-firewalls"
                    CreateSelfSignedCertificates = "/docs/getting-started/on-premise/install-innovation-only/advanced/self-signed-certificates"
                    EncryptText = "/docs/getting-started/on-premise/install-innovation-only/advanced/encrypt-text"
                    PortRequirements = "/docs/getting-started/on-premise/install-innovation-only/advanced/port-requirements"
                    RolloverCertificates = "/docs/getting-started/on-premise/install-innovation-only/advanced/rollover-certificates"
                    SSLBestPractices = "/docs/getting-started/on-premise/install-innovation-only/advanced/ssl-best-practices"
                [Cortex.GettingStarted.OnPremise.InstallInnovationOnly.MultipleServerWithHA]
                    MainDoc = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/"       
                    Architecture = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/architecture"
                    MakeInstallationArtefactsAvailable = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-application-and-loadbalancer-servers/#make-installation-artefacts-available"
                    InstallApplicationAndLoadBalancerServers = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-application-and-loadbalancer-servers"
                    ConfigureInstallationScript = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-application-and-loadbalancer-servers#configure-installation-script"
                    RunInstallationScript = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-application-and-loadbalancer-servers#run-installation-script"
                    InstallWebApplicationServer = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-web-application-server"
                    InstallGateway = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-web-application-server#install-gateway"
                    Prerequisites = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/prerequisites"
                    AltLoadBalancer = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/prerequisites#alternative-load-balancer-requirements"
                    CertificateRequirements = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/prerequisites#certificate-requirements"
                    WebBrowserRequirements = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/prerequisites#web-browser-requirements"
                    AntivirusExclusions = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/prerequisites#antivirus-exclusions"
                    LicensingRequirements = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/prerequisites#licensing-requirements"
                    SetupGateway = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/setup-gateway"
                    TryItOut= "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/try-it-out"
                    TryItOutPublishedFlow= "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/try-it-out/#test-publishing-production-flows"
                [Cortex.GettingStarted.OnPremise.InstallInnovationOnly.SingleServerWithoutHA]
                    MainDoc = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/"       
                    Architecture = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/architecture"
                    InstallApplicationServer = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/install-application-server"
                    ConfigureInstallationScript = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/install-application-server#configure-installation-script"
                    RunInstallationScript = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/install-application-server#run-installation-script"
                    InstallWebApplicationServer = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/install-web-application-server"
                    InstallGateway = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/install-web-application-server#install-gateway"
                    Prerequisites = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/prerequisites"
                    CertificateRequirements = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/prerequisites#certificate-requirements"
                    WebBrowserRequirements = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/prerequisites#web-browser-requirements"
                    LicensingRequirements = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/prerequisites#licensing-requirements"
                    SetupGateway = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/setup-gateway"
                    TryItOut= "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/try-it-out"
                    TryItOutPublishedFlow= "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/try-it-out/#test-publishing-production-flows"
                    AntivirusExclusions = "/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/prerequisites#antivirus-exclusions"
                    [Cortex.GettingStarted.OnPremise.InstallInnovationOnly.MultipleServerWithHA.Advanced]
                        AdvancedConfig = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/advanced-config-changes"
                        AlternativeArchitectures = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/alternative-architectures"
                        ApplyTDE = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/tde"
                        ConfigureFirewalls = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/configure-firewalls"
                        CreateSelfSignedCertificates = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/self-signed-certificates"
                        EncryptText = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/encrypt-text"
                        PortRequirements = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/port-requirements"
                        SSLBestPractices = "/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/advanced/ssl-best-practices"
            [Cortex.GettingStarted.OnPremise.AddInnovationTo72]
                MainDoc = "/docs/getting-started/on-premise/add-innovation-to-72/"
                [Cortex.GettingStarted.OnPremise.AddInnovationTo72.MultipleServerWithHA]
                    MainDoc = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/"       
                    Architecture = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/architecture"
                    RecommendedArchitecture = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/architecture#recommended-architecture"
                    MinimumArchitecture = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/architecture#minimum-architecture"
                    AlternativeArchitectures = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/architecture#alternative-architectures"
                    InstallApplicationAndLoadBalancerServers = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/install-application-and-loadbalancer-servers"
                    ConfigureInstallationScript = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/install-application-and-loadbalancer-servers#configure-installation-script"
                    RunInstallationScript = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/install-application-and-loadbalancer-servers#run-installation-script"
                    AddInnovationTo72WebApplicationServer = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/install-web-application-server"
                    InstallGateway = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/install-web-application-server#upgrade-gateway"
                    Prerequisites = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites"
                    CertificateRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites#certificate-requirements"
                    WebBrowserRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites#web-browser-requirements"
                    LicensingRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites#licensing-requirements"
                    TryItOut= "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/try-it-out"
                    AntivirusExclusions = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites#antivirus-exclusions"
                    HardwareRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites#hardware-requirements"
                    HardwareRequirementsAlternativeArchitecture = "/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites#alternative-architectures"
                [Cortex.GettingStarted.OnPremise.AddInnovationTo72.SingleServerWithoutHA]
                    MainDoc = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/"       
                    Architecture = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/architecture"
                    InstallApplicationServer = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/install-application-server"
                    ConfigureInstallationScript = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/install-application-server#configure-installation-script"
                    RunInstallationScript = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/install-application-server#run-installation-script"
                    AddInnovationTo72WebApplicationServer = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/install-web-application-server"
                    InstallGateway = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/install-web-application-server#upgrade-gateway"
                    Prerequisites = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/prerequisites"
                    CertificateRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/prerequisites#certificate-requirements"
                    WebBrowserRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/prerequisites#web-browser-requirements"
                    LicensingRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/prerequisites#licensing-requirements"
                    TryItOut= "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/try-it-out"
                    AntivirusExclusions = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/prerequisites#antivirus-exclusions"
                    HardwareRequirements = "/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/prerequisites#hardware-requirements"
                [Cortex.GettingStarted.OnPremise.AddObservabilityToInnovation]
                    MainDoc = "/docs/getting-started/on-premise/add-observability-to-innovation/"
                [Cortex.GettingStarted.OnPremise.AddObservabilityToInnovation.Grafana]
                    MainDoc = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/"
                    Architecture = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/architecture"
                    Prerequisites = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/prerequisites"
                    InstallOnNewHardware = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/prerequisites/#option-1-install-on-new-hardware"
                    InstallOnExistingHardware = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/prerequisites/#option-2-install-on-existing-hardware"
                    SoftwareRequirements = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/prerequisites#software-requirements"
                    AdditionalWebApplicationServerRequirements = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/prerequisites/#additional-web-application-server-requirements"
                    SetupGrafana = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/setup-grafana"
                    TryItOut = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/try-it-out"
                    WebAppCertificateRequirements = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/prerequisites#certificate-requirements"
                    [Cortex.GettingStarted.OnPremise.AddObservabilityToInnovation.Grafana.Advanced]
                        PortRequirements = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/port-requirements"
                        CreateSelfSignedCertificates = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/self-signed-certificates"
                        GenerateTheRootCaCertificate = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/self-signed-certificates/#generate-the-root-ca-certificate"
                        SSLBestPractices = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/ssl-best-practices"
                    [Cortex.GettingStarted.OnPremise.AddObservabilityToInnovation.Grafana.InstallGrafana]
                        MainDoc = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-grafana/"
                        ConfigureGrafana = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-grafana/configure-grafana"
                        ConfigureHTTPS = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-grafana/configure-grafana/#configure-https"
                    [Cortex.GettingStarted.OnPremise.AddObservabilityToInnovation.Grafana.InstallLoki]
                        MainDoc = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/"
                        AddANewWebsite = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/configure-loki/#add-a-new-website"
                        CreateLokiUser = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/configure-loki/#create-loki-user"
                        ConfigureLoki = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/configure-loki"
                        InstallIISBasicAuthentication = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/configure-loki/#install-iis-basic-authentication"
                        InstallCertificate = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/configure-loki/#install-certificate"
                    [Cortex.GettingStarted.OnPremise.AddObservabilityToInnovation.Grafana.InstallPromtail]
                        MainDoc = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-promtail/"
                        ConfigurePromtail = "/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-promtail/configure-promtail"
        [Cortex.GettingStarted.Cloud]
            MainDoc = "/docs/getting-started/cloud"
                [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation]
                    MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/"
                    [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana]
                        MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/"
                        [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.Architecture]
                            MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/architecture"
                        [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.Prerequisites]
                            MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/prerequisites"
                        [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.SetupGrafana]
                            MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/setup-grafana"
                            SignUpForGrafanaCloud = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/setup-grafana/#sign-up-for-grafana-cloud"
                        [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.SetupLoki]
                            MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/setup-loki/"
                            SetUpGrafanaLoki = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/setup-loki/#set-up-grafana-loki"
                        [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.ImportDashboards]
                            MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/import-dashboards"
                        [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.InstallPromtail]
                            MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/install-promtail/"
                            [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.InstallPromtail.ConfigurePromtail]
                                MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/install-promtail/configure-promtail"
                        [Cortex.GettingStarted.Cloud.AddObservabilityToInnovation.Grafana.TryItOut]
                            MainDoc = "/docs/getting-started/cloud/add-observability-to-innovation/grafana/try-it-out/"


    [Cortex.Guides]
        MainDoc = "/docs/guides/"
        [Cortex.Guides.Studio]
            MainDoc = "/docs/guides/cortex-studio/"
            [Cortex.Guides.Studio.ExpressionEditor]
                MainDoc = "/docs/guides/cortex-studio/expression-editor/"
                Snippets = "/docs/guides/cortex-studio/expression-editor/#snippets"
                Tools = "/docs/guides/cortex-studio/expression-editor/#tools"
            [Cortex.Guides.Studio.VariableEditor]
                MainDoc = "/docs/guides/cortex-studio/variable-editor/"
            [Cortex.Guides.Studio.LiteralEditor]
                MainDoc = "/docs/guides/cortex-studio/literal-editor/"
            [Cortex.Guides.Studio.EastPanel]
                MainDoc = "/docs/guides/cortex-studio/east-panel/"
                PropertyEditor = "/docs/guides/cortex-studio/east-panel/#property-editor"
                AddVariablesButton = "/docs/guides/cortex-studio/east-panel/#add-variables-button"
                ShowHideAdvancedPropertiesButton = "/docs/guides/cortex-studio/east-panel/#showhide-advanced-properties-button"
                HelpButton = "/docs/guides/cortex-studio/east-panel/#help-button"
                ExecutionViewer = "/docs/guides/cortex-studio/east-panel/#execution-viewer"
                VariablesViewer = "/docs/guides/cortex-studio/east-panel/#variables-viewer"
                VariableDetailsViewer = "/docs/guides/cortex-studio/east-panel/#variable-details-viewer"
                LoadValueButton = "/docs/guides/cortex-studio/east-panel/#load-value-button"
                SettingsEditor = "/docs/guides/cortex-studio/east-panel/#settings-editor"
                InputsProperty = "/docs/guides/cortex-studio/east-panel/#inputs-property"
                ExceptionsViewer = "/docs/guides/cortex-studio/east-panel/#exceptions-viewer"
            [Cortex.Guides.Studio.MainDisplayArea]
                MainDoc = "/docs/guides/cortex-studio/main-display-area/"
                Undo = "/docs/guides/cortex-studio/main-display-area/#undo"
                Redo = "/docs/guides/cortex-studio/main-display-area/#redo"
                SetNextBlockToExecute = "/docs/guides/cortex-studio/main-display-area/#set-next-block-to-execute"
                Breakpoints = "/docs/guides/cortex-studio/main-display-area/#breakpoints"
                BreakOnException = "/docs/guides/cortex-studio/main-display-area/#break-on-exception"
                Executions = "/docs/guides/cortex-studio/main-display-area/#executions"
                StartAnExecution = "/docs/guides/cortex-studio/main-display-area/#start-an-execution"
                EditAndContinueAnExecution = "/docs/guides/cortex-studio/main-display-area/#edit-and-continue-an-execution"
            [Cortex.Guides.Studio.Navigation]
                MainDoc = "/docs/guides/cortex-studio/navigation/" 
            [Cortex.Guides.Studio.PackageManagement]
                MainDoc = "/docs/guides/cortex-studio/package-management/"                   
            [Cortex.Guides.Studio.Palettes]
                MainDoc = "/docs/guides/cortex-studio/palettes/"
            [Cortex.Guides.Studio.SouthPanel]
                MainDoc = "/docs/guides/cortex-studio/south-panel/"
                ExecutionsGrid = "/docs/guides/cortex-studio/south-panel/#executions-grid"
                PausingAnExecution = "/docs/guides/cortex-studio/south-panel/#pausing-an-execution"
                SteppingAnExecution = "/docs/guides/cortex-studio/south-panel/#stepping-an-execution"
                ContinuingAnExecution = "/docs/guides/cortex-studio/south-panel/#continuing-an-execution"
                StoppingAnExecution = "/docs/guides/cortex-studio/south-panel/#stopping-an-execution"
                MessagesGrid = "/docs/guides/cortex-studio/south-panel/#messages-grid"
                VariablesGrid = "/docs/guides/cortex-studio/south-panel/#variables-grid" 
                CreatingVariables = "/docs/guides/cortex-studio/south-panel/#creating-variables"
                ViewingVariables = "/docs/guides/cortex-studio/south-panel/#viewing-variables" 
                ModifyingVariables = "/docs/guides/cortex-studio/south-panel/#modifying-variables" 
                ChangingAVariablesScope = "/docs/guides/cortex-studio/south-panel/#changing-a-variables-scope" 
                DeletingVariables = "/docs/guides/cortex-studio/south-panel/#deleting-variables"
            [Cortex.Guides.Studio.Debugging]
                MainDoc = "/docs/guides/cortex-studio/debugging/"
        [Cortex.Guides.FlowExecutionService]
            MainDoc = "/docs/guides/cortex-flow-execution-service/"
        [Cortex.Guides.FlowDebuggerService]
            MainDoc = "/docs/guides/cortex-flow-debugger-service/"
        [Cortex.Guides.ApiGatewayService]
            MainDoc = "/docs/guides/cortex-api-gateway-service/"
        [Cortex.Guides.Gateway]
            MainDoc = "/docs/guides/cortex-gateway/"
            [Cortex.Guides.Gateway.Settings]
                MainDoc = "/docs/guides/cortex-gateway/settings/"
                [Cortex.Guides.Gateway.Settings.StudioAuthorisation]
                    MainDoc = "/docs/guides/cortex-gateway/settings/studio-authorisation"
    [Cortex.Reference]
        MainDoc = "/docs/reference/"
        [Cortex.Reference.Apis]
            MainDoc = "/docs/reference/Apis/"
            [Cortex.Reference.Apis.Studio]
                MainDoc = "/docs/reference/apis/cortex-studio/"
            [Cortex.Reference.Apis.ApiGatewayService]
                MainDoc = "/docs/reference/apis/cortex-api-gateway-service/"
            [Cortex.Reference.Apis.FlowExecutionService]
                MainDoc = "/docs/reference/apis/cortex-flow-execution-service/"
            [Cortex.Reference.Apis.FlowDebuggerService]
                MainDoc = "/docs/reference/apis/cortex-flow-debugger-service/"
        [Cortex.Reference.Blocks]
            MainDoc = "/docs/reference/blocks/"
            [Cortex.Reference.Blocks.Data]
                MainDoc = "/docs/reference/blocks/data"
                [Cortex.Reference.Blocks.Data.ExecuteDataCommand]
                    MainDoc = "/docs/reference/blocks/data/execute-data-command"
                    [Cortex.Reference.Blocks.Data.ExecuteDataCommand.ExecuteDataCommand]
                        MainDoc = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1"
                        ExecutingMultipleCommandsSafe = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/#executing-multiple-commands-safe"
                        ExecutingMultipleCommandsUnsafe = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/#executing-multiple-commands-unsafe"
                        ParameterisedCommands = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/#parameterised-commands"
                        ComplexCommands = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/#complex-commands"
                        Statements = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/#statement-types"
                        NonQueryStatements = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/#non-query-statements"
                        QueryStatements = "/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/#query-statements"
            [Cortex.Reference.Blocks.DateAndTime]
                MainDoc = "/docs/reference/blocks/date-and-time"
                [Cortex.Reference.Blocks.DateAndTime.AddTimePeriod]
                    MainDoc = "/docs/reference/blocks/date-and-time/add-time-period"
                    [Cortex.Reference.Blocks.DateAndTime.AddTimePeriod.AddTimePeriod]
                        MainDoc = "/docs/reference/blocks/date-and-time/add-time-period/add-time-period-block"
                [Cortex.Reference.Blocks.DateAndTime.ConvertDateTime]
                    MainDoc = "/docs/reference/blocks/date-and-time/convert-date-time"
                    [Cortex.Reference.Blocks.DateAndTime.ConvertDateTime.ConvertDateTimeToText]
                        MainDoc = "/docs/reference/blocks/date-and-time/convert-date-time/convert-date-time-to-text-block"
                    [Cortex.Reference.Blocks.DateAndTime.ConvertDateTime.ConvertTextToDateTime]
                        MainDoc = "/docs/reference/blocks/date-and-time/convert-date-time/convert-text-to-date-time-block"
                [Cortex.Reference.Blocks.DateAndTime.SubtractTimePeriod]
                    MainDoc = "/docs/reference/blocks/date-and-time/subtract-time-period"
                    [Cortex.Reference.Blocks.DateAndTime.SubtractTimePeriod.SubtractTimePeriod]
                        MainDoc = "/docs/reference/blocks/date-and-time/subtract-time-period/subtract-time-period-block"
            [Cortex.Reference.Blocks.Decisions]
                MainDoc = "/docs/reference/blocks/decisions/"
            [Cortex.Reference.Blocks.Dictionaries]
                MainDoc = "/docs/reference/blocks/dictionaries/"
                [Cortex.Reference.Blocks.Dictionaries.AddItem]
                    MainDoc = "/docs/reference/blocks/dictionaries/add-item/"
                    [Cortex.Reference.Blocks.Dictionaries.AddItem.AddItemWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/add-item/add-item-with-key-block-3"
                [Cortex.Reference.Blocks.Dictionaries.ContainsItem]
                    MainDoc = "/docs/reference/blocks/dictionaries/contains-item/"
                    [Cortex.Reference.Blocks.Dictionaries.ContainsItem.ContainsItemWithKeyAndValue]
                        MainDoc = "/docs/reference/blocks/dictionaries/contains-item/contains-item-with-key-and-value-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.ContainsItem.ContainsItemWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/contains-item/contains-item-with-key-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.ContainsItem.ContainsItemWithValue]
                        MainDoc = "/docs/reference/blocks/dictionaries/contains-item/contains-item-with-value-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.ContainsItem.ContainsItemsWithKeys]
                        MainDoc = "/docs/reference/blocks/dictionaries/contains-item/contains-items-with-keys-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.ContainsItem.ContainsItemsWithValues]
                        MainDoc = "/docs/reference/blocks/dictionaries/contains-item/contains-items-with-values-block-3"
                [Cortex.Reference.Blocks.Dictionaries.GetCount]
                    MainDoc = "/docs/reference/blocks/dictionaries/get-count/"
                    [Cortex.Reference.Blocks.Dictionaries.GetCount.GetCountOfAllItems]
                        MainDoc = "/docs/reference/blocks/dictionaries/get-count/get-count-of-all-items-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.GetCount.GetCountOfItemsWithValue]
                        MainDoc = "/docs/reference/blocks/dictionaries/get-count/get-count-of-items-with-value-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.GetCount.GetCountsOfItemsWithValues]
                        MainDoc = "/docs/reference/blocks/dictionaries/get-count/get-counts-of-items-with-values-block-3"
                [Cortex.Reference.Blocks.Dictionaries.GetItem]
                    MainDoc = "/docs/reference/blocks/dictionaries/get-item/"
                    [Cortex.Reference.Blocks.Dictionaries.GetItem.GetAllItems]
                        MainDoc = "/docs/reference/blocks/dictionaries/get-item/get-all-items-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.GetItem.GetItemWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/get-item/get-item-with-key-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.GetItem.GetItemsWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/get-item/get-items-with-key-block-3"
                [Cortex.Reference.Blocks.Dictionaries.GetKey]
                    MainDoc = "/docs/reference/blocks/dictionaries/get-key/"
                    [Cortex.Reference.Blocks.Dictionaries.GetKey.GetAllKeys]
                        MainDoc = "/docs/reference/blocks/dictionaries/get-key/get-all-keys-block-3"
                [Cortex.Reference.Blocks.Dictionaries.RemoveItem]
                    MainDoc = "/docs/reference/blocks/dictionaries/remove-item/"
                    [Cortex.Reference.Blocks.Dictionaries.RemoveItem.RemoveAllItems]
                        MainDoc = "/docs/reference/blocks/dictionaries/remove-item/remove-all-items-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.RemoveItem.RemoveItemWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/remove-item/remove-item-with-key-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.RemoveItem.RemoveItemWithValue]
                        MainDoc = "/docs/reference/blocks/dictionaries/remove-item/remove-item-with-value-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.RemoveItem.RemoveItemsWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/remove-item/remove-items-with-key-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.RemoveItem.RemoveItemsWithKeys]
                        MainDoc = "/docs/reference/blocks/dictionaries/remove-item/remove-items-with-keys-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.RemoveItem.RemoveItemsWithValue]
                        MainDoc = "/docs/reference/blocks/dictionaries/remove-item/remove-items-with-value-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.RemoveItem.RemoveItemsWithValues]
                        MainDoc = "/docs/reference/blocks/dictionaries/remove-item/remove-items-with-values-block-3"
                [Cortex.Reference.Blocks.Dictionaries.SetItem]
                    MainDoc = "/docs/reference/blocks/dictionaries/set-item/"
                    [Cortex.Reference.Blocks.Dictionaries.SetItem.SetAllItems]
                        MainDoc = "/docs/reference/blocks/dictionaries/set-item/set-all-items-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.SetItem.SetItemWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/set-item/set-item-with-key-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.SetItem.SetItemWithValue]
                        MainDoc = "/docs/reference/blocks/dictionaries/set-item/set-item-with-value-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.SetItem.SetItemsWithKey]
                        MainDoc = "/docs/reference/blocks/dictionaries/set-item/set-items-with-key-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.SetItem.SetItemsWithKeys]
                        MainDoc = "/docs/reference/blocks/dictionaries/set-item/set-items-with-keys-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.SetItem.SetItemsWithValue]
                        MainDoc = "/docs/reference/blocks/dictionaries/set-item/set-items-with-value-block-3"
                    [Cortex.Reference.Blocks.Dictionaries.SetItem.SetItemsWithValues]
                        MainDoc = "/docs/reference/blocks/dictionaries/set-item/set-items-with-values-block-3"
            [Cortex.Reference.Blocks.Email]
                MainDoc = "/docs/reference/blocks/email/"
                [Cortex.Reference.Blocks.Email.SendEmail]
                    MainDoc = "/docs/reference/blocks/email/send-email"
                    [Cortex.Reference.Blocks.Email.SendEmail.SendEmailUsingSmtpServer]
                        MainDoc = "/docs/reference/blocks/email/send-email/send-email-using-smtp-server-block"
                        SupportedServerAddressFormats = "/docs/reference/blocks/email/send-email/send-email-using-smtp-server-block/#supported-formats-for-serverdetailshost"
                        SettingUseSsl = "/docs/reference/blocks/email/send-email/send-email-using-smtp-server-block/#setting-usessl"
                        SettingCredentials = "/docs/reference/blocks/email/send-email/send-email-using-smtp-server-block/#setting-credentials"
                        SupportedFilePaths = "/docs/reference/blocks/email/send-email/send-email-using-smtp-server-block/#supported-file-path-formats"
            [Cortex.Reference.Blocks.Exceptions]
                MainDoc = "/docs/reference/blocks/exceptions/"
                [Cortex.Reference.Blocks.Exceptions.HandleBlock]
                    MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockException]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingMessage]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-message-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingMessages]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-messages-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingTypeName]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-type-name-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingTypeNames]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-type-names-block"
                [Cortex.Reference.Blocks.Exceptions.HandleFlow]
                    MainDoc = "/docs/reference/blocks/exceptions/handle-flow-exception"
                    [Cortex.Reference.Blocks.Exceptions.HandleFlow.HandleFlowException]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-flow-exception/handle-flow-exception-block"
                        BlockRestrictions = "/docs/reference/blocks/exceptions/handle-flow-exception/handle-flow-exception-block/#block-restrictions"
                [Cortex.Reference.Blocks.Exceptions.HandleWorkspace]
                    MainDoc = "/docs/reference/blocks/exceptions/handle-workspace-exception"
                    [Cortex.Reference.Blocks.Exceptions.HandleWorkspace.HandleWorkspaceException]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-workspace-exception/handle-workspace-exception-block"
                        BlockRestrictions = "/docs/reference/blocks/exceptions/handle-workspace-exception/handle-workspace-exception-block/#block-restrictions"
                [Cortex.Reference.Blocks.Exceptions.ThrowException]
                    MainDoc = "/docs/reference/blocks/exceptions/throw-exception/"
                    [Cortex.Reference.Blocks.Exceptions.ThrowException.ThrowNewFlowException]
                        MainDoc = "/docs/reference/blocks/exceptions/throw-exception/throw-new-flow-exception-block"
                [Cortex.Reference.Blocks.Exceptions.RethrowException]
                    MainDoc = "/docs/reference/blocks/exceptions/rethrow-exception/"
                    [Cortex.Reference.Blocks.Exceptions.RethrowException.RethrowException]
                        MainDoc = "/docs/reference/blocks/exceptions/rethrow-exception/rethrow-exception-block"
            [Cortex.Reference.Blocks.FilesAndFolders]
                MainDoc = "/docs/reference/blocks/files-and-folders/"
                [Cortex.Reference.Blocks.FilesAndFolders.CheckFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/check-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.CheckFile.CheckFileExists]
                        MainDoc = "/docs/reference/blocks/files-and-folders/check-file/check-file-exists-block"
                [Cortex.Reference.Blocks.FilesAndFolders.CheckFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/check-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.CheckFolder.CheckFolderExists]
                        MainDoc = "/docs/reference/blocks/files-and-folders/check-folder/check-folder-exists-block"
                [Cortex.Reference.Blocks.FilesAndFolders.CopyFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/copy-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFile.CopyFile]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-file/copy-file-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFile.CopyFiles]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-file/copy-files-block"
                [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder.CopyFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder/copy-folder-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder.CopyFolders]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder/copy-folders-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder.DuplicateFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder/duplicate-folder-block"
                [Cortex.Reference.Blocks.FilesAndFolders.CreateFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/create-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.CreateFolder.CreateFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/create-folder/create-folder-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.CreateFolder.CreateFolders]
                        MainDoc = "/docs/reference/blocks/files-and-folders/create-folder/create-folders-block"
                [Cortex.Reference.Blocks.FilesAndFolders.DeleteFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/delete-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.DeleteFile.DeleteFile]
                        MainDoc = "/docs/reference/blocks/files-and-folders/delete-file/delete-file-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.DeleteFile.DeleteFiles]
                        MainDoc = "/docs/reference/blocks/files-and-folders/delete-file/delete-files-block"
                [Cortex.Reference.Blocks.FilesAndFolders.DeleteFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/delete-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.DeleteFolder.DeleteFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/delete-folder/delete-folder-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.DeleteFolder.DeleteFolders]
                        MainDoc = "/docs/reference/blocks/files-and-folders/delete-folder/delete-folders-block"
                [Cortex.Reference.Blocks.FilesAndFolders.GetFileInformation]
                    MainDoc = "/docs/reference/blocks/files-and-folders/get-file-information"
                    [Cortex.Reference.Blocks.FilesAndFolders.GetFileInformation.GetFileInformation]
                        MainDoc = "/docs/reference/blocks/files-and-folders/get-file-information/get-file-information-block"
                [Cortex.Reference.Blocks.FilesAndFolders.GetFolderContent]
                    MainDoc = "/docs/reference/blocks/files-and-folders/get-folder-content"
                    [Cortex.Reference.Blocks.FilesAndFolders.GetFolderContent.GetFolderContent]
                        MainDoc = "/docs/reference/blocks/files-and-folders/get-folder-content/get-folder-content-block"
                [Cortex.Reference.Blocks.FilesAndFolders.GetFolderInformation]
                    MainDoc = "/docs/reference/blocks/files-and-folders/get-folder-information"
                    [Cortex.Reference.Blocks.FilesAndFolders.GetFolderInformation.GetFolderInformation]
                        MainDoc = "/docs/reference/blocks/files-and-folders/get-folder-information/get-folder-information-block"
                [Cortex.Reference.Blocks.FilesAndFolders.MoveFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/move-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.MoveFile.MoveFile]
                        MainDoc = "/docs/reference/blocks/files-and-folders/move-file/move-file-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.MoveFile.MoveFiles]
                        MainDoc = "/docs/reference/blocks/files-and-folders/move-file/move-files-block"
                [Cortex.Reference.Blocks.FilesAndFolders.MoveFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/move-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.MoveFolder.MoveFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/move-folder/move-folder-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.MoveFolder.MoveFolders]
                        MainDoc = "/docs/reference/blocks/files-and-folders/move-folder/move-folders-block"
                [Cortex.Reference.Blocks.FilesAndFolders.RenameFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/rename-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.RenameFolder.RenameFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/rename-folder/rename-folder-block"
                [Cortex.Reference.Blocks.FilesAndFolders.ReadFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/read-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.ReadFile.ReadAllLines]
                        MainDoc = "/docs/reference/blocks/files-and-folders/read-file/read-all-lines-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.ReadFile.ReadAllText]
                        MainDoc = "/docs/reference/blocks/files-and-folders/read-file/read-all-text-block"
                [Cortex.Reference.Blocks.FilesAndFolders.SearchFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/search-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.SearchFile.SearchFile]
                        MainDoc = "/docs/reference/blocks/files-and-folders/search-file/search-file-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.SearchFile.SearchFiles]
                        MainDoc = "/docs/reference/blocks/files-and-folders/search-file/search-files-block"
                [Cortex.Reference.Blocks.FilesAndFolders.WriteFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/write-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.WriteFile.WriteAllLines]
                        MainDoc = "/docs/reference/blocks/files-and-folders/write-file/write-all-lines-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.WriteFile.WriteAllText]
                        MainDoc = "/docs/reference/blocks/files-and-folders/write-file/write-all-text-block"
            [Cortex.Reference.Blocks.Flows]
                MainDoc = "/docs/reference/blocks/flows"
                [Cortex.Reference.Blocks.Flows.EndFlow]
                    MainDoc = "/docs/reference/blocks/flows/end-flow"
                    [Cortex.Reference.Blocks.Flows.EndFlow.EndFlow]
                        MainDoc = "/docs/reference/blocks/flows/end-flow/end-flow-block"
                [Cortex.Reference.Blocks.Flows.RunFlow]
                    MainDoc = "/docs/reference/blocks/flows/run-flow"
                    [Cortex.Reference.Blocks.Flows.RunFlow.RunFlow]
                        MainDoc = "/docs/reference/blocks/flows/run-flow/run-flow-block"
                        RunningAFlow = "/docs/reference/blocks/flows/run-flow/run-flow-block/#running-a-flow"
                        FlowProperty = "/docs/reference/blocks/flows/run-flow/run-flow-block/#flow"
                        InputsProperty = "/docs/reference/blocks/flows/run-flow/run-flow-block/#inputs"
                [Cortex.Reference.Blocks.Flows.StartFlow]
                    MainDoc = "/docs/reference/blocks/flows/start-flow"
                    [Cortex.Reference.Blocks.Flows.StartFlow.StartFlow]
                        MainDoc = "/docs/reference/blocks/flows/start-flow/start-flow-block"
            [Cortex.Reference.Blocks.GoogleWorkspace]
                MainDoc = "/docs/reference/blocks/google-workspace/"
                [Cortex.Reference.Blocks.GoogleWorkspace.Gmail]
                    MainDoc = "/docs/reference/blocks/google-workspace/gmail"
                    [Cortex.Reference.Blocks.GoogleWorkspace.Gmail.SendEmail]
                        MainDoc = "/docs/reference/blocks/google-workspace/gmail/send-email"
                        [Cortex.Reference.Blocks.GoogleWorkspace.Gmail.SendEmail.SendEmailUsingGmail]
                            MainDoc = "/docs/reference/blocks/google-workspace/gmail/send-email/send-email-using-gmail-block"
                            SupportedServerAddressFormats = "/docs/reference/blocks/google-workspace/gmail/send-email/send-email-using-gmail-block/#supported-formats-for-serverdetailshost"
                            SettingUseSsl = "/docs/reference/blocks/google-workspace/gmail/send-email/send-email-using-gmail-block/#setting-usessl"
                            SettingCredentials = "/docs/reference/blocks/google-workspace/gmail/send-email/send-email-using-gmail-block/#setting-credentials"
                            SupportedFilePaths = "/docs/reference/blocks/google-workspace/gmail/send-email/send-email-using-gmail-block/#supported-file-path-formats"
            [Cortex.Reference.Blocks.Http]
                MainDoc = "/docs/reference/blocks/http/"
                [Cortex.Reference.Blocks.Http.ExecuteHttpRequest]
                    MainDoc = "/docs/reference/blocks/http/execute-http-request"
                    [Cortex.Reference.Blocks.Http.ExecuteHttpRequest.ExecuteHttpRequest]
                        MainDoc = "/docs/reference/blocks/http/execute-http-request/execute-http-request-block-1"
                        CallingAnotherFlow = "/docs/reference/blocks/http/execute-http-request/execute-http-request-block-1/#calling-another-flow"
                [Cortex.Reference.Blocks.Http.ExecuteSoapRequest]
                    MainDoc = "/docs/reference/blocks/http/execute-soap-request"
                    [Cortex.Reference.Blocks.Http.ExecuteSoapRequest.ExecuteSoapRequest]
                        MainDoc = "/docs/reference/blocks/http/execute-soap-request/execute-soap-request-block-1"
            [Cortex.Reference.Blocks.Json]
                MainDoc = "/docs/reference/blocks/json/"
                [Cortex.Reference.Blocks.Json.ConvertJson]
                    MainDoc = "/docs/reference/blocks/json/convert-json"
                    [Cortex.Reference.Blocks.Json.ConvertJson.ConvertJsonToObject]
                        MainDoc = "/docs/reference/blocks/json/convert-json/convert-json-to-object-block"
                    [Cortex.Reference.Blocks.Json.ConvertJson.ConvertObjectToJson]
                        MainDoc = "/docs/reference/blocks/json/convert-json/convert-object-to-json-block"
            [Cortex.Reference.Blocks.Lists]
                MainDoc = "/docs/reference/blocks/lists/"
                [Cortex.Reference.Blocks.Lists.AddItem]
                    MainDoc = "/docs/reference/blocks/lists/add-item/"
                    [Cortex.Reference.Blocks.Lists.AddItem.AddItemAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/add-item/add-item-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.AddItem.AddItemAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/add-item/add-item-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.AddItem.AddItemAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/add-item/add-item-at-index-block-2"
                    [Cortex.Reference.Blocks.Lists.AddItem.AddItemsAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/add-item/add-items-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.AddItem.AddItemsAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/add-item/add-items-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.AddItem.AddItemsAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/add-item/add-items-at-index-block-2"
                [Cortex.Reference.Blocks.Lists.ContainsItem]
                    MainDoc = "/docs/reference/blocks/lists/contains-item/"
                    [Cortex.Reference.Blocks.Lists.ContainsItem.ContainsItemWithValue]
                        MainDoc = "/docs/reference/blocks/lists/contains-item/contains-item-with-value-block-2"
                    [Cortex.Reference.Blocks.Lists.ContainsItem.ContainsItemsWithValues]
                        MainDoc = "/docs/reference/blocks/lists/contains-item/contains-items-with-values-block-2"
                [Cortex.Reference.Blocks.Lists.GetCount]
                    MainDoc = "/docs/reference/blocks/lists/get-count/"
                    [Cortex.Reference.Blocks.Lists.GetCount.GetCountOfAllItems]
                        MainDoc = "/docs/reference/blocks/lists/get-count/get-count-of-all-items-block-2"
                    [Cortex.Reference.Blocks.Lists.GetCount.GetCountOfItemsWithValue]
                        MainDoc = "/docs/reference/blocks/lists/get-count/get-count-of-items-with-value-block-2"
                    [Cortex.Reference.Blocks.Lists.GetCount.GetCountOfItemsWithValues]
                        MainDoc = "/docs/reference/blocks/lists/get-count/get-count-of-items-with-values-block-2"
                [Cortex.Reference.Blocks.Lists.GetIndex]
                    MainDoc = "/docs/reference/blocks/lists/get-index/"
                    [Cortex.Reference.Blocks.Lists.GetIndex.GetIndexOfItemWithValue]
                        MainDoc = "/docs/reference/blocks/lists/get-index/get-index-of-item-with-value-block-2"
                    [Cortex.Reference.Blocks.Lists.GetIndex.GetIndexesOfItemsWithValue]
                        MainDoc = "/docs/reference/blocks/lists/get-index/get-indexes-of-items-with-value-block-2"
                [Cortex.Reference.Blocks.Lists.GetItem]
                    MainDoc = "/docs/reference/blocks/lists/get-item/"
                    [Cortex.Reference.Blocks.Lists.GetItem.GetItemAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/get-item/get-item-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.GetItem.GetItemAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/get-item/get-item-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.GetItem.GetItemAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/get-item/get-item-at-index-block-2"
                    [Cortex.Reference.Blocks.Lists.GetItem.GetItemsAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/get-item/get-items-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.GetItem.GetItemsAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/get-item/get-items-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.GetItem.GetItemsAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/get-item/get-items-at-index-block-2"
                    [Cortex.Reference.Blocks.Lists.GetItem.GetItemsAtIndexes]
                        MainDoc = "/docs/reference/blocks/lists/get-item/get-items-at-indexes-block-2"
                [Cortex.Reference.Blocks.Lists.RemoveItem]
                    MainDoc = "/docs/reference/blocks/lists/remove-item/"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveAllItems]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-all-items-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveDuplicateItems]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-duplicate-items-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-item-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-item-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-item-at-index-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemWithValue]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-item-with-value-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemsAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-items-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemsAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-items-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemsAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-items-at-index-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemsAtIndexes]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-items-at-indexes-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemsWithValue]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-items-with-value-block-2"
                    [Cortex.Reference.Blocks.Lists.RemoveItem.RemoveItemsWithValues]
                        MainDoc = "/docs/reference/blocks/lists/remove-item/remove-items-with-values-block-2"
                [Cortex.Reference.Blocks.Lists.SetItem]
                    MainDoc = "/docs/reference/blocks/lists/set-item/"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetAllItems]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-all-items-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-item-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-item-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-item-at-index-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemWithValue]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-item-with-value-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemsAtBeginning]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-items-at-beginning-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemsAtEnd]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-items-at-end-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemsAtIndex]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-items-at-index-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemsAtIndexes]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-items-at-indexes-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemsWithValue]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-items-with-value-block-2"
                    [Cortex.Reference.Blocks.Lists.SetItem.SetItemsWithValues]
                        MainDoc = "/docs/reference/blocks/lists/set-item/set-items-with-values-block-2"
            [Cortex.Reference.Blocks.Logs]
                MainDoc = "/docs/reference/blocks/logs"
                [Cortex.Reference.Blocks.Logs.LogEvent]
                    MainDoc = "/docs/reference/blocks/logs/log-event"
                    [Cortex.Reference.Blocks.Logs.LogEvent.LogEvent]
                        MainDoc = "/docs/reference/blocks/logs/log-event/log-event-block"
            [Cortex.Reference.Blocks.Loops]
                MainDoc = "/docs/reference/blocks/loops"
                [Cortex.Reference.Blocks.Loops.For]
                    MainDoc = "/docs/reference/blocks/loops/for"
                    [Cortex.Reference.Blocks.Loops.For.ForLoop]
                        MainDoc = "/docs/reference/blocks/loops/for/for-loop-block"
            [Cortex.Reference.Blocks.Microsoft365]
                MainDoc = "/docs/reference/blocks/microsoft365/"
                [Cortex.Reference.Blocks.Microsoft365.Outlook]
                    MainDoc = "/docs/reference/blocks/microsoft365/outlook"
                    [Cortex.Reference.Blocks.Microsoft365.Outlook.SendEmail]
                        MainDoc = "/docs/reference/blocks/microsoft365/outlook/send-email"
                        [Cortex.Reference.Blocks.Microsoft365.Outlook.SendEmail.SendEmailUsingMicrosoft365]
                            MainDoc = "/docs/reference/blocks/microsoft365/outlook/send-email/send-email-using-microsoft365-block"
            [Cortex.Reference.Blocks.Objects]
                MainDoc = "/docs/reference/blocks/objects/"
                [Cortex.Reference.Blocks.Objects.ConvertObject]
                    MainDoc = "/docs/reference/blocks/objects/convert-object"
                    [Cortex.Reference.Blocks.Objects.ConvertObject.ConvertObjectToText]
                        MainDoc = "/docs/reference/blocks/objects/convert-object/convert-object-to-text-block-1"
            [Cortex.Reference.Blocks.PowerShell]
                MainDoc = "/docs/reference/blocks/powershell/"
                [Cortex.Reference.Blocks.PowerShell.ExecutePowerShellScript]
                    MainDoc = "/docs/reference/blocks/powershell/execute-powershell-script/"
                    [Cortex.Reference.Blocks.PowerShell.ExecutePowerShellScript.ExecutePowerShellScript]
                        MainDoc = "/docs/reference/blocks/powershell/execute-powershell-script/execute-powershell-script-block-1"
            [Cortex.Reference.Blocks.Ssh]
                MainDoc = "/docs/reference/blocks/ssh/"
                [Cortex.Reference.Blocks.Ssh.ExecuteSshCommand]
                    MainDoc = "/docs/reference/blocks/ssh/execute-ssh-command"
                    [Cortex.Reference.Blocks.Ssh.ExecuteSshCommand.ExecuteSshCommand]
                        MainDoc = "/docs/reference/blocks/ssh/execute-ssh-command/execute-ssh-command-block"
            [Cortex.Reference.Blocks.Text]
                MainDoc = "/docs/reference/blocks/text/"
                [Cortex.Reference.Blocks.Text.AddText]
                    MainDoc = "/docs/reference/blocks/text/add-text/"
                    [Cortex.Reference.Blocks.Text.AddText.AddTextAfterIndex]
                        MainDoc = "/docs/reference/blocks/text/add-text/add-text-after-index-block/"
                    [Cortex.Reference.Blocks.Text.AddText.AddTextAtBeginning]
                        MainDoc = "/docs/reference/blocks/text/add-text/add-text-at-beginning-block/"
                        Examples = "/docs/reference/blocks/text/add-text/add-text-at-beginning-block/#examples"
                    [Cortex.Reference.Blocks.Text.AddText.AddTextBeforeIndex]
                        MainDoc = "/docs/reference/blocks/text/add-text/add-text-before-index-block/"
                [Cortex.Reference.Blocks.Text.ContainsText]
                    MainDoc = "/docs/reference/blocks/text/contains-text/"
                    [Cortex.Reference.Blocks.Text.ContainsText.ContainsAllText]
                        MainDoc = "/docs/reference/blocks/text/contains-text/contains-all-text-block/"
                    [Cortex.Reference.Blocks.Text.ContainsText.ContainsAnyText]
                        MainDoc = "/docs/reference/blocks/text/contains-text/contains-any-text-block/"
                [Cortex.Reference.Blocks.Text.ConvertTo]
                    MainDoc = "/docs/reference/blocks/text/convert-to/"
                    [Cortex.Reference.Blocks.Text.ConvertTo.ConvertToCamelCase]
                        MainDoc = "/docs/reference/blocks/text/convert-to/convert-to-camel-case-block/"
                    [Cortex.Reference.Blocks.Text.ConvertTo.ConvertToLowerCase]
                        MainDoc = "/docs/reference/blocks/text/convert-to/convert-to-lower-case-block/"
                    [Cortex.Reference.Blocks.Text.ConvertTo.ConvertToPascalCase]
                        MainDoc = "/docs/reference/blocks/text/convert-to/convert-to-pascal-case-block/"
                    [Cortex.Reference.Blocks.Text.ConvertTo.ConvertToTitleCase]
                        MainDoc = "/docs/reference/blocks/text/convert-to/convert-to-title-case-block/"
                    [Cortex.Reference.Blocks.Text.ConvertTo.ConvertToUpperCase]
                        MainDoc = "/docs/reference/blocks/text/convert-to/convert-to-upper-case-block/"
                [Cortex.Reference.Blocks.Text.FormatText]
                    MainDoc = "/docs/reference/blocks/text/format-text/"
                    [Cortex.Reference.Blocks.Text.FormatText.FormatTextWithValues]
                        MainDoc = "/docs/reference/blocks/text/format-text/format-text-with-values-block-1/"
                [Cortex.Reference.Blocks.Text.GetText]
                    MainDoc = "/docs/reference/blocks/text/get-text/"
                    [Cortex.Reference.Blocks.Text.GetText.GetTextAtBeginning]
                        MainDoc = "/docs/reference/blocks/text/get-text/get-text-at-beginning-block/"
                    [Cortex.Reference.Blocks.Text.GetText.GetTextAtEnd]
                        MainDoc = "/docs/reference/blocks/text/get-text/get-text-at-end-block/"
                    [Cortex.Reference.Blocks.Text.GetText.GetTextAtIndex]
                        MainDoc = "/docs/reference/blocks/text/get-text/get-text-at-index-block/"
                    [Cortex.Reference.Blocks.Text.GetText.GetTextBeforeIndex]
                        MainDoc = "/docs/reference/blocks/text/get-text/get-text-before-index-block/"
                    [Cortex.Reference.Blocks.Text.GetText.GetTextBetweenIndexes]
                        MainDoc = "/docs/reference/blocks/text/get-text/get-text-between-indexes-block/"
                [Cortex.Reference.Blocks.Text.JoinText]
                    MainDoc = "/docs/reference/blocks/text/join-text/"
                    [Cortex.Reference.Blocks.Text.JoinText.JoinText]
                        MainDoc = "/docs/reference/blocks/text/join-text/join-text-block-1/"
                [Cortex.Reference.Blocks.Text.RemoveText]
                    MainDoc = "/docs/reference/blocks/text/remove-text/"
                    [Cortex.Reference.Blocks.Text.RemoveText.RemoveTextAtBeginning]
                        MainDoc = "/docs/reference/blocks/text/remove-text/remove-text-at-beginning-block/"
                    [Cortex.Reference.Blocks.Text.RemoveText.RemoveTextAtEnd]
                        MainDoc = "/docs/reference/blocks/text/remove-text/remove-text-at-end-block/"
                    [Cortex.Reference.Blocks.Text.RemoveText.RemoveTextAtIndex]
                        MainDoc = "/docs/reference/blocks/text/remove-text/remove-text-at-index-block/"
                    [Cortex.Reference.Blocks.Text.RemoveText.RemoveTextBeforeIndex]
                        MainDoc = "/docs/reference/blocks/text/remove-text/remove-text-before-index-block/"
                    [Cortex.Reference.Blocks.Text.RemoveText.RemoveTextBetweenIndexes]
                        MainDoc = "/docs/reference/blocks/text/remove-text/remove-text-between-indexes-block/"
            [Cortex.Reference.Blocks.Schedules]
                MainDoc = "/docs/reference/blocks/schedules/"
                [Cortex.Reference.Blocks.Schedules.WaitFor]
                    MainDoc = "/docs/reference/blocks/schedules/wait-for/"
                    [Cortex.Reference.Blocks.Schedules.WaitFor.WaitForDuration]
                       MainDoc = "/docs/reference/blocks/schedules/wait-for/wait-for-duration-block/"
            [Cortex.Reference.Blocks.Variables]
                MainDoc = "/docs/reference/blocks/variables/"
                [Cortex.Reference.Blocks.Variables.SetVariable]
                    MainDoc = "/docs/reference/blocks/variables/set-variable/"
                    [Cortex.Reference.Blocks.Variables.SetVariable.SetVariable]
                       MainDoc = "/docs/reference/blocks/variables/set-variable/set-variable-block-1/"
            [Cortex.Reference.Blocks.Workspaces]
                MainDoc = "/docs/reference/blocks/workspaces/"
                [Cortex.Reference.Blocks.Workspaces.StartWorkspace]
                    MainDoc = "/docs/reference/blocks/workspaces/start-workspace"
                    [Cortex.Reference.Blocks.Workspaces.StartWorkspace.StartWorkspace]
                        MainDoc = "/docs/reference/blocks/workspaces/start-workspace/start-workspace-block"
                [Cortex.Reference.Blocks.Workspaces.EndWorkspace]
                    MainDoc = "/docs/reference/blocks/workspaces/end-workspace"
                    [Cortex.Reference.Blocks.Workspaces.EndWorkspace.EndWorkspace]
                        MainDoc = "/docs/reference/blocks/workspaces/end-workspace/end-workspace-block"
                [Cortex.Reference.Blocks.Workspaces.Workspace]
                    MainDoc = "/docs/reference/blocks/workspaces/workspace"
                    [Cortex.Reference.Blocks.Workspaces.Workspace.Workspace]
                        MainDoc = "/docs/reference/blocks/workspaces/workspace/workspace-block"
                [Cortex.Reference.Blocks.Xml]
                MainDoc = "/docs/reference/blocks/xml/"
                [Cortex.Reference.Blocks.Xml.ConvertXml]
                    MainDoc = "/docs/reference/blocks/xml/convert-xml/"
                    [Cortex.Reference.Blocks.Xml.ConvertXml.ConvertXmlToStructure]
                        MainDoc = "/docs/reference/blocks/xml/convert-xml/convert-xml-to-structure-block/"
                    [Cortex.Reference.Blocks.Xml.ConvertXml.ConvertStructureToXml]
                        MainDoc = "/docs/reference/blocks/xml/convert-xml/convert-structure-to-xml-block/"
        [Cortex.Reference.Dashboards]
            [Cortex.Reference.Observability.Grafana]
                MainDoc = "/docs/reference/observability/grafana/"
                [Cortex.Reference.Observability.Grafana.Dashboards]
                    MainDoc = "/docs/reference/observability/grafana/dashboards/"
                    [Cortex.Reference.Observability.Grafana.Dashboards.FlowExecutionRequests]
                        MainDoc = "/docs/reference/observability/grafana/dashboards/flow-execution-requests/"
                        TotalRequestsErrored = "/docs/reference/observability/grafana/dashboards/flow-execution-requests/#total-requests-errored"
                    [Cortex.Reference.Observability.Grafana.Dashboards.PlatformHealth]
                        MainDoc = "/docs/reference/observability/grafana/dashboards/platform-health/"
                    [Cortex.Reference.Observability.Grafana.Dashboards.Grafana.AdvancedSetup]
                        [Cortex.Reference.Observability.Grafana.Dashboards.Grafana.AdvancedSetup.ConfigureThresholds]
                            MainDoc = "/docs/reference/observability/grafana/advanced-setup/configuring-thresholds/"
        [Cortex.Reference.Concepts]
            MainDoc = "/docs/reference/concepts/"
            [Cortex.Reference.Concepts.Fundamentals]
                MainDoc = "/docs/reference/concepts/fundamentals/"
                [Cortex.Reference.Concepts.Fundamentals.Blocks]
                    MainDoc = "/docs/reference/concepts/fundamentals/blocks"
                    [Cortex.Reference.Concepts.Fundamentals.Blocks.HandlingExceptionsWithinABlock]
                        MainDoc = "/docs/reference/concepts/fundamentals/blocks/handling-exceptions-within-a-block/"
                    [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties]
                        MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/"
                        [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties.WhatIsABlockProperty]
                            MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/what-is-a-block-property/"
                            AnatomyOfABlockProperty = "/docs/reference/concepts/fundamentals/blocks/block-properties/what-is-a-block-property/#anatomy-of-a-block-property"
                            Input = "/docs/reference/concepts/fundamentals/blocks/block-properties/what-is-a-block-property/#input-properties"
                            Output = "/docs/reference/concepts/fundamentals/blocks/block-properties/what-is-a-block-property/#output-properties"
                            DiscardingOutputs = "/docs/reference/concepts/fundamentals/blocks/block-properties/what-is-a-block-property/#discarding-outputs"
                            InputOutput = "/docs/reference/concepts/fundamentals/blocks/block-properties/what-is-a-block-property/#inputoutput-properties"
                        [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties.AdvancedProperties]
                            MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/advanced-properties/"
                        [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties.CommonProperties]
                            MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/common-properties/"
                            BlockTimeoutProperty = "/docs/reference/concepts/fundamentals/blocks/block-properties/common-properties/#block-timeout-property"
                        [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties.PropertyEditors]
                            MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/"
                            [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties.PropertyEditors.ExpressionEditor]
                                MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/"
                                Expressions = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#expressions"
                                InterpolatedStrings = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#interpolated-strings"
                                MethodExpressions = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#method-expressions"
                                PropertyExpressions = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#property-expressions"
                                IndexExpressions = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#index-expressions"
                                LiteralValues = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#literal-values"
                                DictionaryLiteral = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#dictionary-literal"
                                ListLiteral = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#list-literal"
                                ObjectLiteral = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#object-literal"
                                StringLiteral = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#string-literal"
                                Variables = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/#variables"
                            [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties.PropertyEditors.LiteralEditor]
                                MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/literal-editor/"
                            [Cortex.Reference.Concepts.Fundamentals.Blocks.BlockProperties.PropertyEditors.VariableEditor]
                                MainDoc = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/variable-editor/"
                                CreatingVariables = "/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/variable-editor/#creating-variables"
                    [Cortex.Reference.Concepts.Fundamentals.Blocks.WhatIsABlock]
                        MainDoc = "/docs/reference/concepts/fundamentals/blocks/what-is-a-block/"
                        BlockConnections = "/docs/reference/concepts/fundamentals/blocks/what-is-a-block/#block-connections"
                [Cortex.Reference.Concepts.Fundamentals.DataTypes]
                    MainDoc = "/docs/reference/concepts/fundamentals/data-types/"
                    [Cortex.Reference.Concepts.Fundamentals.DataTypes.WhatIsADataType]
                        MainDoc = "/docs/reference/concepts/fundamentals/data-types/what-is-a-data-type/"
                        BasicDataTypes = "/docs/reference/concepts/fundamentals/data-types/what-is-a-data-type/#basic-data-types"
                        ComplexDataTypes = "/docs/reference/concepts/fundamentals/data-types/what-is-a-data-type/#complex-data-types"
                        ValueTypes = "/docs/reference/concepts/fundamentals/data-types/what-is-a-data-type/#value-types"
                        ReferenceTypes = "/docs/reference/concepts/fundamentals/data-types/what-is-a-data-type/#reference-types"
                    [Cortex.Reference.Concepts.Fundamentals.DataTypes.Generics]
                        MainDoc = "/docs/reference/concepts/fundamentals/data-types/generics/"
                    [Cortex.Reference.Concepts.Fundamentals.DataTypes.NullAndNullableTypes]
                        MainDoc = "/docs/reference/concepts/fundamentals/data-types/null-and-nullable-types/"
                [Cortex.Reference.Concepts.Fundamentals.Exceptions]
                    MainDoc = "/docs/reference/concepts/fundamentals/exceptions/"
                    [Cortex.Reference.Concepts.Fundamentals.Exceptions.HandlingExceptions]
                        MainDoc = "/docs/reference/concepts/fundamentals/exceptions/handling-exceptions"
                        BlockLevel = "/docs/reference/concepts/fundamentals/exceptions/handling-exceptions/#handling-exceptions-at-the-block-level"
                        WorkspaceLevel = "/docs/reference/concepts/fundamentals/exceptions/handling-exceptions/#handling-exceptions-at-the-workspace-level"
                        FlowLevel = "/docs/reference/concepts/fundamentals/exceptions/handling-exceptions/#handling-exceptions-at-the-flow-level"
                        ChainingExceptions = "/docs/reference/concepts/fundamentals/exceptions/handling-exceptions/#chaining-block-exception-handling-blocks"
                    [Cortex.Reference.Concepts.Fundamentals.Exceptions.ThrowingExceptions]
                        MainDoc = "/docs/reference/concepts/fundamentals/exceptions/throwing-exceptions"
                    [Cortex.Reference.Concepts.Fundamentals.Exceptions.WhatIsAnException]
                        MainDoc = "/docs/reference/concepts/fundamentals/exceptions/what-is-an-exception"
                        Debugging = "/docs/reference/concepts/fundamentals/exceptions/what-is-an-exception/#debugging"
                [Cortex.Reference.Concepts.Fundamentals.Executions]
                    MainDoc = "/docs/reference/concepts/fundamentals/executions/"
                    [Cortex.Reference.Concepts.Fundamentals.Executions.WhatIsAnExecution]
                        MainDoc = "/docs/reference/concepts/fundamentals/executions/what-is-an-execution"
                    [Cortex.Reference.Concepts.Fundamentals.Executions.ExecutionsInDevelopment]
                        MainDoc = "/docs/reference/concepts/fundamentals/executions/executions-in-development"
                        ValidatingAFlow = "/docs/reference/concepts/fundamentals/executions/executions-in-development/#validating-a-flow"
                    [Cortex.Reference.Concepts.Fundamentals.Executions.ExecutionsInProduction]
                        MainDoc = "/docs/reference/concepts/fundamentals/executions/executions-in-production"
                        ValidatingAFlow = "/docs/reference/concepts/fundamentals/executions/executions-in-production/#validating-a-flow"
                [Cortex.Reference.Concepts.Fundamentals.Flows]
                    MainDoc = "/docs/reference/concepts/fundamentals/flows"
                    [Cortex.Reference.Concepts.Fundamentals.Flows.CallingOtherFlows]
                        MainDoc = "/docs/reference/concepts/fundamentals/flows/calling-other-flows"
                    [Cortex.Reference.Concepts.Fundamentals.Flows.HandlingExceptionsWithinAFlow]
                        MainDoc = "/docs/reference/concepts/fundamentals/flows/handling-exceptions-within-a-flow"
                    [Cortex.Reference.Concepts.Fundamentals.Flows.WhatIsAFlow]
                        MainDoc = "/docs/reference/concepts/fundamentals/flows/what-is-a-flow"
                [Cortex.Reference.Concepts.Fundamentals.Messages]
                    MainDoc = "/docs/reference/concepts/fundamentals/messages/"
                    [Cortex.Reference.Concepts.Fundamentals.Messages.WhatIsAMessage]
                        MainDoc = "/docs/reference/concepts/fundamentals/messages/what-is-a-message/"
                [Cortex.Reference.Concepts.Fundamentals.Variables]
                    MainDoc = "/docs/reference/concepts/fundamentals/variables/"
                    [Cortex.Reference.Concepts.Fundamentals.Variables.UsingVariables]
                        MainDoc = "/docs/reference/concepts/fundamentals/variables/using-variables/"
                        ExpressionEditor = "/docs/reference/concepts/fundamentals/variables/using-variables/#expression-editor"
                        VariableEditor = "/docs/reference/concepts/fundamentals/variables/using-variables/#variable-editor"
                    [Cortex.Reference.Concepts.Fundamentals.Variables.VariableScopes]
                        MainDoc = "/docs/reference/concepts/fundamentals/variables/variable-scopes/"
                    [Cortex.Reference.Concepts.Fundamentals.Variables.WhatIsAVariable]
                        MainDoc = "/docs/reference/concepts/fundamentals/variables/what-is-a-variable/"
                        FlowInputVariable = "/docs/reference/concepts/fundamentals/variables/what-is-a-variable/#flow-input-variable"
                        OutputVariablesStructure = "/docs/reference/concepts/fundamentals/variables/what-is-a-variable/#output-variables-structure"
                [Cortex.Reference.Concepts.Fundamentals.Workspaces]
                    MainDoc = "/docs/reference/concepts/fundamentals/workspaces"
                    [Cortex.Reference.Concepts.Fundamentals.Workspaces.WhatIsAWorkspace]
                        MainDoc = "/docs/reference/concepts/fundamentals/workspaces/what-is-a-workspace"
                        TopLevelWorkspace = "/docs/reference/concepts/fundamentals/workspaces/what-is-a-workspace/#top-level-workspace"
                        NestedWorkspaces = "/docs/reference/concepts/fundamentals/workspaces/what-is-a-workspace/#nested-workspaces"
                    [Cortex.Reference.Concepts.Fundamentals.Workspaces.HandlingExceptionsWithinAWorkspace]
                        MainDoc = "/docs/reference/concepts/fundamentals/workspaces/handling-exceptions-within-a-workspace"
                [Cortex.Reference.Concepts.Fundamentals.ComplexTypes]
                    MainDoc = "/docs/reference/concepts/fundamentals/complex-types/"
                [Cortex.Reference.Concepts.Fundamentals.PrimitiveTypes]
                    MainDoc = "/docs/reference/concepts/fundamentals/primitive-types/"
            [Cortex.Reference.Concepts.WorkingWith]
                MainDoc = "/docs/reference/concepts/working-with/"
                [Cortex.Reference.Concepts.WorkingWith.Collections]
                    MainDoc = "/docs/reference/concepts/working-with/collections/"
                    [Cortex.Reference.Concepts.WorkingWith.Collections.WhatIsACollection]
                        MainDoc = "/docs/reference/concepts/working-with/collections/what-is-a-collection/"
                        Dictionaries = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#dictionaries"
                        DictionariesIndexes = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#indexes"
                        Structures = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#structures"
                        StructuresIndexes = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#indexes-1"
                        StructuresProperties = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#properties"
                        Lists = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#lists"
                        ListsIndexes = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#indexes-2"
                        ArraysVersusLists = "/docs/reference/concepts/working-with/collections/what-is-a-collection/#arrays-vs-lists"
                    [Cortex.Reference.Concepts.WorkingWith.Collections.Items]
                        MainDoc = "/docs/reference/concepts/working-with/collections/items/"
                    [Cortex.Reference.Concepts.WorkingWith.Collections.Indexes]
                        MainDoc = "/docs/reference/concepts/working-with/collections/indexes/"
                    [Cortex.Reference.Concepts.WorkingWith.Collections.Keys]
                        MainDoc = "/docs/reference/concepts/working-with/collections/keys/"
                    [Cortex.Reference.Concepts.WorkingWith.Collections.Occurrences]
                        MainDoc = "/docs/reference/concepts/working-with/collections/occurrences/"
                [Cortex.Reference.Concepts.WorkingWith.Culture]
                    MainDoc = "/docs/reference/concepts/working-with/culture/"
                    [Cortex.Reference.Concepts.WorkingWith.Culture.CurrentCulture]
                        MainDoc = "/docs/reference/concepts/working-with/culture/current-culture"
                    [Cortex.Reference.Concepts.WorkingWith.Culture.InvariantCulture]
                        MainDoc = "/docs/reference/concepts/working-with/culture/invariant-culture"
                [Cortex.Reference.Concepts.WorkingWith.DataSources]
                    MainDoc = "/docs/reference/concepts/working-with/data-sources/"
                [Cortex.Reference.Concepts.WorkingWith.DateAndTime]
                    MainDoc = "/docs/reference/concepts/working-with/date-and-time/"
                    [Cortex.Reference.Concepts.WorkingWith.DateAndTime.DateAndTimeFormatting]
                        MainDoc = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/"
                        FormatProviders = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#format-providers"
                        InvariantCulture = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#invariant-culture"
                        CurrentCulture = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#current-culture"
                        FormatTemplates = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#format-templates"
                        StandardFormatTemplates = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#standard-format-templates"
                        ISO8601Standard = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#iso-8601-standard"
                        CustomFormatTemplates = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#custom-format-templates"
                        FormatSpecifiers = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#format-specifiers"
                        OperatingSystemSettings = "/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/#operating-system-settings"
                [Cortex.Reference.Concepts.WorkingWith.Email]
                    MainDoc = "/docs/reference/concepts/working-with/email/"
                    [Cortex.Reference.Concepts.WorkingWith.Email.Authentication]
                        MainDoc = "/docs/reference/concepts/working-with/email/authentication"
                        SettingUpAppPassword = "/docs/reference/concepts/working-with/email/authentication/#setting-up-an-app-password-for-a-gmail-account"
                        SettingUpOAuthGmail = "/docs/reference/concepts/working-with/email/authentication/#setting-up-a-gmail-account-for-oauth-authentication"
                [Cortex.Reference.Concepts.WorkingWith.Enums]
                    MainDoc = "/docs/reference/concepts/working-with/enums/"
                [Cortex.Reference.Concepts.WorkingWith.FilesAndFolders]
                    MainDoc = "/docs/reference/concepts/working-with/files-and-folders/"
                    [Cortex.Reference.Concepts.WorkingWith.FilesAndFolders.Attributes]
                        MainDoc = "/docs/reference/concepts/working-with/files-and-folders/attributes/"
                    [Cortex.Reference.Concepts.WorkingWith.FilesAndFolders.Paths]
                        MainDoc = "/docs/reference/concepts/working-with/files-and-folders/paths/"
                [Cortex.Reference.Concepts.WorkingWith.Loops]
                    MainDoc = "/docs/reference/concepts/working-with/loops/"
                [Cortex.Reference.Concepts.WorkingWith.Numbers]
                    MainDoc = "/docs/reference/concepts/working-with/numbers/"
                [Cortex.Reference.Concepts.WorkingWith.Objects]
                    MainDoc = "/docs/reference/concepts/working-with/objects/"
                    [Cortex.Reference.Concepts.WorkingWith.Objects.WhatIsAnObject]
                        MainDoc = "/docs/reference/concepts/working-with/objects/what-is-an-object/"
                    [Cortex.Reference.Concepts.WorkingWith.Objects.ObjectCasting]
                        MainDoc = "/docs/reference/concepts/working-with/objects/object-casting/"
                        ImplicitCast = "/docs/reference/concepts/working-with/objects/object-casting/#implicit-cast"
                        ExplicitCast = "/docs/reference/concepts/working-with/objects/object-casting/#explicit-cast"
                    [Cortex.Reference.Concepts.WorkingWith.Objects.ObjectEquality]
                        MainDoc = "/docs/reference/concepts/working-with/objects/object-equality/"
                        [Cortex.Reference.Concepts.WorkingWith.Objects.ObjectEquality.ValueTypeVsReferenceTypeEquality]
                            MainDoc = "/docs/reference/concepts/working-with/objects/object-equality/#value-type-vs-reference-type-equality"
                            ValueTypeEquality = "/docs/reference/concepts/working-with/objects/object-equality/#value-type-equality"
                            ReferenceTypeEquality = "/docs/reference/concepts/working-with/objects/object-equality/#reference-type-equality"
                        [Cortex.Reference.Concepts.WorkingWith.Objects.ObjectEquality.HowCortexComparesObjectsForEquality]
                            MainDoc = "/docs/reference/concepts/working-with/objects/object-equality/#how-cortex-compares-objects-for-equality"
                [Cortex.Reference.Concepts.WorkingWith.Text]
                    MainDoc = "/docs/reference/concepts/working-with/text/"
                    [Cortex.Reference.Concepts.WorkingWith.Text.ConvertingObjectsToText]
                        MainDoc = "/docs/reference/concepts/working-with/text/converting-objects-to-text"
                        StringInterpolation = "/docs/reference/concepts/working-with/text/converting-objects-to-text/#string-interpolation"
                    [Cortex.Reference.Concepts.WorkingWith.Text.Formatting]
                        MainDoc = "/docs/reference/concepts/working-with/text/formatting/"
                        FormatParameters = "/docs/reference/concepts/working-with/text/formatting/#format-parameters"
                        FormatSpecifiers = "/docs/reference/concepts/working-with/text/formatting/#format-specifiers"
                        FormatTemplates = "/docs/reference/concepts/working-with/text/formatting/#format-templates"
                    [Cortex.Reference.Concepts.WorkingWith.Text.RegexSyntax]
                        MainDoc = "/docs/reference/concepts/working-with/text/regex-syntax/"
                    [Cortex.Reference.Concepts.WorkingWith.Text.EmptyTextAndWhitespace]
                        MainDoc = "/docs/reference/concepts/working-with/text/empty-text-and-whitespace/"
                    [Cortex.Reference.Concepts.WorkingWith.Text.PatternMatchingSyntax]
                        MainDoc = "/docs/reference/concepts/working-with/text/pattern-matching-syntax/"
                    [Cortex.Reference.Concepts.WorkingWith.Text.Casing]
                        MainDoc = "/docs/reference/concepts/working-with/text/casing/"
                        [Cortex.Reference.Concepts.WorkingWith.Text.Casing.CultureInfo]
                            MainDoc = "/docs/reference/concepts/working-with/text/casing/#culture-info"
                            CurrentCulture = "/docs/reference/concepts/working-with/text/casing/#current-culture"
                            InvariantCulture = "/docs/reference/concepts/working-with/text/casing/#invariant-culture"
                    [Cortex.Reference.Concepts.WorkingWith.Text.Encoding]
                        MainDoc = "/docs/reference/concepts/working-with/text/encoding/"
                    [Cortex.Reference.Concepts.WorkingWith.Text.Equality]
                        MainDoc = "/docs/reference/concepts/working-with/text/equality/"
                        [Cortex.Reference.Concepts.WorkingWith.Text.Equality.ComparisonTypes]
                            MainDoc = "/docs/reference/concepts/working-with/text/equality/#comparison-types"
                            CurrentCulture = "/docs/reference/concepts/working-with/text/equality/#current-culture"
                            InvariantCulture = "/docs/reference/concepts/working-with/text/equality/#invariant-culture"
                            Ordinal = "/docs/reference/concepts/working-with/text/equality/#ordinal"
                            OrdinalIgnoreCase = "/docs/reference/concepts/working-with/text/equality/#ordinal-ignore-case"
        [Cortex.Reference.DataTypes]
            MainDoc = "/docs/reference/data-types/"
            [Cortex.Reference.DataTypes.MostCommon]
                MainDoc = "/docs/reference/data-types/most-common/"
                Dictionaries = "/docs/reference/data-types/most-common/#dictionaries"
                HttpRequestHeaders = "/docs/reference/data-types/most-common/#httprequestheaders"
                InvariantCulture = "/docs/reference/data-types/most-common/#invariantculture"
                Lists = "/docs/reference/data-types/most-common/#lists"
            [Cortex.Reference.DataTypes.All]
                MainDoc = "/docs/reference/data-types/all"
                [Cortex.Reference.DataTypes.All.Object]
                    MainDoc = "/docs/reference/data-types/all/object"
                [Cortex.Reference.DataTypes.All.dynamic]
                    MainDoc = "/docs/reference/data-types/all/dynamic"
            [Cortex.Reference.DataTypes.Collections]
                MainDoc = "/docs/reference/data-types/collections"
                [Cortex.Reference.DataTypes.Collections.Array]
                    MainDoc = "/docs/reference/data-types/collections/array"
                [Cortex.Reference.DataTypes.Collections.IDictionary]
                    MainDoc = "/docs/reference/data-types/collections/idictionary-2"
                [Cortex.Reference.DataTypes.Collections.Dictionary]
                    MainDoc = "/docs/reference/data-types/collections/dictionary-2"
                    CreateNew = "/docs/reference/data-types/collections/dictionary-2#create-a-dictionarylttkey-titemgt"
                    ConvertToText = "/docs/reference/data-types/collections/dictionary-2#convert-dictionarylttkey-titemgt-to-text"
                [Cortex.Reference.DataTypes.Collections.IEnumerable]
                    MainDoc = "/docs/reference/data-types/collections/ienumerable"
                [Cortex.Reference.DataTypes.Collections.IEnumerable_TItem]
                    MainDoc = "/docs/reference/data-types/collections/ienumerable-1"
                [Cortex.Reference.DataTypes.Collections.IList]
                    MainDoc = "/docs/reference/data-types/collections/ilist-1"
                [Cortex.Reference.DataTypes.Collections.List]
                    MainDoc = "/docs/reference/data-types/collections/list-1"
                    CreateNew = "/docs/reference/data-types/collections/list-1#create-a-listlttitemgt"
                    ConvertToText = "/docs/reference/data-types/collections/list-1#convert-listlttitemgt-to-text"
                [Cortex.Reference.DataTypes.Collections.Structure]
                    MainDoc = "/docs/reference/data-types/collections/structure"
                    CreateNew = "/docs/reference/data-types/collections/structure#create-a-structure"
                    ConvertToText = "/docs/reference/data-types/collections/structure#convert-structure-to-text"
            [Cortex.Reference.DataTypes.ConditionalLogic]
                MainDoc = "/docs/reference/data-types/conditional-logic/"
                [Cortex.Reference.DataTypes.ConditionalLogic.Boolean]
                    MainDoc = "/docs/reference/data-types/conditional-logic/boolean"
            [Cortex.Reference.DataTypes.Credentials]
                MainDoc = "/docs/reference/data-types/credentials/"
                [Cortex.Reference.DataTypes.Credentials.UserCredentials]
                    MainDoc = "/docs/reference/data-types/credentials/usercredentials"
                    Domain = "/docs/reference/data-types/credentials/usercredentials/#domain"
                    Username = "/docs/reference/data-types/credentials/usercredentials/#username"
                    Password = "/docs/reference/data-types/credentials/usercredentials/#password"
            [Cortex.Reference.DataTypes.Data]
                MainDoc = "/docs/reference/data-types/data/"
                [Cortex.Reference.DataTypes.Data.DataCommand]
                    MainDoc = "/docs/reference/data-types/data/datacommand/"
                    CommandText = "/docs/reference/data-types/data/datacommand/#command-text"
                [Cortex.Reference.DataTypes.Data.Command]
                    MainDoc = "/docs/reference/data-types/data/command/"
                    CommandText = "/docs/reference/data-types/data/command/#command-text"
                [Cortex.Reference.DataTypes.Data.Commands]
                    MainDoc = "/docs/reference/data-types/data/commands"
                    CommandText = "/docs/reference/data-types/data/commands/#command-text"
                [Cortex.Reference.DataTypes.Data.QueryCommand]
                    MainDoc = "/docs/reference/data-types/data/querycommand"
                    CommandText = "/docs/reference/data-types/data/querycommand/#command-text"
                [Cortex.Reference.DataTypes.Data.NonQueryCommand]
                    MainDoc = "/docs/reference/data-types/data/nonquerycommand"
                    CommandText = "/docs/reference/data-types/data/nonquerycommand/#command-text"
                [Cortex.Reference.DataTypes.Data.ConnectionDetails]
                    MainDoc = "/docs/reference/data-types/data/connectiondetails"
                [Cortex.Reference.DataTypes.Data.OdbcConnectionDetails]
                    MainDoc = "/docs/reference/data-types/data/odbcconnectiondetails"
                [Cortex.Reference.DataTypes.Data.SqlServerConnectionDetails]
                    MainDoc = "/docs/reference/data-types/data/sqlserverconnectiondetails"
            [Cortex.Reference.DataTypes.DateAndTime]
                MainDoc = "/docs/reference/data-types/date-and-time/"
                [Cortex.Reference.DataTypes.DateAndTime.DateTime]
                    MainDoc = "/docs/reference/data-types/date-and-time/datetime"
                [Cortex.Reference.DataTypes.DateAndTime.DateTimeComponentType]
                    MainDoc = "/docs/reference/data-types/date-and-time/datetimecomponenttype"
                [Cortex.Reference.DataTypes.DateAndTime.DateTimeOffset]
                    MainDoc = "/docs/reference/data-types/date-and-time/datetimeoffset"
                [Cortex.Reference.DataTypes.DateAndTime.DayOfWeek]
                    MainDoc = "/docs/reference/data-types/date-and-time/dayofweek"
                [Cortex.Reference.DataTypes.DateAndTime.TimePeriod]
                    MainDoc = "/docs/reference/data-types/date-and-time/timeperiod"
                [Cortex.Reference.DataTypes.DateAndTime.TimeSpan]
                    MainDoc = "/docs/reference/data-types/date-and-time/timespan"
            [Cortex.Reference.DataTypes.Email]
                MainDoc = "/docs/reference/data-types/email/"
                [Cortex.Reference.DataTypes.Email.Authentication]
                    MainDoc = "/docs/reference/data-types/email/authentication/"
                    [Cortex.Reference.DataTypes.Email.Authentication.IEmailCredentials]
                        MainDoc = "/docs/reference/data-types/email/authentication/iemailcredentials"
                    [Cortex.Reference.DataTypes.Email.Authentication.EmailCredentials]
                        MainDoc = "/docs/reference/data-types/email/authentication/emailcredentials"
                    [Cortex.Reference.DataTypes.Email.Authentication.EmailUserCredentials]
                        MainDoc = "/docs/reference/data-types/email/authentication/emailusercredentials"
                [Cortex.Reference.DataTypes.Email.BasicEmailSessionDetails]
                    MainDoc = "/docs/reference/data-types/email/basicemailsessiondetails"
                    Credentials = "/docs/reference/data-types/email/basicemailsessiondetails/#credentials"
                    ServerDetails = "/docs/reference/data-types/email/basicemailsessiondetails/#serverdetails"
                [Cortex.Reference.DataTypes.Email.EmailAddress]
                    MainDoc = "/docs/reference/data-types/email/emailaddress"
                    Address = "/docs/reference/data-types/email/emailaddress/#address"
                [Cortex.Reference.DataTypes.Email.EmailMessage]
                    MainDoc = "/docs/reference/data-types/email/emailmessage"
                    To = "/docs/reference/data-types/email/emailmessage/#to"
                    From = "/docs/reference/data-types/email/emailmessage/#from"
                    Cc = "/docs/reference/data-types/email/emailmessage/#cc"
                    Bcc = "/docs/reference/data-types/email/emailmessage/#bcc"
                    Priority = "/docs/reference/data-types/email/emailmessage/#priority"
                    Subject = "/docs/reference/data-types/email/emailmessage/#subject"
                    BodyFormat = "/docs/reference/data-types/email/emailmessage/#bodyformat"
                    Body = "/docs/reference/data-types/email/emailmessage/#body"
                    Attachments = "/docs/reference/data-types/email/emailmessage/#attachments"
                    CreateAnEmailMessage = "/docs/reference/data-types/email/emailmessage/#create-an-emailmessage"
                [Cortex.Reference.DataTypes.Email.EmailMessageBodyFormat]
                    MainDoc = "/docs/reference/data-types/email/emailmessagebodyformat"
                    HTML = "/docs/reference/data-types/email/emailmessagebodyformat/#html"
                    Text = "/docs/reference/data-types/email/emailmessagebodyformat/#text"
                [Cortex.Reference.DataTypes.Email.EmailMessagePriority]
                    MainDoc = "/docs/reference/data-types/email/emailmessagepriority"
                    Normal = "/docs/reference/data-types/email/emailmessagepriority/#normal"
                    Urgent = "/docs/reference/data-types/email/emailmessagepriority/#urgent"
                    NonUrgent = "/docs/reference/data-types/email/emailmessagepriority/#nonurgent"
                [Cortex.Reference.DataTypes.Email.EmailSessionErrorCode]
                    MainDoc = "/docs/reference/data-types/email/emailsessionerrorcode"
                    Limitations = "/docs/reference/data-types/email/emailsessionerrorcode/#known-limitations"
            [Cortex.Reference.DataTypes.Exceptions]
                MainDoc = "/docs/reference/data-types/exceptions/"
                [Cortex.Reference.DataTypes.Exceptions.Exception]
                    MainDoc = "/docs/reference/data-types/exceptions/exception"
            [Cortex.Reference.DataTypes.FilesAndFolders]
                MainDoc = "/docs/reference/data-types/files-and-folders/"
                [Cortex.Reference.DataTypes.FilesAndFolders.ContentOptions]
                    MainDoc = "/docs/reference/data-types/files-and-folders/contentoptions"
                [Cortex.Reference.DataTypes.FilesAndFolders.FileInformation]
                    MainDoc = "/docs/reference/data-types/files-and-folders/fileinformation"
                [Cortex.Reference.DataTypes.FilesAndFolders.FileMatch]
                    MainDoc = "/docs/reference/data-types/files-and-folders/filematch"
                [Cortex.Reference.DataTypes.FilesAndFolders.FolderInformation]
                    MainDoc = "/docs/reference/data-types/files-and-folders/folderinformation"
            [Cortex.Reference.DataTypes.Flows]
                MainDoc = "/docs/reference/data-types/flows/"
                [Cortex.Reference.DataTypes.Flows.FlowReference]
                    MainDoc = "/docs/reference/data-types/flows/flowreference"
                [Cortex.Reference.DataTypes.Flows.InputVariables]
                    MainDoc = "/docs/reference/data-types/flows/inputvariables"
            [Cortex.Reference.DataTypes.GoogleWorkspace]
                MainDoc = "/docs/reference/data-types/google-workspace/"
                [Cortex.Reference.DataTypes.GoogleWorkspace.Gmail]
                    MainDoc = "/docs/reference/data-types/google-workspace/gmail/"
                    [Cortex.Reference.DataTypes.GoogleWorkspace.Gmail.GmailSessionDetails]
                        MainDoc = "/docs/reference/data-types/google-workspace/gmail/gmailsessiondetails"
                        ServerDetails = "/docs/reference/data-types/google-workspace/gmail/gmailsessiondetails/#serverdetails"
                        Credentials = "/docs/reference/data-types/google-workspace/gmail/gmailsessiondetails/#credentials"
                    [Cortex.Reference.DataTypes.GoogleWorkspace.Gmail.Authentication]
                        MainDoc = "/docs/reference/data-types/google-workspace/gmail/authentication/"
                        [Cortex.Reference.DataTypes.GoogleWorkspace.Gmail.Authentication.OAuth]
                            MainDoc = "/docs/reference/data-types/google-workspace/gmail/authentication/oauth/"
                            [Cortex.Reference.DataTypes.GoogleWorkspace.Gmail.Authentication.OAuth.GmailOAuthCertificateCredentials]
                                MainDoc = "/docs/reference/data-types/google-workspace/gmail/authentication/oauth/gmailoauthcertificatecredentials"
                                CertificatePath = "/docs/reference/data-types/google-workspace/gmail/authentication/oauth/gmailoauthcertificatecredentials/#certificatepath"
                                CertificatePassword = "/docs/reference/data-types/google-workspace/gmail/authentication/oauth/gmailoauthcertificatecredentials/#certificatepassword"
                                FromAddress = "/docs/reference/data-types/google-workspace/gmail/authentication/oauth/gmailoauthcertificatecredentials/#fromaddress"
                                ClientId = "/docs/reference/data-types/google-workspace/gmail/authentication/oauth/gmailoauthcertificatecredentials/#clientid"
            [Cortex.Reference.DataTypes.Http]
                MainDoc = "/docs/reference/data-types/http/"
                [Cortex.Reference.DataTypes.Http.Authentication]
                    MainDoc = "/docs/reference/data-types/http/authentication/"
                    [Cortex.Reference.DataTypes.Http.Authentication.IHttpCredentials]
                        MainDoc = "/docs/reference/data-types/http/authentication/ihttpcredentials"
                    [Cortex.Reference.DataTypes.Http.Authentication.HttpCredentials]
                        MainDoc = "/docs/reference/data-types/http/authentication/httpcredentials"
                    [Cortex.Reference.DataTypes.Http.Authentication.HttpUserCredentials]
                        MainDoc = "/docs/reference/data-types/http/authentication/httpusercredentials"
            [Cortex.Reference.DataTypes.Json]
                MainDoc = "/docs/reference/data-types/json/"
                [Cortex.Reference.DataTypes.Json.JsonSerializerSettings]
                    MainDoc = "/docs/reference/data-types/json/jsonserializersettings"
            [Cortex.Reference.DataTypes.Logs]
                MainDoc = "/docs/reference/data-types/logs/"
                [Cortex.Reference.DataTypes.Logs.EventSeverity]
                    MainDoc = "/docs/reference/data-types/logs/eventseverity"
            [Cortex.Reference.DataTypes.Loops]
                MainDoc = "/docs/reference/data-types/loops/"
                [Cortex.Reference.DataTypes.Loops.InfiniteLoopErrorCode]
                    MainDoc = "/docs/reference/data-types/loops/infinitelooperrorcode"
            [Cortex.Reference.DataTypes.Numbers]
                MainDoc = "/docs/reference/data-types/numbers/"
                [Cortex.Reference.DataTypes.Numbers.Double]
                    MainDoc = "/docs/reference/data-types/numbers/double"
                [Cortex.Reference.DataTypes.Numbers.Int16]
                    MainDoc = "/docs/reference/data-types/numbers/int16"
                [Cortex.Reference.DataTypes.Numbers.Int32]
                    MainDoc = "/docs/reference/data-types/numbers/int32"
                [Cortex.Reference.DataTypes.Numbers.Int64]
                    MainDoc = "/docs/reference/data-types/numbers/int64"
                [Cortex.Reference.DataTypes.Numbers.Single]
                    MainDoc = "/docs/reference/data-types/numbers/single"
            [Cortex.Reference.DataTypes.Other]
                MainDoc = "/docs/reference/data-types/other/"
                [Cortex.Reference.DataTypes.Other.Guid]
                    MainDoc = "/docs/reference/data-types/other/guid"
                [Cortex.Reference.DataTypes.Other.Nullable]
                    MainDoc = "/docs/reference/data-types/other/nullable-1"
            [Cortex.Reference.DataTypes.SessionDetails]
                MainDoc = "/docs/reference/data-types/session-details/"
                [Cortex.Reference.DataTypes.SessionDetails.ServerDetails]
                    MainDoc = "/docs/reference/data-types/session-details/serverdetails"
                    Host = "/docs/reference/data-types/session-details/serverdetails/#host"
                    Port = "/docs/reference/data-types/session-details/serverdetails/#port"
                    UseSsl = "/docs/reference/data-types/session-details/serverdetails/#usessl"
            [Cortex.Reference.DataTypes.Ssh]
                MainDoc = "/docs/reference/data-types/ssh/"
                [Cortex.Reference.DataTypes.Ssh.Authentication]
                    MainDoc = "/docs/reference/data-types/ssh/authentication/"
                    [Cortex.Reference.DataTypes.Ssh.Authentication.ISshCredentials]
                        MainDoc = "/docs/reference/data-types/ssh/authentication/isshcredentials"
                    [Cortex.Reference.DataTypes.Ssh.Authentication.SshCredentials]
                        MainDoc = "/docs/reference/data-types/ssh/authentication/sshcredentials"
                    [Cortex.Reference.DataTypes.Ssh.Authentication.SshUserCredentials]
                        MainDoc = "/docs/reference/data-types/ssh/authentication/sshusercredentials"
            [Cortex.Reference.DataTypes.Text]
                MainDoc = "/docs/reference/data-types/text/"
                [Cortex.Reference.DataTypes.Text.Char]
                    MainDoc = "/docs/reference/data-types/text/char"
                [Cortex.Reference.DataTypes.Text.CultureInfo]
                    MainDoc = "/docs/reference/data-types/text/cultureinfo"
                [Cortex.Reference.DataTypes.Text.Encoding]
                    MainDoc = "/docs/reference/data-types/text/encoding"
                [Cortex.Reference.DataTypes.Text.EncryptableText]
                    MainDoc = "/docs/reference/data-types/text/encryptabletext"
                [Cortex.Reference.DataTypes.Text.EncryptedText]
                    MainDoc = "/docs/reference/data-types/text/encryptedtext"
                [Cortex.Reference.DataTypes.Text.IFormatProvider]
                    MainDoc = "/docs/reference/data-types/text/iformatprovider"
                [Cortex.Reference.DataTypes.Text.SearchOptions]
                    MainDoc = "/docs/reference/data-types/text/searchoptions"
                [Cortex.Reference.DataTypes.Text.String]
                    MainDoc = "/docs/reference/data-types/text/string"
                    CreateNew = "/docs/reference/data-types/text/string#create-a-string"
                [Cortex.Reference.DataTypes.Text.StringComparison]
                    MainDoc = "/docs/reference/data-types/text/stringcomparison"
                [Cortex.Reference.DataTypes.Text.StringSplitOptions]
                    MainDoc = "/docs/reference/data-types/text/stringsplitoptions"
                [Cortex.Reference.DataTypes.Text.UnicodeEncoding]
                    MainDoc = "/docs/reference/data-types/text/unicodeencoding"
                [Cortex.Reference.DataTypes.Text.UTF32Encoding]
                    MainDoc = "/docs/reference/data-types/text/utf32encoding"
                [Cortex.Reference.DataTypes.Text.UTF8Encoding]
                    MainDoc = "/docs/reference/data-types/text/utf8encoding"
        [Cortex.Reference.Exceptions]
            MainDoc = "/docs/reference/exceptions/"
            [Cortex.Reference.Exceptions.Common]
                MainDoc = "/docs/reference/exceptions/common/"
                [Cortex.Reference.Exceptions.Common.Property]
                    MainDoc = "/docs/reference/exceptions/common/property/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyContainsNullOrEmptyItemException]
                        MainDoc = "/docs/reference/exceptions/common/property/property-contains-null-or-empty-item-exception/"
                        ValueContainsNullOrEmptyItem = "/docs/reference/exceptions/common/property/property-contains-null-or-empty-item-exception/#value-contains-null-or-empty-item"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyEmptyException]
                        MainDoc = "/docs/reference/exceptions/common/property/property-empty-exception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyItemCountException]
                        MainDoc = "/docs/reference/exceptions/common/property/property-item-count-exception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyNullException]
                        MainDoc = "/docs/reference/exceptions/common/property/property-null-exception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyValueOutOfRangeException]
                        MainDoc = "/docs/reference/exceptions/common/property/property-value-out-of-range-exception/"
                        PropertyIsInvalid = "/docs/reference/exceptions/common/property/property-value-out-of-range-exception/#property-is-invalid"
                        PropertyGreaterThanMaximumValue = "/docs/reference/exceptions/common/property/property-value-out-of-range-exception/#property-greater-than-maximum-value"
                        PropertyLessThanMinimumValue = "/docs/reference/exceptions/common/property/property-value-out-of-range-exception/#property-less-than-minimum-value"
                    [Cortex.Reference.Exceptions.Common.UnencryptedTextException]
                        MainDoc = "/docs/reference/exceptions/common/unencryptedtextexception/"
            [Cortex.Reference.Exceptions.Data]
                MainDoc = "/docs/reference/exceptions/data/"
                    [Cortex.Reference.Exceptions.Data.CommandException]
                        MainDoc = "/docs/reference/exceptions/data/commandexception/"
                    [Cortex.Reference.Exceptions.Data.InvalidConnectionStringException]
                        MainDoc = "/docs/reference/exceptions/data/invalidconnectionstringexception/"
            [Cortex.Reference.Exceptions.Decisions]
                MainDoc = "/docs/reference/exceptions/decisions/"
                    [Cortex.Reference.Exceptions.Decisions.PropertyNotNullableException]
                        MainDoc = "/docs/reference/exceptions/decisions/propertynotnullableexception/"
            [Cortex.Reference.Exceptions.Dictionaries]
                MainDoc = "/docs/reference/exceptions/dictionaries/"
                    [Cortex.Reference.Exceptions.Dictionaries.CannotModifyReadOnlyDictionaryException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/cannotmodifyreadonlydictionaryexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.KeyNotPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/keynotpresentexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.KeysNotPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/keysnotpresentexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.KeyPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/keypresentexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.OccurrenceNotPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/occurrencenotpresentexception/"
            [Cortex.Reference.Exceptions.Email]
                MainDoc = "/docs/reference/exceptions/email/"
                    [Cortex.Reference.Exceptions.Email.EmailSessionException]
                        MainDoc = "/docs/reference/exceptions/email/email-session-exception/"
                        InvalidPort = "/docs/reference/exceptions/email/email-session-exception/#100"
                        InvalidHost = "/docs/reference/exceptions/email/email-session-exception/#101"
                        SslRequired = "/docs/reference/exceptions/email/email-session-exception/#200"
                        SslUnsupported = "/docs/reference/exceptions/email/email-session-exception/#201"
                        InvalidUserCredentials = "/docs/reference/exceptions/email/email-session-exception/#300"
                        InvalidSslCertificate = "/docs/reference/exceptions/email/email-session-exception/#400"
                        InvalidClientCredentials = "/docs/reference/exceptions/email/email-session-exception/#401"
            [Cortex.Reference.Exceptions.FilesAndFolders]
                MainDoc = "/docs/reference/exceptions/files-and-folders/"
                [Cortex.Reference.Exceptions.FilesAndFolders.InvalidFolderNameException]
                    MainDoc = "/docs/reference/exceptions/files-and-folders/invalidfoldernameexception"
                [Cortex.Reference.Exceptions.FilesAndFolders.InvalidPathException]
                    MainDoc = "/docs/reference/exceptions/files-and-folders/invalidpathexception"
                [Cortex.Reference.Exceptions.FilesAndFolders.OperationFailedException]
                    MainDoc = "/docs/reference/exceptions/files-and-folders/operationfailedexception"
                    PathExceptions = "/docs/reference/exceptions/files-and-folders/operationfailedexception/#path-exceptions"
                    IndexesOfDuplicatePaths = "/docs/reference/exceptions/files-and-folders/operationfailedexception/#indexes-of-duplicate-paths"
                    IndexesOfNullOrEmptyPaths = "/docs/reference/exceptions/files-and-folders/operationfailedexception/#indexes-of-null-or-empty-paths"
            [Cortex.Reference.Exceptions.Flows]
                MainDoc = "/docs/reference/exceptions/flows/"
                [Cortex.Reference.Exceptions.Flows.Blocks]
                    MainDoc = "/docs/reference/exceptions/flows/blocks/"
                    [Cortex.Reference.Exceptions.Flows.Blocks.BlockTimeoutException]
                        MainDoc = "/docs/reference/exceptions/flows/blocks/block-timeout-exception/"
                    [Cortex.Reference.Exceptions.Flows.Blocks.InvalidBlockTimeoutException]
                        MainDoc = "/docs/reference/exceptions/flows/blocks/invalid-block-timeout-exception/"
                    [Cortex.Reference.Exceptions.Flows.Blocks.InvalidPropertyValueException]
                        MainDoc = "/docs/reference/exceptions/flows/blocks/invalid-property-value-exception/"
                        ValueIsInvalid = "/docs/reference/exceptions/flows/blocks/invalid-property-value-exception/#value-is-invalid"
                [Cortex.Reference.Exceptions.Flows.Execution]
                    MainDoc = "/docs/reference/exceptions/flows/execution/"
                    [Cortex.Reference.Exceptions.Flows.Execution.InvalidInputVariablesException]
                        MainDoc = "/docs/reference/exceptions/flows/execution/invalidinputvariablesexception/"
                        MissingInputVariables = "/docs/reference/exceptions/flows/execution/invalidinputvariablesexception/#missing-input-variables"
                        ExtraInputVariables = "/docs/reference/exceptions/flows/execution/invalidinputvariablesexception/#extra-input-variables"
                        InputVariablesOfAnInvalidType = "/docs/reference/exceptions/flows/execution/invalidinputvariablesexception/#input-variables-of-an-invalid-type"
            [Cortex.Reference.Exceptions.FlowException]
                MainDoc = "/docs/reference/exceptions/flowexception/"
            [Cortex.Reference.Exceptions.Lists]
                MainDoc = "/docs/reference/exceptions/lists/"
                    [Cortex.Reference.Exceptions.Lists.CannotModifyReadOnlyListException]
                        MainDoc = "/docs/reference/exceptions/lists/cannotmodifyreadonlylistexception/"
                    [Cortex.Reference.Exceptions.Lists.DuplicateValueException]
                        MainDoc = "/docs/reference/exceptions/lists/duplicatevalueexception/"
            [Cortex.Reference.Exceptions.Loops]
                MainDoc = "/docs/reference/exceptions/loops/"
                    [Cortex.Reference.Exceptions.Loops.InfiniteLoopException]
                        MainDoc = "/docs/reference/exceptions/loops/infinite-loop-exception/"
                        Category = "/docs/reference/exceptions/loops/infinite-loop-exception/#category"
                        ErrorCode = "/docs/reference/exceptions/loops/infinite-loop-exception/#error-code"
                        IncrementIsZero = "/docs/reference/exceptions/loops/infinite-loop-exception/#100"
                        IncrementIsNegative = "/docs/reference/exceptions/loops/infinite-loop-exception/#101"
                        IncrementIsPositive = "/docs/reference/exceptions/loops/infinite-loop-exception/#102"
            [Cortex.Reference.Exceptions.Text.Regex]
                MainDoc = "/docs/reference/exceptions/text/regex/"
                    [Cortex.Reference.Exceptions.Text.Regex.RegexParsingFailedException]
                        MainDoc = "/docs/reference/exceptions/text/regex/regexparsingfailedexception/"
            [Cortex.Reference.Exceptions.Xml]
                MainDoc = "/docs/reference/exceptions/xml/"
                XmlSerializationException = "/docs/reference/exceptions/xml/xmlserializationexception/"
        [Cortex.Reference.Logs]
            MainDoc = "/docs/reference/logs/"
            [Cortex.Reference.Logs.CortexGateway]
                MainDoc = "/docs/reference/logs/cortex-gateway/"
            [Cortex.Reference.Logs.CortexStudio]
                MainDoc = "/docs/reference/logs/cortex-studio/"
            [Cortex.Reference.Logs.CortexFlowDebuggerService]
                MainDoc = "/docs/reference/logs/cortex-flow-debugger-service/"
            [Cortex.Reference.Logs.CortexAPIGatewayService]
                MainDoc = "/docs/reference/logs/cortex-api-gateway-service/"
            [Cortex.Reference.Logs.CortexFlowExecutionService]
                MainDoc = "/docs/reference/logs/cortex-flow-execution-service/"
        [Cortex.Reference.Messages]
            MainDoc = "/docs/reference/messages/"
            [Cortex.Reference.Messages.Validation]
                MainDoc = "/docs/reference/messages/validation/"
                [Cortex.Reference.Messages.Validation.Errors]
                    MainDoc = "/docs/reference/messages/validation/errors/"
        [Cortex.Reference.Troubleshooting]
            MainDoc = "/docs/reference/troubleshooting/"
            [Cortex.Reference.Troubleshooting.Installation]
                TroubleshootingDuringInstallation= "/docs/reference/troubleshooting/installation#ts-during-installation"
                TroubleshootingNoInnovation = "/docs/reference/troubleshooting/installation#ts-no-innovation"
                TroubleshootingAfterInstallation= "/docs/reference/troubleshooting/installation#ts-after-installation"
                TroubleshootingNoBlocks = "/docs/reference/troubleshooting/installation#ts-no-blocks"
                TroubleshootingNoPublish = "/docs/reference/troubleshooting/installation#ts-no-publish"
                TroubleshootingNoRootCertificate= "/docs/reference/troubleshooting/installation#ts-no-root-certificate"
        [Cortex.Reference.Glossary]
            MainDoc = "/docs/reference/glossary/"
            [Cortex.Reference.Glossary.A-E]
                MainDoc = "/docs/reference/glossary/a-e/"
                Autogeneration = "/docs/reference/glossary/a-e/#autogeneration"
                Automation = "/docs/reference/glossary/a-e/#automation"
                AWSLambda = "/docs/reference/glossary/a-e/#aws-lambda"
                AzureFunctions = "/docs/reference/glossary/a-e/#azure-functions"
                BCC = "/docs/reference/glossary/a-e/#bcc"
                Block = "/docs/reference/glossary/a-e/#block"
                BlockProperty = "/docs/reference/glossary/a-e/#block-property"
                Boolean = "/docs/reference/glossary/a-e/#boolean"
                CC = "/docs/reference/glossary/a-e/#cc"
                Char = "/docs/reference/glossary/a-e/#char"
                CSharp = "/docs/reference/glossary/a-e/#c-1"
                CloudServiceProvider = "/docs/reference/glossary/a-e/#cloud-service-provider"
                CamelCase = "/docs/reference/glossary/a-e/#camelcase"
                CICD = "/docs/reference/glossary/a-e/#cicd"
                Code = "/docs/reference/glossary/a-e/#code"
                Cortex = "/docs/reference/glossary/a-e/#cortex"
                CortexStudio = "/docs/reference/glossary/a-e/#cortex-studio"
                CRL = "/docs/reference/glossary/a-e/#crl"
                DataType = "/docs/reference/glossary/a-e/#data-type"
                Developer = "/docs/reference/glossary/a-e/#developer"
                Dictionary = "/docs/reference/glossary/a-e/#dictionary"
                DLL = "/docs/reference/glossary/a-e/#dll"
                DragAndDrop = "/docs/reference/glossary/a-e/#drag-and-drop"
                Double = "/docs/reference/glossary/a-e/#double"
                Expression = "/docs/reference/glossary/a-e/#expression"
                ExpressionEditor = "/docs/reference/glossary/a-e/#expression-editor"
                Empty = "/docs/reference/glossary/a-e/#empty"
                ExplicitCast = "/docs/reference/glossary/a-e/#explicit-cast"
            [Cortex.Reference.Glossary.F-J]
                MainDoc = "/docs/reference/glossary/f-j/"
                File = "/docs/reference/glossary/f-j/#file"
                Flow = "/docs/reference/glossary/f-j/#flow"
                FlowDeveloper = "/docs/reference/glossary/f-j/#flow-developer"
                FunctionalBlock = "/docs/reference/glossary/f-j/#functional-block"
                GUI = "/docs/reference/glossary/f-j/#gui"
                Gmail = "/docs/reference/glossary/f-j/#gmail"
                Heterogenous = "/docs/reference/glossary/f-j/#heterogenous"
                Homogenous = "/docs/reference/glossary/f-j/#homogenous"
                Initialised = "/docs/reference/glossary/f-j/#initialised"
                IMAP = "/docs/reference/glossary/f-j/#imap"
                Integer = "/docs/reference/glossary/f-j/#integer"
                Int16 = "/docs/reference/glossary/f-j/#int16"
                Int32 = "/docs/reference/glossary/f-j/#int32"
                Int64 = "/docs/reference/glossary/f-j/#int64"
                IDE = "/docs/reference/glossary/f-j/#ide"
                Item = "/docs/reference/glossary/f-j/#item"
                Index = "/docs/reference/glossary/f-j/#index"
                Intellisense = "/docs/reference/glossary/f-j/#intellisense"
                Json = "/docs/reference/glossary/f-j/#json"
            [Cortex.Reference.Glossary.K-O]
                MainDoc = "/docs/reference/glossary/k-o/"
                Linux = "/docs/reference/glossary/k-o/#linux"
                List = "/docs/reference/glossary/k-o/#list"
                Literal = "/docs/reference/glossary/k-o/#literal"
                LowerCase = "/docs/reference/glossary/k-o/#lowercase"
                Method = "/docs/reference/glossary/k-o/#method"
                NonNull = "/docs/reference/glossary/k-o/#non-null"
                NuGetPackage = "/docs/reference/glossary/k-o/#nuget-package"
                Null = "/docs/reference/glossary/k-o/#null"
                Operand = "/docs/reference/glossary/k-o/#operand"
                Operator = "/docs/reference/glossary/k-o/#operator"
                Outlook = "/docs/reference/glossary/k-o/#outlook"
            [Cortex.Reference.Glossary.P-T]
                MainDoc = "/docs/reference/glossary/p-t/"
                PascalCase = "/docs/reference/glossary/p-t/#pascalcase"
                Platform = "/docs/reference/glossary/p-t/#platform"
                Portal = "/docs/reference/glossary/p-t/#portal"
                Process = "/docs/reference/glossary/p-t/#process"
                ProgrammingLanguage = "/docs/reference/glossary/p-t/#programming-language"
                PropertyBlock = "/docs/reference/glossary/p-t/#block-property"
                PropertyCSharp = "/docs/reference/glossary/p-t/#c-property"
                Request = "/docs/reference/glossary/p-t/#request"
                SDK = "/docs/reference/glossary/p-t/#sdk"
                ServiceFabric = "/docs/reference/glossary/p-t/#service-fabric"
                Single = "/docs/reference/glossary/p-t/#single"
                SASL = "/docs/reference/glossary/p-t/#sasl"
                SMTP = "/docs/reference/glossary/p-t/#smtp"
                Snippets = "/docs/reference/glossary/p-t/#snippets"
                SSL = "/docs/reference/glossary/p-t/#ssl"
                String = "/docs/reference/glossary/p-t/#string"
                Structure = "/docs/reference/glossary/p-t/#structure"
                SyntaxHighlighting = "/docs/reference/glossary/p-t/#syntax-highlighting"
                Task = "/docs/reference/glossary/p-t/#task"
                Text = "/docs/reference/glossary/p-t/#text"
                TLS = "/docs/reference/glossary/p-t/#tls"
                Trigger = "/docs/reference/glossary/p-t/#trigger"
                Type = "/docs/reference/glossary/p-t/#type"
                Typeahead = "/docs/reference/glossary/p-t/#typeahead"
            [Cortex.Reference.Glossary.U-Z]
                MainDoc = "/docs/reference/glossary/u-z/"
                UpperCase = "/docs/reference/glossary/u-z/#uppercase"
                Variable = "/docs/reference/glossary/u-z/#variable"
                WindowsPowerShell = "/docs/reference/glossary/u-z/#windows-powershell"
                ZeroBased = "/docs/reference/glossary/u-z/#zero-based"
            [Cortex.Reference.Glossary.0-9]
                MainDoc = "/docs/reference/glossary/0-9/"
                16Bit = "/docs/reference/glossary/0-9/#16-bit"
                32Bit = "/docs/reference/glossary/0-9/#32-bit"
    [Cortex.Tutorials]
        MainDoc = "/docs/tutorials/"
    [Cortex.Website]
        [Cortex.Website.Customers]
            MainDoc = "https://www.cortex-ia.com/customer-success-stories/"
        [Cortex.Website.EngageWithUs]
            MainDoc = "https://www.cortex-ia.com/contact-form/"
            AccelerationProgram = "https://resources.cortex-ia.com/download-cortex-intelligent-automation-acceleration-program"
            DesignSprint = "https://resources.cortex-ia.com/download-cortex-intelligent-automation-design-sprint"
            Kickstarter = "https://resources.cortex-ia.com/download-cortex-intelligent-automation-kickstarter"
            LaunchProgram = "https://resources.cortex-ia.com/download-cortex-intelligent-automation-launch-program"
        [Cortex.Website.Eula]
            MainDoc = "https://www.cortex-ia.com/end-user-licence-agreement/"
        [Cortex.Website.Industries]
            MainDoc = "https://www.cortex-ia.com/intelligent-automation-solutions/"
            Bfsi = "https://www.cortex-ia.com/bfsi-intelligent-automation/"
            It = "https://www.cortex-ia.com/itops-aiops-enterprise-services-automation/"
            Telco = "https://www.cortex-ia.com/telecommunications-automation/"
        [Cortex.Website.UseCases]
            MainDoc = "https://www.cortex-ia.com/download-centre/"
    [Cortex.ServicePortal]
        MainDoc = "https://support.cortex.co.uk/"
    [Cortex.YouTube]
        MainDoc = "https://www.youtube.com/channel/UCZwlagVEozhAjmUySYx8YlA"
        [Cortex.YouTube.Webinars]
            MainDoc = "https://www.youtube.com/playlist?list=PLPBEMXlXxB_oFKNwxwrXtXzU-WBvgAgz7"
# External links
[Anycast]
    MainDoc = "https://en.wikipedia.org/wiki/Anycast"
[ConnectionStrings]
    MainDoc = "https://www.connectionstrings.com/"
    SqlConnection = "https://www.connectionstrings.com/sqlconnection/"
[ElasticSearch]
    MainDoc = "https://www.elastic.co/"
[ErlangOTP]
    MainDoc = "https://github.com/erlang/otp"
[GoBetween]
    MainDoc = "https://github.com/yyyar/gobetween"
[Google]
    [Google.Authentication]
        [Google.Authentication.LessSecureApps]
            MainDoc = "https://support.google.com/accounts/answer/6010255"
[GitHub]
    [GitHub.Cortex.Observability]
        GrafanaLokiInstallZip = "https://github.com/CortexIntelligentAutomation/observability/releases/download/v1.0.0/Grafana.Loki.Install.zip"
        PromtailInstallZip = "https://github.com/CortexIntelligentAutomation/observability/releases/download/v1.0.0/Promtail.Install.zip"
        GrafanaDashboardsZip = "https://github.com/CortexIntelligentAutomation/observability/releases/download/v1.0.0/Grafana.Dashboards.zip"
[Grafana]
    MainDoc = "https://grafana.com/"
    [Grafana.Products.Grafana]
        MainDoc = "https://grafana.com/grafana/"
        TimeRange = "https://grafana.com/docs/grafana/latest/dashboards/time-range-controls/"
    [Grafana.Products.Loki]
        MainDoc = "https://grafana.com/oss/loki/"
        [Grafana.Products.Loki.Promtail]
            MainDoc = "https://grafana.com/docs/loki/latest/clients/promtail/"
    [Grafana.SelfManaged.Downloads.GrafanaWebApp]
        Windows = "https://grafana.com/grafana/download/8.5.4?pg=get&plcmt=selfmanaged-box1-cta1&platform=windows"
    [Grafana.SelfManaged.Downloads.GrafanaLoki]
        GrafanaLokiInstallZip = "https://github.com/grafana/loki/releases/download/v2.5.0/loki-windows-amd64.exe.zip"
    [Grafana.SelfManaged.Downloads.Promtail]
        PromtailInstallZip = "https://github.com/grafana/loki/releases/download/v2.5.0/promtail-windows-amd64.exe.zip"
[IETF]
    MainDoc = "https://www.ietf.org/"
    [IETF.Email]
        RFC5321 = "https://www.ietf.org/rfc/rfc5321.txt"
[IIS]
    MainDoc = "https://www.iis.net/overview"
    [IIS.Downloads]
        UrlRewrite-2_1 = "https://www.iis.net/downloads/microsoft/url-rewrite"
        ApplicationRequestRouting-3_0 = "https://www.iis.net/downloads/microsoft/application-request-routing"
    
[JsonDotNet]
    JsonReaderException = "https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReaderException.htm"
    JsonSerializationException = "https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializationException.htm"
    JsonSerializerSettings = "https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm"
[LetsEncrypt]
    MainDoc = "https://letsencrypt.org/"
[Microsoft]
    [Microsoft.Downloads.Windows]
        Server2019 = "https://www.microsoft.com/en-US/evalcenter/evaluate-windows-server-2019?filetype=ISO"
        Server2016 = "https://www.microsoft.com/en-US/evalcenter/evaluate-windows-server-2016?filetype=ISO"
[MimeKit]
    [MimeKit.Docs]
        SmtpCommandException = "http://www.mimekit.net/docs/html/T_MailKit_Net_Smtp_SmtpCommandException.htm"
[MSDocs]
    [MSDocs.CSharp]
        MainDoc = "https://docs.microsoft.com/en-us/dotnet/csharp/"
        BuiltinTypes = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/built-in-types"
        BooleanLiterals = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/bool#literals"
        Casting = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions"
        CastExpression = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/type-testing-and-cast#cast-expression"
        CharLiterals = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/char#literals"
        Constructors = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/constructors"
        DefaultValues = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/default-values"
        Methods = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/methods"
        Properties = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/properties"
        EnumerationTypes = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/enum"
        ExplicitConversions = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions#explicit-conversions"
        ImplicitConversions = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions#implicit-conversions"
        IndicesAndRanges = "https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/tutorials/ranges-indexes"
        ReferenceTypes = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/reference-types"
        ValueTypes = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-types"
        dynamic = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/reference-types#the-dynamic-type"
        IntegerLiterals = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/integral-numeric-types#integer-literals"
        RealLiterals = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types#real-literals"
        StringLiterals = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/reference-types#string-literals"
        IdentifierNamingRules = "https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/identifier-names"
        OperatorsAndExpressions = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/"
        ArithmeticOperators = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/arithmetic-operators"
        BooleanLogicalOperators = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators"
        ComparisonOperators = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/comparison-operators"
        EqualityOperators = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/equality-operators"
        Interpolation = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/#string-interpolation"
        Verbatim = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/#verbatim-string-literals"
        InterpolatedVerbatim = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/#verbatim-string-interpolation"
    [MSDocs.SqlServer]
        ErrorCodes = "https://docs.microsoft.com/en-us/sql/relational-databases/errors-events/database-engine-events-and-errors?view=sql-server-ver15"
        SqlException = "https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlexception?view=dotnet-plat-ext-6.0&viewFallbackFrom=netcore-3.1"
        TransparentDataEncryption = "https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-ver15"
    [MSDocs.DotNet.Api.System]
        ArgumentException = "https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"
        ArgumentNullException = "https://docs.microsoft.com/en-us/dotnet/api/system.argumentnullexception"
        ArgumentOutOfRangeException = "https://docs.microsoft.com/en-us/dotnet/api/system.argumentoutofrangeexception"
        Array = "https://docs.microsoft.com/en-us/dotnet/api/system.array"
        FormatException = "https://docs.microsoft.com/en-us/dotnet/api/system.formatexception"
        OutOfMemoryException = "https://docs.microsoft.com/en-us/dotnet/api/system.outofmemoryexception"
        StringComparison = "https://docs.microsoft.com/en-us/dotnet/api/system.stringcomparison"
        StringSplitOptions = "https://docs.microsoft.com/en-us/dotnet/api/system.stringsplitoptions"
        UnauthorizedAccessException = "https://learn.microsoft.com/en-us/dotnet/api/system.unauthorizedaccessexception"
        [MSDocs.DotNet.Api.System.Char]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.char"
        [MSDocs.DotNet.Api.System.Collections]
            IEnumerable = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.ienumerable"
        [MSDocs.DotNet.Api.System.Collections.Generic]
            IDictionary = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.idictionary-2"
            Dictionary = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2"
            IEnumerable_TItem = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"
            IList = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ilist-1"
            List = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"
        [MSDocs.DotNet.Api.System.Convert]
            MainDoc ="https://docs.microsoft.com/en-us/dotnet/api/system.convert" 
            ToBoolean = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.toboolean"
            ToDouble = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.todouble"
            ToInt16 = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.toint16"
            ToInt32 = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.toint32"
            ToInt64 = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.toint64"
            ToSingle = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.tosingle"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.tostring"
            ToStringObjectFormatProvider = "https://docs.microsoft.com/en-us/dotnet/api/system.convert.tostring?#system-convert-tostring(system-object-system-iformatprovider)"
        [MSDocs.DotNet.Api.System.Boolean]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.boolean"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.boolean.parse"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.boolean.tostring"
        [MSDocs.DotNet.Api.System.DateTime]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime"
            InitializingADateTimeObject = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime?#initializing-a-datetime-object"
            Ctors = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime.-ctor"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse"
            Now = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime.now"
            UtcNow = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime.utcnow"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime.minvalue"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.datetime.ToString"
        [MSDocs.DotNet.Api.System.DateTimeOffset]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset"
            InstantiatingADateTimeOffsetObject = "https://docs.microsoft.com/en-us/dotnet/standard/datetime/instantiating-a-datetimeoffset-object"
            Ctors = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.-ctor"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.parse"
            Now = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.now"
            UtcNow = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.utcnow"
            DateTime = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.datetime"
            LocalDateTime = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.localdatetime"
            UtcDateTime = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.utcdatetime"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.minvalue"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.ToString"
            ShortDateFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#ShortDate"
            ShortTimeFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#ShortTime"
            LongDateFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#LongDate"
            LongTimeFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#LongTime"
            FullDateShortTime = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#FullDateShortTime"
            FullDateLongTimeFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#FullDateLongTime"
            GeneralDateShortTimeFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#GeneralDateShortTime"
            GeneralDateLongTimeFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#GeneralDateLongTime"
            RoundTripFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#Roundtrip"
            RFC1123Format = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#RFC1123"
            SortableFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#Sortable"
            UniversalSortableFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#UniversalSortable"
            UniversalFullFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#UniversalFull"
            MonthDayFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#MonthDay"
            YearMonthFormat = "https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#YearMonth"
        [MSDocs.DotNet.Api.System.DayOfWeek]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.dayofweek"
        [MSDocs.DotNet.Api.System.Double]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.double"
            MaxValue = "https://docs.microsoft.com/en-us/dotnet/api/system.double.maxvalue"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.double.minvalue"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.double.parse"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.double.tostring"
        [MSDocs.DotNet.Api.System.dynamic]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/using-type-dynamic"
        [MSDocs.DotNet.Api.System.Enum]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.enum"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.enum.parse"
            ToObject = "https://docs.microsoft.com/en-us/dotnet/api/system.enum.toobject"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.enum.tostring"
            InstantiatingAnEnum = "https://docs.microsoft.com/en-us/dotnet/api/system.enum?#instantiating-an-enumeration-type"
            FormattingEnumerationValues = "https://docs.microsoft.com/en-us/dotnet/api/system.enum?#formatting-enumeration-values"
        [MSDocs.DotNet.Api.System.Int16]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.int16"
            MaxValue = "https://docs.microsoft.com/en-us/dotnet/api/system.int16.maxvalue"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.int16.minvalue"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.int16.parse"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.int16.tostring"
        [MSDocs.DotNet.Api.System.Int32]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.int32"
            MaxValue = "https://docs.microsoft.com/en-us/dotnet/api/system.int32.maxvalue"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.int32.minvalue"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.int32.parse"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.int32.tostring"
            InstantiatingAnInt32 = "https://docs.microsoft.com/en-us/dotnet/api/system.int32?#instantiating-an-int32-value"
            RepresentingAnInt32AsAString = "https://docs.microsoft.com/en-us/dotnet/api/system.int32?#representing-an-int32-as-a-string"
        [MSDocs.DotNet.Api.System.Int64]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.int64"
            MaxValue = "https://docs.microsoft.com/en-us/dotnet/api/system.int64.maxvalue"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.int64.minvalue"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.int64.parse"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.int64.tostring"
            InstantiatingAnInt64 = "https://docs.microsoft.com/en-us/dotnet/api/system.int64?#instantiating-an-int64-value"
            RepresentingAnInt64AsAString = "https://docs.microsoft.com/en-us/dotnet/api/system.int64?#representing-an-int64-as-a-string"
        [MSDocs.DotNet.Api.System.IO]
            FileNotFoundException = "https://learn.microsoft.com/en-us/dotnet/api/system.io.filenotfoundexception"
            IOException = "https://learn.microsoft.com/en-us/dotnet/api/system.io.ioexception"
            PathTooLongException = "https://docs.microsoft.com/en-us/dotnet/api/system.io.pathtoolongexception"
        [MSDocs.DotNet.Api.System.Object]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.object"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.object.tostring"
        [MSDocs.DotNet.Api.System.Single]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.single"
            MaxValue = "https://docs.microsoft.com/en-us/dotnet/api/system.single.maxvalue"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.single.minvalue"
            Parse = "https://docs.microsoft.com/en-us/dotnet/api/system.single.parse"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.single.tostring"
        [MSDocs.DotNet.Api.System.String]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.string"
            Concat = "https://docs.microsoft.com/en-us/dotnet/api/system.string.concat"
            ConcatGuide = "https://docs.microsoft.com/en-us/dotnet/csharp/how-to/concatenate-multiple-strings"
            ConcatOperator = "https://docs.microsoft.com/en-us/dotnet/csharp/how-to/concatenate-multiple-strings#-and--operators"
            Format = "https://docs.microsoft.com/en-us/dotnet/api/system.string.format"
            Insert = "https://docs.microsoft.com/en-us/dotnet/api/system.string.insert"
            Join = "https://docs.microsoft.com/en-us/dotnet/api/system.string.join"
        [MSDocs.DotNet.Api.System.TimeSpan]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.timespan"
            MinValue = "https://docs.microsoft.com/en-us/dotnet/api/system.timespan.minvalue"
        [MSDocs.DotNet.Api.System.Globalization]
            CultureInfo = "https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo"
        [MSDocs.DotNet.Api.System.Text.RegularExpressions]
            RegexMatchTimeoutException = "https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.regexmatchtimeoutexception"
        [MSDocs.DotNet.Api.System.Net]
            NetworkCredential = "https://docs.microsoft.com/en-us/dotnet/api/system.net.networkcredential"
    [MSDocs.PowerShell]
        WhatIsPowerShell = "https://learn.microsoft.com/en-us/powershell/scripting/overview?view=powershell-5.1"
        InstallModule = "https://docs.microsoft.com/en-us/powershell/scripting/developer/module/installing-a-powershell-module?view=powershell-7.2"
    [MSDocs.ServiceFabric]
        MainDoc = "https://azure.microsoft.com/en-us/services/service-fabric/"
        Explorer = "https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-visualizing-your-cluster"
        ReverseProxy = "https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reverseproxy"
[MSDotNet]
    [MSDotNet.Framework471]
        MainDoc = "https://dotnet.microsoft.com/en-us/download/dotnet-framework/net471"
[MSDownload]
    WebDeploy = "https://www.microsoft.com/en-gb/download/details.aspx?id=43717"
    [MSDownload.CPlusPlusRedistributable]
        2013 = "http://www.microsoft.com/en-us/download/details.aspx?id=40784"
    [MSDownload.SqlServerExpress]
        2016 = "https://www.microsoft.com/en-us/download/details.aspx?id=103447"
[MSEval]
    [MSEval.WindowsServer]
        2019 = "https://www.microsoft.com/en-US/evalcenter/evaluate-windows-server-2019?filetype=ISO"
        2016 = "https://www.microsoft.com/en-US/evalcenter/evaluate-windows-server-2016?filetype=ISO"
    [MSEval.SQLServer]
        2019 = "https://www.microsoft.com/en-us/evalcenter/evaluate-sql-server-2019?filetype=exe"
        2016 = "https://www.microsoft.com/en-us/evalcenter/evaluate-sql-server-2016?filetype=exe"
[MSGitHub]
    [MSGitHub.MonacoEditor]
        MainDoc = "https://microsoft.github.io/monaco-editor/"
[MSSupport]
    [MSSupport.Troubleshooting]
        DynamicPorts = "https://support.microsoft.com/kb/929851"
[Particular]
    [Particular.NServiceBus]
        MainDoc = "https://particular.net/nservicebus"
[Postman]
    [Postman.Downloads]
        MainDoc = "https://www.postman.com/downloads/"
[RabbitMQ]
    MainDoc = "https://www.rabbitmq.com/"
[NSSM]
    MainDoc = "https://nssm.cc/"
[Splunk]
    MainDoc = "https://www.splunk.com/"
[Unicode]
    WhatIsUnicode = "https://www.unicode.org/standard/WhatIsUnicode.html"
[VisualStudio]
    [VisualStudio.Code]
        MainDoc = "https://code.visualstudio.com/"
        Intellisense = "https://code.visualstudio.com/docs/editor/intellisense"
[Wikipedia]
    Bit = "https://en.wikipedia.org/wiki/Bit"
    Byte = "https://en.wikipedia.org/wiki/Byte"
    HttpStatusCodes = "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"
    InformationTechnology = "https://en.wikipedia.org/wiki/Information_technology"
[W3]
    WhatIsJson = "https://www.w3schools.com/whatis/whatis_json.asp"
    XmlNodes = "https://www.w3schools.com/XML/dom_nodes.asp"
    CharacterSets = "https://www.w3.org/Style/XSL/TestSuite/results/4/XEP/charsets.pdf"
    SqlInjection = "https://www.w3schools.com/sql/sql_injection.asp"