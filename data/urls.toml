# Internal links
[Cortex]
    [Cortex.GettingStarted]
        MainDoc = "/docs/getting-started/"
        [Cortex.GettingStarted.OnPremise]
            [Cortex.GettingStarted.OnPremise.MultipleServerWithHA]
                MainDoc = "/docs/getting-started/on-premise/multiple-server-with-ha"
                [Cortex.GettingStarted.OnPremise.MultipleServerWithHA.Advanced]
                    Ports = "/docs/getting-started/on-premise/advanced/ports"
                    AdvancedConfig = "/docs/getting-started/on-premise/advanced/advanced-config-changes"
                    AlternativeArchitectures = "/docs/getting-started/on-premise/advanced/alternative-architectures"
                    Troubleshooting = "/docs/getting-started/on-premise/advanced/ha-install-troubleshooting"
                    TroubleshootingDuringInstallation= "/docs/getting-started/on-premise/advanced/ha-install-troubleshooting#ts-during-installation"
                    TroubleshootingAfterInstallation= "/docs/getting-started/on-premise/advanced/ha-install-troubleshooting#ts-after-installation"
                    TroubleshootingNoInnovation = "/docs/getting-started/on-premise/advanced/ha-install-troubleshooting#ts-no-innovation"
                    TroubleshootingNoBlocks = "/docs/getting-started/on-premise/advanced/ha-install-troubleshooting#ts-no-blocks"
                    TroubleshootingNoPublish = "/docs/getting-started/on-premise/advanced/ha-install-troubleshooting#ts-no-publish"
                    TroubleshootingNoRootCertificate= "/docs/getting-started/on-premise/advanced/ha-install-troubleshooting#ts-no-root-certificate"
    [Cortex.Guides]
        [Cortex.Guides.Studio]
            MainDoc = "/docs/guides/cortex-studio/"
        [Cortex.Guides.Gateway]
            MainDoc = "/docs/guides/cortex-gateway/"
    [Cortex.Reference]
        [Cortex.Reference.Blocks]
            MainDoc = "/docs/reference/blocks/"
            [Cortex.Reference.Blocks.Exceptions]
                MainDoc = "/docs/reference/blocks/exceptions/"
                [Cortex.Reference.Blocks.Exceptions.HandleBlock]
                    MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockException]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingMessage]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-message-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingMessages]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-messages-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingTypeName]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-type-name-block"
                    [Cortex.Reference.Blocks.Exceptions.HandleBlock.HandleBlockExceptionMatchingTypeNames]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-type-names-block"
                [Cortex.Reference.Blocks.Exceptions.HandleFlow]
                    MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception"
                    [Cortex.Reference.Blocks.Exceptions.HandleFlow.HandleFlowException]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-block-exception/handle-flow-exception-block"
                [Cortex.Reference.Blocks.Exceptions.HandleWorkspace]
                    MainDoc = "/docs/reference/blocks/exceptions/handle-workspace-exception"
                    [Cortex.Reference.Blocks.Exceptions.HandleWorkspace.HandleWorkspaceException]
                        MainDoc = "/docs/reference/blocks/exceptions/handle-workspace-exception/handle-workspace-exception-block"
            [Cortex.Reference.Blocks.FilesAndFolders]
                MainDoc = "/docs/reference/blocks/files-and-folders/"
                [Cortex.Reference.Blocks.FilesAndFolders.CheckFile]
                    MainDoc = "/docs/reference/blocks/files-and-folders/check-file"
                    [Cortex.Reference.Blocks.FilesAndFolders.CheckFile.CheckFileExists]
                        MainDoc = "/docs/reference/blocks/files-and-folders/check-file/check-file-exists-block"
                [Cortex.Reference.Blocks.FilesAndFolders.CheckFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/check-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.CheckFolder.CheckFolderExists]
                        MainDoc = "/docs/reference/blocks/files-and-folders/check-folder/check-folder-exists-block"
                [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder.CopyFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder/copy-folder-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder.CopyFolders]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder/copy-folders-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.CopyFolder.DuplicateFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/copy-folder/duplicate-folder-block"
                [Cortex.Reference.Blocks.FilesAndFolders.MoveFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/move-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.MoveFolder.MoveFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/move-folder/move-folder-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.MoveFolder.MoveFolders]
                        MainDoc = "/docs/reference/blocks/files-and-folders/move-folder/move-folders-block"
                    [Cortex.Reference.Blocks.FilesAndFolders.RenameFolder]
                    MainDoc = "/docs/reference/blocks/files-and-folders/rename-folder"
                    [Cortex.Reference.Blocks.FilesAndFolders.RenameFolder.RenameFolder]
                        MainDoc = "/docs/reference/blocks/files-and-folders/rename-folder/rename-folder-block"
            [Cortex.Reference.Blocks.Json]
                MainDoc = "/docs/reference/blocks/json/"
                [Cortex.Reference.Blocks.Json.ConvertJson]
                    MainDoc = "/docs/reference/blocks/json/convert-json"
                    [Cortex.Reference.Blocks.Json.ConvertJson.ConvertJsonToObject]
                        MainDoc = "/docs/reference/blocks/json/convert-json/convert-json-to-object-block"
                    [Cortex.Reference.Blocks.Json.ConvertJson.ConvertObjectToJson]
                        MainDoc = "/docs/reference/blocks/json/convert-json/convert-object-to-json-block"
            [Cortex.Reference.Blocks.Text]
                MainDoc = "/docs/reference/blocks/text/"
                [Cortex.Reference.Blocks.Text.Add]
                MainDoc = "/docs/reference/blocks/text/add-text/"
                    [Cortex.Reference.Blocks.Text.Add.AddTextAtBeginning]
                    MainDoc = "/docs/reference/blocks/text/add-text/add-text-at-beginning-block/"
                    Examples = "/docs/reference/blocks/text/add-text/add-text-at-beginning-block/#examples"
            [Cortex.Reference.Blocks.Workspaces]
                MainDoc = "/docs/reference/blocks/workspaces/"
                [Cortex.Reference.Blocks.Workspaces.StartWorkspace]
                MainDoc = "/docs/reference/blocks/workspaces/start-workspace"
                    [Cortex.Reference.Blocks.Workspaces.Workspace.StartWorkspaceBlock]
                    MainDoc = "/docs/reference/blocks/workspaces/start-workspace/start-workspace-block"
                [Cortex.Reference.Blocks.Workspaces.EndWorkspace]
                MainDoc = "/docs/reference/blocks/workspaces/end-workspace"
                    [Cortex.Reference.Blocks.Workspaces.Workspace.EndWorkspaceBlock]
                    MainDoc = "/docs/reference/blocks/workspaces/end-workspace/end-workspace-block"
                [Cortex.Reference.Blocks.Workspaces.Workspace]
                MainDoc = "/docs/reference/blocks/workspaces/workspace"
                    [Cortex.Reference.Blocks.Workspaces.Workspace.WorkspaceBlock]
                    MainDoc = "/docs/reference/blocks/workspaces/workspace/workspace-block"
            [Cortex.Reference.Blocks.Xml]
                MainDoc = "/docs/reference/blocks/xml/"
                [Cortex.Reference.Blocks.Xml.ConvertXml]
                MainDoc = "/docs/reference/blocks/xml/convert-xml/"
                    [Cortex.Reference.Blocks.Xml.ConvertXml.ConvertXmlToStructureBlock]
                    MainDoc = "/docs/reference/blocks/xml/convert-xml/convert-xml-to-structure-block/"
                    [Cortex.Reference.Blocks.Xml.ConvertXml.ConvertStructureToXmlBlock]
                    MainDoc = "/docs/reference/blocks/xml/convert-xml/convert-structure-to-xml-block/"
        [Cortex.Reference.Concepts]
            [Cortex.Reference.Concepts.Fundamentals]
                MainDoc = "/docs/reference/concepts/fundamentals/"
                [Cortex.Reference.Concepts.Fundamentals.ConvertingObjectsToText]
                    MainDoc = "/docs/reference/concepts/fundamentals/converting-objects-to-text"
                    StringInterpolation = "/docs/reference/concepts/fundamentals/converting-objects-to-text/#string-interpolation"
                [Cortex.Reference.Concepts.Fundamentals.Culture]
                    MainDoc = "/docs/reference/concepts/fundamentals/culture/"
                    InvariantCulture = "/docs/reference/concepts/fundamentals/culture/#invariant-culture"
                [Cortex.Reference.Concepts.Fundamentals.ComplexTypes]
                    MainDoc = "/docs/reference/concepts/fundamentals/complex-types/"
                [Cortex.Reference.Concepts.Fundamentals.PrimitiveTypes]
                    MainDoc = "/docs/reference/concepts/fundamentals/primitive-types/"
            [Cortex.Reference.Concepts.WorkingWithCollections]
                MainDoc = "/docs/reference/concepts/collections/"
                Structures = "/docs/reference/concepts/collections/#structures"
                Keys = "/docs/reference/concepts/collections/#keys"
                Items = "/docs/reference/concepts/collections/#items"
            [Cortex.Reference.Concepts.WorkingWithDateAndTime]
                MainDoc = "/docs/reference/concepts/date-and-time/"
            [Cortex.Reference.Concepts.WorkingWithExceptions]
                MainDoc = "/docs/reference/concepts/exceptions/"
            [Cortex.Reference.Concepts.WorkingWithFilesAndFolders]
                MainDoc = "/docs/reference/concepts/files-and-folders/"
            [Cortex.Reference.Concepts.WorkingWithText]
                MainDoc = "/docs/reference/concepts/text/"
                [Cortex.Reference.Concepts.WorkingWithText.Formatting]
                    MainDoc = "/docs/reference/concepts/text/formatting/"
                    FormatParameters = "/docs/reference/concepts/text/formatting/#format-parameters"
            [Cortex.Reference.Concepts.WorkingWithVariables]
                MainDoc = "/docs/reference/concepts/variables/"
            [Cortex.Reference.Concepts.WorkingWithReferences]
                MainDoc = "/docs/reference/concepts/references/"
            [Cortex.Reference.Concepts.DateAndTimeFormats]
                MainDoc = "/docs/reference/concepts/date-and-time-formats/"
                InvariantCulture = "/docs/reference/concepts/date-and-time-formats/#invariant-culture"
            [Cortex.Reference.Concepts.ExceptionHandling]
                MainDoc = "/docs/reference/concepts/exception-handling/"
            [Cortex.Reference.Concepts.FileAndFolderAttributes]
                MainDoc = "/docs/reference/concepts/file-and-folder-attributes/"
            [Cortex.Reference.Concepts.FileAndFolderPaths]
                MainDoc = "/docs/reference/concepts/file-and-folder-paths/"
            [Cortex.Reference.Concepts.Generics]
                MainDoc = "/docs/reference/concepts/generics/"
            [Cortex.Reference.Concepts.Indexes]
                MainDoc = "/docs/reference/concepts/indexes/"
            [Cortex.Reference.Concepts.ISO8601Standard]
                MainDoc = "/docs/reference/concepts/iso-8601-standard/"
            [Cortex.Reference.Concepts.WorkingWithDataSources]
                MainDoc = "/docs/reference/concepts/working-with-data-sources/"
            [Cortex.Reference.Concepts.WorkingWithDatesAndTime]
                MainDoc = "/docs/reference/concepts/working-with-dates-and-time/"
            [Cortex.Reference.Concepts.Keys]
                MainDoc = "/docs/reference/concepts/keys/"
            [Cortex.Reference.Concepts.LiteralVariablesExpressions]
                MainDoc = "/docs/reference/concepts/literal-variables-expressions/"
                Literal = "/docs/reference/concepts/literal-variables-expressions/#literals"
                DictionaryLiterals = "/docs/reference/concepts/literal-variables-expressions/#dictionary-literals"
                ListLiterals = "/docs/reference/concepts/literal-variables-expressions/#list-literals"
                Expressions = "/docs/reference/concepts/literal-variables-expressions/#expressions"
                DictionaryExpressions = "/docs/reference/concepts/literal-variables-expressions/#dictionary-expressions"
                ListExpressions = "/docs/reference/concepts/literal-variables-expressions/#list-expressions"
                ExplicitlyCastAVariable = "/docs/reference/concepts/literal-variables-expressions/#explicitly-cast-a-variable"
                VariableReference = "/docs/reference/concepts/literal-variables-expressions/#variable-reference"
            [Cortex.Reference.Concepts.NullAndNullableTypes]
                MainDoc = "/docs/reference/concepts/null-and-nullable-types/"
            [Cortex.Reference.Concepts.ObjectCasting]
                MainDoc = "/docs/reference/concepts/object-casting/"
            [Cortex.Reference.Concepts.ObjectEquality]
                MainDoc = "/docs/reference/concepts/object-equality/"
                [Cortex.Reference.Concepts.ObjectEquality.ValueTypeVsReferenceTypeEquality]
                    MainDoc = "/docs/reference/concepts/object-equality/#value-type-vs-reference-type-equality"
                    ValueTypeEquality = "/docs/reference/concepts/object-equality/#value-type-equality"
                    ReferenceTypeEquality = "/docs/reference/concepts/object-equality/#reference-type-equality"
                [Cortex.Reference.Concepts.ObjectEquality.HowCortexComparesObjectsForEquality]
                    MainDoc = "/docs/reference/concepts/object-equality/#how-cortex-compares-objects-for-equality"
            [Cortex.Reference.Concepts.Occurrences]
                MainDoc = "/docs/reference/concepts/occurrences/"
            [Cortex.Reference.Concepts.PropertyType]
                MainDoc = "/docs/reference/concepts/property-type/"
                Input = "/docs/reference/concepts/property-type/#input"
                InputOutput = "/docs/reference/concepts/property-type/#inputoutput"
                Output = "/docs/reference/concepts/property-type/#output"
                DiscardingOutput = "/docs/reference/concepts/property-type/#discarding-output"
            [Cortex.Reference.Concepts.TextEquality]
                MainDoc = "/docs/reference/concepts/text-equality/"
                [Cortex.Reference.Concepts.TextEquality.ComparisonTypes]
                    MainDoc = "/docs/reference/concepts/text-equality/#comparison-types"
                    CurrentCulture = "/docs/reference/concepts/text-equality/#current-culture"
                    InvariantCulture = "/docs/reference/concepts/text-equality/#invariant-culture"
                    Ordinal = "/docs/reference/concepts/text-equality/#ordinal"
                    OrdinalIgnoreCase = "/docs/reference/concepts/text-equality/#ordinal-ignore-case"
            [Cortex.Reference.Concepts.PatternMatchingSyntax]
                MainDoc = "/docs/reference/concepts/pattern-matching-syntax/"
            [Cortex.Reference.Concepts.RegexSyntax]
                MainDoc = "/docs/reference/concepts/regex-syntax/"
            [Cortex.Reference.Concepts.TextCasing]
                MainDoc = "/docs/reference/concepts/text-casing/"
                [Cortex.Reference.Concepts.TextCasing.CultureInfo]
                    MainDoc = "/docs/reference/concepts/text-casing/#culture-info"
                    CurrentCulture = "/docs/reference/concepts/text-casing/#current-culture"
                    InvariantCulture = "/docs/reference/concepts/text-casing/#invariant-culture"
            [Cortex.Reference.Concepts.TranslationErrors]
                MainDoc = "/docs/reference/concepts/translation-errors/"
            [Cortex.Reference.Concepts.TextEncoding]
                MainDoc = "/docs/reference/concepts/text-encoding/"
            [Cortex.Reference.Concepts.EmptyTextAndWhitespace]
                MainDoc = "/docs/reference/concepts/empty-text-and-whitespace/"
        [Cortex.Reference.DataTypes]
                MainDoc = "/docs/reference/data-types/"
                [Cortex.Reference.DataTypes.MostCommon]
                    MainDoc = "/docs/reference/data-types/most-common/"
                    Array = "/docs/reference/data-types/most-common/#array"
                    Boolean = "/docs/reference/data-types/most-common/#boolean"
                    ContentOptions = "/docs/reference/data-types/most-common/#contentoptions"
                    CultureInfo = "/docs/reference/data-types/most-common/#cultureinfo"
                    DateTime = "/docs/reference/data-types/most-common/#datetime"
                    DateTimeComponentType = "/docs/reference/data-types/most-common/#datetimecomponenttype"
                    DateTimeOffset = "/docs/reference/data-types/most-common/#datetimeoffset"
                    DayOfWeek = "/docs/reference/data-types/most-common/#dayofweek"
                    Dictionaries = "/docs/reference/data-types/most-common/#dictionaries"
                    Double = "/docs/reference/data-types/most-common/#double"
                    Dynamic = "/docs/reference/data-types/most-common/#dynamic"
                    Encoding = "/docs/reference/data-types/most-common/#encoding"
                    Exceptions = "/docs/reference/data-types/most-common/#exceptions"
                    Exception = "/docs/reference/data-types/most-common/#exception"
                    FileInformation = "/docs/reference/data-types/most-common/#fileinformation"
                    FileMatch = "/docs/reference/data-types/most-common/#filematch"
                    FolderInformation = "/docs/reference/data-types/most-common/#folderinformation"
                    IDictionary = "/docs/reference/data-types/most-common/#idictionaryltknbspvgt"
                    IEnumerable = "/docs/reference/data-types/most-common/#ienumerablelttgt"
                    IFormatProvider = "/docs/reference/data-types/most-common/#iformatprovider"
                    IList = "/docs/reference/data-types/most-common/#ilistlttgt"
                    JsonSerializerSettings = "/docs/reference/data-types/most-common/#jsonserializersettings"
                    List = "/docs/reference/data-types/most-common/#listlttgt"
                    Lists = "/docs/reference/data-types/most-common/#lists"
                    InvariantCulture = "/docs/reference/data-types/most-common/#invariantculture"
                    Int32 = "/docs/reference/data-types/most-common/#int32"
                    Object = "/docs/reference/data-types/most-common/#object"
                    SearchOptions = "/docs/reference/data-types/most-common/#searchoptions"
                    String = "/docs/reference/data-types/most-common/#string"
                    StringComparison = "/docs/reference/data-types/most-common/#stringcomparison"
                    Structure = "/docs/reference/data-types/most-common/#structure"
                    TimePeriod = "/docs/reference/data-types/most-common/#timeperiod"
                    TimeSpan = "/docs/reference/data-types/most-common/#timespan"
                [Cortex.Reference.DataTypes.Data]
                    MainDoc = "/docs/reference/data-types/data/"
                    [Cortex.Reference.DataTypes.Data.ICommand]
                        MainDoc = "/docs/reference/data-types/data/icommand/"
                        CommandText = "/docs/reference/data-types/data/icommand/#command-text"
                    [Cortex.Reference.DataTypes.Data.AnyCommand]
                        MainDoc = "/docs/reference/data-types/data/anycommand/"
                        CommandText = "/docs/reference/data-types/data/anycommand/#command-text"
                    [Cortex.Reference.DataTypes.Data.AnyCommands]
                        MainDoc = "/docs/reference/data-types/data/anycommands"
                        CommandText = "/docs/reference/data-types/data/anycommands/#command-text"
                    [Cortex.Reference.DataTypes.Data.QueryCommand]
                        MainDoc = "/docs/reference/data-types/data/querycommand"
                        CommandText = "/docs/reference/data-types/data/querycommand/#command-text"
                    [Cortex.Reference.DataTypes.Data.NonQueryCommand]
                        MainDoc = "/docs/reference/data-types/data/nonquerycommand"
                        CommandText = "/docs/reference/data-types/data/nonquerycommand/#command-text"
                    [Cortex.Reference.DataTypes.Data.ConnectionDetails]
                        MainDoc = "/docs/reference/data-types/data/connectiondetails"
                    [Cortex.Reference.DataTypes.Data.ConnectionType]
                        MainDoc = "/docs/reference/data-types/data/connectiontype"
        [Cortex.Reference.Exceptions]
            MainDoc = "/docs/reference/exceptions/"
            [Cortex.Reference.Exceptions.Common]
                MainDoc = "/docs/reference/exceptions/common/"
                [Cortex.Reference.Exceptions.Common.Property]
                    MainDoc = "/docs/reference/exceptions/common/property/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyContainsNullOrEmptyItemException]
                        MainDoc = "/docs/reference/exceptions/common/property/propertycontainsnulloremptyitemexception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyEmptyException]
                        MainDoc = "/docs/reference/exceptions/common/property/propertyemptyexception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyItemCountException]
                        MainDoc = "/docs/reference/exceptions/common/property/propertyitemcountexception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyNullException]
                        MainDoc = "/docs/reference/exceptions/common/property/propertynullexception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyValueOutOfRangeException]
                        MainDoc = "/docs/reference/exceptions/common/property/propertyvalueoutofrangeexception/"
                    [Cortex.Reference.Exceptions.Common.Property.InvalidPropertyValueException]
                        MainDoc = "/docs/reference/exceptions/common/property/invalidpropertyvalueexception/"
            [Cortex.Reference.Exceptions.Data]
                MainDoc = "/docs/reference/exceptions/data/"
                    [Cortex.Reference.Exceptions.Data.CommandException]
                        MainDoc = "/docs/reference/exceptions/data/commandexception/"
                    [Cortex.Reference.Exceptions.Data.InvalidConnectionStringException]
                        MainDoc = "/docs/reference/exceptions/data/invalidconnectionstringexception/"
            [Cortex.Reference.Exceptions.Decisions]
                MainDoc = "/docs/reference/exceptions/decisions/"
                    [Cortex.Reference.Exceptions.Decisions.PropertyNotNullableException]
                        MainDoc = "/docs/reference/exceptions/decisions/propertynotnullableexception/"
            [Cortex.Reference.Exceptions.Dictionaries]
                MainDoc = "/docs/reference/exceptions/dictionaries/"
                    [Cortex.Reference.Exceptions.Dictionaries.CannotModifyReadOnlyDictionaryException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/cannotmodifyreadonlydictionaryexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.KeyNotPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/keynotpresentexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.KeysNotPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/keysnotpresentexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.KeyPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/keypresentexception/"
                    [Cortex.Reference.Exceptions.Dictionaries.OccurrenceNotPresentException]
                        MainDoc = "/docs/reference/exceptions/dictionaries/occurrencenotpresentexception/"
            [Cortex.Reference.Exceptions.FilesAndFolders]
                MainDoc = "/docs/reference/exceptions/files-and-folders/"
                [Cortex.Reference.Exceptions.FilesAndFolders.InvalidFolderNameException]
                    MainDoc = "/docs/reference/exceptions/files-and-folders/invalidfoldernameexception"
                [Cortex.Reference.Exceptions.FilesAndFolders.InvalidPathException]
                    MainDoc = "/docs/reference/exceptions/files-and-folders/invalidpathexception"
                [Cortex.Reference.Exceptions.FilesAndFolders.OperationFailedException]
                    MainDoc = "/docs/reference/exceptions/files-and-folders/operationfailedexception"
                    PathExceptions = "/docs/reference/exceptions/files-and-folders/operationfailedexception/#path-exceptions"
                    IndexesOfDuplicatePaths = "/docs/reference/exceptions/files-and-folders/operationfailedexception/#indexes-of-duplicate-paths"
                    IndexesOfNullOrEmptyPaths = "/docs/reference/exceptions/files-and-folders/operationfailedexception/#indexes-of-null-or-empty-paths"
            [Cortex.Reference.Exceptions.FlowException]
                MainDoc = "/docs/reference/exceptions/flowexception/"
            [Cortex.Reference.Exceptions.Lists]
                MainDoc = "/docs/reference/exceptions/lists/"
                    [Cortex.Reference.Exceptions.Lists.CannotModifyReadOnlyListException]
                        MainDoc = "/docs/reference/exceptions/lists/cannotmodifyreadonlylistexception/"
                    [Cortex.Reference.Exceptions.Lists.DuplicateValueException]
                        MainDoc = "/docs/reference/exceptions/lists/duplicatevalueexception/"
            [Cortex.Reference.Exceptions.Loops]
                MainDoc = "/docs/reference/exceptions/loops/"
                    [Cortex.Reference.Exceptions.Loops.InfiniteLoopException]
                        MainDoc = "/docs/reference/exceptions/loops/infiniteloopexception/"
            [Cortex.Reference.Exceptions.Text.Regex]
                MainDoc = "/docs/reference/exceptions/text/regex/"
                    [Cortex.Reference.Exceptions.Text.Regex.RegexParsingFailedException]
                        MainDoc = "/docs/reference/exceptions/text/regex/regexparsingfailedexception/"         
            [Cortex.Reference.Exceptions.Xml]
                MainDoc = "/docs/reference/exceptions/xml/"
                XmlSerializationException = "/docs/reference/exceptions/xml/xmlserializationexception/"
        [Cortex.Reference.Glossary]
            MainDoc = "/docs/reference/glossary/"
            [Cortex.Reference.Glossary.A-E]
                MainDoc = "/docs/reference/glossary/a-e/"
                CSharp = "/docs/reference/glossary/a-e/#c-1"
                CamelCase = "/docs/reference/glossary/a-e/#camelcase"
            [Cortex.Reference.Glossary.F-J]
                MainDoc = "/docs/reference/glossary/f-j/"
                Flow = "/docs/reference/glossary/f-j/#flow"
                FlowDeveloper = "/docs/reference/glossary/f-j/#flow-developer"
                FunctionalBlock = "/docs/reference/glossary/f-j/#functional-block"
                Initialised = "/docs/reference/glossary/f-j/#initialised"
                Integer = "/docs/reference/glossary/f-j/#integer"
                Int16 = "/docs/reference/glossary/f-j/#int16"
                Int32 = "/docs/reference/glossary/f-j/#int32"
                IDE = "/docs/reference/glossary/f-j/#ide"
            [Cortex.Reference.Glossary.K-O]
                MainDoc = "/docs/reference/glossary/k-o/"
                Literal = "/docs/reference/glossary/k-o/#literal"
                LowerCase = "/docs/reference/glossary/k-o/#lowercase"
                Method = "/docs/reference/glossary/k-o/#method"
                NonNull = "/docs/reference/glossary/k-o/#non-null"
                Null = "/docs/reference/glossary/k-o/#null"
                Operand = "/docs/reference/glossary/k-o/#operand"
                Operator = "/docs/reference/glossary/k-o/#operator"
            [Cortex.Reference.Glossary.P-T]
                MainDoc = "/docs/reference/glossary/p-t/"
                PascalCase = "/docs/reference/glossary/p-t/#pascalcase"
                Platform = "/docs/reference/glossary/p-t/#platform"
                Portal = "/docs/reference/glossary/p-t/#portal"
                Process = "/docs/reference/glossary/p-t/#process"
                ProgrammingLanguage = "/docs/reference/glossary/p-t/#programming-language"
                PropertyBlock = "/docs/reference/glossary/p-t/#block-property"
                PropertyCSharp = "/docs/reference/glossary/p-t/#c-property"
                Request = "/docs/reference/glossary/p-t/#request"
                Task = "/docs/reference/glossary/p-t/#task"
                Text = "/docs/reference/glossary/p-t/#text"
                Trigger = "/docs/reference/glossary/p-t/#trigger"
                Type = "/docs/reference/glossary/p-t/#type"
            [Cortex.Reference.Glossary.U-Z]
                MainDoc = "/docs/reference/glossary/u-z/"
                UpperCase = "/docs/reference/glossary/u-z/#uppercase"
                Variable = "/docs/reference/glossary/u-z/#variable"
            [Cortex.Reference.Glossary.0-9]
                MainDoc = "/docs/reference/glossary/0-9/"
                16Bit = "/docs/reference/glossary/0-9/#16-bit"
                32Bit = "/docs/reference/glossary/0-9/#32-bit"

# External links
[ConnectionStrings]
    MainDoc = "https://www.connectionstrings.com/"
[ElasticSearch]
    MainDoc = "https://www.elastic.co/"
[Grafana]
    MainDoc = "https://grafana.com/"
[JsonDotNet]
    JsonReaderException = "https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonReaderException.htm"
    JsonSerializationException = "https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializationException.htm"
    JsonSerializerSettings = "https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonSerializerSettings.htm"
[MSDocs]
    [MSDocs.CSharp]
        MainDoc = "https://docs.microsoft.com/en-us/dotnet/csharp/"
        Casting = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions"
        CastExpression = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/type-testing-and-cast#cast-expression"
        Dynamic = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/reference-types#the-dynamic-type"
    [MSDocs.SqlServer]
        ErrorCodes = "https://docs.microsoft.com/en-us/sql/relational-databases/errors-events/database-engine-events-and-errors?view=sql-server-ver15"
        SqlException = "https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlexception?view=dotnet-plat-ext-6.0&viewFallbackFrom=netcore-3.1"
    [MSDocs.DotNet.Api.System]
        ArgumentException = "https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"
        ArgumentNullException = "https://docs.microsoft.com/en-us/dotnet/api/system.argumentnullexception"
        Boolean = "https://docs.microsoft.com/en-us/dotnet/api/system.boolean"
        FormatException = "https://docs.microsoft.com/en-us/dotnet/api/system.formatexception"
        Int32 = "https://docs.microsoft.com/en-us/dotnet/api/system.int32"
        OutOfMemoryException = "https://docs.microsoft.com/en-us/dotnet/api/system.outofmemoryexception"
        String = "https://docs.microsoft.com/en-us/dotnet/api/system.string"
        StringComparison = "https://docs.microsoft.com/en-us/dotnet/api/system.stringcomparison"
        StringSplitOptions = "https://docs.microsoft.com/en-us/dotnet/api/system.stringsplitoptions"
        [MSDocs.DotNet.Api.System.Object]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.object"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.object.tostring"
        [MSDocs.DotNet.Api.System.Collections.Generic]
            IEnumerable = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"
            IList = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ilist-1"
            List = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"
        [MSDocs.DotNet.Api.System.Globalization]
            CultureInfo = "https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo"
        [MSDocs.DotNet.Api.System.Text.RegularExpressions]
            RegexMatchTimeoutException = "https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.regexmatchtimeoutexception"
[MSGitHub]
    [MSGitHub.MonacoEditor]
        MainDoc = "https://microsoft.github.io/monaco-editor/"
[Splunk]
    MainDoc = "https://www.splunk.com/"
[VisualStudio]
    [VisualStudio.Code]
        MainDoc = "https://code.visualstudio.com/"
[Wikipedia]
    Bit = "https://en.wikipedia.org/wiki/Bit"
    Byte = "https://en.wikipedia.org/wiki/Byte"
[W3]
    XmlNodes = "https://www.w3schools.com/XML/dom_nodes.asp"
    CharacterSets = "https://www.w3.org/Style/XSL/TestSuite/results/4/XEP/charsets.pdf"
    SqlInjection = "https://www.w3schools.com/sql/sql_injection.asp"