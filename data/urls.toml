# Internal links
[Cortex]
    [Cortex.GettingStarted]
        MainDoc = "/docs/getting-started/"
        [Cortex.GettingStarted.OnPremise]
            [Cortex.GettingStarted.OnPremise.MultipleServerWithHA]
                MainDoc = "/docs/getting-started/on-premise/multiple-server-with-ha/"
    [Cortex.Guides]
        [Cortex.Guides.Studio]
            MainDoc = "/docs/guides/cortex-studio/"
    [Cortex.Reference]
        [Cortex.Reference.Blocks]
            MainDoc = "/docs/reference/blocks/"
            [Cortex.Reference.Blocks.Exceptions]
                MainDoc = "/docs/reference/blocks/exceptions/"
            [Cortex.Reference.Blocks.Text]
                MainDoc = "/docs/reference/blocks/text/"
                [Cortex.Reference.Blocks.Text.Add]
                MainDoc = "/docs/reference/blocks/text/add/"
                    [Cortex.Reference.Blocks.Text.Add.AddTextAtBeginning]
                    MainDoc = "/docs/reference/blocks/text/add/add-text-at-beginning-block/"
                    Examples = "/docs/reference/blocks/text/add/add-text-at-beginning-block/#examples"
        [Cortex.Reference.Concepts]
            [Cortex.Reference.Concepts.Generics]
                MainDoc = "/docs/reference/concepts/generics/"
            [Cortex.Reference.Concepts.Indexes]
                MainDoc = "/docs/reference/concepts/indexes/"
            [Cortex.Reference.Concepts.LiteralVariablesExpressions]
                MainDoc = "/docs/reference/concepts/literal-variables-expressions/"
                AListLiteral = "/docs/reference/concepts/literal-variables-expressions/#a-list-literal"
                Expressions = "/docs/reference/concepts/literal-variables-expressions/#expressions"
                ExplicitlyCastAVariable = "/docs/reference/concepts/literal-variables-expressions/#explicitly-cast-a-variable"
                Literal = "/docs/reference/concepts/literal-variables-expressions/#literal"
                VariableReference = "/docs/reference/concepts/literal-variables-expressions/#variable-reference"
            [Cortex.Reference.Concepts.Occurrences]
                MainDoc = "/docs/reference/concepts/occurrences/"
            [Cortex.Reference.Concepts.PropertyType]
                MainDoc = "/docs/reference/concepts/property-type/"
                Input = "/docs/reference/concepts/property-type/#input"
                InputOutput = "/docs/reference/concepts/property-type/#inputoutput"
                Output = "/docs/reference/concepts/property-type/#output"
            [Cortex.Reference.Concepts.TextEquality]
                MainDoc = "/docs/reference/concepts/text-equality/"
                [Cortex.Reference.Concepts.TextEquality.ComparisonTypes]
                    MainDoc = "/docs/reference/concepts/text-equality/#comparison-types"
                    CurrentCulture = "/docs/reference/concepts/text-equality/#current-culture"
                    InvariantCulture = "/docs/reference/concepts/text-equality/#invariant-culture"
                    Ordinal = "/docs/reference/concepts/text-equality/#ordinal"
                    OrdinalIgnoreCase = "/docs/reference/concepts/text-equality/#ordinal-ignore-case"
            [Cortex.Reference.Concepts.TextCasing]
                MainDoc = "/docs/reference/concepts/text-casing/"
                [Cortex.Reference.Concepts.TextCasing.CultureInfo]
                    MainDoc = "/docs/reference/concepts/text-casing/#culture-info"
                    CurrentCulture = "/docs/reference/concepts/text-casing/#current-culture"
                    InvariantCulture = "/docs/reference/concepts/text-casing/#invariant-culture"
        [Cortex.Reference.DataTypes]
                MainDoc = "/docs/reference/data-types/"
                [Cortex.Reference.DataTypes.MostCommon]
                    MainDoc = "/docs/reference/data-types/most-common/"
                    Boolean = "/docs/reference/data-types/most-common/#boolean"
                    CultureInfo = "/docs/reference/data-types/most-common/#cultureinfo"
                    IEnumerable = "/docs/reference/data-types/most-common/#ienumerablelttgt"
                    IList = "/docs/reference/data-types/most-common/#ilistlttgt"
                    InvariantCulture = "/docs/reference/data-types/most-common/#invariantculture"
                    Int32 = "/docs/reference/data-types/most-common/#int32"
                    String = "/docs/reference/data-types/most-common/#string"
                    StringComparison = "/docs/reference/data-types/most-common/#stringcomparison"
        [Cortex.Reference.Exceptions]
            MainDoc = "/docs/reference/exceptions/"
            [Cortex.Reference.Exceptions.Common]
                MainDoc = "/docs/reference/exceptions/common/"
                [Cortex.Reference.Exceptions.Common.Property]
                    MainDoc = "/docs/reference/exceptions/common/property/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyNullException]
                        MainDoc = "/docs/reference/exceptions/common/property/propertynullexception/"
                    [Cortex.Reference.Exceptions.Common.Property.PropertyValueOutOfRangeException]
                        MainDoc = "/docs/reference/exceptions/common/property/propertyvalueoutofrangeexception/"
                    [Cortex.Reference.Exceptions.Common.Property.InvalidPropertyValueException]
                        MainDoc = "/docs/reference/exceptions/common/property/invalidpropertyvalueexception/"
                [Cortex.Reference.Exceptions.Lists]
                    MainDoc = "/docs/reference/exceptions/lists/"
                        [Cortex.Reference.Exceptions.Lists.CannotModifyReadOnlyListException]
                            MainDoc = "/docs/reference/exceptions/lists/cannotmodifyreadonlylistexception/"
        [Cortex.Reference.Glossary]
            MainDoc = "/docs/reference/glossary/"
            [Cortex.Reference.Glossary.A-E]
                MainDoc = "/docs/reference/glossary/a-e/"
                CSharp = "/docs/reference/glossary/a-e/#c-1"
                CamelCase = "/docs/reference/glossary/a-e/#camelcase"
            [Cortex.Reference.Glossary.F-J]
                MainDoc = "/docs/reference/glossary/f-j/"
                Flow = "/docs/reference/glossary/f-j/#flow"
                FlowDeveloper = "/docs/reference/glossary/f-j/#flow-developer"
                FunctionalBlock = "/docs/reference/glossary/f-j/#functional-block"
                Initialised = "/docs/reference/glossary/f-j/#initialised"
                Integer = "/docs/reference/glossary/f-j/#integer"
                Int16 = "/docs/reference/glossary/f-j/#int16"
                Int32 = "/docs/reference/glossary/f-j/#int32"
                IDE = "/docs/reference/glossary/f-j/#ide"
            [Cortex.Reference.Glossary.K-O]
                MainDoc = "/docs/reference/glossary/k-o/"
                Literal = "/docs/reference/glossary/k-o/#literal"
                LowerCase = "/docs/reference/glossary/k-o/#lowercase"
                Method = "/docs/reference/glossary/k-o/#method"
                NonNull = "/docs/reference/glossary/k-o/#non-null"
                Null = "/docs/reference/glossary/k-o/#null"
                Operand = "/docs/reference/glossary/k-o/#operand"
                Operator = "/docs/reference/glossary/k-o/#operator"
            [Cortex.Reference.Glossary.P-T]
                MainDoc = "/docs/reference/glossary/p-t/"
                PascalCase = "/docs/reference/glossary/p-t/#pascalcase"
                Platform = "/docs/reference/glossary/p-t/#platform"
                Portal = "/docs/reference/glossary/p-t/#portal"
                Process = "/docs/reference/glossary/p-t/#process"
                ProgrammingLanguage = "/docs/reference/glossary/p-t/#programming-language"
                PropertyBlock = "/docs/reference/glossary/p-t/#block-property"
                PropertyCSharp = "/docs/reference/glossary/p-t/#c-property"
                Request = "/docs/reference/glossary/p-t/#request"
                Task = "/docs/reference/glossary/p-t/#task"
                Text = "/docs/reference/glossary/p-t/#text"
                Trigger = "/docs/reference/glossary/p-t/#trigger"
                Type = "/docs/reference/glossary/p-t/#type"
            [Cortex.Reference.Glossary.U-Z]
                MainDoc = "/docs/reference/glossary/u-z/"
                UpperCase = "/docs/reference/glossary/u-z/#uppercase"
                Variable = "/docs/reference/glossary/u-z/#variable"
            [Cortex.Reference.Glossary.0-9]
                MainDoc = "/docs/reference/glossary/0-9/"
                16Bit = "/docs/reference/glossary/0-9/#16-bit"
                32Bit = "/docs/reference/glossary/0-9/#32-bit"

# External links
[MSDocs]
    [MSDocs.CSharp]
        MainDoc = "https://docs.microsoft.com/en-us/dotnet/csharp/"
        Casting = "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions"
        CastExpression = "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/type-testing-and-cast#cast-expression"
    [MSDocs.DotNet.Api.System]
        ArgumentException = "https://docs.microsoft.com/en-us/dotnet/api/system.argumentexception"
        Boolean = "https://docs.microsoft.com/en-us/dotnet/api/system.boolean"
        Int32 = "https://docs.microsoft.com/en-us/dotnet/api/system.int32"
        OutOfMemoryException = "https://docs.microsoft.com/en-us/dotnet/api/system.outofmemoryexception"
        String = "https://docs.microsoft.com/en-us/dotnet/api/system.string"
        StringComparison = "https://docs.microsoft.com/en-us/dotnet/api/system.stringcomparison"
        StringSplitOptions = "https://docs.microsoft.com/en-us/dotnet/api/system.stringsplitoptions"
        [MSDocs.DotNet.Api.System.Object]
            MainDoc = "https://docs.microsoft.com/en-us/dotnet/api/system.object"
            ToString = "https://docs.microsoft.com/en-us/dotnet/api/system.object.tostring"
        [MSDocs.DotNet.Api.System.Collections.Generic]
            IEnumerable = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ienumerable-1"
            IList = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.ilist-1"
            List = "https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1"
        [MSDocs.DotNet.Api.System.Globalization]
            CultureInfo = "https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo"
[MSGitHub]
    [MSGitHub.MonacoEditor]
        MainDoc = "https://microsoft.github.io/monaco-editor/"
[VisualStudio]
    [VisualStudio.Code]
        MainDoc = "https://code.visualstudio.com/"
[Wikipedia]
    Bit = "https://en.wikipedia.org/wiki/Bit"