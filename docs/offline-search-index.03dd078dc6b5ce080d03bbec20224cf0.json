

























































































































































































































































































































































































































































































































































































































































































[{"body":"","categories":"","description":"Data types used to represent all other data types.","excerpt":"Data types used to represent all other data types.","ref":"/docs/reference/data-types/all/","tags":"","title":"All"},{"body":"","categories":"","description":"Data types used for authenticating with mail servers.","excerpt":"Data types used for authenticating with mail servers.","ref":"/docs/reference/data-types/email/authentication/","tags":"","title":"Authentication"},{"body":"","categories":"","description":"Data types used for authentication when working with Gmail blocks.","excerpt":"Data types used for authentication when working with Gmail blocks.","ref":"/docs/reference/data-types/google-workspace/gmail/authentication/","tags":"","title":"Authentication"},{"body":"","categories":"","description":"Data types used for authenticating with servers.","excerpt":"Data types used for authenticating with servers.","ref":"/docs/reference/data-types/http/authentication/","tags":"","title":"Authentication"},{"body":"","categories":"","description":"Data types used for authenticating with servers.","excerpt":"Data types used for authenticating with servers.","ref":"/docs/reference/data-types/ssh/authentication/","tags":"","title":"Authentication"},{"body":"","categories":"","description":"Data types used for working with collections such as Lists, Dictionaries and Structures.","excerpt":"Data types used for working with collections such as Lists, Dictionaries and Structures.","ref":"/docs/reference/data-types/collections/","tags":"","title":"Collections"},{"body":"","categories":"","description":"This section includes all reference documentation for concepts required to use Cortex Innovation.","excerpt":"This section includes all reference documentation for concepts required to use Cortex Innovation.","ref":"/docs/reference/concepts/","tags":"","title":"Concepts"},{"body":"","categories":"","description":"Data types used for working with conditional logic.","excerpt":"Data types used for working with conditional logic.","ref":"/docs/reference/data-types/conditional-logic/","tags":"","title":"Conditional Logic"},{"body":"","categories":"","description":"Product documentation for the Cortex automation platform, including guides, tutorials and reference documentation.","excerpt":"Product documentation for the Cortex automation platform, including guides, tutorials and reference documentation.","ref":"/docs/","tags":"","title":"Cortex - v2022.9"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the logs generated by Cortex Gateway.","excerpt":"This section includes all reference documentation for the logs generated by Cortex Gateway.","ref":"/docs/reference/logs/cortex-gateway/","tags":"","title":"Cortex Gateway"},{"body":"\rSummary Property Editor Add Variables button Show/Hide Advanced Properties button Help button Execution Viewer Variables Viewer Variable Details Viewer Load Value Button Exceptions Viewer Settings Editor Inputs Property Remarks Known Limitations See Also Related Concepts ","categories":"","description":"Eastern panel for Property Editor, Execution Viewer and Exceptions","excerpt":"Eastern panel for Property Editor, Execution Viewer and Exceptions","ref":"/docs/guides/cortex-studio/east-panel/","tags":"","title":"Cortex Studio - East Panel (TBC)"},{"body":"\rSummary Main Toolbar Undo TODO:\nWhat happens when an undo action is taken What can be undone Keyboard Shortcuts? Redo TODO:\nWhat happens when an redo action is taken What can be redone Keyboard Shortcuts? Start an execution TODO:\nShould this be called ‘starting an execution’ or ‘debugging an execution’ Start execution via API or Studio describe the steps of starting from API (API call is made to Gateway, Authentication and Authorisation is performed, Gateway proxied called to debugger service, etc) describe the steps of starting from Studio (User clicks button, call is made to Gateway, Authentication and Authorisation is performed, Gateway proxied called to debugger service, etc) Image of button and token after button was pressed Executions are private and only displayed to the user that requested them (Check this is true, look at the APIs). link debugging in this page to glossary link ‘what is an execution.md’ debugging/production to glossary Providing input variables (API or Studio) literals and expression Retrieving Output variables (API or Studio) Break On Exception TODO\nEdit and Continue an Execution Workspaces Blocks Breakpoints Executions Executions are represented by tokens on a workspace.\nSet Next Block to Execute Workspace Toolbar Remarks Known Limitations See Also Related Concepts ","categories":"","description":"The Main Display Area for developing and managing a flow","excerpt":"The Main Display Area for developing and managing a flow","ref":"/docs/guides/cortex-studio/main-display-area/","tags":"","title":"Cortex Studio - Main Display Area"},{"body":"\rSummary Breadcrumb trail Quick Navigation Swimlane Management Remarks Known Limitations See Also Related Concepts ","categories":"","description":"How to navigate between and in flows","excerpt":"How to navigate between and in flows","ref":"/docs/guides/cortex-studio/navigation/","tags":"","title":"Cortex Studio - Navigation"},{"body":"\rSummary Remarks Known Limitations See Also Related Concepts ","categories":"","description":"Package Management","excerpt":"Package Management","ref":"/docs/guides/cortex-studio/package-management/","tags":"","title":"Cortex Studio - Package Management (TBC)"},{"body":"\r","categories":"","description":"Block palette information","excerpt":"Block palette information","ref":"/docs/guides/cortex-studio/palettes/","tags":"","title":"Cortex Studio - Palettes"},{"body":"\rSummary Executions Grid Pausing an Execution Stepping an Execution Continuing an Execution Stopping an Execution Variables Grid TODO: Add Screenshot of Grid\nCreating Variables TODO: Screenshots, How to create\nViewing Variables TODO: Screenshots, Searching/Filtering\nModifying Variables TODO: Screenshots, How to modify\nChanging a Variable’s Scope TODO: Screenshots, how to modify scope\nFind the variable in the [Variable Grid][] Double-click the Scope to load a dropdown menu Select the desired workspace If the variable does not appear in the grid, the most likely reason is the variable is not in scope of the workspace currently in focus. To resolve this, either select the appropriate workspace, or change the Scope filter on the [Variable Grid][] to All.\nDeleting Variables TODO: Screenshots, How to delete\nMessages Grid Remarks Known Limitations See Also Related Concepts ","categories":"","description":"Southern panel for Executions, Messages, and Variables","excerpt":"Southern panel for Executions, Messages, and Variables","ref":"/docs/guides/cortex-studio/south-panel/","tags":"","title":"Cortex Studio - South Panel (TBC)"},{"body":"","categories":"","description":"Data types used for working with credentials.","excerpt":"Data types used for working with credentials.","ref":"/docs/reference/data-types/credentials/","tags":"","title":"Credentials"},{"body":"","categories":"","description":"Data types used for working with data sources such as SQL Server.","excerpt":"Data types used for working with data sources such as SQL Server.","ref":"/docs/reference/data-types/data/","tags":"","title":"Data"},{"body":"","categories":"","description":"Data types used for working with dates and time.","excerpt":"Data types used for working with dates and time.","ref":"/docs/reference/data-types/date-and-time/","tags":"","title":"Date \u0026 Time"},{"body":"\rSummary Property Viewer Remarks Known Limitations See Also Related Concepts ","categories":"","description":"","excerpt":"\rSummary Property Viewer Remarks Known Limitations See Also Related Concepts ","ref":"/docs/guides/cortex-studio/debugging/","tags":"","title":"Debugging"},{"body":"","categories":"","description":"Data types used for working with emails and connecting to mail servers.","excerpt":"Data types used for working with emails and connecting to mail servers.","ref":"/docs/reference/data-types/email/","tags":"","title":"Email"},{"body":"EmailCredentials (Cortex.DataTypes.Email.Authentication.EmailCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a mail server.","excerpt":"Used to represent details required to authenticate with a mail server.","ref":"/docs/reference/data-types/email/authentication/emailcredentials/","tags":"","title":"EmailCredentials"},{"body":"EmailUserCredentials (Cortex.DataTypes.Email.Authentication.EmailUserCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a mail server.","excerpt":"Used to represent details required to authenticate with a mail server.","ref":"/docs/reference/data-types/email/authentication/emailusercredentials/","tags":"","title":"EmailUserCredentials"},{"body":"\r","categories":"","description":"This section includes all reference documentation for errors generated during validation.","excerpt":"This section includes all reference documentation for errors generated during validation.","ref":"/docs/reference/messages/validation/errors/","tags":"","title":"Errors"},{"body":"","categories":"","description":"Data types used for working with exceptions.","excerpt":"Data types used for working with exceptions.","ref":"/docs/reference/data-types/exceptions/","tags":"","title":"Exceptions"},{"body":"","categories":"","description":"Data types used for working with files and folders.","excerpt":"Data types used for working with files and folders.","ref":"/docs/reference/data-types/files-and-folders/","tags":"","title":"Files \u0026 Folders"},{"body":"","categories":"","description":"Information regarding what a flow is, how to call other flows and handling exceptions within a flow.","excerpt":"Information regarding what a flow is, how to call other flows and handling exceptions within a flow.","ref":"/docs/reference/concepts/fundamentals/flows/","tags":"","title":"Flows"},{"body":"","categories":"","description":"Data types used for working with Flows.","excerpt":"Data types used for working with Flows.","ref":"/docs/reference/data-types/flows/","tags":"","title":"Flows"},{"body":"","categories":"","description":"Fundamental concepts when working with Cortex Innovation.","excerpt":"Fundamental concepts when working with Cortex Innovation.","ref":"/docs/reference/concepts/fundamentals/","tags":"","title":"Fundamentals"},{"body":"","categories":"","description":"Data types used for working with Gmail blocks.","excerpt":"Data types used for working with Gmail blocks.","ref":"/docs/reference/data-types/google-workspace/gmail/","tags":"","title":"Gmail"},{"body":"GmailOAuthCertificateCredentials (Cortex.DataTypes.GoogleWorkspace.Gmail.Authentication.OAuth.GmailOAuthCertificateCredentials)\nSummary Properties CertificatePath CertificatePassword FromAddress ClientId ","categories":"","description":"The data type representing configuration for authentication via OAuth when establishing a connection with a Gmail server.","excerpt":"The data type representing configuration for authentication via OAuth when establishing a connection with a Gmail server.","ref":"/docs/reference/data-types/google-workspace/gmail/authentication/oauth/gmailoauthcertificatecredentials/","tags":"","title":"GmailOAuthCertificateCredentials"},{"body":"","categories":"","description":"Data types used for working with Google Workspace blocks.","excerpt":"Data types used for working with Google Workspace blocks.","ref":"/docs/reference/data-types/google-workspace/","tags":"","title":"Google Workspace"},{"body":"","categories":"","description":"Data types used for working with HTTP.","excerpt":"Data types used for working with HTTP.","ref":"/docs/reference/data-types/http/","tags":"","title":"Http"},{"body":"HttpCredentials (Cortex.DataTypes.Http.Authentication.HttpCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a server.","excerpt":"Used to represent details required to authenticate with a server.","ref":"/docs/reference/data-types/http/authentication/httpcredentials/","tags":"","title":"HttpCredentials"},{"body":"HttpUserCredentials (Cortex.DataTypes.Http.Authentication.HttpUserCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a server.","excerpt":"Used to represent details required to authenticate with a server.","ref":"/docs/reference/data-types/http/authentication/httpusercredentials/","tags":"","title":"HttpUserCredentials"},{"body":"IEmailCredentials (Cortex.DataTypes.Email.Authentication.IEmailCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a mail server.","excerpt":"Used to represent details required to authenticate with a mail server.","ref":"/docs/reference/data-types/email/authentication/iemailcredentials/","tags":"","title":"IEmailCredentials"},{"body":"IHttpCredentials (Cortex.DataTypes.Http.Authentication.IHttpCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a server.","excerpt":"Used to represent details required to authenticate with a server.","ref":"/docs/reference/data-types/http/authentication/ihttpcredentials/","tags":"","title":"IHttpCredentials"},{"body":"ISshCredentials (Cortex.DataTypes.Ssh.Authentication.ISshCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a server.","excerpt":"Used to represent details required to authenticate with a server.","ref":"/docs/reference/data-types/ssh/authentication/isshcredentials/","tags":"","title":"ISshCredentials"},{"body":"","categories":"","description":"Data types used for working with Json.","excerpt":"Data types used for working with Json.","ref":"/docs/reference/data-types/json/","tags":"","title":"Json"},{"body":"Literal Editor Summary TODO\nAvailable Types TODO:\nThe literal editor will have one or more available types, these types will be either Complex or Basic Types The types available to the literal editor are restricted by the block property. It is possible to switch the type of the literal editor to any available type. Basic Types TODO:\nSingle Editor TODO: Image of basic literal editor\nComplex Types TODO:\nNested editors within a complex type List and Dictionary Editors TODO: Image of complex literal editor\nSwitching Type TODO:\nWhat are DataType and CurrentType? An editor can be switched using the type selector (accessed by clicking on the property name) TODO: Image of type selector\nRemarks Known Limitations TODO:\nThere is no literal support for Collection Types or types that have constructors with no parameters. See Also Related Concepts TODO\nRelated Blocks TODO\nRelated Data Types TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding using the Literal Editor.","excerpt":"Information regarding using the Literal Editor.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/literal-editor/","tags":"","title":"Literal Editor"},{"body":"","categories":"","description":"Data types used for working with logs.","excerpt":"Data types used for working with logs.","ref":"/docs/reference/data-types/logs/","tags":"","title":"Logs"},{"body":"","categories":"","description":"Data types used for working with loops.","excerpt":"Data types used for working with loops.","ref":"/docs/reference/data-types/loops/","tags":"","title":"Loops"},{"body":"","categories":"","description":"Data types used for working with numbers.","excerpt":"Data types used for working with numbers.","ref":"/docs/reference/data-types/numbers/","tags":"","title":"Numbers"},{"body":"","categories":"","description":"Data types used for authentication via OAuth when working with Gmail blocks.","excerpt":"Data types used for authentication via OAuth when working with Gmail blocks.","ref":"/docs/reference/data-types/google-workspace/gmail/authentication/oauth/","tags":"","title":"OAuth"},{"body":"","categories":"","description":"Data types used for working with sessions.","excerpt":"Data types used for working with sessions.","ref":"/docs/reference/data-types/session-details/","tags":"","title":"Session Details"},{"body":"","categories":"","description":"Data types used for working with SSH.","excerpt":"Data types used for working with SSH.","ref":"/docs/reference/data-types/ssh/","tags":"","title":"Ssh"},{"body":"SshCredentials (Cortex.DataTypes.Ssh.Authentication.SshCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a server.","excerpt":"Used to represent details required to authenticate with a server.","ref":"/docs/reference/data-types/ssh/authentication/sshcredentials/","tags":"","title":"SshCredentials"},{"body":"SshUserCredentials (Cortex.DataTypes.Ssh.Authentication.SshUserCredentials)\n","categories":"","description":"Used to represent details required to authenticate with a server.","excerpt":"Used to represent details required to authenticate with a server.","ref":"/docs/reference/data-types/ssh/authentication/sshusercredentials/","tags":"","title":"SshUserCredentials"},{"body":"","categories":"","description":"Data types used for working with text.","excerpt":"Data types used for working with text.","ref":"/docs/reference/data-types/text/","tags":"","title":"Text"},{"body":"What are Files and Folders? Summary TODO:\nhttps://docs.microsoft.com/en-us/dotnet/standard/io/ https://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats https://docs.microsoft.com/en-us/dotnet/standard/io/handling-io-errors https://docs.microsoft.com/en-us/dotnet/standard/io/common-i-o-tasks list of common extensions list of common environment variables (%PROGRAMDATA% check this works) Best Practices (how to work with files, where to save them when working with files and folders in a flow) Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what files and folders are.","excerpt":"Information regarding what files and folders are.","ref":"/docs/reference/concepts/working-with/files-and-folders/what-are-files-and-folders/","tags":"","title":"What are Files and Folders?"},{"body":"What is a Block Property? Summary Blocks are configured using Block Properties. Properties pass data to the block which is then used to perform an action, or branch based on a condition within a flow.\nAnatomy of a Block Property There are three types of block property, each type can be configured using one of its supported editors:\nInput Properties Output Properties InputOutput Properties Input Properties Input properties are used to provide values to a block. These properties are used in the block’s execution (e.g. a block to send emails would have input properties for specifying things like the sender, recipients, summary, body, attachments etc.).\nSupported Editors Input properties can be configured using the following editors:\nLiteral Editor Variable Editor Expression Editor The icons used for Input properties are dark blue to distinguish them from Output Properties or InputOutput Properties.\nOutput Properties Output properties are used to save values from a block. These properties will saved to a variable during the block’s execution.\nValues from Output properties can be discarded, this means they will not be saved to any variable.\nSupported Editors Output properties can be configured using the following editors:\nVariable Editor The icon used for Output properties are light blue to distinguish them from Input Properties.\nDiscarding Outputs Output values can be discarded, instead of saving them to a variable.\nCommon reasons for discarding include:\nDiscarding the exception output from Handle Exception blocks Discarding unwanted output values from blocks such as the Execute SSH Command block that have multiple Output properties To discard an output value, the Output property should use the built-in ($)_ variable.\nInputOutput Properties InputOutput properties are used to provide values to a block. These properties are used, updated and saved back to a variable during the block’s execution.\nSupported Editors InputOutput properties can be configured using the following editors:\nVariable Editor The icons used for InputOutput properties are light blue to distinguish them from Input Properties.\nRemarks Known Limitations The Literal Editor is not Supported for all Input Properties Currently, not all Data Types support the use of the Literal Editor, such as:\nCollections Data Types without a constructor that contains parameters Information regarding which editors are supported for a Data Type can be found in the “Remarks” section under “Property Editor Support” in the relevant documentation for that Data Type.\nIn future this limitation may be removed.\nSee Also Related Concepts Flows Blocks Property Editors Variables Data Types Executions Exceptions Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding the anatomy of block properties, types of property and their appearance, and configuring properties using the available property editors.","excerpt":"Information regarding the anatomy of block properties, types of property and their appearance, and configuring properties using the available property editors.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/what-is-a-block-property/","tags":"","title":"What is a Block Property?"},{"body":"What is a Block? Summary A block is used to perform an action, or branch based on a condition within a flow.\nBlocks are organised into palettes based on the type of object they operate on or the system they interact with (e.g. Blocks that operate on Lists can be found in the Lists palette). Blocks can be dragged from a palette on to a workspace, and connected to one another to create the logic of the flow.\nAnatomy of a Block There are five types of block, each type has its own image, connection ports and properties:\nFlow Control Blocks Action Blocks Decision Blocks Exception Handling Blocks Workspace Blocks Flow Control Blocks Flow Control blocks are used to start or end a flow or workspace.\nBlock Image Flow Control blocks are square shaped Flow Control blocks are smaller than Action Blocks Flow Control blocks have a pale blue background Connection Ports Flow Control Blocks that start a flow or workspace have the following connection ports:\nOne output port located on the bottom of the block An execution moves to the input port of the block connected to the output port.\nFlow Control Blocks that end a flow or workspace have the following connection ports:\nOne input port located on the top of the block An execution passes through the input port, and ends the flow or workspace depending on the logic of the block.\nAction Blocks Action blocks are used to perform an action within a flow. They can operate on an object or interact with a system.\nExceptions thrown by Action blocks can be handled by connecting a Handle Block Exception block to the red output port.\nBlock Image The icon of the Action block shows what object or system it interacts with The icon in the bottom right of the Action block provides further information into what type of action or interaction it will take Action blocks are square shaped Action blocks have a pale blue background Connection Ports Action blocks have the following connection ports:\nOne input port located on the top of the block One output port located on the bottom of the block One red exception output port located on the right of the block An execution passes through the input port, executes the block, and if no exception occurs, moves to the input port of the block connected to the output port; if an exception occurs the execution moves to the exception input port of the exception handling block connected to the exception output port.\nDecision Blocks Decision blocks are used to branch within a flow based on a condition.\nBlock Image The icon of the Decision block shows what object or system it interacts with Decision blocks are diamond shaped Decision blocks have a pale blue background Connection Ports Decision blocks have the following connection ports:\nOne input port located on the top of the block One output port located on the right the block One output port located on the bottom of the block An execution passes through the input port, executes the block, and based on the result of the execution moves to the input port of the block connected to the correct output port.\nException Handling Blocks Exception Handling blocks are used to handle exceptions thrown within a flow.\nExceptions can be handled at different levels within a flow; at the block level, the workspace level, and the flow level. For more information see Handling Exceptions.\nBlock Image Exception Handling blocks have a pink background Connection Ports Handle Block Exception blocks have the following connection ports:\nOne red exception input port located on the left of the block One red exception output port located on the right of the block if they can be chained One output port located on the bottom of the block An execution passes through the exception input port, executes the block, and if the exception can be handled, moves to the input port of the block connected to the output port; if an exception cannot be handled the execution moves to the exception input port of the exception handling block connected to the exception output port, for more information see Chaining Block Exception Handling Blocks.\nHandle Workspace Exception blocks have the following connection ports:\nOne output port located on the bottom of the block Handle Flow Exception blocks have no connection ports.\nWorkspace Blocks Workspace blocks are used to group logic and actions within a flow in order to reduce the complexity and make the flow easier to maintain. For more information see Workspaces.\nUnhandled exceptions thrown within a workspace can be handled by connecting a Handle Block Exception block to the red output port of the Workspace block.\nBlock Image Workspace blocks are rectangle shaped Workspace blocks are larger than Action Blocks Workspace blocks have a pale blue background Connection Ports Workspace Blocks have the following connection ports:\nOne input port located on the top of the block One output port located on the bottom of the block One red exception output port located on the right of the block An execution passes through the input port and executes the workspace block, and if no unhandled exception occurs, moves to the input port of the block connected to the output port; if an unhandled exception occurs the execution moves to the exception input port of the exception handling block connected to the exception output port.\nBlock Properties Blocks are configured using Block Properties. Properties pass data to the block which is then used to perform an action, or branch based on a condition within a flow.\nThere are three types of block properties:\nInput Output InputOutput Most blocks share Common Properties such as a description for the block. Some blocks have Advanced Properties that do not normally need to be configured but allow for more advanced scenarios.\nFor further information, see Block Properties.\nBlock Connections Block connections help determine the order blocks will be executed in a flow, an execution moves through the flow sequentially\nAn execution moves from one connected block to another, depending on the logic of the block. Blocks can be connected to each other through the use of connection ports.\nThere are four types of connections ports\nInput Ports - act as the entry point of a block, output ports from one or more other blocks can be connected to an input port Output Ports - act as the exit point of a block, output ports can only be connected to an input port of one other block Exception Input Ports - act as the entry point of an exception handling block, exception output ports from one or more other blocks can be connected to an exception input port Exception Output Ports - act as the exit point of a block when an exception is thrown, exception output ports can only be connected to an exception input port of one exception handling block Exceptions within a Block Exceptions thrown within the execution of a block can be handled by connecting a Handle Block Exception block to the red output port. If there is no Handle Block Exception block that can handle the exception then it will be passed to the workspace level to be handled.\nFor further information, see Handling Exceptions within a Block.\nRemarks Known Limitations None\nSee Also Related Concepts Flows Workspaces Block Properties Executions Exceptions Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding the anatomy of a block, types of blocks and their appearance, connecting blocks, and block properties.","excerpt":"Information regarding the anatomy of a block, types of blocks and their appearance, connecting blocks, and block properties.","ref":"/docs/reference/concepts/fundamentals/blocks/what-is-a-block/","tags":"","title":"What is a Block?"},{"body":"What is a Collection? Summary TODO\nTypes of Collections Dictionaries TODO:\nTalk about typed dictionaries (TKey, TItem) Talk about heterogenous vs homogenous dictionaries (fix single data type vs multiple data types links in all dictionary blocks) Talk about keys, uniqueness and equality (link to Keys page) Talk about complex keys (link to Keys page) Items can be accessed as indexes Link to Data Type Creating a Dictionary Accessing Items Keys Structures TODO:\nStructures are IDictionary\u003cstring, object\u003e underlying (how does this interact with blocks?) Talk about {} and dynamic vs object Talk about keys, uniqueness and equality (link to Keys page) Items can be accessed as indexes or properties Link to Data Type Creating a Structure Accessing Items Properties Keys Lists TODO:\nTalk about typed dictionaries (TItem) Talk about [] and dynamic vs object Talk about typed lists Talk about heterogenous vs homogenous lists (fix single data type vs multiple data types links in all list blocks) Items can be accessed as indexes Link to Data Type Creating a List Accessing Items Indexes Arrays vs Lists Differences When To Use Arrays When To Use Lists TODO: Some info on when to use array vs list - https://www.educba.com/c-sharp-list-vs-array/ Remarks Known Limitations Complex Keys do not show sho correctly in the Variable Details Viewer Currently, if a Dictionary is shown in the Variable Details Viewer and contains Complex Data types as its keys, the data within the variable will not be displayed correctly.\nIn the future this limitation may be removed.\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what a collection is, and the different types of collections.","excerpt":"Information regarding what a collection is, and the different types of collections.","ref":"/docs/reference/concepts/working-with/collections/what-is-a-collection/","tags":"","title":"What is a Collection?"},{"body":"What is a Culture? Summary TODO\nTypes of Culture TODO:\nLink to Culture Pages (Invariant/Current/Specific/Custom) For a list of predefined cultures that can be returned on Windows systems see https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c Remarks Known Limitations TODO\nSee Also Related Concepts TODO: Also need sections in working with text (casing, comparisons/equality, O/S settings), dates and time (formats, O/S settings), numbers (formats, O/S settings) etc specifically for how culture affects things - we can then cross link from here\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what a culture is.","excerpt":"Information regarding what a culture is.","ref":"/docs/reference/concepts/working-with/culture/what-is-a-culture/","tags":"","title":"What is a Culture?"},{"body":"What is a Data Source? Summary TODO\nSupported Data Sources TODO: See Supported Data Sources\nManaging Connections to a Data Source TODO:\nConnections are managed by the block See Working with Connections (connection life cycle, using a variable for connections over literal/expression) Remarks Known Limitations Limited Set of Supported Data Sources Currently, there are a limited set of Supported Data Sources.\nIn the future this limitation may be removed.\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what a data source is.","excerpt":"Information regarding what a data source is.","ref":"/docs/reference/concepts/working-with/data-sources/what-is-a-data-source/","tags":"","title":"What is a Data Source?"},{"body":"What is a Data Type? Summary TODO:\nOverview of a data type Difference between Value (value types cannot be null, and have a default value that is not null e.g. int is 0) and Reference Data Types (reference types can be null and have a null default value) Difference between Basic and Complex Data Types Value Types TODO:\nExplain what a value type is, and how it can be used Check Set Variable block and how Value Types work within the block Setting a new variable to an already existing value type will cause them to be separate instances of the value The Copy Object block can be used to make a copy of a value type (value types always have a different reference) Reference Types TODO:\nExplain what a reference type is, and how it can be used This is referenced by the Set Variable block Set Variable block is used to set ($)List[0] When adding ($)Reference to ($)List, the actual reference is added (not a copy) Setting value of ($)List1 to ($)List2 will cause them to have the same reference. Changes to ($)List1 are reflected in ($)List2 The Copy Object block can be used to make a copy of a type with a different reference Basic Data Types TODO:\nExplain what a basic data type is Table of Basic Data Types Columns - Data Type Name, Value/Reference Type Strings are a basic data type but are also a reference type. Complex Data Types TODO:\nExplain what a complex data type is and what makes a data type complex Includes Complex and Collections (Lists, Dictionaries, structures, etc) Object Dynamic Object vs Dynamic Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types All Data Types Related Blocks All Blocks External Documentation TODO:\nValue Types Reference Types Builtin Types Default Values ","categories":"","description":"Information regarding what a data type is, basic and complex data types and their differences.","excerpt":"Information regarding what a data type is, basic and complex data types and their differences.","ref":"/docs/reference/concepts/fundamentals/data-types/what-is-a-data-type/","tags":"","title":"What is a Data Type?"},{"body":"What is a Flow? Summary A flow is an object in Cortex Studio that contains the logic and actions (in the form of blocks and workspaces) that is able to be executed on a Cortex Innovation platform.\nAnatomy of a Flow Example Flow Start Flow block Identifies where the flow execution will start Automatically created when the flow is created Cannot be deleted See Start Flow block Action blocks Performs a specific action Icon on block indicates the nature of the action See Blocks Decision block Causes the flow execution to branch, dependent on a condition Icon on block indicates type of condition causing branching See Decision Blocks Workspace blocks Contains grouped flow logic The turndown on the top-right of the icon indicates it contains a workspace, which can be opened by double-clicking the icon See Workspace block End Flow block Ends the flow execution Automatically created when the flow is created See End Flow block Handle Flow Exception block Handles flow level exceptions, thrown during the flow execution Automatically created when the flow is created The turndown on the top-right of the icon indicates it contains a workspace, which can be opened by double-clicking the icon Cannot be deleted See Handle Flow Exception block Flow Variable Store This is deprecated in favour of the Variables Grid The Variables Grid can be opened by double-clicking the icon, the scope will be set to Defined (Selected Workspace) Cannot be deleted Workspace The Top-Level Workspace within the flow Canvas on which blocks are placed and connected to create the flow logic See Workspace Grouping Logic within a Flow All the logic of a flow can exist on the Top-Level Workspace, however, this can quickly become difficult to maintain and understand as the numbers of blocks increase. Blocks can be grouped into workspaces in order to reduce the complexity and make the flow easier to maintain.\nA Workspace block can opened by double clicking it, showing its workspace canvas and the logic inside; this could include blocks for executing specific functions or other workspaces to help separate the logic of the flow further.\nFor further information about workspaces, see Workspaces.\nStarting a Flow Execution A flow execution may be started by:\nDebugging a flow in Cortex Studio Triggering it by making an HTTP request from an external source (e.g. a web application or web hooks) Triggering it using the Run Flow block Triggering it using predefined events (future) (e.g. on receipt of an email) Scheduling it to execute at predetermined times Exceptions within a Flow Flows support hierarchical exception handling at any level within the flow.\nExceptions can be handled:\nAt the block level; for further information, see Handling Exceptions within a Block At the workspace level; for further information, see Handling Exceptions within a Workspace At the flow level; for further information, see Handling Exceptions within a Flow Remarks Known Limitations Cannot have a Handle Workspace Exception block on the flow’s Top-Level Workspace Currently, it is not possible to have a Handle Workspace Exception block on the Top-Level Workspace of a flow. In future this limitation may be removed.\nSee Also Related Concepts Workspaces Blocks Executions Exceptions Related Blocks Start Flow End Flow Run Flow Handle Flow Exception Handle Workspace Exception Workspace External Documentation None\n","categories":"","description":"Information regarding the anatomy of a flow, starting flows, grouping logic within a flow, and handling exceptions within a flow.","excerpt":"Information regarding the anatomy of a flow, starting flows, grouping logic within a flow, and handling exceptions within a flow.","ref":"/docs/reference/concepts/fundamentals/flows/what-is-a-flow/","tags":"","title":"What is a Flow?"},{"body":"What is a Loop? Summary TODO:\nIntroduce concept of loop Why are they used Types of Loops (pros and cons) For loop Can move forwards or backwards Can move by single or multiple increments Can modify a collection while iterating over it Have to manually manage the bounds of the loop Index can be adjusted to break a loop Decision blocks can be used to break a loop For each Cannot modify the collection during a for each loop (use a for loop if the collection needs to be modified during the loop) Decision blocks can be used to break a loop While No blocks, can be done using decision blocks looping back into the flow (order of decision block determines while or do while loop) Condition can be adjusted to break a loop early Decision blocks can be used to break a loop early Do while No blocks, can be done using decision blocks looping back into the flow (order of decision block determines while or do while loop) Condition can be adjusted to break a loop early Decision blocks can be used to break a loop early Nested loops Why they are used How nested loops affect performance Infinite loops Why they are bad, how to avoid for loop block protects against infinite loops for each loop block cannot have infinite loops as the collection cannot be modified while/ do while does not have any protection against infinite loops (must be managed within the flow) Links:\nhttps://kodify.net/csharp/loop/overview-loops/#:~:text=%20Overview%3A%20the%20four%20different%20loops%20of%20the,code%20for%20as%20long%20as%20some...%20More%20 Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what a loop is.","excerpt":"Information regarding what a loop is.","ref":"/docs/reference/concepts/working-with/loops/what-is-a-loop/","tags":"","title":"What is a Loop?"},{"body":"What is a Message? Summary When Starting an Execution in Development using the Start an execution button, the flow will be validated; if there are issues with the flow, messages explaining the issues will be displayed in the Messages Grid.\nSome examples of issues that can be raised are:\nBlocks using undefined variables Blocks using variables with mismatched data types Input variables that have not been initialised For a complete list see Validation messages.\nAnatomy of a Message Related messages are grouped by the component affected (e.g. A block, or the Settings Editor)\nEach message row contains the following:\nProperty Notes Location Path to the specific part of the component that has caused the issue Summary Short description of the issue Details Further information about the issue. This may also contain help for resolving the issue Navigating to the Location of an issue from a message Double clicking on a message within the Messages Grid will navigate the browser to the affected location.\nRemarks Known Limitations It is not possible to navigate to a nested literal property from a message It is not possible to navigate to a nested literal property from a message, clicking the message will cause the browser to navigate to the last property of the top-level literal editor that contains the issue.\nIn future this limitation may be removed.\nIt is not possible to navigate to the Settings Editor from a message It is not possible to navigate to the Settings Editor from a message, clicking the message will do nothing.\nIn future this limitation may be removed.\nSee Also Related Concepts Flows Blocks Variables Data Types Executions Related Blocks All Blocks Related Data Types All Data Types External Documentation None\n","categories":"","description":"Information regarding the anatomy of a message, when a message will occur, and using messages to navigate to issues within a flow.","excerpt":"Information regarding the anatomy of a message, when a message will occur, and using messages to navigate to issues within a flow.","ref":"/docs/reference/concepts/fundamentals/messages/what-is-a-message/","tags":"","title":"What is a Message?"},{"body":"What is a Number? Summary TODO:\nWhat is a number Types of numbers Integer Types int, long, etc unsigned numbers suffixes Floating Point Types float, double, decimal suffixes Operators and Comparisons Order of operation Integer division will result in an integer, not a Floating Point number (e.g. 3 / 2 results in 1) Underflow/Overflow conditions Converting numbers to text using blocks ToString() https://docs.microsoft.com/en-us/dotnet/standard/base-types/parsing-numeric Converting Integer Types to Floating Types (and reverse) Built in numeric conversion - https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/numeric-conversions https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/conversions#1023-implicit-numeric-conversions Data loss when converting from Floating Types to Integer Types Numeric Formatting Format providers Invariant Culture Current Culture Format Templates Standard Format Templates - https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings Custom Format Templates - https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings Format specifiers Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what a number is.","excerpt":"Information regarding what a number is.","ref":"/docs/reference/concepts/working-with/numbers/what-is-a-number/","tags":"","title":"What is a Number?"},{"body":"What is a Variable? Summary A variable is a named container for storing data that can then be used in Block Properties.\nData in a variable can be read, updated, or removed by different blocks. Examples of these include:\nAdd an item to a List Remove an item from a List Get an item from a Dictionary Set an item in a Dictionary Anatomy of a Variable Variables have the following properties that can be configured in the Variables Grid:\nVariable Property Notes Description Description of the variable’s purpose Name Name of the variable Type Will default to variable. Read-only, reserved for future use Set Default Value? Sets the variable to be initialised to the Default Value if set to true, otherwise Default Value is ignored Default Value The value to initialise the variable to if Set Default Value? is set to true. See Variables with a Default Value Is Input Variable? Marks the variable as an input if set to true, requiring data to be passed into the variable when the flow is triggered Is Output Variable? Marks the variable as an output if set to true. All output variables will be returned as items in a Structure. See Output Variables Structure Variables with a Default Value Variables can be initialised with a default value. The Default Value can be set to any valid expression or literal, but cannot include any variables.\nFor example, the following expression is valid as it does not use any variables:\n\"Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=myPassword;\" The following expression is invalid as it uses the ($)ServerName variable:\n$@\"Server={($)ServerName};Database=myDataBase;User Id=myUsername;Password=myPassword;\" Output Variables Structure When any variables have their Is Output Variable? property set to true, they will be returned to the caller as items in a Structure when the flow ends.\nIn the following example ($)TotalUnreadEmails and ($)FoldersWithUnreadEmails are both set as outputs and the following Structure is returned:\n{ \"TotalUnreadEmails\":12, \"FoldersWithUnreadEmails\": { \"Inbox\": 8, \"Junk\": 4 } } Variables at Design Time The Variables Grid is used to create, view, modify, and delete variables. It is opened by clicking Variables tab at the bottom of Cortex Studio. For more information see Variables Grid.\nVariables can also be created through the use of the Variable Editor. For more information see Creating Variables.\nVariables at Runtime Initialising Variables Variables must be initialised with data before they can be used in a block.\nIf an Input or InputOutput property uses a variable that has not been initialised, a Message will be returned stating Variable is not initialised, and the name of the variable will be included within the details of the message. The Message will be:\nDisplayed in the Messages Grid when debugging a flow in Cortex Studio Returned as an exception to the caller when a flow is triggered via the Cortex API Gateway Service Variables can be initialised in the following ways:\nUsing a Flow Input Variable Using the Default Value Using a Block Output Property Flow Input Variable If a variable has its Is Input Variable? property set to true, and no Default Value has been set, then a value must be provided for the variable when the flow is triggered. When the execution starts, the variable is initialised with the value provided.\nDefault Value If a variable has its Set Default Value? property set to true, it will be initialised with the Default Value provided when the flow is executed.\nIf a variable has its Is Input Variable? and Set Default Value? properties set to true, then it will be initialised with the value provided when the flow is triggered. If no value is provided then it will be initialised with the Default Value.\nBlock Output Property Output Properties are used to save values to a variable during the execution of a block, regardless of whether the variable is already initialised or not. The act of saving to an uninitialised variable will initialise it.\nViewing Variables When debugging a flow in Cortex Studio, selecting an execution will display all initialised variables that are in scope in the Variables Viewer.\nViewing Basic Data Types When a variable contains a basic data type (e.g. String, Integer, etc), the value will be displayed directly in the Variables Viewer. Strings will be surrounded by double quotes (e.g. \"MyString\").\nViewing Complex Data Types When a variable contains a complex data type that is not a collection data type (e.g. Command or FlowException), the value will be displayed as Instance of Command or Instance of FlowException respectively in the Variables Viewer.\nWhen a variable contains a collection data type (e.g. Dictionary, List, or Structure), the Variables Viewer will specify the data type and how many items the collection contains (e.g. Dictionary\u003cstring, object\u003e with 2 item(s)).\nTo see the data in the variable, select the variable in the Variables Viewer and the data will be presented in the Variable Details Viewer.\nThe following examples show the Variable Details Viewer when showing a:\nDictionary\u003cstring, dynamic\u003e variable Command variable FlowException variable Updating Variables InputOutput and Output properties are used to save values and update variables during the execution of a block.\nDeleting Variables When an execution exits a workspace, any variables defined within that workspace’s scope will be deleted from the execution. This means the variables:\nAre no longer accessible to the execution Are no longer presented in the Variables Viewer when the flow is being debugged If the execution re-enters the workspace’s scope, any variables will be re-initialised.\nVariable Typing Variables do not have their own data type; they are named containers for storing data of any data type.\nWhen a variable is used in a Block Property it is checked to ensure the data type it contains is supported by the property. For all data types apart from dynamic any variables containing unsupported data types will be displayed in the Messages Grid, preventing the execution from starting; for variables containing dynamic data types checking will be performed during the block execution, throwing an exception if the data type is unsupported.\nSometimes an unsupported data type can automatically be converted to a supported type through the use of implicit casting; if this is possible the block property will handle this without any input required by the developer. However, if this is not possible an unsupported data type must be converted to a supported type by the developer; this can be done by:\nExplicitly casting the unsupported Data Type Converting the unsupported Data Type through the use of methods and properties (e.g. Convert.ToInt32(($)String) or Int32.Parse(($)String)) For more information on specific data type conversions, see the relevant documentation for that Data Type.\nRemarks Known Limitations Default Value can not use Variables Currently, default values cannot use variables. However, this may change in the future.\nFor examples of valid and invalid default values see Variables with a Default Value.\nSee Also Related Concepts Flows Workspaces Blocks Block Properties Data Types Executions Exceptions Messages Related Data Types All Data Types Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding the anatomy of a variable, using variables at design and runtime, and variable typing.","excerpt":"Information regarding the anatomy of a variable, using variables at design and runtime, and variable typing.","ref":"/docs/reference/concepts/fundamentals/variables/what-is-a-variable/","tags":"","title":"What is a Variable?"},{"body":"What is a Workspace? Summary A workspace is used to group logic and actions within a flow, in order to reduce the complexity and make the flow easier to maintain.\nAnatomy of a Workspace Top-Level Workspace A flow can only contain one Top-Level Workspace, which acts as the entry point for the flow execution.\nExample Top-Level Workspace Start Flow block Identifies where the flow execution will start Automatically created when the flow is created Cannot be deleted See Start Flow block Action blocks Performs a specific action Icon on block indicates the nature of the action See Blocks Decision block Causes the flow execution to branch, dependent on a condition Icon on block indicates type of condition causing branching See Decision Blocks Workspace blocks Contains grouped flow logic The turndown on the top-right of the icon indicates it contains a workspace, which can be opened by double-clicking the icon See Workspace block End Flow block Ends the flow execution Automatically created when the flow is created See End Flow block Handle Flow Exception block Handles flow level exceptions, thrown during the flow execution Automatically created when the flow is created The turndown on the top-right of the icon indicates it contains a workspace, which can be opened by double-clicking the icon Cannot be deleted See Handle Flow Exception block Flow Variable Store This is deprecated in favour of the Variables Grid The Variables Grid can be opened by double-clicking the icon, the scope will be set to Defined (Selected Workspace) Cannot be deleted Workspace The Top-Level Workspace within the flow Canvas on which blocks are placed and connected to create the flow logic Note\rThe flow should be ended with an End Flow block, but it can also be ended using an End Workspace block on the Top-Level Workspace.\rOther Workspaces A flow can contain any number of other workspaces that are not the Top-Level Workspace, these act as a means to grouping logic and actions to reduce the complexity and make the flow easier to maintain.\nExample Workspace Start Workspace block Identifies where the flow execution will start when the workspace is executed Automatically created when the workspace is created Cannot be deleted See Start Workspace block Action blocks Performs a specific action Icon on block indicates the nature of the action See Blocks End Workspace block Ends the execution of the workspace Automatically created when the workspace is created See End Workspace block End Flow block Ends the flow execution See End Flow block Handle Workspace Exception block Handles workspace level exceptions, thrown during the flow execution See Handle Workspace Exception block Workspace Variable Store This is deprecated in favour of the Variables Grid The Variables Grid can be opened by double-clicking the icon, the scope will be set to Defined (Selected Workspace) Cannot be deleted Workspace A nested workspace within the flow Canvas on which blocks are placed and connected to create the workspace logic Nested Workspaces All the logic of a flow can exist on the Top-Level Workspace, however, this can quickly become difficult to maintain and understand as the numbers of blocks increase. Blocks can be grouped into workspaces in order to reduce the complexity and make the flow easier to maintain.\nA Workspace block can opened by double clicking it, showing its workspace canvas and the logic inside; this could include blocks for executing specific functions or other workspaces to help separate the logic of the flow further.\nWhen an End Workspace block is executed, the flow execution returns to the parent workspace. However, when an End Flow block is executed the flow execution will end.\nA nested workspace has access to any variables defined within its scope, or any direct ancestors scope.\nExceptions within a Workspace Workspaces support hierarchical exception handling at any level within the workspace.\nExceptions can be handled:\nAt the block level; for further information, see Handling Exceptions within a Block At the workspace level; for further information, see Handling Exceptions within a Workspace A Top-Level Workspace can also handle exceptions at the flow level; for further information, see Handling Exceptions within a Flow\nRemarks Known Limitations Cannot have a Handle Workspace Exception block on the flow’s Top-Level Workspace Currently, it is not possible to have a Handle Workspace Exception block on the Top-Level Workspace of a flow. In future this limitation may be removed.\nSee Also Related Concepts Flows Blocks Executions Exceptions Related Blocks Start Flow End Flow Handle Flow Exception Start Workspace End Workspace Handle Workspace Exception Workspace External Documentation None\n","categories":"","description":"Information regarding the anatomy of a workspace, nested workspaces, variable scope, and handling exceptions within a workspace.","excerpt":"Information regarding the anatomy of a workspace, nested workspaces, variable scope, and handling exceptions within a workspace.","ref":"/docs/reference/concepts/fundamentals/workspaces/what-is-a-workspace/","tags":"","title":"What is a Workspace?"},{"body":"What is an Enum? Summary TODO:\nAnatomy of an Enum Enum literal editor Display in studio variable details viewer Default Overridden types Out of range ints cast (DayOfWeek)1000 Casting - dayofweek\u003c-\u003eInt and unable to cast string - use parse Need to cast int to enum or enum to int if comparing Enum Types DateTimeComponentType SearchOptions Etc. Flagged enums Currently not possible to have combined values in the literal editor (is possible in expression) Enums names are not localised - e.g. DayOfWeek.Sunday cannot display Dimanche for french Links to microsoft docs https://docs.microsoft.com/en-us/dotnet/api/system.enum https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/enum probably not: https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/enums https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/enum Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what an Enum is.","excerpt":"Information regarding what an Enum is.","ref":"/docs/reference/concepts/working-with/enums/what-is-an-enum/","tags":"","title":"What is an Enum?"},{"body":"What is an Exception? Summary An exception is thrown during an execution when an issue is encountered whilst executing a flow. Exceptions can occur for a number of reasons, such as:\nExceptions thrown by a block, these can be found in the relevant documentation for that block (e.g. A duplicate key is added to a Dictionary using the Add Item With Key block) Developer thrown exceptions (e.g. A developer enriches an exception that has already been thrown to provide a more detailed message) Issues with third-party systems (e.g. A third-party system experiences an error) Issues with network connectivity (e.g. A target machine is inaccessible) Issues with permissions (e.g. The execution does not have permission to read a file) Issues with the environment (e.g. The software installed on a target machine is incorrect) An exception contains details of what caused the issue, for more information see Anatomy of an Exception.\nAn exception can be handled in different ways depending on where the exception occurred. For more information see Handling Exceptions.\nAnatomy of an Exception Data within an exception can be accessed using properties.\nThe following properties are found on all exceptions:\nProperty Notes Example Exception Type The type of the exception PropertyNullException Message The exception message, providing information about the exception that occurred. This typically includes the cause of the exception, possible resolutions, and any related information. What is included in an exception’s message can be found in the relevant documentation for that exception 'List' is null; it must be provided with a non-null value.\\r\\nPlease click the HelpLink for more information on how to fix this. HelpLink Help link to aid with troubleshooting and resolution for the exception. There are three types of help links:Cortex - Help links direct to material within the Cortex Product Portal. This documentation is written and maintained by Cortex and contains information directly related to the Cortex product.External - Help links direct to externally hosted material about the exception. This documentation is not written or maintained by Cortex.Custom - Help links are generated by flow developers during the design and development of flows. These help links are configured in the Throw New Exception block, and can link to any resource applicable to the exception. https://v2022.docs.cortex-ia.com/docs/reference/exceptions/common/property/property-null-exception/ The following properties are found on many exceptions:\nProperty Notes Example Category The category of the exception, which is used to categorise an exception if there are multiple reasons that the exception can occur. InfiniteLoopException has one category, \"Increment\" Error Code The error code for the exception, which is used to indicate the reason that the exception occurred, if there are multiple reasons that the exception can occur. InfiniteLoopException has three error codes, InfiniteLoopErrorCode.IncrementIsZero (100), InfiniteLoopErrorCode.IncrementIsNegative (101), and InfiniteLoopErrorCode.IncrementIsPositive (102) Inner Exception Contains the exception that caused this exception, if any. This property is always accessible but will only be visible in the Exceptions Viewer when it contains data. {\"ExceptionType\": \"PropertyNullException\", \"Message\": \"'List' is null; it must be provided with a non-null value.\\r\\nPlease click the HelpLink for more information on how to fix this.\", \"HelpLink\": \"https://v2022.docs.cortex-ia.com/docs/reference/exceptions/common/property/property-null-exception/\"} For more information regarding what properties are accessible on an exception, see the relevant documentation for that exception.\nRemarks Known Limitations Carriage Return and Line Feed Characters Carriage Return and Line Feed characters within an exception are supported but will be displayed or written as \\r, \\n, or \\r\\n.\nIn future this limitation may be removed.\nCopying Exception Text The Exceptions Viewer currently does not support traditional copy functionality. A workaround is to highlight the text, then click and drag into another text editor.\nIn future this limitation may be removed.\nSee Also Related Concepts Flows Blocks Executions Related Data Types All Exceptions Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding the anatomy of an exception, and properties accessible on an exception.","excerpt":"Information regarding the anatomy of an exception, and properties accessible on an exception.","ref":"/docs/reference/concepts/fundamentals/exceptions/what-is-an-exception/","tags":"","title":"What is an Exception?"},{"body":"What is an Execution? Summary An execution represents a running instance of a flow, the execution moves through the flow sequentially executing each block saving any outputs to variables. A flow can have one or more executions running at any time, each with their own variables.\nSee Executions in Development for more information regarding working with executions in Cortex Studio. See Executions in Production for more information regarding running executions in the Cortex Flow Execution Service. Anatomy of an Execution Property Notes Example Status Icon The Icon representing the current Status of the execution A list of statuses can be found below Started At The date and time that the execution was started 6 Sep 2022 09:27:45 Updated At The date and time of the last update for the execution 6 Sep 2022 09:27:46 Status The status of the execution A list of statuses can be found below Block Type The block the execution is currently on Set Variable Block Description The description of the block the execution is currently on Set Variable Workspace Name The name of the workspace the execution is currently in Setup and Run Child-Flow Flow Name The name of the flow the execution is currently running Parent-Flow When a flow starts the execution of a child flow using the Run Flow block, any child executions will be shown within a tree in the Executions Grid, for example:\nExecution Status Status Description Running The execution is currently executing Pausing The execution is in the process of pausing - e.g. a long running block may have to finish before the execution is paused Paused The execution is paused on top of a block - before the block starts to execute The execution is paused at a breakpoint on top of a block - before the block starts to execute The execution is paused on the output port of a block - after the block has executed but before the execution has selected which block is next Exception The execution is paused on the exception output port - after the block has thrown an exception when break on exception is turned on Stopping The execution is in the process of stopping - e.g. a long running block may have to finish before the execution is stopped Stopped The execution has ended after having been manually stopped Ended The execution has ended normally Error The execution has ended after having thrown an exception that was not handled Remarks Known Limitations None\nSee Also Related Concepts Flows Blocks Variables Related Data Types All Data Types Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding the anatomy of an execution.","excerpt":"Information regarding the anatomy of an execution.","ref":"/docs/reference/concepts/fundamentals/executions/what-is-an-execution/","tags":"","title":"What is an Execution?"},{"body":"What is an Object? Summary TODO:\nWhat is the difference between an object and a data type? Data Type is the definition, Object is an instance of that definition Explain Object Data Type, base foundation of classes Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what an object is.","excerpt":"Information regarding what an object is.","ref":"/docs/reference/concepts/working-with/objects/what-is-an-object/","tags":"","title":"What is an Object?"},{"body":"What is Date and Time? Summary TODO:\nDate and Time are represented by different data types DateTime DateTimeOffset TimeSpan TimePeriod What is the difference between DateTime and DateTimeOffset? When should they be used What is the difference between TimeSpan and TimePeriod? When should they be used We don’t deal with timezone issues within the blocks Offsets are handled within DateTimeOffset and can be dealt with using our blocks Useful link - https://docs.microsoft.com/en-us/dotnet/api/system.datetime?view=net-6.0 Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what Date and Time is.","excerpt":"Information regarding what Date and Time is.","ref":"/docs/reference/concepts/working-with/date-and-time/what-is-date-and-time/","tags":"","title":"What is Date and Time?"},{"body":"What is Email? Summary TODO:\nSMTP (Sending) Attachments (best practices): where should attachments be in relation to the server the flow is executing on should we link to the file path stuff (working with files and folders)? IMAP (Retreiving) Mailboxes Folders: Deleted? Emails: Attachments Status: Read Unread Priority Body Format Flagged SSL/TLS Authentication: Unauthenticated Servers SASL SMTP Server Gmail? OAuth: Gmail OAuth Microsoft365 OAuth Managing Connections to a Mail Server TODO:\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what email is.","excerpt":"Information regarding what email is.","ref":"/docs/reference/concepts/working-with/email/what-is-email/","tags":"","title":"What is Email?"},{"body":"What is Text? Summary TODO:\nWhat is text null, string.Empty, and whitespace Difference between string and char Operators and Comparisons https://docs.microsoft.com/en-us/dotnet/standard/base-types/basic-string-operations Concatenation Equality Casing Ordinal Invariant Culture Current Culture https://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices-strings ContainsText vs Regex vs PatternMatching Links to ContainsText Links to Regex Links to PatternMatching Parsing text to a number String Formatting Date Formatting Number Formatting Encoding Immutability of strings https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/#immutability-of-strings Literal, Verbatim and Interpolated Strings String escape sequences https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/#string-escape-sequences Substrings and Indexing Links:\nhttps://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/ Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding what text is.","excerpt":"Information regarding what text is.","ref":"/docs/reference/concepts/working-with/text/what-is-text/","tags":"","title":"What is Text?"},{"body":"Summary 2022.9 is the first release of the next generation of Cortex and begins our journey to improve on the previous 7.X generation starting with the following areas:\nPerformance Availability Usability Security Observability Improved Performance This release introduces a new engine to execute automation solutions, and has shown significant performance improvements compared to 7.X, both in our own observations and customers installations. For example, one customer solution that has been migrated to 2022.9 has shown the time taken to run their tests reduce from 210 minutes to 10 minutes.\nImproved Availability This release introduces a new high availability (HA) architecture, which provides:\nElimination of single points of failure resulting in reduced downtime The ability to perform zero downtime upgrades Increased processing capacity resulting in increased throughput Improved Usability This release introduces:\nA quicker, simplified installation process A new Package Management system that improves the speed and ease of deploying automation solutions into production 180+ new blocks to provide equivalent capability with the most used blocks within 7.X. A new Property Editor for configuring blocks, allowing for quicker configuration and better ease of use. Messages which reports issues identified with a flow before it is executed A new online Product Portal that contains materials regarding the release and how to use the product Integration of Cortex Studio with the Product Portal Improved Security This release introduces the concept of Encryptable and Encrypted text, allowing for blocks to identify and interact with sensitive data that should/must be encrypted at rest and during data transfer.\nImproved Observability This release introduces:\nStructured logging providing a defined JSON format for logs produced by the Innovation Platform Dashboards providing observability of the Innovation Platform in Production; these use structured logs as their source Other Improvements This release introduces a number of other improvements, such as:\nFlow Contracts which allow a flow to declare any Input Variables required to run the flow, and what Output Variables will be returned by the flow Debugging with Input Variables which allow flow developers to provide required Input Variables when debugging a flow Versioned APIs which allow our APIs to evolve in future releases without breaking existing automation solutions For a full list of what has been introduced in this release, please see the 2022.9 Release Notes\n","categories":"","description":"Discover what's new in the Cortex Innovation platform.","excerpt":"Discover what's new in the Cortex Innovation platform.","ref":"/docs/whats-new/","tags":"","title":"What's New?"},{"body":"","categories":"","description":"Data types that don't match other categories.","excerpt":"Data types that don't match other categories.","ref":"/docs/reference/data-types/other/","tags":"","title":"Other"},{"body":"What is Cortex? Low-code automation Cortex is a low-code, automation and orchestration platform, that enables organisations to graphically capture and automate anything from simple tasks, to interactive workflows, to complex IT and business processes that span the entire organisation.\nEnterprise-grade Evolved from process and control engineering for mission-critical environments, Cortex provides enterprise-grade functionality to cover the full automation lifecycle; enabling rapid delivery of automation on-premise or in the cloud, from inception to production, without the need for software development experience.\nBuilt for everyone Our vision is a world where everyone can automate, and Cortex is being built for everyone, not just software developers, with the goal of removing barriers to entry and putting your people at the heart of your automation.\nComprehensive functionality With a comprehensive set of functionality and interfaces with 3rd party systems available out-of-the-box, it’s quick and easy to get started on your automation journey.\nWhat can it do? Deliver quickly Using Cortex, global organisations have been able to increase their capacity, velocity, quality, efficiency, agility and transform their business and IT operations in months.\nAcross multiple sectors, industries and markets Cortex has been deployed in small, medium and large enterprises from different sectors, industries and markets, including:\nTelecommunication services IT services Banking, Financial Services and Insurance Chemicals Paper and Forest products Food products Government Media For diverse sets of use cases Cortex has been deployed for a diverse set of use cases, including:\nLights out monitoring and management of fixed-line telephony networks Data center provisioning Patching of servers IT service diagnostics Swivel chair operations Employee onboarding and offboarding Animal welfare compliance checks Resulting in successful outcomes Cortex has resulted in many successful outcomes, including:\nIncreased revenue Increased profit Redeployment of skilled employees Reduction in MTTR Reduction in average handling time Accelerate your digital transformation Wherever you are on your automation journey and whatever you are trying to achieve, small or large, simple or complex, Cortex can help accelerate a successful transformation of your operations.\nHow do I get started? Getting Started Install Cortex and start your automation journey today. Guides Learn how to use the various components that make up the Cortex platform. Tutorials Explore all of the tutorials for the Cortex platform. Reference Browse through the reference documentation, including details about APIs, blocks, data types, exceptions. FAQs Find the answers to your questions. Videos View a range of videos about the Cortex platform, automation, strategies and methodologies, as well as industry specific content. Webinars Watch a selection of automation related webinars. Engage With Us Let us help you to get started by participating in one of our enablement pathway programs: 1. Kickstarter - Free two/three day workshop that enables the rapid configuration of a cloud-based Cortex platform to prototype, and demonstrate automation in context. 2. Design Sprint - A two week formalised approach to automation based on our 300+ man years of knowledge and experience. Facilitated by Cortex, the Automation Design Sprint works through the required stages of automation, from vision and objectives to prototype and feedback. 3. Launch Program - A twelve week program which takes your team through the phases of mobilisation, design of automation, trial testing and sign-off to production. 4. Acceleration Program - A three, six or nine month program that delivers the framework for organisations to effectively and efficiently accelerate their team in the design, development, and delivery of automation using the Cortex platform. ","categories":"","description":"Find out what the Cortex platform is, what it can do, and how you can get started?","excerpt":"Find out what the Cortex platform is, what it can do, and how you can get started?","ref":"/docs/overview/","tags":"","title":"Overview"},{"body":"","categories":"","description":"This section includes all reference documentation for concepts required to use Cortex Innovation.","excerpt":"This section includes all reference documentation for concepts required to use Cortex Innovation.","ref":"/docs/reference/concepts/working-with/","tags":"","title":"Working With..."},{"body":"","categories":"","description":"Get up and running with the Cortex Innovation platform in minutes.","excerpt":"Get up and running with the Cortex Innovation platform in minutes.","ref":"/docs/getting-started/","tags":"","title":"Getting Started"},{"body":"Data Types Lists Dictionaries InvariantCulture HttpRequestHeaders ","categories":"","description":"Data types that are most commonly used.","excerpt":"Data types that are most commonly used.","ref":"/docs/reference/data-types/most-common/","tags":"","title":"Most Common"},{"body":"A-E Terms, words and phrases beginning with the letters A through E.\nA Acceleration Program See Acceleration Program.\nAPI An API (Application Programming Interface) is a set of functions that allows applications to access data from and interact with external systems, services or applications.\nAutogeneration Autogeneration, is the process in which something is created automatically for use within a process.\nAutomate The application of automation.\nAutomation Automation is a term for techniques, methods, systems or technologies that reduce human intervention in tasks and processes.\nAWS Lambda AWS Lambda is an event driven serverless solution from AWS. Instead of deploying and maintaining servers, cloud infrastructure is used to run applications.\nAzure Functions Azure Functions is an event driven serverless solution from Microsoft. Instead of deploying and maintaining servers, cloud infrastructure is used to run applications.\nB BCC Blind Carbon Copy (BCC) is a way of sending copies of an email to other people. Unlike CC recipients, the other recipients of the email will not be able to see who recieved the email via BCC.\nBit A bit is the most basic unit of information in computing, and represents a logical state with one of two possible values; most commonly represented as 1 or 0.\nSee Wikipedia for more information.\nBlock Blocks (or functional blocks) expose the logic and actions that the Cortex platform is able to execute for the flow developers; alongside flows they are one of the main components used to define how to automate tasks and processes.\nFor more detailed information about blocks, see Fundamentals \u003e Blocks.\nFor a complete list of available blocks, see Reference \u003e Blocks.\nBlock Property Blocks have block properties (or properties) that allow the flow developers to configure how the block should behave; e.g. a block to send emails would have properties for specifying things like the sender, recipients, summary, body, attachments etc.\nFor more detailed information about configuring blocks using block properties, see Fundamentals \u003e Block Properties.\nBoolean A data type that represents a logical value of true or false.\nFor more detailed information about the Boolean data type, see Data Types \u003e Boolean.\nByte A byte is a unit of information in computing that most commonly consists of eight bits.\nSee Wikipedia for more information.\nC C# C# (pronounced “see sharp”) is a programming language developed by Microsoft.\nIt is natively supported by the Cortex platform for using simple expressions (i.e. 1 + 1) and more complex code (i.e. DateTime.Now.AddDays(1)) within flows.\nC# expressions and code can be entered as the values for Fundamentals \u003e Block Properties using the Expression Editor.\nSee the official C# documentation for more information about C#.\ncamelCase camelCase is a typographical convention in which phrases are written without spaces or punctuation, indicating the separation of words with a single capitalized letter, and the first word starting with a lowercase letter. E.g. “iPhone” and “eBay”.\ncamelCase is often used as a naming convention in programming languages such as C#.\nSee also PascalCase.\nCase-insensitive If something is case-insensitive, it means it ignores differences in case (i.e. CASE is considered equal to case).\nCase-sensitive If something is case-sensitive, it means it considers differences in case (i.e. CASE is considered not equal to case).\nCast The process of explicitly converting one data type to another.\nSee Casting and type conversions (C# Programming Guide) for a detailed technical explanation of casting in C#, the programming language natively supported by the Cortex platform for writing simple expressions and more complex code.\nAlso see Explicit Cast for more information.\nCC Carbon Copy (CC) is a way of sending copies of an email to other people. The other recipients of the email will be able to see who recieved the email via CC.\nCI/CD CI/CD is a software development practice and is broken down into the following concepts:\nContinuous Integration Continuous Delivery Continuous Deployment Char A data type that represents a character or letter.\nFor more detailed information about the Char data type, see Data Types \u003e Char.\nCloud A global network of servers which are linked together and operate as a single ecosystem.\nExamples of publicly available Cloud providers include:\nAmazon AWS Google Cloud Platform Microsoft Azure Cloud Service Provider A cloud service provider is a third-party company offering a cloud-based platform, infrastructure, application, or storage services.\nCode A set of instructions in a computer program.\nConcurrent At the same time.\nContinuous Integration Continuous Integration is a software development practice where developers frequently:\nIntegrate their local changes with source code from the main branch Use automated testing to ensure that their changes work as expected Merge their changes into the main branch, if no issues were found Continuous Delivery Continuous Delivery is a software development practice where:\nChanges to the main branch are detected The main branch is packaged into deployment artefacts Deployment artefacts are made available Continuous Deployment Continuous Deployment is a software development practice which extends Continuous Delivery by automatically deploying the generated artefacts.\nConvert To change something into a different form. E.g. Change some text from lowercase to UPPERCASE.\nCortex The name of the new and current generation of the Cortex automation platform.\nCortex Gateway The centralised web-based portal for accessing all user applications and tooling in the Cortex platform.\nCortex Studio The web-based integrated development environment (IDE) for creating, editing, debugging, testing and managing flows that define the logic and actions required to capture and automate a task or process.\nFor more detailed information about Cortex Studio, see Guides \u003e Cortex Studio.\nCulture Describes a set of rules for data that differs between different cultures; it determines the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and text comparisons.\nFor more detailed information about Culture, see Working With \u003e Culture.\nCulture identifier A culture identifier is a standard international numeric abbreviation and has the components necessary to uniquely identify one of the operating system’s installed cultures.\nFor more detailed information about Culture, see Working With \u003e Culture.\nCulture-insensitive If something is culture-insensitive, it means that it does not get affected by culture related changes to the operating system, such as language and regional settings.\nCulture-sensitive If something is culture-sensitive, it means that it does get affected by culture related changes to the operating system, such as language and regional settings.\nCurrent Culture The current culture used by the executing thread; it determines the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and string comparisons.\nFor more detailed information about Culture, see Working With \u003e Current Culture.\nCRL Certificate Revocation List (CRL) is a list of certificates that have been revoked by the issuing certificate authority prior to their actual/assigned expiration date. It is essentially a list of certificates that should no longer be trusted.\nD Data Type A data type (or type) defines the type of data or values that a block property can accept.\nFor more detailed information about data types, see Fundamentals \u003e Data Types.\nFor a complete list of available data types, see Reference \u003e Data Types.\nDebug The ability for flow developers to execute and interact with a flow step-by-step from within Cortex Studio, so that they are able to identify and remove errors in the flow’s logic and actions.\nFor more detailed information about debugging in Cortex Studio, see Cortex Studio \u003e Debugging.\nDefault Value The default that is assigned as the value of a block property when a new block is added to a flow.\nDesign Sprint See Design Sprint\nDeveloper A developer is an individual that builds and creates software and applications.\nDictionary A data type that represents an unordered collection of key-item pairs, where each pair consists of a unique key and its associated item. Dictionaries are optimised for fast lookup of items using their key.\nFor more detailed information about the Dictionary data type, see Data Types \u003e Dictionary\u003cTKey, TItem\u003e.\nDLL DLL files are binary files that can contain executable code and resources.\nDrag-and-Drop Functionality that allows a user to select an object and move it to another location.\nDouble A data type that represents a fractional, or very large or small number from -1.79769313486232e+308 through 1.79769313486232e+308.\nFor more detailed information about the Double data type, see Data Types \u003e Double.\ndynamic A data type that indicates that any data type can be used.\nFor more detailed information about the dynamic data type, see Data Types \u003e dynamic.\nE Empty Empty indicates that a data type has been initialised and has a non-null value, but the value does not contain any data. E.g. a string that contains no characters \"\", or a list that contains no items [].\nEmpty is not the same as null.\nError Something which is inaccurate or incorrect; a mistake.\nExample An example is intended to show flow developers how something works. Examples can be found near the top of every block’s help page. See examples for the Add Text At Beginning block.\nException An exception represents errors that occur during the execution of a flow.\nExceptions are data types that can be reasoned with during the execution of a flow, in order to handle errors during the automation of a task or process.\nFor more detailed information about exceptions, see Fundamentals \u003e Exceptions.\nFor a complete list of available blocks that can be used to handle exceptions, see Blocks \u003e Exception Blocks.\nFor a complete list of exceptions, see Reference \u003e Exceptions.\nExecution When a request to start a flow is received by the Cortex platform, an execution is created that represents that instance of the executing flow.\nThere can be multiple executions of a flow running concurrently.\nFor more detailed information about executions, see Cortex Studio \u003e Debugging.\nExplicit Cast Sometimes, in order to convert one data type to another, an “explicit cast” expression is required; this is typically needed when information might be lost in the conversion, or when the conversion might not succeed for other reasons.\nAn example would be converting a 32-bit integer (Int32) to a 16-bit integer (Int16):\nInt32 ThirtyTwoBitInteger = 100; Int16 SixteenBitInteger = (Int16)ThirtyTwoBitInteger; See Cast expression (C# Reference) for a detailed technical explanation.\nAlso see Cast for more information.\nExpression An expression is a combination of operands (i.e. variables, literals, calls to methods and properties exposed on data types) and operators (i.e. =, +, -, *, /) that can be evaluated by the Cortex platform to a single value.\nExpressions use the syntax of the C# programming language.\nFor more detailed information about expressions, see Fundamentals \u003e Expressions.\nExpression Editor The Expression Editor is a web-based text editor that allows flow developers to use either simple expression or more complex code as the value of a block property.\nIt is based on the Monaco Editor used by VS Code, and includes a rich set of features including:\nSyntax Highlighting Snippets Intellisense For more detailed information about the Expression Editor, see Cortex Studio \u003e Expression Editor.\n","categories":"","description":"Terms, words and phrases beginning with the letters A through E.","excerpt":"Terms, words and phrases beginning with the letters A through E.","ref":"/docs/reference/glossary/a-e/","tags":"","title":"A-E"},{"body":"","categories":"","description":"This section includes all reference documentation for APIs.","excerpt":"This section includes all reference documentation for APIs.","ref":"/docs/reference/apis/","tags":"","title":"APIs"},{"body":"Architecture Components Component Purpose Required/Optional Server Role Grafana Web application that provides querying and visualisation of data in the form of dashboards. Required Grafana Cloud managed service Grafana Loki Log aggregation system designed to store and query logs from applications and infrastructure. Required Grafana Cloud managed service Promtail An agent which ships the contents of local logs to a Grafana Loki instance. It should be deployed to every machine that has a Microsoft Service Fabric node used by Innovation. Required Application Server Recommended Architecture The following architecture requires 1..n Application servers and 1 Grafana Cloud managed service.\nNext Steps? Prerequisites ","categories":"","description":"Information about the recommended architecture for a Grafana Cloud installation.","excerpt":"Information about the recommended architecture for a Grafana Cloud installation.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/architecture/","tags":"","title":"Architecture"},{"body":"Architecture Components Component Purpose Required/Optional Server Role Cortex Gateway Web portal that hosts applications for creating automation solutions and managing their full life-cycle, including design, development, testing, deployment, monitoring, maintenance and ultimately end-of-life. Required Web Application Server Cortex Studio Application hosted in Cortex Gateway that provides the graphical, low-code environment for developing, testing, versioning, publishing and managing the full life-cycle of automation solutions. Required Web Application Server Cortex Flow Debugger Service Web application that allows flows to be debugged and executed. Used by Cortex Studio to debug flows and provide block information. Required Web Application Server Cortex API Gateway Service Application Service that routes client requests to the correct distributed Cortex services. Required Application Server Cortex Flow Execution Service Application Service that executes automation flows. Required Application Server Cortex Block Packages A set of files which contain the blocks that users can use to build flows. Used by the Cortex Flow Debugger Service and the Cortex Flow Execution Service. Required Web Application Server, Application Server Cortex Gateway Databases A set of databases created automatically by Gateway which are used for storing data related to user roles, flows, etc. Hopefully, we can remove the need for Gateway Databases in the next release. Required\n(End of life) Web Application Server SQL Server Express or SQL Server Standard Required by Cortex Gateway for creating and storing the Gateway Databases. Hopefully, we can remove the need for SQL Server in the next release. Required\n(End of life) Web Application Server Microsoft Service Fabric Distributed systems platform that hosts the Cortex services where automation solutions are deployed to; provides scalable, reliable and manageable enterprise-grade High Availability (HA) using clustering. Required Application Server Microsoft Service Fabric Explorer Web portal for monitoring and managing the Service Fabric instance that automation solutions are deployed to. Required Application Server Particular NServiceBus Messaging platform enabling scalable, reliable and flexible asynchronous messaging between distributed Cortex services. Required Application Server Pivotal RabbitMQ Message broker used by the NServiceBus messaging platform to transport messages asynchronously between distributed Cortex services using publish/subscribe mechanism. Required Application Server Erlang OTP Erlang run-time required by the RabbitMQ message broker. Required Application Server gobetween L4 load balancer and reverse proxy used to load balance requests between clustered instances of Cortex services. Required Load Balancer NSSM Windows Service Manager that hosts the gobetween load balancer application as a Windows Service. Required Load Balancer Note\rCortex v7.2 component descriptions are not covered in this guide. See separate v7.2 documentation for more information.\rPossible Architectures Cortex Innovation and v7.2 can run side-by-side, allowing flows to be built and run for both of them from the same Gateway instance. They each require a different set of back-end components to be installed. Innovation can be added to a v7.2 installation by using the existing hardware containing v7.2 components, using new hardware or a combination of the two. The only components shared by both Innovation and v7.2 are Gateway and its databases.\nThe installation process is the same, regardless of which architecture is used; Recommended, Minimum or Alternative. The only difference is the Hardware Requirements, which will be greater for existing machines as they need more resources to run more components.\nRecommended Architecture The recommended architecture for adding Innovation to a v7.2 Dual Site, Dual Server system requires 8 servers in total; the 4 existing servers, plus 4 new servers:\n2x Existing Application Servers for v7.2, one of these will also act as the Web Application Server for Innovation. For Innovation, the existing Gateway will be upgraded and a new Flow Debugger Service will be added. 2x Existing Database Servers, used for v7.2 and Gateway databases. 1x New Load Balancer Server for Innovation. 3x New Application Servers for Innovation. 8 Server, Recommended Architecture Diagram\r.\nMinimum Architecture The minimum architecture requires only the 4 existing servers:\n2x Application Servers for v7.2, each of these will also host one of the three Application Servers for Innovation. 1x Database Server for v7.2, which will also host the remaining Application Server for Innovation. 1x Database Server for v7.2, which will also host the Load Balancer for Innovation. 4 Server, Minimum Architecture Diagram\r.\nAlternative Architectures Alternative architectures are possible; any of the Innovation server roles may be installed on any of the existing or new servers provided that the hardware is capable of running everything according to the Hardware Requirements for Alternative Architectures. For example, if the database servers cannot have anything else installed on them, new servers may be used for the load balancer and the third Innovation Application Server. Additionally, an existing, alternative load balancer may be used instead of the bundled one. The only caveat is that the load balancer must not be installed on the same machine as an Innovation Application Server as it cannot be used to send traffic to itself.\nNext Steps? Prerequisites ","categories":"","description":"Information about the recommended platform architecture, including component descriptions.","excerpt":"Information about the recommended platform architecture, including component descriptions.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/architecture/","tags":"","title":"Architecture"},{"body":"Architecture Components Component Purpose Required/Optional Server Role Cortex Gateway Web portal that hosts applications for creating automation solutions and managing their full life-cycle, including design, development, testing, deployment, monitoring, maintenance and ultimately end-of-life. Required Web Application Server Cortex Studio Application hosted in Cortex Gateway that provides the graphical, low-code environment for developing, testing, versioning, publishing and managing the full life-cycle of automation solutions. Required Web Application Server Cortex Flow Debugger Service Web application that allows flows to be debugged and executed. Used by Cortex Studio to debug flows and provide block information. Required Web Application Server Cortex API Gateway Service Application Service that routes client requests to the correct Application Services. Required Application Server Cortex Flow Execution Service Application Service that executes automation flows. Required Application Server Cortex Block Packages A set of files which contain the blocks that users can use to build flows. Used by the Cortex Flow Debugger Service and the Cortex Flow Execution Service. Required Web Application Server, Application Server Cortex Gateway Databases A set of databases created automatically by Gateway which are used for storing data related to user roles, flows, etc. Hopefully, we can remove the need for Gateway Databases in the next release. Required\n(End of life) Web Application Server SQL Server Express or SQL Server Standard Required by Cortex Gateway for creating and storing the Gateway Databases. Hopefully, we can remove the need for SQL Server in the next release. Required\n(End of life) Web Application Server Microsoft Service Fabric Distributed systems platform that hosts the Application Services where automation solutions are deployed to. Required Application Server Microsoft Service Fabric Explorer Web portal for monitoring and managing the Service Fabric instance that automation solutions are deployed to. Required Application Server Particular NServiceBus Messaging platform enabling scalable, reliable and flexible asynchronous messaging between Application Services. Required Application Server Pivotal RabbitMQ Message broker used by the NServiceBus messaging platform to transport messages asynchronously between Application Services using publish/subscribe mechanism. Required Application Server Erlang OTP Erlang run-time required by the RabbitMQ message broker. Required Application Server Single Server Architecture Cortex Innovation and v7.2 can run side-by-side, allowing flows to be built and run for both of them from the same Gateway instance. They each require a different set of back-end components to be installed. Innovation can be added to a Cortex v7.2 installation by using the existing hardware. The only components shared by both Innovation and v7.2 are Gateway and its databases.\nThe minimum architecture for adding Innovation to a v7.2 Single Site, Single Server system is as follows:\n1 Server Architecture Diagram\rWarning\rThis architecture is not recommended for production platforms that are required to scale and support HA. Additionally, upgrades require application redeployment with downtime rather than using rolling upgrades.\rNext Steps? Prerequisites ","categories":"","description":"Information about the recommended Innovation platform architecture, including component descriptions.","excerpt":"Information about the recommended Innovation platform architecture, including component descriptions.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/architecture/","tags":"","title":"Architecture"},{"body":"Architecture Components Component Purpose Required/Optional Server Role Grafana Web application that provides querying and visualisation of data in the form of dashboards. Required Web Application Server Grafana Loki Log aggregation system designed to store and query logs from applications and infrastructure. Required Web Application Server Microsoft Internet Information Services (IIS) Web server used as a reverse proxy for Grafana Loki. Required Web Application Server Promtail An agent which ships the contents of local logs to a Grafana Loki instance. It should be deployed to every machine that has a Microsoft Service Fabric node used by Innovation. Required Application Server Recommended Architecture Note\rFor production systems it is recommended to install on new hardware. However, if additional hardware is not available, you can install on existing hardware.\rThe following architecture requires 1 + 1..n servers:\n1 x Web Application Server which contains Grafana, Grafana Loki and Microsoft IIS. 1..n x Application Servers. Next Steps? Prerequisites ","categories":"","description":"Information about the recommended architecture for a Grafana platform installation.","excerpt":"Information about the recommended architecture for a Grafana platform installation.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/architecture/","tags":"","title":"Architecture"},{"body":"Architecture Components Component Purpose Required/Optional Server Role Cortex Gateway Web portal that hosts applications for creating automation solutions and managing their full life-cycle, including design, development, testing, deployment, monitoring, maintenance and ultimately end-of-life. Required Web Application Server Cortex Studio Application hosted in Cortex Gateway that provides the graphical, low-code environment for developing, testing, versioning, publishing and managing the full life-cycle of automation solutions. Required Web Application Server Cortex Flow Debugger Service Web application that allows flows to be debugged and executed. Used by Cortex Studio to debug flows and provide block information. Required Web Application Server Cortex API Gateway Service Application Service that routes client requests to the correct distributed Cortex services. Required Application Server Cortex Flow Execution Service Application Service that executes automation flows. Required Application Server Cortex Block Packages A set of files which contain the blocks that users can use to build flows. Used by the Cortex Flow Debugger Service and the Cortex Flow Execution Service. Required Web Application Server, Application Server Cortex Gateway Databases A set of databases created automatically by Gateway which are used for storing data related to user roles, flows, etc. Hopefully, we can remove the need for Gateway Databases in the next release. Required\n(End of life) Web Application Server SQL Server Express or SQL Server Standard Required by Cortex Gateway for creating and storing the Gateway Databases. Hopefully, we can remove the need for SQL Server in the next release. Required\n(End of life) Web Application Server Microsoft Service Fabric Distributed systems platform that hosts the Cortex services where automation solutions are deployed to; provides scalable, reliable and manageable enterprise-grade High Availability (HA) using clustering. Required Application Server Microsoft Service Fabric Explorer Web portal for monitoring and managing the Service Fabric instance that automation solutions are deployed to. Required Application Server Particular NServiceBus Messaging platform enabling scalable, reliable and flexible asynchronous messaging between distributed Cortex services. Required Application Server Pivotal RabbitMQ Message broker used by the NServiceBus messaging platform to transport messages asynchronously between distributed Cortex services using publish/subscribe mechanism. Required Application Server Erlang OTP Erlang run-time required by the RabbitMQ message broker. Required Application Server gobetween L4 load balancer and reverse proxy used to load balance requests between clustered instances of Cortex services. Required Load Balancer NSSM Windows Service Manager that hosts the gobetween load balancer application as a Windows Service. Required Load Balancer Recommended Architecture The following architecture requires 5 servers:\n1x Web Application Server which contains Gateway, Flow Debugger Service and Databases 1x Load Balancer Server 3x Application Servers 5 Server Architecture Diagram\rNext Steps? Prerequisites ","categories":"","description":"Information about the recommended Innovation platform architecture, including component descriptions.","excerpt":"Information about the recommended Innovation platform architecture, including component descriptions.","ref":"/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/architecture/","tags":"","title":"Architecture"},{"body":"Architecture Components Component Purpose Required/Optional Server Role Cortex Gateway Web portal that hosts applications for creating automation solutions and managing their full life-cycle, including design, development, testing, deployment, monitoring, maintenance and ultimately end-of-life. Required Web Application Server Cortex Studio Application hosted in Cortex Gateway that provides the graphical, low-code environment for developing, testing, versioning, publishing and managing the full life-cycle of automation solutions. Required Web Application Server Cortex Flow Debugger Service Web application that allows flows to be debugged and executed. Used by Cortex Studio to debug flows and provide block information. Required Web Application Server Cortex API Gateway Service Application Service that routes client requests to the correct Application Services. Required Application Server Cortex Flow Execution Service Application Service that executes automation flows. Required Application Server Cortex Block Packages A set of files which contain the blocks that users can use to build flows. Used by the Cortex Flow Debugger Service and the Cortex Flow Execution Service. Required Web Application Server, Application Server Cortex Gateway Databases A set of databases created automatically by Gateway which are used for storing data related to user roles, flows, etc. Hopefully, we can remove the need for Gateway Databases in the next release. Required\n(End of life) Web Application Server SQL Server Express or SQL Server Standard Required by Cortex Gateway for creating and storing the Gateway Databases. Hopefully, we can remove the need for SQL Server in the next release. Required\n(End of life) Web Application Server Microsoft Service Fabric Distributed systems platform that hosts the Application Services where automation solutions are deployed to. Required Application Server Microsoft Service Fabric Explorer Web portal for monitoring and managing the Service Fabric instance that automation solutions are deployed to. Required Application Server Particular NServiceBus Messaging platform enabling scalable, reliable and flexible asynchronous messaging between Application Services. Required Application Server Pivotal RabbitMQ Message broker used by the NServiceBus messaging platform to transport messages asynchronously between Application Services using publish/subscribe mechanism. Required Application Server Erlang OTP Erlang run-time required by the RabbitMQ message broker. Required Application Server Single Server Architecture The following architecture requires 1 server:\n1 Server Architecture Diagram\rWarning\rThis architecture is not recommended for production platforms that are required to scale and support HA. Additionally, upgrades require application redeployment with downtime rather than using rolling upgrades.\rNext Steps? Prerequisites ","categories":"","description":"Information about the recommended Innovation platform architecture, including component descriptions.","excerpt":"Information about the recommended Innovation platform architecture, including component descriptions.","ref":"/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/architecture/","tags":"","title":"Architecture"},{"body":"","categories":"","description":"This section includes all reference documentation for functional blocks.","excerpt":"This section includes all reference documentation for functional blocks.","ref":"/docs/reference/blocks/","tags":"","title":"Blocks"},{"body":"","categories":"","description":"This section includes all reference documentation for the Cortex Innovation default set of Grafana dashboards.","excerpt":"This section includes all reference documentation for the Cortex Innovation default set of Grafana dashboards.","ref":"/docs/reference/observability/grafana/dashboards/","tags":"","title":"Dashboards"},{"body":"","categories":"","description":"This section includes all reference documentation for data types.","excerpt":"This section includes all reference documentation for data types.","ref":"/docs/reference/data-types/","tags":"","title":"Data Types"},{"body":"","categories":"","description":"This section includes all reference documentation for exceptions.","excerpt":"This section includes all reference documentation for exceptions.","ref":"/docs/reference/exceptions/","tags":"","title":"Exceptions"},{"body":"Flow Execution Requests Description This dashboard provides the information required to analyse the flow execution requests within the Cortex Innovation platform. It will display data based on the Time Range that has been specified.\nAt the top of the page there is a dashboard description. This provides information about what the dashboard is reporting and what each of the filters are. The description is always collapsed by default.\nThe dashboard is then split into 4 main sections:\nOverview Requests Errors Duration There are several filters available to filter the data to a more fine-grained level as necessary and are explained in further detail below.\nTime Range Note\rChoosing large time ranges will increase the time it takes for the data to be loaded into the dashboard.\rThe time range for which the dashboard displays data is configurable in the top right of the dashboard using the Time Range selector (defaults to the last 3 hours):\nThere are a number of predefined quick ranges to choose from:\nLast 5, 15 and 30 minutes Last 1, 3, 6, 12 and 24 hours Last 2, 7, 30 and 90 days Last 6 months Last 1, 2 and 5 years Yesterday Day before yesterday This day last week Previous week, month, fiscal quarter, year, fiscal year Today Today so far This month, fiscal quarter, year and fiscal year This month, fiscal quarter, year and fiscal year so far To configure an absolute time range, you should specify a From and To date and time. These values can be in the format of YYYY-MM-DD HH:MM:SS, e.g. 2022-07-22 13:54:23, or alternatively can use times relative to now, e.g. now-24h. It is also possible to use the date time picker available for both the From and To fields. Once the absolute time range has been configured you must click the ‘Apply time range’ button.\nIf an absolute time range is specified, the Time Range selector will show the selected time range with arrows either side. These arrows can be used to shift the time range forwards and backwards. This feature is not available for quick ranges.\nThe magnifying glass icon allows you to zoom out of the time range specified. It will substract half the current time range from the From field and add half the current time range to the To field.\nFor more information regarding the Time Range selector, see Grafana’s Time range controls documentation.\nFilters At the top of the dashboard, there are 10 filters available to restrict the data queried:\nFilter Description Tenant List of tenants. Defaulted to All. System List of systems. Defaulted to All. Node List of hosts that processed the requests. Defaulted to All. Package Name List of packages. Defaulted to All. Flow Name List of flows that have execution requests. Defaulted to All. Status Code List of status codes found in the HTTP responses. Defaulted to All. Result List of results found in the HTTP responses. Defaulted to All. Initiator IP Address List of IP addresses for the initiators of the requests. Defaulted to All. Interval List of intervals to perform the time series aggregations upon. This only affects the graphs on this dashboard.\nThe available values for this filter are auto, 1m, 10m, 30m, 1h, 6h, 12h, 1d, 7d, 14d, 30d.\nIf auto is selected, as is the default, Grafana will aggregate to a level it deems appropriate for the time range specified. Custom Filter Enables filtering on all available values, including those not exposed by default. All filters (excluding Interval and Custom Filter) will display their list of available options dependent on the preceding filters selected.\nOverview Section This section displays key flow execution request metrics for the specified time range and consists of 4 panels.\nNote\rThe Interval filter does not affect these panels.\rTotal Requests This tile displays the total number of flow execution requests during the specified time range.\nTotal Requests Errored This tile displays the total number of flow execution requests that errored during the specified time range. This tile has thresholds set to colour code the tile depending on the value. These thresholds can be customised, however the default thresholds are:\nThreshold Value Colour OK 0 green CRITICAL \u003e= 1 red Request Error Rate This tile displays the percentage of errored flow execution requests against the total flow execution requests during the specified time range. This tile has thresholds set to colour code the tile depending on the value. These thresholds can be customised, however the default thresholds are:\nThreshold Value Colour OK \u003c 5% green WARNING \u003e= 5% orange CRITICAL \u003e= 10% red Mean Request Duration This tile displays the mean duration for flow execution requests during the specified time range. This is usually reported in seconds, however the unit may change if the number is much smaller or larger.\nRequests Section This section provides information regarding the flow execution request history for the specified time range and consists of 3 panels.\nRequests This graph displays, for the specified time range, the:\ncount of all flow execution requests mean duration in seconds for all flow execution requests Each data point value is calculated by aggregating requests based on the Interval filter.\nTop 10 Requests by Count This table displays the 10 flows with the most execution requests during the specified time range with their mean, minimum and maximum duration in seconds.\nNote\rThe Interval filter does not affect this table.\rBottom 10 Requests by Count This table displays the 10 flows with the least execution requests during the specified time range with their mean, minimum and maximum duration in seconds.\nNote\rThe Interval filter does not affect this table. Also, any flows with zero executions will not be displayed.\rErrors Section This section provides information regarding the errored flow execution request history for the specified time range and consists of 2 panels.\nErrored Requests This graph displays, for the specified time range, the:\ncount of errored flow execution requests mean duration in seconds for errored flow execution requests Each data point value is calculated by aggregating requests based on the Interval filter.\nTop 10 Requests by Error Count This table displays the 10 flows with the most errored execution requests (by status code and result) during the specified time range with their mean, minimum and maximum duration in seconds.\nNote\rThe Interval filter does not affect this table.\rDuration Section This section provides information regarding the flow execution request duration history for the specified time range and consists of 3 panels.\nRequest Duration This graph displays, for the specified time range, the:\nmean duration in seconds for all flow execution requests minimum duration in seconds for all flow execution requests maximum duration in seconds for all flow execution requests Each data point value is calculated by aggregating requests based on the Interval filter.\nTop 10 Longest Running Requests by Mean Duration This table displays the 10 flows whose execution requests have the longest mean duration during the specified time range with their total count, error count, minimum and maximum duration in seconds.\nNote\rThe Interval filter does not affect this table.\rTop 10 Shortest Running Requests by Mean Duration This table displays the 10 flows whose execution requests have the shortest mean duration during the specified time range with their total count, error count, minimum and maximum duration in seconds.\nNote\rThe Interval filter does not affect this table. Also, any flows with zero executions will not be displayed.\rRemarks Unknown values The dashboard may display flow execution requests that have an Unknown status code or result, if they are missing from the raw logs. The chances of this occurring are minimal.\nKnown Limitations Graphs do not reset to zero There is a limitation in Grafana where the graph does not always return to the zero line when there is no data for a given time point. This only occurs when there is a data point available at the beginning of the graph, followed by a period with no data, then data occurs again. When hovering the mouse over this area, it will show that the value is 0, and any other tiles will reflect the zero data at this point accordingly.\nRelated Dashboards None\n","categories":"","description":"Information about the Flow Executions Request Dashboard.","excerpt":"Information about the Flow Executions Request Dashboard.","ref":"/docs/reference/observability/grafana/dashboards/flow-execution-requests/","tags":"","title":"Flow Execution Requests"},{"body":"\rFor instructions on how to set up Grafana and Grafana Loki in the cloud see Grafana Cloud.\n","categories":"","description":"Information about adding a Grafana platform to Innovation, including details about components, supported architectures, prerequisites, installation and configuration instructions.","excerpt":"Information about adding a Grafana platform to Innovation, including details about components, supported architectures, prerequisites, installation and configuration instructions.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/","tags":"","title":"Grafana"},{"body":"","categories":"","description":"This section includes all reference documentation for the Grafana Observability platform for Cortex Innovation.","excerpt":"This section includes all reference documentation for the Grafana Observability platform for Cortex Innovation.","ref":"/docs/reference/observability/grafana/","tags":"","title":"Grafana"},{"body":"\rFor instructions on how to set up Grafana and Grafana Loki on-premise see Grafana on-premise.\n","categories":"","description":"Information about adding Grafana Cloud to Innovation, including details about components, supported architectures, prerequisites, installation and configuration instructions.","excerpt":"Information about adding Grafana Cloud to Innovation, including details about components, supported architectures, prerequisites, installation and configuration instructions.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/","tags":"","title":"Grafana Cloud"},{"body":"","categories":"","description":"This section includes all guides for the Cortex Innovation platform.","excerpt":"This section includes all guides for the Cortex Innovation platform.","ref":"/docs/guides/","tags":"","title":"Guides"},{"body":"Install Grafana This guide describes how to install Grafana on the Web Application Server. Please ensure that the Prerequisites have been completed before starting this installation.\nInstall Grafana Download the Grafana 8.5.4 Windows installer. Run the installer and install Grafana to a suitable location. Next Steps? Configure Grafana ","categories":"","description":"Information about installing Grafana on the Web Application Server.","excerpt":"Information about installing Grafana on the Web Application Server.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-grafana/install-grafana/","tags":"","title":"Install Grafana"},{"body":"\rCortex Innovation can be deployed on-premise across multiple servers to provide improved scale and high availability (HA), or to a single server if scale and HA aren’t required.\n","categories":"","description":"Information about installing a Cortex Innovation platform.","excerpt":"Information about installing a Cortex Innovation platform.","ref":"/docs/getting-started/on-premise/install-innovation-only/","tags":"","title":"Install Innovation Only"},{"body":"Install Loki This guide describes how to install Grafana Loki on the Web Application Server. Please ensure that the Prerequisites have been completed before starting this installation.\nInstall Grafana Loki Download Grafana Loki 2.5.0 archive. Extract content of the downloaded archive to a suitable location, e.g. C:\\Loki. Download the Grafana Loki Install.zip archive and extract its contents alongside the previously extracted Grafana Loki loki-windows-amd64.exe. This archive contains the loki-local-config.yaml configuration file, NSSM (the Non-Sucking Service Manager program) and PowerShell scripts to help manage Grafana Loki as a Windows service. Run Windows PowerShell as Administrator. Change the location to where all the files were extracted to. Execute the .\\Install-Loki.ps1 command to install the downloaded Grafana Loki loki-windows-amd64.exe as a service. Execute the .\\Start-Loki.ps1 command to start the Grafana Loki service. Next Steps? Configure Loki ","categories":"","description":"Information about installing Grafana Loki on the Web Application Server.","excerpt":"Information about installing Grafana Loki on the Web Application Server.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/install-loki/","tags":"","title":"Install Loki"},{"body":"Install Promtail This guide describes how to install Promtail on the Application Server(s). Please ensure that the Prerequisites have been completed before starting this installation.\nInstall Promtail Download Promtail 2.5.0 archive. Extract content of the downloaded archive to a suitable location, e.g. C:\\Promtail. Download the Promtail Install.zip archive and extract its contents alongside the previously extracted Promtail promtail-windows-amd64.exe. This archive contains the promtail-local-config.yaml configuration file, NSSM (the Non-Sucking Service Manager program) and PowerShell scripts to help manage Promtail as a Windows service. Run Windows PowerShell as Administrator Change the location to where all the files were extracted to. Execute the .\\Install-Promtail.ps1 command to install the downloaded promtail-windows-amd64.exe as a service. Next Steps? Configure Promtail ","categories":"","description":"Information about installing Promtail on the Application Server(s).","excerpt":"Information about installing Promtail on the Application Server(s).","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/install-promtail/install-promtail/","tags":"","title":"Install Promtail"},{"body":"Install Promtail This guide describes how to install Promtail on the Application Server(s). Please ensure that the Prerequisites have been completed before starting this installation.\nInstall Promtail Download Promtail 2.5.0 archive. Extract content of the downloaded archive to a suitable location, e.g. C:\\Promtail. Download the Promtail Install.zip archive and extract its contents alongside the previously extracted Promtail promtail-windows-amd64.exe. This archive contains the promtail-local-config.yaml configuration file, NSSM (the Non-Sucking Service Manager program) and PowerShell scripts to help manage Promtail as a Windows service. Run Windows PowerShell as Administrator Change the location to where all the files were extracted to. Execute the .\\Install-Promtail.ps1 command to install the downloaded promtail-windows-amd64.exe as a service. Next Steps? Configure Promtail ","categories":"","description":"Information about installing Promtail on the Application Server(s).","excerpt":"Information about installing Promtail on the Application Server(s).","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-promtail/install-promtail/","tags":"","title":"Install Promtail"},{"body":"\r","categories":"","description":"This section includes tutorials about installing the Cortex Innovation platform.","excerpt":"This section includes tutorials about installing the Cortex Innovation platform.","ref":"/docs/tutorials/installation/","tags":"","title":"Installation"},{"body":"","categories":"","description":"This section includes all reference documentation for logs generated by the Cortex Innovation platform.","excerpt":"This section includes all reference documentation for logs generated by the Cortex Innovation platform.","ref":"/docs/reference/logs/","tags":"","title":"Logs"},{"body":"","categories":"","description":"This section includes all reference documentation for messages generated by the Cortex Innovation platform.","excerpt":"This section includes all reference documentation for messages generated by the Cortex Innovation platform.","ref":"/docs/reference/messages/","tags":"","title":"Messages"},{"body":"\rMultiple server installations with HA are recommended for the following scenarios:\nProduction installations that are required to scale and support HA ","categories":"","description":"Information about adding Cortex Innovation to Cortex 7.2 across multiple on-premise servers with high availability (HA), including: information about components, supported architectures, prerequisites and installation instructions.","excerpt":"Information about adding Cortex Innovation to Cortex 7.2 across multiple on-premise servers with high availability (HA), including: information about components, supported architectures, prerequisites …","ref":"/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/","tags":"","title":"Multiple Server - With HA (Recommended)"},{"body":"\rMultiple server installations with HA are recommended for the following scenarios:\nProduction installations that are required to scale and support HA ","categories":"","description":"Information about installing Cortex Innovation across multiple on-premise servers with high availability (HA), including: information about components, supported architectures, prerequisites and installation instructions.","excerpt":"Information about installing Cortex Innovation across multiple on-premise servers with high availability (HA), including: information about components, supported architectures, prerequisites and …","ref":"/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/","tags":"","title":"Multiple Server - With HA (Recommended)"},{"body":"","categories":"","description":"This section includes all reference documentation for the Observability platform for Cortex Innovation.","excerpt":"This section includes all reference documentation for the Observability platform for Cortex Innovation.","ref":"/docs/reference/observability/","tags":"","title":"Observability"},{"body":"","categories":"","description":"This section includes all tutorials for the Cortex Innovation platform.","excerpt":"This section includes all tutorials for the Cortex Innovation platform.","ref":"/docs/tutorials/","tags":"","title":"Tutorials"},{"body":"\rCortex Innovation can be deployed on-premise across multiple servers to provide improved scale and high availability (HA), or to a single server if scale and HA aren’t required.\n","categories":"","description":"Information about adding Cortex Innovation to an existing Cortex 7.2 platform.","excerpt":"Information about adding Cortex Innovation to an existing Cortex 7.2 platform.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/","tags":"","title":"Add Innovation to a 7.2 Installation"},{"body":"","categories":"","description":"This section includes supporting documentation for the Grafana Observability platform.","excerpt":"This section includes supporting documentation for the Grafana Observability platform.","ref":"/docs/reference/observability/grafana/advanced-setup/","tags":"","title":"Advanced Setup"},{"body":"Configure Grafana This guide describes how to configure Grafana on the Web Application Server.\nLog-in and Change the Password It is required that on the first log in into Grafana, a new password for the admin user is set up. The password should be different from the default one.\nOn the Web Application Server open a web browser. Browse to http://localhost:3000/. On the login page, enter admin for the username and password. Click Log in. Set a new password for the admin user when prompted to do so. Configure HTTPS By default Grafana allows access over the unsecure HTTP protocol. This needs to be modified to allow access only over the secure HTTPS protocol.\nLocate sample.ini file in the grafana\\conf subfolder in the location Grafana was installed to; by default C:\\Program Files\\GrafanaLabs\\grafana\\conf\\sample.ini.\nCopy sample.ini and paste it in the same location renaming it to custom.ini.\nRun a text editor in administrator mode.\nIn the text editor open the custom.ini Grafana configuration file.\nIn the server section uncomment the protocol option and set it to HTTPS, e.g.:\n# Protocol (http, https, h2, socket) protocol = https In the server section uncomment the cert_file and cert_key options and set them to the certificate .pem and .key filenames and path saved to during the Certificate Requirements step e.g.:\n# https certs \u0026 key file cert_file = C:\\certificates\\certificate.pem cert_key = C:\\certificates\\certificate.key Save the file.\nOpen the Services app.\nRestart the Grafana service.\nVerify That HTTPS Works It is important to verify that Grafana is only accessible through HTTPS.\nOn the Web Application Server open a web browser. Browse to http://localhost:3000/. Browser should not be able to make a connection to Grafana and a default error page should be displayed. Browse to https://localhost:3000/. On the login page, enter admin as the username and the corresponding password. Click Log in. You should have successfully logged into Grafana. Next Steps? Install Grafana Loki ","categories":"","description":"Information about configuring Grafana on the Web Application Server.","excerpt":"Information about configuring Grafana on the Web Application Server.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-grafana/configure-grafana/","tags":"","title":"Configure Grafana"},{"body":"Configure Loki This guide describes how to configure Grafana Loki on the Web Application Server.\nNote\rFor security reasons, Grafana Loki should be run behind an encrypted and authenticated reverse proxy as it does not provide these features by itself.\rInstall Certificate IIS requires the X.509 SSL certificate, obtained in the prerequisites, to be installed on the Web Application Server.\nYou can import the certificate by right clicking the certificate file, selecting Install Certificate and following the wizard. When prompted, ensure you import it into the Local Machine store and not Current User.\nTo verify the certificate is imported:\nClick the Windows button (Start) Type certlm.msc and press Enter to open the Certificate Manager dialog Expand Personal and select Certificates You should see your certificate in this store Setup Reverse Proxy with IIS All of the steps must be carried out on the Web Application Server.\nInstall IIS Basic Authentication Run Server Manager. Expand the Manage menu and select Add Roles and Features. In the left-hand menu, select Server Selection. Select the name of the Web Application Server, click Next. On the Server Roles page, in the Roles tree, expand Web Server (IIS) –\u003e Web Server –\u003e Security. Select Basic Authentication, click Next. Click Next to get to the Confirm installation selections page. Click Install. Click Close on the Results page. Install IIS URL Rewrite Module Download the URL Rewrite module 2.1 Run the downloaded installer. When prompted by the Web Platform Installer, click Install. On the Prerequisites page click I Accept to agree to the license terms for the module. Once the install has completed, click Finish. Click Exit to close the Web Platform Installer. Install Application Request Routing Download Application Request Routing 3.0 Run the downloaded installer. When prompted by the Web Platform Installer, click Install. On the Prerequisites page click I Accept to agree to the license terms for the module. Once the install has completed, click Finish. Click Exit to close the Web Platform Installer. Set Up Reverse Proxy To set up a reverse proxy, carry out the following configuration.\nAdd a New Website Run IIS Manager. In the Connection pane, expand the server. Right-click on Sites and select Add Website… from the menu. In the Add Website window: Provide the site name, e.g. Grafana Loki. Set the Physical path to the location where the site will be stored and ensure that the path exists, e.g. C:\\inetpub\\wwwroot\\Grafana Loki. For Binding set: Type: https IP address: All unassigned Port: 2100 Host name: The fully qualified domain name of the Web Application Server. This must match one of the Subject Alternative Names in the SSL certificate selected in the next step. SSL certificate: Select the certificate created as part of the Certificate Requirements instructions. Click OK to add the website. Enable Basic Authentication In the Connection pane, browse to Sites. Select the newly created website. Double-click on the Authentication icon. Disable Anonymous Authentication. Enable Basic Authentication. Configure URL Rewrite Rule In the Connection pane, browse to Sites. Select the newly created website. Double-click on the URL Rewrite icon. In the Actions pane, click Add Rule(s)…. Select Reverse Proxy from the Inbound and Outbound Rules section. Click OK. If prompted to Add Reverse Proxy Rules, click OK to enable proxy functionality. In the Inbound Rules section enter localhost:3100 as the server name. Ensure that Enable SSL Offloading is checked. Click OK. Restart the Website In the Connection pane, browse to Sites. Select the newly created website. In the Manage Website pane, click Restart. Create Loki User Run Windows PowerShell as Administrator.\nExecute the following command to create a new local user on the Web Application Server:\nNew-LocalUser \"\u003cusername\u003e\" -Password (ConvertTo-SecureString \"\u003cpassword\u003e\" -AsPlainText -force) -FullName \"\u003cname\u003e\" -Description \"\u003cdescription\u003e\" –PasswordNeverExpires Parameter Description username The username of the user to be created. password The password for the user account. name The full name for the user account. description The description of the user account. Next Steps? Install Promtail ","categories":"","description":"Information about configuring Grafana Loki on the Web Application Server.","excerpt":"Information about configuring Grafana Loki on the Web Application Server.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/configure-loki/","tags":"","title":"Configure Loki"},{"body":"Configure Promtail This guide describes how to configure Promtail on the Application Server(s).\nNote\rThese steps must be performed for every Promtail installation in the cluster.\rConfigure Promtail Set Client URL for Grafana Loki Open the promtail-local-config.yaml configuration file, which is located in the folder alongside the promtail-windows-amd64.exe file. Replace the Grafana Loki URL template in the clients section with the url value noted down during Set Up Grafana Loki steps. A correct URL should be similar to https://239948:eyJrIjoiaWVjNzE4MmVjOThkNTgxMMQ5MzIyZjdlMjAyYWY4NWJjO1I1OTc4NSIsIm4iOiJUZXN0S2V5IiwiaWQiOjY4Nzk0MX0=@logs-prod-008.grafana.net/api/prom/push. Save the file. Set the positions.yaml File Path Open the promtail-local-config.yaml configuration file, which is located in the folder alongside the promtail-windows-amd64.exe file. Set the filename in the positions section to the location where you want the positions.yaml file to be created on Promtail startup. Create all the folders of the path specified in the previous step. Save the file. Note\rIf the specified path to the folder for the positions.yaml file doesn’t exists, the file will not get created on Promtail startup.\rSet the Path to the Cortex API Gateway Service Log Files Open the promtail-local-config.yaml configuration file, which is located in the folder alongside the promtail-windows-amd64.exe file. Set the __path__ in the static_configs \u003e targets \u003e labels section to the path of the Logs folder specified in the appSettings.json file during installation of the Cortex API Gateway Service, e.g. \"C:/ProgramData/Cortex/Cortex API Gateway Service/Logs/*.json\". Save the file. Start Promtail Run Windows PowerShell as Administrator. Change the location to the folder where the promtail-windows-amd64.exe file is located. Execute the .\\Start-Promtail.ps1 command to start the Promtail Windows service. Next Steps? Import Dashboards ","categories":"","description":"Information about configuring Promtail on the Application Server(s).","excerpt":"Information about configuring Promtail on the Application Server(s).","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/install-promtail/configure-promtail/","tags":"","title":"Configure Promtail"},{"body":"Configure Promtail This guide describes how to configure Promtail on the Application Server(s).\nNote\rThese steps must be performed for every Promtail installation in the cluster.\rInstall Certificate If a self-signed certificate was obtained in the prerequisites, the CA certificate used to create this certificate must be imported on each Application Server. Otherwise, Promtail will not be able to establish communication with Grafana Loki.\nTo import the CA certificate:\nCopy the cortexCA.pfx CA certificate created during the root CA certificate generation steps into a suitable location on the Application Server. Double click on the cortexCA.pfx file to import the certificate into the Windows Certificate Store. Select Local Machine then click Next. Click Next. Enter the Export Password which the certificate was generated with then click Next. Select Place all certificates in the following store. Click Browse…. Select Trusted Root Certification Authorities, click OK then click Next. Click Finish. Configure Promtail Set Client URL for Grafana Loki Open the promtail-local-config.yaml configuration file, which is located in the folder alongside the promtail-windows-amd64.exe file.\nSet the Grafana Loki URL in the clients section.\nThe following template has been provided for convenience: https://\u003cusername\u003e:\u003cpassword\u003e@\u003cloki host address\u003e:\u003cloki reverse proxy port\u003e/loki/api/v1/push\nElement Description username The username of the user created during Create Loki User steps. password The password which was set for the user during Create Loki User steps. loki host address The host address of the machine where the Grafana Loki reverse proxy was configured during Add a New Website steps . This must match the configured host name. loki reverse proxy port The port of the Grafana Loki reverse proxy configured during Add a New Website steps. Usually 2100. A correct URL should be similar to https://username:password@hostaddress:2100/loki/api/v1/push.\nSave the file.\nSet the positions.yaml File Path Open the promtail-local-config.yaml configuration file, which is located in the folder alongside the promtail-windows-amd64.exe file. Set the filename in the positions section to the location where you want the positions.yaml file to be created on Promtail startup. Create all the folders of the path specified in the previous step. Save the file. Note\rIf the specified path to the folder for the positions.yaml file doesn’t exists, the file will not get created on Promtail startup.\rSet the Path to the Cortex API Gateway Service Log Files Open the promtail-local-config.yaml configuration file, which is located in the folder alongside the promtail-windows-amd64.exe file. Set the __path__ in the static_configs \u003e targets \u003e labels section to the path of the Logs folder specified in the appSettings.json file during installation of the Cortex API Gateway Service, e.g. \"C:/ProgramData/Cortex/Cortex API Gateway Service/Logs/*.json\". Save the file. Start Promtail Run Windows PowerShell as Administrator. Change the location to the folder where the promtail-windows-amd64.exe file is located. Execute the .\\Start-Promtail.ps1 command to start the Promtail Windows service. Next Steps? Setup Grafana ","categories":"","description":"Information about configuring Promtail on the Application Server(s).","excerpt":"Information about configuring Promtail on the Application Server(s).","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-promtail/configure-promtail/","tags":"","title":"Configure Promtail"},{"body":"F-J Terms, words and phrases beginning with the letters F through J.\nF File A file is an object on a computer that stores data.\nDifferent files can store different types of data (i.e. a text file, .txt, stores textual data; an executable file, .exe stores data required for executing an application).\nFlow A flow is an object in Cortex Studio that contains the logic and actions (in the form of blocks) that the Cortex platform is able to execute for the flow developers.\nFor more detailed information about flows, see Fundamentals \u003e Flows.\nFlow Developer A flow developer is a user that has been granted permissions to develop flows in Cortex Studio.\nFor more detailed information about granting permissions to develop flows, see Cortex Studio \u003e Authorisation.\nFolder A folder (or directory) is an object on a computer that contains files.\nFolders can contain different types of file and can also contain other folders.\nFormat Parameter See Text \u003e Format Parameters.\nFormat Specifier See Text \u003e Format Specifiers.\nFormat Template See Text \u003e Format Templates.\nFunctional Block See block.\nG Generics Generic means not specific to a particular data type.\nAn example of a generic data type is List\u003cTItem\u003e where TItem is a placeholder which indicates it can be initialised with any data type, such as:\nList\u003cint\u003e and List\u003cstring\u003e which are homogenous lists that can only contain integers and strings respectively List\u003cobject\u003e and List\u003cdynamic\u003e are heterogenous lists that can contain multiple data types Gmail Gmail is a free web-based email service provided by Google.\nGUI GUI stands for “Graphical User Interface”. It is used to graphically display information and represent user interactions with a system, without the need for typing commands.\nH Heterogenous Consists of dissimilar or diverse constituents.\nHeterogenous collections can contain multiple data types (e.g. List\u003cdynamic\u003e).\nCollections that can only contain a single data type are known as homogenous.\nHomogenous Consists of the same or a similar constituents.\nHomogenous collections can only contain a single data type (e.g. List\u003cint\u003e).\nCollections that can contain multiple data types are known as heterogenous.\nI IDE IDE or Integrated Development Environment is a software application such as Cortex Studio, that allows users to create a program or application.\nIn Cortex Studio, the users are called flow developers, and the programs are called flows.\nSome common and popular examples of IDE’s include:\nVisual Studio VSCode Eclipse IMAP Internet Messaging Access Protocol (IMAP) in an internet protocol used by email clients to retrieve email messages from a mail server.\nImmutable Unable to be changed.\nImplicit Cast The process of an application converting one data type to another, without requiring an explicit instruction from the developer.\nFor one data type to be able to be implicitly cast to another, there should be no data loss during the conversion.\nAn example would be converting a 16-Bit integer (Int16) to a 32-Bit integer (Int32), as the entire range of the 16-bit integer will fit into a 32-bit integer:\nInt16 SixteenBitInteger = 100; Int32 ThirtyTwoBitInteger = SixteenBitInteger; See Explicit Cast for an example of where data loss would occur during conversion, and would therefore require an explicit instruction from the developer.\nSee Casting and type conversions (C# Programming Guide) for a detailed technical explanation of casting in C#, the programming language natively supported by the Cortex platform for writing simple expressions and more complex code.\nIndex An Index is used to access an item in a list and relates to the position of the item in the list.\nIndexes are 0 based (e.g. The first item in a list is at index 0, the second item is at index 1, etc.).\nSee Collections \u003e Indexes.\nIntellisense IntelliSense is a general term for various code editing features such as code completion and snippets.\nInitialised A variable is initialised when its value has been set for the first time.\nInput Input properties are used to provide values to a block. These properties are used in the block’s execution.\nSee Block Properties \u003e Input Properties.\nInputOutput InputOutput properties are used to provide values to a block. These properties are used, updated and saved back to a variable during the block’s execution.\nSee Block Properties \u003e InputOutput Properties.\nInteger A whole number (e.g. 100).\nInt16 A data type that represents a whole number from -32,768 through 32,767.\nFor more detailed information about the Int16 data type, see Int16.\nInt32 A data type that represents a whole number from -2,147,483,648 through 2,147,483,647.\nFor more detailed information about the Int32 data type, see Int32.\nInt64 A data type that represents a whole number from -9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.\nFor more detailed information about the Int64 data type, see Int64.\nInvariant Culture A culture associated with the English language, but not with any country or region; it determines the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and string comparisons.\nIt has a stable and unchanging set of rules that cannot be customized and is unaffected by culture related changes to the operating system.\nSee Working With \u003e Invariant Culture.\nItem Each object within a collection is called an item.\nIT IT stands for Information Technology, which is the use of computers to create, process, store, retrieve, and exchange electronic data and information.\nSee Wikipedia for more information.\nJ JSON JSON stands for JavaScript Object Notation, and is a format for storing and transporting data between computer applications.\nSee What is JSON for more information.\n","categories":"","description":"Terms, words and phrases beginning with the letters F through J.","excerpt":"Terms, words and phrases beginning with the letters F through J.","ref":"/docs/reference/glossary/f-j/","tags":"","title":"F-J"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/news/","tags":"","title":"News About Cortex"},{"body":"Platform Health Description This dashboard provides the information required to analyse the health of the Cortex Innovation platform. It will display data based on the Time Range that has been specified.\nAt the top of the page there is a dashboard description. This provides information about what the dashboard is reporting and what each of the filters are. The description is always collapsed by default.\nThe dashboard is then split into 5 main sections:\nOverview Availability Requests Errors Duration There are several filters available to filter the data to a more fine-grained level as necessary and are explained in further detail below.\nTime Range Note\rChoosing large time ranges will increase the time it takes for the data to be loaded into the dashboard.\rThe time range for which the dashboard displays data is configurable in the top right of the dashboard using the Time Range selector (defaults to the last 3 hours):\nThere are a number of predefined quick ranges to choose from:\nLast 5, 15 and 30 minutes Last 1, 3, 6, 12 and 24 hours Last 2, 7, 30 and 90 days Last 6 months Last 1, 2 and 5 years Yesterday Day before yesterday This day last week Previous week, month, fiscal quarter, year, fiscal year Today Today so far This month, fiscal quarter, year and fiscal year This month, fiscal quarter, year and fiscal year so far To configure an absolute time range, you should specify a From and To date and time. These values can be in the format of YYYY-MM-DD HH:MM:SS, e.g. 2022-07-22 13:54:23, or alternatively can use times relative to now, e.g. now-24h. It is also possible to use the date time picker available for both the From and To fields. Once the absolute time range has been configured you must click the ‘Apply time range’ button.\nIf an absolute time range is specified, the Time Range selector will show the selected time range with arrows either side. These arrows can be used to shift the time range forwards and backwards. This feature is not available for quick ranges.\nThe magnifying glass icon allows you to zoom out of the time range specified. It will substract half the current time range from the From field and add half the current time range to the To field.\nFor more information regarding the Time Range selector, see Grafana’s Time range controls documentation.\nFilters At the top of the dashboard, there are 9 filters available to restrict the data queried:\nFilter Description Tenant List of tenants. Defaulted to All. System List of systems. Defaulted to All. Node List of hosts that processed the requests. Defaulted to All. API List of the API endpoints found in the HTTP requests. Defaulted to All. Status Code List of status codes found in the HTTP responses. Defaulted to All. Result List of results found in the HTTP responses. Defaulted to All. Initiator IP Address List of IP addresses for the initiators of the requests. Defaulted to All. Interval List of intervals to perform the time series aggregations upon. This only affects the graphs on this dashboard.\nThe available values for this filter are auto, 1m, 10m, 30m, 1h, 6h, 12h, 1d, 7d, 14d, 30d.\nIf auto is selected, as is the default, Grafana will aggregate to a level it deems appropriate for the time range specified. Custom Filter Enables filtering on all available values, including those not exposed by default. All filters (excluding Interval and Custom Filter) will display their list of available options dependent on the preceding filters selected.\nOverview Section This section displays key platform health metrics for the specified time range and consists of 4 panels.\nNote\rThe Interval filter does not affect these panels.\rAvailability This tile displays the availability of the platform by calculating the successful requests / total requests during the specified time range. Successful requests are all requests that do not result in a 5xx HTTP response, 4xx responses are considered successful in this scenario. This tile has thresholds set to colour code the tile depending on the value. These thresholds can be customised, however the default thresholds are:\nThreshold Value Colour OK \u003e= 95% green WARNING \u003e= 90% orange CRITICAL \u003c 90% red Total Requests This tile displays the total number of requests during the specified time range.\nErrored Requests This tile displays the total number of errored requests during the specified time range. Errored requests are all requests that result in an unknown or 5xx HTTP response, 4xx responses are considered successful in this scenario. This tile has thresholds set to colour code the tile depending on the value. These thresholds can be customised, however the default thresholds are:\nThreshold Value Colour OK 0 green CRITICAL \u003e= 1 red Mean Request Duration This tile displays the mean duration for requests during the specified time range.\nNote\rCertain APIs may take significantly longer than others skewing the result.\rAvailability Section This section displays the availability of the Cortex Innovation platform and consists of 1 panel.\nAvailability This graph displays the availability of the Cortex Innovation Platform during the specified time range by calculating successful requests / total requests. Successful requests are all requests that do not result in an unknown or 5xx HTTP response. 4xx responses are considered successful in this scenario.\nEach data point value is calculated by aggregating requests based on the Interval filter. If there is no data for the previous interval, the line will be broken as the availability is not known at the time.\nThis graph has thresholds set to colour code the background to show when availability drops into warning and critical levels. These thresholds can be customised, however the default thresholds are:\nThreshold Value Colour OK \u003e= 95% green WARNING \u003e= 90% orange CRITICAL \u003c 90% red This graph is configured to start the availability axis at 80%. However, if the availability drops below this level, the axis will modify to show the lowest availability level.\nRequests Section This section provides information regarding the history of the requests processed by the Cortex Innovation platform for the specified time range and consists of 2 panels.\nRequests This graph displays, for the specified time range, the:\ncount of all requests. Each data point value is calculated by aggregating requests based on the Interval filter. count of all requests per second. Top 10 Responses by Total Count This table displays the Top 10 HTTP responses that occurred during the specified time range with their mean, minimum and maximum duration in seconds.\nNote\rThe Interval filter does not affect this table.\rErrors Section This section provides information regarding the errored request history for the specified time range and consists of 2 panels.\nErrored Requests This graph displays, for the specified time range, the:\ncount of errored requests count of all requests Each data point value is calculated by aggregating requests based on the Interval filter.\nErrored requests are all requests that result in an unknown or 5xx HTTP response. 4xx responses are considered successful in this scenario.\nTop 10 Error Responses by Error Count This table displays the Top 10 HTTP error responses that occured during the specified time range with their mean, minimum and maximum duration in seconds. Errored requests are all requests that result in an unknown or 5xx HTTP response. 4xx responses are considered successful in this scenario.\nNote\rThe Interval filter does not affect this table.\rDuration Section This section provides information regarding the request duration history for the specified time range and consists of 2 panels.\nNote\rCertain APIs may take significantly longer than others skewing the result.\rRequest Duration This graph displays, for the specified time range, the:\nmean duration in seconds for all requests minimum duration in seconds for all requests maximum duration in seconds for all requests Each data point value is calculated by aggregating requests based on the Interval filter.\nTop 10 Responses by Mean Duration This table displays the top 10 HTTP responses that occurred during the specified time range with their mean, minimum and maximum duration in seconds.\nNote\rThe Interval filter does not affect this table.\rRemarks Unknown values The dashboard may display HTTP requests that have an Unknown status code or result, if they are missing from the raw logs. The chances of this occurring are minimal.\nBreaks in Graph Lines When appropriate, there may occur breaks in the line graphs. This is relevant to the Availability graph. When there is no data, it is not appropriate to say that the availability is the same as the previous data point or that it is zero as if there is no data, we cannot accurately reflect the data at this point, and therefore, the line will break.\nKnown Limitations Graphs do not reset to zero There is a limitation in Grafana where the graph does not always return to the zero line when there is no data for a given time point. This only occurs when there is a data point available at the beginning of the graph, followed by a period with no data, then data occurs again. When hovering the mouse over this area, it will show that the value is 0, and any other tiles will reflect the zero data at this point accordingly.\nRelated Dashboards None\n","categories":"","description":"Information about the Platform Health Dashboard.","excerpt":"Information about the Platform Health Dashboard.","ref":"/docs/reference/observability/grafana/dashboards/platform-health/","tags":"","title":"Platform Health"},{"body":"Prerequisites The prerequisites required for each server role (as described in Architecture) are laid out in this guide. These must be considered before undertaking the installation.\nHardware Requirements The application servers (as described in Architecture) to which Promtail will be added have already been installed as part of the Innovation install process and do not require any hardware modifications for the observability platform installation.\nNote\rThe application servers must have internet access in order to communicate with the Grafana Cloud managed service.\rSoftware Requirements Server Role Windows Server1 Other Software Application Server 2019 (x64) Recommended\n2016 (x64) Promtail 2.5.0 Web Browser Requirements Grafana supports the latest versions of the following browsers:\nChrome/Chromium Firefox Safari Microsoft Edge Note\rAlways enable JavaScript in your browser. Running Grafana without JavaScript enabled in the browser is not supported.\rAdditional Application Server Requirements These requirements apply to each of the Application Servers.\nSecurity Requirements Installation User A domain user which is a member of the Local Administrators group on all Application Servers must be available to perform the installation.\nNext Steps? Set up Grafana Windows Server Standard and Datacenter editions are supported. Filesystem must be NTFS and networking must use IPv4. Linux is not supported, but may be in the future. ↩︎\n","categories":"","description":"Information about the prerequisites required on each server type for installation.","excerpt":"Information about the prerequisites required on each server type for installation.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/prerequisites/","tags":"","title":"Prerequisites"},{"body":"Prerequisites The prerequisites required for each server role (as described in Architecture) are laid out in this guide. These must be considered before undertaking installation.\nNote\rAll server roles (e.g. Load Balancer, Application Server, Web Application Server) referenced in the rest of this guide will refer to Innovation server roles unless otherwise stated.\rHardware Requirements Hardware requirements differ for each server role depending on whether it is being installed on new hardware or hardware which already contains v7.2 components. The minimum requirements for existing hardware will be greater than those for new hardware. The requirements for using the Recommended Architecture can be found here. Requirements for using the Minimum Architecture can be found here. This table is also provided to help calculate requirements for Alternative Architectures.\nRecommended Architecture Use these hardware requirements if using the Recommended Architecture.\nServer Role Servers Required CPU Cores (\u003e 2GHz) RAM (GB) Disk (GB) New Innovation Load Balancer 11 4+ Recommended\n2 Minimum 8+ Recommended\n4 Minimum 50+ Recommended\n30 Minimum\n5+ free on installation drive New Innovation Application Server 3 Bronze availability2\n5 Silver availability\n7 Gold availability\n9 Platinum availability 4+ Recommended\n2 Minimum 16+ Recommended\n8 Minimum 75+ Recommended\n60 Minimum\n40+ free on %ProgramData% drive Existing V7.2 Application Server with Gateway\n+ Upgrade to Innovation Web Application Server 1 4+ Recommended\n2 Minimum 8+ Recommended\n4 Minimum 75+ Recommended\n50 Minimum\n30+ free on installation drive Minimum Architecture Use these hardware requirements if using the Minimum Architecture and installing on existing v7.2 hardware.\nServer Role Servers Required CPU Cores (\u003e 2GHz) RAM (GB) Disk (GB) Existing V7.2 Database Server + Innovation Load Balancer 11 4+ Recommended\n4 Minimum 8+ Recommended\n4 Minimum 300+ Recommended\n70 Minimum\n5+ free on installation drive Existing V7.2 Database Server + Innovation Application Server 1 4+ Recommended\n4 Minimum 16+ Recommended\n12 Minimum 300+ Recommended\n100 Minimum\n40+ free on %ProgramData% drive Existing V7.2 Application Server + Innovation Application Server 1 4+ Recommended\n4 Minimum 16+ Recommended\n12 Minimum 120+ Recommended\n100 Minimum\n40+ free on %ProgramData% drive Existing V7.2 Application Server with Gateway\n+ Innovation Application Server\n+ Upgrade to Innovation Web Application Server 1 4+ Recommended\n4 Minimum 16+ Recommended\n12 Minimum 120+ Recommended\n100 Minimum\n30+ free on installation drive\n40+ free on %ProgramData% drive Alternative Architectures This table displays the additional resources required when adding an Innovation Server Role to an existing server using Alternative Architectures. It can be used to calculate how many additional resources are needed to install Innovation by adding the numbers in the table to fully utilised resource usage on a given server.\nServer Role Minimum Additional CPU Cores (\u003e 2GHz) Minimum Additional RAM (GB) Minimum Additional Disk (GB) Load Balancer 2 2 10 free on installation drive Application Server 2 8 40 free on %ProgramData% drive Web Application Server 2 4 30 free on installation drive Software Requirements Server Role Windows Server3 SQL Server4 .Net PowerShell5 IIS6 Other Software Load Balancer 2019 (x64) Recommended\n2016 (x64) Framework 4.7.1 5.1 Application Server 2019 (x64) Recommended\n2016 (x64) Framework 4.7.1 5.1 Web Application Server 2019 (x64) Recommended\n2016 (x64) 2019\n2016\n2016 Express Framework 4.7.1 5.1 10.0.177637\n10.0.143938\nURL Rewrite Module 2.1 Microsoft Web Deploy 3.0 or later\nVisual C++ Redistributable 2013 (x64) Domain Requirements All servers must be on the same domain and cannot be domain controllers.\nDNS Requirements The installation requires IP to hostname resolution to be available. Please ensure that you have the appropriate pointer (PTR) records configured on the DNS server for all of your servers (Web, Application and Load Balancer).\nLicensing Requirements A valid Cortex licence file and Cortex Innovation with v7.2 feature identifier must be procured from Cortex. The feature identifier is a GUID which will be used when configuring the Gateway installation. The licence file is needed when installing the Web Application server and it should contain fingerprints for the Web Application Server and each Application Server.\nTo get a licence file and feature identifier take the following steps:\nCopy the following template to a text file:\nWeb Application Server MachineID: Fingerprint: Application Server 1 MachineID: Fingerprint: Application Server 2 MachineID: Fingerprint: Application Server 3 MachineID: Fingerprint: Please also include a suitable Cortex Innovation with v7.2 feature identifier. Extract Cortex Innovation 2022.9 - Licence Fingerprint Generator.zip.\nFrom that folder, copy Cortex.Licensing.FingerprintGeneration.exe to the Web Application server.\nDouble-click Cortex.Licensing.FingerprintGeneration.exe to run it. A command line window will appear, containing a machine identifier and fingerprint, e.g:\nMachineID: WEBAPP-SERVER Fingerprint: 111118BA104C928319E0CBAE30844CF8B7FD8BC414D1567844D1D0830089F1C9BF5C6 Copy the output (machine identifier and fingerprint) to the Web Application Server section of the text file created in the initial step. Note that the machine identifier can be changed to any string, provided that it is different for each server.\nFor each Application Server take the following steps:\nCopy Cortex.Licensing.FingerprintGeneration.exe to the Application server.\nDouble-click Cortex.Licensing.FingerprintGeneration.exe to run it. A command line window will appear, containing a machine identifier and fingerprint, e.g:\nMachineID: APP-SERVER1 Fingerprint: 111118BA104C928319E0CBAE30844CF8B7FD8BC414D1567844D1D0830089F1C9BF5C6 Copy the output (machine identifier and fingerprint) to one of the Application Server sections of the text file created in the initial step. Note that the machine identifier can be changed to any string, provided that it is different for each server.\nRequest a licence and feature identifier by raising a case in the Cortex Service Portal, including the contents of the text file containing all of the fingerprint and machine information in the body of the case.\nWhen the licence and feature identifier have arrived, copy the file Cortex.lic to %ProgramData%\\Cortex\\Licences on the Web Application Server, creating the Cortex and Licences folders if they don’t exist. Save the feature identifier for use when Upgrading Gateway.\nWeb Browser Requirements Gateway supports the latest versions of the following browsers:\nChrome Edge Firefox Additional Load Balancer Server Requirements Filesystem Requirements If using the included gobetween load balancer, Network Discovery and File Sharing must be enabled on the Load Balancer Server:\nOpen File Explorer. Click Network on the left. A banner similar to the following will appear if Network Discovery and File Sharing is turned off: Network and File Discovery Disabled\rClick the banner. Click Turn on network discovery and file sharing: Enable Network and File Discovery\rAlternative Load Balancer Requirements Innovation has a gobetween load balancer included that isn’t highly available; It is possible to use an alternative. The requirements for installing an alternative load balancer are as follows:\nMust support a round robin (or similar) method of load balancing to specified ports on 3 nodes. Must be able to health check each node by running a predefined batch script (ApiGatewayTypeHealthcheck.bat, which resides in the gobetween folder of the Cortex Innovation 2022.9 - App Server Install Scripts) that returns 1 for healthy and 0 for unhealthy. Must be able to access each of the Application Servers via HTTPS. Ideally it should be highly available to avoid a single point of failure in the system. Additional Application Server Requirements Filesystem Requirements All Application Servers must use an NTFS filesystem.\nNetwork Discovery and File Sharing should be enabled on each Application Server:\nOpen File Explorer. Click Network on the left. A banner similar to the following will appear if Network Discovery and File Sharing is turned off: Network and File Discovery Disabled\rClick the banner. Click Turn on network discovery and file sharing: Enable Network and File Discovery\rService Requirements The following Windows Services must be running on all Application Servers:\nRemote Registry Windows Event Log Performance Logs \u0026 Alerts Security Requirements Installation User A domain user which is a member of the Local Administrators group on all Application Servers and Load Balancer Server must be available to run the installation scripts. This is a prerequisite of Microsoft Service Fabric, which is the HA platform that Cortex Innovation is built upon.\nAntivirus Exclusions It is advised (by Microsoft Service Fabric) that the following antivirus exclusions are created on each Application Server to reduce antivirus processing on Service Fabric artefacts:\nFolder Exclusions:\n%ProgramFiles%\\Microsoft Service Fabric %ProgramData%\\SF %ProgramData%\\SF\\Logs Process Exclusions:\nFabric.exe FabricHost.exe FabricInstallerService.exe FabricSetup.exe FabricDeployer.exe ImageBuilder.exe FabricGateway.exe FabricDCA.exe FabricFAS.exe FabricUOS.exe FabricRM.exe FileStoreService.exe A script is provided during installation to add these exclusions for Windows Defender. If any other antivirus software is running, these will need to be added manually.\nIf adding the exclusions manually, the Process Exclusions should be done before installation occurs, as the processes will be used during installation of the application and antivirus software can cause the installation to fail or timeout. Folder Exclusions may need to be added after installation has occurred as some antivirus software needs the folders to exist.\nPort Requirements Cortex Innovation and Microsoft Service Fabric require a range of firewall ports to be opened between the servers and specific services.\nIf you are using Windows Firewall, some ports are opened during installation and others are opened dynamically as needed. If any other firewall is used, it will be necessary to add the rules described in Port Requirements to open the correct ports.\nThe Cortex.Innovation.Test.PortUsage.ps1 script is provided during installation to test the ports on each Application Server and make sure they do not overlap with any other programs; most ports may be altered if this is the case, the description will say if this is not possible.\nCertificate Requirements Note\rFor production systems it is recommended that X.509 SSL wildcard certificates are obtained from a Certificate Authority and used for installation. For non-production systems, certificates can be omitted from installation and it will create and use self-signed certificates. This may prevent 3rd parties that require valid certificate verification to access the API Gateway Service.\rAn X.509 SSL wildcard certificate should be used to:\nSecure communication between the load balancer and the nodes on the Application Servers. Secure communication between the Application Services. Allow Application Services to identify themselves to clients such as Gateway. Prevent unauthorised nodes from joining the HA cluster. Connect to Service Fabric Explorer from each of the Application Servers. The certificate can be obtained from a Certificate Authority, such as Let’s Encrypt, and must meet the following requirements:\nSubject field must be in a wildcard format, pertaining to the domain of the Application Servers (e.g. CN=*.domain.com). Subject alternative names must include any additional host names that should be able to be used to access the API Gateway Service. Certificate file must be in a .PFX file format, with a known password. Certificate file must contain the full chain of certificates. Certificate file must include the private key. Key Usage extension must have a value of Digital Signature, Key Encipherment (a0). Enhanced Key Usage must include Server Authentication and Client Authentication. This file should be placed in a known location on the Application Server where the installation scripts will be run. This location will be required when running the installation script.\nIf required, a separate X.509 SSL certificate can be obtained to be used by the load balancer to communicate with the Application Services. It must meet all of the other requirements laid out above, except the subject field can also be the FQDN of the load balancer (e.g. CN=machine-name.domain.com).\nTLS Requirements There is a set of non-compulsory security measures, recommended to be applied to the Application Servers, in order to prevent potential attacks that exploit known industry security vulnerabilities. This includes disabling all versions of SSL and TLS apart from TLS 1.2. And disabling all cipher suites apart from the following:\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 See SSL Best Practices for a full list of the security changes which will be applied. The Cortex.Innovation.Install.Multiple.SSLBestPractices.ps1 script is provided during installation to apply these security changes to the Application Servers.\nAdditional Web Application Server Requirements Security Requirements Installation User Domain users must be available to run the Application Pools for Gateway and Flow Debugger Service. These users must be given Log on as a service and Log on as a batch job permissions otherwise the Application Pools will not be able to run. Information about how to do this will be given during installation.\nFor Flow Debugger Service, the NETWORK SERVICE user can also be used.\nDomain Requirements For Gateway, only Windows domains with an Active Directory domain controller running Active Directory Domain Services are supported.\nSupported versions of Active Directory are listed below:\nVersion Verified? Supported From Supported Until Windows Server 2003 ✓ Cortex v2022.9 To be evaluated Windows Server 2003 R2 Cortex v2022.9 To be evaluated Windows Server 2008 Cortex v2022.9 To be evaluated Windows Server 2008 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2012 Cortex v2022.9 To be evaluated Windows Server 2012 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2016 ✓ Cortex v2022.9 To be evaluated Windows Server 2019 Cortex v2022.9 To be evaluated Windows Server 2022 Cortex v2022.9 To be evaluated Certificate Requirements Both Gateway and the Flow Debugger Service require an X.509 SSL certificate to be installed on the Web Application Server. The certificate must have the following properties:\nEnhanced Key Usage: Server Authentication and Client Authentication Subject Alternative Names (SAN): At minimum the FQDN of the Server. It can also include NetBIOS Name, IP address, localhost, 127.0.0.1 If the user tries to navigate to an address not in the SAN list, then they will receive a certificate error.\nWildcard certificates and self-signed certificates can also be used. However, self-signed certificates are not recommended for production instances. Details on how to create a self-signed certificate can be found at Create Self-Signed Certificates.\nThe certificate may be the same one used for the Application Server installation.\nMore information about importing the certificate is given during installation.\nTLS Requirements There is a set of non-compulsory security measures, recommended to be applied to the Web Application Server, in order to prevent potential attacks that exploit known industry security vulnerabilities. This includes disabling all versions of SSL and TLS apart from TLS 1.2. And disabling all cipher suites apart from the following:\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 See SSL Best Practices for a full list of the security changes which will be applied. The Cortex.Innovation.Install.SSLBestPractices.ps1 script is provided during installation to apply these security changes to the Web Application Server.\nNext Steps? Application Servers and Load Balancer server are installed in the same way regardless of whether new or existing hardware is being used:\nInstall Application Servers and Load Balancer A software-based load balancer called gobetween is provided with the platform. This must be installed on its own server as it doesn’t support routing traffic to itself. It also doesn’t currently support HA, but it may be possible to use multiple gobetween load balancers with Anycast network addressing and routing to provide high availability, as described in https://en.wikipedia.org/wiki/Anycast; however, this has not been verified yet. It is possible to use an alternative load balancer to the one provided. ↩︎ ↩︎\nApplication Servers support HA via clustering. A cluster must consist of a minimum of 3 nodes, and the number of nodes must be an odd number to ensure a quorum. Currently only the Bronze availability (3 nodes) is supported. Silver, Gold and Platinum support will be added in future. ↩︎\nWindows Server Standard and Datacenter editions are supported. Filesystem must be NTFS and networking must use IPv4. Linux is not supported, but may be in the future. ↩︎\nSQL Server Express, Standard and Enterprise are supported. Other databases are not supported. Note that Transparent Data Encryption is not supported on SQL Server Express. ↩︎\nPowerShell 5.1 ships with Windows Server 2016 and 2019. ↩︎\nIIS is supported; other web servers, including IIS Express are not supported. ↩︎\nShips as a windows role within Windows Server 2019. ↩︎\nShips as a windows role within Windows Server 2016. ↩︎\n","categories":"","description":"Information about the prerequisites required on each server type for installation.","excerpt":"Information about the prerequisites required on each server type for installation.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/prerequisites/","tags":"","title":"Prerequisites"},{"body":"Prerequisites The prerequisites required for a single server (as described in Architecture) are laid out in this guide. These must be considered before undertaking installation.\nHardware Requirements Note\rThis configuration is not recommended for production servers that are required to scale and support HA.\rServer Role Servers Required CPU Cores (\u003e 2GHz) RAM (GB) Disk (GB) Single Server\nApplication Server +\nWeb Application Server 1 4+ Recommended\n4 Minimum 16+ Recommended\n12 Minimum 160+ Recommended\n135 Minimum\n30+ free on installation drive\n40+ free on %ProgramData% drive Software Requirements Server Role Windows Server1 SQL Server2 .Net PowerShell3 IIS4 Other Software Single Server\nApplication Server +\nWeb Application Server 2019 (x64) Recommended\n2016 (x64) 2019\n2016\n2016 Express Framework 4.7.1 5.1 10.0.177635\n10.0.143936\nURL Rewrite Module 2.1 Microsoft Web Deploy 3.0 or later\nVisual C++ Redistributable 2013 (x64) Domain Requirements The server must be on a domain and cannot be a domain controller.\nDNS Requirements The installation requires IP to hostname resolution to be available. Please ensure that you have the appropriate pointer (PTR) records configured on the DNS server for the server.\nLicensing Requirements A valid Cortex licence file and Cortex Innovation feature identifier must be procured from Cortex. The feature identifier is a GUID which will be used when configuring the Gateway installation. The licence file is needed when installing the server and it should contain that server’s fingerprint.\nTo get a licence file and feature identifier take the following steps:\nCopy the following template to a text file:\nWeb Application/Application Server MachineID: Fingerprint: Please also include a suitable Cortex Innovation feature identifier. Extract Cortex Innovation 2022.9 - Licence Fingerprint Generator.zip.\nFrom that folder, copy Cortex.Licensing.FingerprintGeneration.exe to the server.\nDouble-click Cortex.Licensing.FingerprintGeneration.exe to run it. A command line window will appear, containing a machine identifier and fingerprint, e.g:\nMachineID: SERVER Fingerprint: 111118BA104C928319E0CBAE30844CF8B7FD8BC414D1567844D1D0830089F1C9BF5C6 Copy the output (machine identifier and fingerprint) to the Web Application/Application Server section of the text file created in the initial step. Note that the machine identifier can be changed to any string.\nRequest a licence and feature identifier by raising a case in the Cortex Service Portal, including the contents of the text file containing all of the fingerprint and machine information in the body of the case.\nWhen the licence and feature identifier have arrived, copy the file Cortex.lic to %ProgramData%\\Cortex\\Licences on the Web Application Server, creating the Cortex and Licences folders if they don’t exist. Save the feature identifier for use when Upgrading Gateway.\nWeb Browser Requirements Gateway supports the latest versions of the following browsers:\nChrome Edge Firefox Certificate Requirements Note\rFor production systems it is recommended that an X.509 SSL certificate is obtained from a Certificate Authority and used for installation. For non-production systems, certificates can be omitted from installation and it will create and use self-signed certificates. This may prevent 3rd parties that require valid certificate verification to access the API Gateway Service.\rAn X.509 SSL certificate (standard or wildcard) should be used to:\nAllow Application Services to identify themselves to clients such as Gateway. Prevent unauthorised nodes from joining the single node cluster. Connect to Service Fabric Explorer from the Application Server. Connect to Gateway. Allow Gateway to connect to the Flow Debugger Service. The certificate can be obtained from a Certificate Authority, such as Let’s Encrypt, and must meet the following requirements:\nSubject field must be in one of the following formats, depending on the certificate type: Standard certificates must use the standard format (e.g. CN=host.domain.com). Wildcard certificates must use the wildcard format, pertaining to the domain of the server (e.g. CN=*.domain.com). Subject alternative names must include any additional host names that should be able to be used to access the API Gateway Service. Subject Alternative Names (SAN): At minimum the FQDN of the server. It can also include NetBIOS Name, IP address, localhost, 127.0.0.1. It must include any additional host names that should be able to be used to access the API Gateway Service. Certificate file must be in a .PFX file format, with a known password. Certificate file must contain the full chain of certificates. Certificate file must include the private key. Key Usage extension must have a value of Digital Signature, Key Encipherment (a0). Enhanced Key Usage must include Server Authentication and Client Authentication. This file should be placed in a known location on the server. This location will be required when running the Application Server installation script.\nWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rTLS Requirements There is a set of non-compulsory security measures, recommended to be applied to the server, in order to prevent potential attacks that exploit known industry security vulnerabilities. This includes disabling all versions of SSL and TLS apart from TLS 1.2, and disabling all cipher suites apart from the following:\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 See SSL Best Practices for a full list of the security changes which will be applied. The Cortex.Innovation.Install.SSLBestPractices.ps1 script is provided during installation to apply these security changes to the server.\nAdditional Application Server Requirements Filesystem Requirements The server must use an NTFS filesystem.\nService Requirements The following Windows Services must be running on the server:\nRemote Registry Windows Event Log Performance Logs \u0026 Alerts Security Requirements Installation User A domain user which is a member of the Local Administrators group on the server must be available to run the installation scripts. This is a prerequisite of Microsoft Service Fabric, which is the platform that Cortex Innovation is built upon.\nAntivirus Exclusions It is advised (by Microsoft Service Fabric) that the following antivirus exclusions are created on the server to reduce antivirus processing on Service Fabric artefacts:\nFolder Exclusions:\n%ProgramFiles%\\Microsoft Service Fabric %ProgramData%\\SF %ProgramData%\\SF\\Logs Process Exclusions:\nFabric.exe FabricHost.exe FabricInstallerService.exe FabricSetup.exe FabricDeployer.exe ImageBuilder.exe FabricGateway.exe FabricDCA.exe FabricFAS.exe FabricUOS.exe FabricRM.exe FileStoreService.exe A script is provided during installation to add these exclusions for Windows Defender. If any other antivirus software is running, these will need to be added manually.\nIf adding the exclusions manually, the Process Exclusions should be done before installation occurs, as the processes will be used during installation of the application and antivirus software can cause the installation to fail or timeout. Folder Exclusions may need to be added after installation has occurred as some antivirus software needs the folders to exist.\nPort Requirements Cortex Innovation and Microsoft Service Fabric require a range of firewall ports to be opened between the server and specific services.\nIf you are using Windows Firewall, some ports are opened during installation and others are opened dynamically as needed. If any other firewall is used, it will be necessary to add the rules described in Port Requirements to open the correct ports.\nThe Cortex.Innovation.Test.PortUsage.ps1 script is provided during installation to test the ports on the server and make sure they do not overlap with any other programs; most ports may be altered if this is the case, the description will say if this is not possible.\nAdditional Web Application Server Requirements Security Requirements Installation User Domain users must be available to run the Application Pools for Gateway and Flow Debugger Service. These users must be given Log on as a service and Log on as a batch job permissions otherwise the Application Pools will not be able to run. Information about how to do this will be given during installation.\nFor Flow Debugger Service, the NETWORK SERVICE user can also be used.\nDomain Requirements For Gateway, only Windows domains with an Active Directory domain controller running Active Directory Domain Services are supported.\nSupported versions of Active Directory are listed below:\nVersion Verified? Supported From Supported Until Windows Server 2003 ✓ Cortex v2022.9 To be evaluated Windows Server 2003 R2 Cortex v2022.9 To be evaluated Windows Server 2008 Cortex v2022.9 To be evaluated Windows Server 2008 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2012 Cortex v2022.9 To be evaluated Windows Server 2012 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2016 ✓ Cortex v2022.9 To be evaluated Windows Server 2019 Cortex v2022.9 To be evaluated Windows Server 2022 Cortex v2022.9 To be evaluated Next Steps? Install Application Server Windows Server Standard and Datacenter editions are supported. Filesystem must be NTFS and networking must use IPv4. Linux is not supported, but may be in the future. ↩︎\nSQL Server Express, Standard and Enterprise are supported. Other databases are not supported. Note that Transparent Data Encryption is not supported on SQL Server Express. ↩︎\nPowerShell 5.1 ships with Windows Server 2016 and 2019. ↩︎\nIIS is supported; other web servers, including IIS Express are not supported. ↩︎\nShips as a windows role within Windows Server 2019. ↩︎\nShips as a windows role within Windows Server 2016. ↩︎\n","categories":"","description":"Information about the prerequisites required on each server type for installation.","excerpt":"Information about the prerequisites required on each server type for installation.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/prerequisites/","tags":"","title":"Prerequisites"},{"body":"Prerequisites The prerequisites required for each server role (as described in Architecture) are laid out in this guide. These must be considered before undertaking the installation.\nHardware Requirements Note\rFor production systems it is recommended to install on new hardware. However, if additional hardware is not available, you can install on existing hardware.\rOption 1: Install on New Hardware The following hardware requirements are recommended for production systems:\nServer Role Servers Required CPU Cores (\u003e 2GHz) RAM (GB) Disk (GB) Web Application Server 1 4+ Recommended\n2 Minimum 16+ Recommended\n8 Minimum 50+ (SSD) Recommended\n40 (HDD) Minimum\n5+ free on installation drive Option 2: Install on Existing Hardware If additional hardware is not available, it is possible to install to the same Web Application server that hosts Cortex Gateway.\nThe table below specifies additional resources that are recommended to be added to the existing Web Application server:\nServer Role Additional CPU Cores (\u003e 2GHz) Additional RAM (GB) Additional Disk (GB) Web Application Server\n(Shared with Cortex Gateway) 4+ Recommended\n2 Minimum 12+ Recommended\n6 Minimum 10+ Recommended\n5 Minimum Note\rThe application servers (as described in Architecture) to which Promtail will be added have already been installed as part of the Innovation install process and do not require any hardware modifications for the observability platform installation.\rSoftware Requirements Server Role Windows Server1 IIS2 Other Software Web Application Server 2019 (x64) Recommended\n2016 (x64) 10.0.177633\n10.0.143934\nIIS Basic Authentication5\nURL Rewrite module 2.1 Grafana 8.5.4 Enterprise Edition\nGrafana Loki 2.5.0 Application Server 2019 (x64) Recommended\n2016 (x64) Promtail 2.5.0 Domain Requirements All servers must be on the same domain and cannot be domain controllers.\nWeb Browser Requirements Grafana supports the latest versions of the following browsers:\nChrome/Chromium Firefox Safari Microsoft Edge Note\rAlways enable JavaScript in your browser. Running Grafana without JavaScript enabled in the browser is not supported.\rAdditional Web Application Server Requirements Security Requirements Installation User A domain user which is a member of the Local Administrators group on the Web Application Server must be available to perform the installation.\nPort Requirements The observability platform requires a range of firewall ports to be opened on the Web Application Server.\nCertificate Requirements Note\rFor production systems, it is recommended that X.509 SSL certificates are obtained from a Certificate Authority and used for installation. For non-production systems, self-signed certificates may be used. Details on how to create a self-signed certificate can be found at Create Self-Signed Certificates.\rAn X.509 SSL certificate (standard, wildcard or self-signed) should be used to secure communication between:\nPromtail on the Application Servers and the reverse proxy configured for Grafana Loki on the Web Application Server. Grafana end users and the Grafana Web Application on the Web Application Server. The wildcard certificate used for installing Innovation can be used if it is available in the .PEM file format, otherwise a new certificate can be obtained from a Certificate Authority, such as Let’s Encrypt, and must meet the following requirements:\nSubject field must be in one of the following formats, depending on the certificate type: Standard certificates must use the standard format (e.g. CN=host.domain.com). Wildcard certificates must use the wildcard format, pertaining to the domain of the Web Application Server (e.g. CN=*.domain.com). Subject alternative names must include any additional host names that should be able to be used to access the Grafana Web Application. Certificate file must be in a .PFX file format, with a known password. Certificate file must also be available in a .PEM file format. Certificate file must contain the full chain of certificates. Certificate file must include the private key. The files should be placed in a known location on the Web Application Server. This location will be required when configuring Grafana to use HTTPS.\nMore information about importing the certificate is given during installation.\nTLS Requirements A set of non-compulsory security measures is recommended to be applied to the Web Application Server to prevent attacks that exploit known industry security vulnerabilities. This includes disabling all versions of SSL and TLS apart from TLS 1.2, and disabling all cipher suites apart from the following:\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 See SSL Best Practices for a full list of the recommended security changes to be applied.\nApply Recommended Security Measures Warning\rDisabling specific TLS versions or specific Cipher Suites can have impact on other applications as well as their communication capabilities with third party systems and services. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\rApply the settings by following these instructions:\nCopy from one of the application servers the Cortex.Innovation.Install.SSLBestPractices.ps1 file extracted during the Make Installation Artefacts Available step into a suitable location on the Web Application Server.\nOpen a Windows PowerShell (x64) window as administrator.\nChange the location to the folder where the Cortex.Innovation.Install.SSLBestPractices.ps1 file was copied to using the following command, modifying the path as necessary:\ncd \"C:\\Install\" Run the Cortex.Innovation.Install.SSLBestPractices.ps1 script using the following command:\n.\\Cortex.Innovation.Install.SSLBestPractices.ps1 To use all the recommended settings click Apply all to the first prompt.\nTo selectively apply each setting select Choose which to apply. Each change will then be prompted with a Yes/No confirmation before applying.\nRestart the machine when the script asks.\nAdditional Application Server Requirements These requirements apply to each of the Application Servers.\nSecurity Requirements Installation User A domain user which is a member of the Local Administrators group on all Application Servers must be available to perform the installation.\nNext Steps? Install Grafana Windows Server Standard and Datacenter editions are supported. Filesystem must be NTFS and networking must use IPv4. Linux is not supported, but may be in the future. ↩︎\nIIS is supported; other web servers, including IIS Express are not supported. ↩︎\nShips as a windows role within Windows Server 2019. ↩︎\nShips as a windows role within Windows Server 2016. ↩︎\nInstalled during the Install IIS Basic Authentication configuration steps. ↩︎\n","categories":"","description":"Information about the prerequisites required on each server type for installation.","excerpt":"Information about the prerequisites required on each server type for installation.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/prerequisites/","tags":"","title":"Prerequisites"},{"body":"Prerequisites The prerequisites required for each server role (as described in Architecture) are laid out in this guide. These must be considered before undertaking installation.\nHardware Requirements Note\rThe recommended number of servers is 5, and allows each server role instance to be installed on its own server.\rServer Role Servers Required CPU Cores (\u003e 2GHz) RAM (GB) Disk (GB) Load Balancer 11 4+ Recommended\n2 Minimum 8+ Recommended\n4 Minimum 50+ Recommended\n30 Minimum\n5+ free on installation drive Application Server 3 Bronze availability2\n5 Silver availability\n7 Gold availability\n9 Platinum availability 4+ Recommended\n2 Minimum 16+ Recommended\n8 Minimum 75+ Recommended\n60 Minimum\n40+ free on %ProgramData% drive Web Application Server 1 4+ Recommended\n2 Minimum 8+ Recommended\n4 Minimum 75+ Recommended\n50 Minimum\n30+ free on installation drive Software Requirements Server Role Windows Server3 SQL Server4 .Net PowerShell5 IIS6 Other Software Load Balancer 2019 (x64) Recommended\n2016 (x64) Framework 4.7.1 5.1 Application Server 2019 (x64) Recommended\n2016 (x64) Framework 4.7.1 5.1 Web Application Server 2019 (x64) Recommended\n2016 (x64) 2019\n2016\n2016 Express Framework 4.7.1 5.1 10.0.177637\n10.0.143938\nURL Rewrite Module 2.1 Microsoft Web Deploy 3.0 or later\nVisual C++ Redistributable 2013 (x64) Domain Requirements All servers must be on the same domain and cannot be domain controllers.\nDNS Requirements The installation requires IP to hostname resolution to be available. Please ensure that you have the appropriate pointer (PTR) records configured on the DNS server for all of your servers (Web, Application and Load Balancer).\nLicensing Requirements A valid Cortex licence file and Cortex Innovation feature identifier must be procured from Cortex. The feature identifier is a GUID which will be used when configuring the Gateway installation. The licence file is needed when installing the Web Application server and it should contain fingerprints for the Web Application Server and each Application Server.\nTo get a licence file and feature identifier take the following steps:\nCopy the following template to a text file:\nWeb Application Server MachineID: Fingerprint: Application Server 1 MachineID: Fingerprint: Application Server 2 MachineID: Fingerprint: Application Server 3 MachineID: Fingerprint: Please also include a suitable Cortex Innovation feature identifier. Extract Cortex Innovation 2022.9 - Licence Fingerprint Generator.zip.\nFrom that folder, copy Cortex.Licensing.FingerprintGeneration.exe to the Web Application server.\nDouble-click Cortex.Licensing.FingerprintGeneration.exe to run it. A command line window will appear, containing a machine identifier and fingerprint, e.g:\nMachineID: WEBAPP-SERVER Fingerprint: 111118BA104C928319E0CBAE30844CF8B7FD8BC414D1567844D1D0830089F1C9BF5C6 Copy the output (machine identifier and fingerprint) to the Web Application Server section of the text file created in the initial step. Note that the machine identifier can be changed to any string, provided that it is different for each server.\nFor each Application Server take the following steps:\nCopy Cortex.Licensing.FingerprintGeneration.exe to the Application server.\nDouble-click Cortex.Licensing.FingerprintGeneration.exe to run it. A command line window will appear, containing a machine identifier and fingerprint, e.g:\nMachineID: APP-SERVER1 Fingerprint: 111118BA104C928319E0CBAE30844CF8B7FD8BC414D1567844D1D0830089F1C9BF5C6 Copy the output (machine identifier and fingerprint) to one of the Application Server sections of the text file created in the initial step. Note that the machine identifier can be changed to any string, provided that it is different for each server.\nRequest a licence and feature identifier by raising a case in the Cortex Service Portal, including the contents of the text file containing all of the fingerprint and machine information in the body of the case.\nWhen the licence and feature identifier have arrived, copy the file Cortex.lic to %ProgramData%\\Cortex\\Licences on the Web Application Server, creating the Cortex and Licences folders if they don’t exist. Save the feature identifier for use when Installing Gateway.\nWeb Browser Requirements Gateway supports the latest versions of the following browsers:\nChrome Edge Firefox Additional Load Balancer Server Requirements Filesystem Requirements If using the included gobetween load balancer, Network Discovery and File Sharing must be enabled on the Load Balancer Server:\nOpen File Explorer. Click Network on the left. A banner similar to the following will appear if Network Discovery and File Sharing is turned off: Network and File Discovery Disabled\rClick the banner. Click Turn on network discovery and file sharing: Enable Network and File Discovery\rAlternative Load Balancer Requirements Innovation has a gobetween load balancer included that isn’t highly available; It is possible to use an alternative. The requirements for installing an alternative load balancer are as follows:\nMust support a round robin (or similar) method of load balancing to specified ports on 3 nodes. Must be able to health check each node by running a predefined batch script (ApiGatewayTypeHealthcheck.bat, which resides in the gobetween folder of the Cortex Innovation 2022.9 - App Server Install Scripts) that returns 1 for healthy and 0 for unhealthy. Must be able to access each of the Application Servers via HTTPS. Ideally it should be highly available to avoid a single point of failure in the system. Additional Application Server Requirements Filesystem Requirements All Application Servers must use an NTFS filesystem.\nNetwork Discovery and File Sharing should be enabled on each Application Server:\nOpen File Explorer. Click Network on the left. A banner similar to the following will appear if Network Discovery and File Sharing is turned off: Network and File Discovery Disabled\rClick the banner. Click Turn on network discovery and file sharing: Enable Network and File Discovery\rService Requirements The following Windows Services must be running on all Application Servers:\nRemote Registry Windows Event Log Performance Logs \u0026 Alerts Security Requirements Installation User A domain user which is a member of the Local Administrators group on all Application Servers and Load Balancer Server must be available to run the installation scripts. This is a prerequisite of Microsoft Service Fabric, which is the HA platform that Cortex Innovation is built upon.\nAntivirus Exclusions It is advised (by Microsoft Service Fabric) that the following antivirus exclusions are created on each Application Server to reduce antivirus processing on Service Fabric artefacts:\nFolder Exclusions:\n%ProgramFiles%\\Microsoft Service Fabric %ProgramData%\\SF %ProgramData%\\SF\\Logs Process Exclusions:\nFabric.exe FabricHost.exe FabricInstallerService.exe FabricSetup.exe FabricDeployer.exe ImageBuilder.exe FabricGateway.exe FabricDCA.exe FabricFAS.exe FabricUOS.exe FabricRM.exe FileStoreService.exe A script is provided during installation to add these exclusions for Windows Defender. If any other antivirus software is running, these will need to be added manually.\nIf adding the exclusions manually, the Process Exclusions should be done before installation occurs, as the processes will be used during installation of the application and antivirus software can cause the installation to fail or timeout. Folder Exclusions may need to be added after installation has occurred as some antivirus software needs the folders to exist.\nPort Requirements Cortex Innovation and Microsoft Service Fabric require a range of firewall ports to be opened between the servers and specific services.\nIf you are using Windows Firewall, some ports are opened during installation and others are opened dynamically as needed. If any other firewall is used, it will be necessary to add the rules described in Port Requirements to open the correct ports.\nThe Cortex.Innovation.Test.PortUsage.ps1 script is provided during installation to test the ports on each Application Server and make sure they do not overlap with any other programs; most ports may be altered if this is the case, the description will say if this is not possible.\nCertificate Requirements Note\rFor production systems it is recommended that X.509 SSL wildcard certificates are obtained from a Certificate Authority and used for installation. For non-production systems, certificates can be omitted from installation and it will create and use self-signed certificates. This may prevent 3rd parties that require valid certificate verification to access the API Gateway Service.\rAn X.509 SSL wildcard certificate should be used to:\nSecure communication between the load balancer and the nodes on the Application Servers. Secure communication between the Application Services. Allow Application Services to identify themselves to clients such as Gateway. Prevent unauthorised nodes from joining the HA cluster. Connect to Service Fabric Explorer from each of the Application Servers. The certificate can be obtained from a Certificate Authority, such as Let’s Encrypt, and must meet the following requirements:\nSubject field must be in a wildcard format, pertaining to the domain of the Application Servers (e.g. CN=*.domain.com). Subject alternative names must include any additional host names that should be able to be used to access the API Gateway Service. Certificate file must be in a .PFX file format, with a known password. Certificate file must contain the full chain of certificates. Certificate file must include the private key. Key Usage extension must have a value of Digital Signature, Key Encipherment (a0). Enhanced Key Usage must include Server Authentication and Client Authentication. This file should be placed in a known location on the Application Server where the installation scripts will be run. This location will be required when running the installation script.\nIf required, a separate X.509 SSL certificate can be obtained to be used by the load balancer to communicate with the Application Services. It must meet all of the other requirements laid out above, except the subject field can also be the FQDN of the load balancer (e.g. CN=machine-name.domain.com).\nWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rTLS Requirements There is a set of non-compulsory security measures, recommended to be applied to the Application Servers, in order to prevent potential attacks that exploit known industry security vulnerabilities. This includes disabling all versions of SSL and TLS apart from TLS 1.2. And disabling all cipher suites apart from the following:\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 See SSL Best Practices for a full list of the security changes which will be applied. The Cortex.Innovation.Install.Multiple.SSLBestPractices.ps1 script is provided during installation to apply these security changes to the Application Servers.\nAdditional Web Application Server Requirements Security Requirements Installation User Domain users must be available to run the Application Pools for Gateway and Flow Debugger Service. These users must be given Log on as a service and Log on as a batch job permissions otherwise the Application Pools will not be able to run. Information about how to do this will be given during installation.\nFor Flow Debugger Service, the NETWORK SERVICE user can also be used.\nDomain Requirements For Gateway, only Windows domains with an Active Directory domain controller running Active Directory Domain Services are supported.\nSupported versions of Active Directory are listed below:\nVersion Verified? Supported From Supported Until Windows Server 2003 ✓ Cortex v2022.9 To be evaluated Windows Server 2003 R2 Cortex v2022.9 To be evaluated Windows Server 2008 Cortex v2022.9 To be evaluated Windows Server 2008 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2012 Cortex v2022.9 To be evaluated Windows Server 2012 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2016 ✓ Cortex v2022.9 To be evaluated Windows Server 2019 Cortex v2022.9 To be evaluated Windows Server 2022 Cortex v2022.9 To be evaluated Certificate Requirements Both Gateway and the Flow Debugger Service require an X.509 SSL certificate to be installed on the Web Application Server. The certificate must have the following properties:\nEnhanced Key Usage: Server Authentication and Client Authentication Subject Alternative Names (SAN): At minimum the FQDN of the Server. It can also include NetBIOS Name, IP address, localhost, 127.0.0.1 If the user tries to navigate to an address not in the SAN list, then they will receive a certificate error.\nWildcard certificates and self-signed certificates can also be used. However, self-signed certificates are not recommended for production instances. Details on how to create a self-signed certificate can be found at Create Self-Signed Certificates.\nThe certificate may be the same one used for the Application Server installation.\nMore information about importing the certificate is given during installation.\nTLS Requirements There is a set of non-compulsory security measures, recommended to be applied to the Web Application Server, in order to prevent potential attacks that exploit known industry security vulnerabilities. This includes disabling all versions of SSL and TLS apart from TLS 1.2. And disabling all cipher suites apart from the following:\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 See SSL Best Practices for a full list of the security changes which will be applied. The Cortex.Innovation.Install.SSLBestPractices.ps1 script is provided during installation to apply these security changes to the Web Application Server.\nNext Steps? Install Application Servers and Load Balancer A software-based load balancer called gobetween is provided with the platform. This must be installed on its own server as it doesn’t support routing traffic to itself. It also doesn’t currently support HA, but it may be possible to use multiple gobetween load balancers with Anycast network addressing and routing to provide high availability, as described in https://en.wikipedia.org/wiki/Anycast; however, this has not been verified yet. It is possible to use an alternative load balancer to the one provided. ↩︎\nApplication Servers support HA via clustering. A cluster must consist of a minimum of 3 nodes, and the number of nodes must be an odd number to ensure a quorum. Currently only the Bronze availability (3 nodes) is supported. Silver, Gold and Platinum support will be added in future. ↩︎\nWindows Server Standard and Datacenter editions are supported. Filesystem must be NTFS and networking must use IPv4. Linux is not supported, but may be in the future. ↩︎\nSQL Server Express, Standard and Enterprise are supported. Other databases are not supported. Note that Transparent Data Encryption is not supported on SQL Server Express. ↩︎\nPowerShell 5.1 ships with Windows Server 2016 and 2019. ↩︎\nIIS is supported; other web servers, including IIS Express are not supported. ↩︎\nShips as a windows role within Windows Server 2019. ↩︎\nShips as a windows role within Windows Server 2016. ↩︎\n","categories":"","description":"Information about the prerequisites required on each server type for installation.","excerpt":"Information about the prerequisites required on each server type for installation.","ref":"/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/prerequisites/","tags":"","title":"Prerequisites"},{"body":"Prerequisites The prerequisites required for a single server (as described in Architecture) are laid out in this guide. These must be considered before undertaking installation.\nHardware Requirements Note\rThis configuration is not recommended for production servers that are required to scale and support HA.\rServer Role Servers Required CPU Cores (\u003e 2GHz) RAM (GB) Disk (GB) Single Server\nApplication Server +\nWeb Application Server 1 4+ Recommended\n2 Minimum 16+ Recommended\n12 Minimum 150+ Recommended\n100 Minimum\n30+ free on installation drive\n40+ free on %ProgramData% drive Software Requirements Server Role Windows Server1 SQL Server2 .Net PowerShell3 IIS4 Other Software Single Server\nApplication Server +\nWeb Application Server 2019 (x64) Recommended\n2016 (x64) 2019\n2016\n2016 Express Framework 4.7.1 5.1 10.0.177635\n10.0.143936\nURL Rewrite Module 2.1 Microsoft Web Deploy 3.0 or later\nVisual C++ Redistributable 2013 (x64) Domain Requirements The server must be on a domain and cannot be a domain controller.\nDNS Requirements The installation requires IP to hostname resolution to be available. Please ensure that you have the appropriate pointer (PTR) records configured on the DNS server for the server.\nLicensing Requirements A valid Cortex licence file and Cortex Innovation feature identifier must be procured from Cortex. The feature identifier is a GUID which will be used when configuring the Gateway installation. The licence file is needed when installing the server and it should contain that server’s fingerprint.\nTo get a licence file and feature identifier take the following steps:\nCopy the following template to a text file:\nWeb Application/Application Server MachineID: Fingerprint: Please also include a suitable Cortex Innovation feature identifier. Extract Cortex Innovation 2022.9 - Licence Fingerprint Generator.zip.\nFrom that folder, copy Cortex.Licensing.FingerprintGeneration.exe to the server.\nDouble-click Cortex.Licensing.FingerprintGeneration.exe to run it. A command line window will appear, containing a machine identifier and fingerprint, e.g:\nMachineID: SERVER Fingerprint: 111118BA104C928319E0CBAE30844CF8B7FD8BC414D1567844D1D0830089F1C9BF5C6 Copy the output (machine identifier and fingerprint) to the Web Application/Application Server section of the text file created in the initial step. Note that the machine identifier can be changed to any string.\nRequest a licence and feature identifier by raising a case in the Cortex Service Portal, including the contents of the text file containing all of the fingerprint and machine information in the body of the case.\nWhen the licence and feature identifier have arrived, copy the file Cortex.lic to %ProgramData%\\Cortex\\Licences on the Web Application Server, creating the Cortex and Licences folders if they don’t exist. Save the feature identifier for use when Installing Gateway.\nWeb Browser Requirements Gateway supports the latest versions of the following browsers:\nChrome Edge Firefox Certificate Requirements Note\rFor production systems it is recommended that an X.509 SSL certificate is obtained from a Certificate Authority and used for installation. For non-production systems, certificates can be omitted from installation and it will create and use self-signed certificates. This may prevent 3rd parties that require valid certificate verification to access the API Gateway Service.\rAn X.509 SSL certificate (standard or wildcard) should be used to:\nAllow Application Services to identify themselves to clients such as Gateway. Prevent unauthorised nodes from joining the single node cluster. Connect to Service Fabric Explorer from the Application Server. Connect to Gateway. Allow Gateway to connect to the Flow Debugger Service. The certificate can be obtained from a Certificate Authority, such as Let’s Encrypt, and must meet the following requirements:\nSubject field must be in one of the following formats, depending on the certificate type: Standard certificates must use the standard format (e.g. CN=host.domain.com). Wildcard certificates must use the wildcard format, pertaining to the domain of the server (e.g. CN=*.domain.com). Subject alternative names must include any additional host names that should be able to be used to access the API Gateway Service. Subject Alternative Names (SAN): At minimum the FQDN of the server. It can also include NetBIOS Name, IP address, localhost, 127.0.0.1. It must include any additional host names that should be able to be used to access the API Gateway Service. Certificate file must be in a .PFX file format, with a known password. Certificate file must contain the full chain of certificates. Certificate file must include the private key. Key Usage extension must have a value of Digital Signature, Key Encipherment (a0). Enhanced Key Usage must include Server Authentication and Client Authentication. This file should be placed in a known location on the server. This location will be required when running the Application Server installation script.\nWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rTLS Requirements There is a set of non-compulsory security measures, recommended to be applied to the server, in order to prevent potential attacks that exploit known industry security vulnerabilities. This includes disabling all versions of SSL and TLS apart from TLS 1.2, and disabling all cipher suites apart from the following:\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 See SSL Best Practices for a full list of the security changes which will be applied. The Cortex.Innovation.Install.SSLBestPractices.ps1 script is provided during installation to apply these security changes to the server.\nAdditional Application Server Requirements Filesystem Requirements The server must use an NTFS filesystem.\nService Requirements The following Windows Services must be running on the server:\nRemote Registry Windows Event Log Performance Logs \u0026 Alerts Security Requirements Installation User A domain user which is a member of the Local Administrators group on the server must be available to run the installation scripts. This is a prerequisite of Microsoft Service Fabric, which is the platform that Cortex Innovation is built upon.\nAntivirus Exclusions It is advised (by Microsoft Service Fabric) that the following antivirus exclusions are created on the server to reduce antivirus processing on Service Fabric artefacts:\nFolder Exclusions:\n%ProgramFiles%\\Microsoft Service Fabric %ProgramData%\\SF %ProgramData%\\SF\\Logs Process Exclusions:\nFabric.exe FabricHost.exe FabricInstallerService.exe FabricSetup.exe FabricDeployer.exe ImageBuilder.exe FabricGateway.exe FabricDCA.exe FabricFAS.exe FabricUOS.exe FabricRM.exe FileStoreService.exe A script is provided during installation to add these exclusions for Windows Defender. If any other antivirus software is running, these will need to be added manually.\nIf adding the exclusions manually, the Process Exclusions should be done before installation occurs, as the processes will be used during installation of the application and antivirus software can cause the installation to fail or timeout. Folder Exclusions may need to be added after installation has occurred as some antivirus software needs the folders to exist.\nPort Requirements Cortex Innovation and Microsoft Service Fabric require a range of firewall ports to be opened between the server and specific services.\nIf you are using Windows Firewall, some ports are opened during installation and others are opened dynamically as needed. If any other firewall is used, it will be necessary to add the rules described in Port Requirements to open the correct ports.\nThe Cortex.Innovation.Test.PortUsage.ps1 script is provided during installation to test the ports on the server and make sure they do not overlap with any other programs; most ports may be altered if this is the case, the description will say if this is not possible.\nAdditional Web Application Server Requirements Security Requirements Installation User Domain users must be available to run the Application Pools for Gateway and Flow Debugger Service. These users must be given Log on as a service and Log on as a batch job permissions otherwise the Application Pools will not be able to run. Information about how to do this will be given during installation.\nFor Flow Debugger Service, the NETWORK SERVICE user can also be used.\nDomain Requirements For Gateway, only Windows domains with an Active Directory domain controller running Active Directory Domain Services are supported.\nSupported versions of Active Directory are listed below:\nVersion Verified? Supported From Supported Until Windows Server 2003 ✓ Cortex v2022.9 To be evaluated Windows Server 2003 R2 Cortex v2022.9 To be evaluated Windows Server 2008 Cortex v2022.9 To be evaluated Windows Server 2008 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2012 Cortex v2022.9 To be evaluated Windows Server 2012 R2 ✓ Cortex v2022.9 To be evaluated Windows Server 2016 ✓ Cortex v2022.9 To be evaluated Windows Server 2019 Cortex v2022.9 To be evaluated Windows Server 2022 Cortex v2022.9 To be evaluated Next Steps? Install Application Server Windows Server Standard and Datacenter editions are supported. Filesystem must be NTFS and networking must use IPv4. Linux is not supported, but may be in the future. ↩︎\nSQL Server Express, Standard and Enterprise are supported. Other databases are not supported. Note that Transparent Data Encryption is not supported on SQL Server Express. ↩︎\nPowerShell 5.1 ships with Windows Server 2016 and 2019. ↩︎\nIIS is supported; other web servers, including IIS Express are not supported. ↩︎\nShips as a windows role within Windows Server 2019. ↩︎\nShips as a windows role within Windows Server 2016. ↩︎\n","categories":"","description":"Information about the prerequisites required on each server type for installation.","excerpt":"Information about the prerequisites required on each server type for installation.","ref":"/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/prerequisites/","tags":"","title":"Prerequisites"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/releases/","tags":"","title":"Releases"},{"body":"\r","categories":"","description":"This section includes tutorials about post-installation setup of the Cortex Innovation platform.","excerpt":"This section includes tutorials about post-installation setup of the Cortex Innovation platform.","ref":"/docs/tutorials/setup/","tags":"","title":"Setup"},{"body":"","categories":"","description":"Information about setting up an observability platform for Innovation.","excerpt":"Information about setting up an observability platform for Innovation.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/","tags":"","title":"Add Observability to Innovation"},{"body":"","categories":"","description":"Information about installing an observability platform for Innovation.","excerpt":"Information about installing an observability platform for Innovation.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/","tags":"","title":"Add Observability to Innovation"},{"body":"Configuring Thresholds Configure Thresholds This section explains how to change the colour coding of thresholds set for the thresholded panels in the dashboards.\nLog in to your configured Grafana with a user that has the Admin role. To open a dashboard: Click the Dashboards icon in the side menu, and then click Browse. Click the folder name that the dashboards were imported to. Click the name of the dashboard you wish to modify to open it. Open the panel you wish to configure in edit mode: Click the title of the panel to display a drop-down menu. Click Edit. On the Edit Panel page, on the right-hand side, scroll down through the list of options until you reach the Thresholds section. You can change the value configured for the colours defined if the thresholds should be different to the default set for that panel. You can change the colours defined for the thresholds to be different to the default set for that panel. You can add additional threshold levels by clicking + add threshold and configuring the colours and numbers appropriately. E.g. on the Total Requests Errored panel on the Flow Execution Requests dashboard, you may wish to add a warning threshold level to be \u003e= 1 errors and change the critical threshold to be \u003e= 10. For this you should add a threshold and set the colour to your preferred colour, set the value to 1 and change the value for red to be 10. The threshold should be set to be an absolute value if it is a count e.g. error count, or a percentage if it is a rate e.g. success rate. Click Apply in the top right corner of the Edit Panel page. Save the changes to the dashboard by clicking on the save (disk) icon, in the top right of the dashboard. ","categories":"","description":"Instructions on how to configure thresholds in the Grafana Dashboard panels.","excerpt":"Instructions on how to configure thresholds in the Grafana Dashboard panels.","ref":"/docs/reference/observability/grafana/advanced-setup/configuring-thresholds/","tags":"","title":"Configuring Thresholds"},{"body":"\r","categories":"","description":"This section includes tutorials about developing automation using the Cortex Innovation platform.","excerpt":"This section includes tutorials about developing automation using the Cortex Innovation platform.","ref":"/docs/tutorials/development/","tags":"","title":"Development"},{"body":"Install Application Server This guide describes how to install the Application Server components on the server. Please ensure that the Prerequisites have been read before starting this installation.\nMake Installation Artefacts Available Copy the following artefacts to a folder on the server (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - App Services.zip Cortex Innovation 2022.9 - App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - App Server Install Scripts.zip file to a folder with the same name.\nInstall Microsoft .NET Framework 4.7.1 Microsoft Service Fabric requires a minimum of Microsoft .NET Framework 4.7.1 to be installed on the server.\nTo find the version of the framework that is installed:\nOn the Start menu, choose Run. In the open box, enter regedit.exe. You must have administrative credentials to run regedit.exe. In the Registry Editor, open the subkey HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full. If the Full subkey is not present, then you do not have the .NET Framework 4.5 or later installed. Check for a DWORD value named Release. The existence of the Release DWORD indicates the .NET Framework 4.5 or newer has been installed on that computer. If the value is 461308 or over then at least .NET Framework 4.7.1 is installed and no further steps need to be taken. If it is not installed, continue with the following steps to install it. To install .NET Framework 4.7.1:\nDownload the .NET Framework 4.7.1 installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. Apply Recommended Security Measures These are non-compulsory security measures, recommended to be applied to the server, in order to prevent potential attacks that exploit known industry security vulnerabilities.\nApplying these measures may impact other applications running on your server. Therefore, it is your responsibility to ensure that other applications and their clients will not be affected by the changes.\nOnly Use Recommended Encryption Algorithms and TLS Protocols A collection of registry settings need to be applied to guarantee your server is only using the recommended encryption algorithms and TLS protocols. Information about these settings can be found at SSL Best Practices.\nWarning\rDisabling specific TLS versions or specific Cipher Suites can have impact on Cortex components themselves as well as their communication capabilities with third party systems and services, e.g. Flow Debugger Service executing flows with blocks which communicate with 3rd parties via PowerShell or REST. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\rThe settings can be applied by running a script. Be aware that the server will be restarted when the script is run. Apply the settings by following these instructions:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Install.SSLBestPractices.ps1 script using the following command:\n.\\Cortex.Innovation.Install.SSLBestPractices.ps1 Note\rTo avoid answering all of the prompts -Override 0 can be added to the end of the script. This will automatically apply all settings and forcibly restart the server.\rIf -Override 0 has been specified no further steps need to be taken and you can move on to the next section when the server has restarted.\nTo use all the recommended settings click Apply all to the first prompt.\nTo selectively apply each setting select Choose which to apply. Each change will then be prompted with a Yes/No confirmation before applying.\nRestart the machine when the script asks.\nAdd Antivirus Exclusions If Windows Defender is not running on the server, ensure that the Antivirus Exclusions have been added to the running antivirus software on the server and continue to the next section, otherwise follow these steps: Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS name or fully qualified domain name of the server:\n.\\Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 -ApplicationServers @(\"app-server1\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nA message will indicate that the script has completed successfully.\nCheck Port Usage To check all necessary ports are free, follow these steps. Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Test.PortUsage.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS name or fully qualified domain name of the server:\n.\\Cortex.Innovation.Test.PortUsage.ps1 -ApplicationServers @(\"app-server1\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nIf all ports are free, the script will report the following:\nAll ports required by Cortex Innovation are free\nIf this is the case, continue to the next section. Otherwise, consult the messages returned by the script, which will give details about how to modify the Cortex.Innovation.Install.Config.json configuration file, in the Cortex Innovation 2022.9 - App Server Install Scripts folder, to use different ports. This will be used later during installation.\nThe Cortex.Innovation.Test.PortUsage.ps1 script cannot currently re-check modified ports in the configuration file so these need to be manually checked to see that they are free.\nConfigure Installation Script In the Cortex Innovation 2022.9 - App Server Install Scripts folder, locate the Cortex.Innovation.Install.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs\rSelf-Signed Certs\r.\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\") ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-app-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\") ` -UseSelfSignedCertificates ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-app-install-log.txt\" Name Description AppServicesPath Configure this value with the location of the App Services zip file on the server. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the server. ApiGatewayBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows). Currently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when upgrading Gateway. ApiGatewayBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows). This should be Cortex Encrypted. This value will be needed later, when upgrading Gateway. CustomerName A name identifying the platform being installed. This must have no spaces or symbols. It will be appended to the node names that are displayed in Service Fabric Explorer. ApplicationServerIPv4Addresses The IPv4 address of the server. ServerCertificatePath The local path of a .PFX certificate file on the server. Environment variables cannot be used. This is only needed if installing with CA Certificates (Recommended). The certificate should meet the Certificate Requirements. This certificate will be used for: Securing communication between the Application Services.Allowing Application Services to identify themselves to clients such as Gateway.Preventing unauthorised nodes from joining the single node cluster.Connecting to Service Fabric Explorer from each of the Application Servers.\rWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rServerCertificatePwd The password for the .PFX certificate file specified in ServerCertificatePath. This is only needed if installing with CA Certificates (Recommended). UseSelfSignedCertificates Installs Application Services and required infrastructure using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. SkipLoadBalancer Installs Application Services and required infrastructure without installing a load balancer. Credential The credentials of the user which will be used to perform remote operations on the server. It must be a domain user that is a member of the local Administrators group on the server. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. The ApiGatewayBasicAuthUserName and ApiGatewayBasicAuthPwd will be needed later, when upgrading Gateway.\nNote\rMore advanced configuration (such as changing ports) can be undertaken by modifying the Cortex.Innovation.Install.Config.json file but this shouldn’t be required for most installations. More information about this can be found at Advanced Application Server and Load Balancer Configuration Changes.\rSave and close Cortex.Innovation.Install.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 -WhatIf Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -WhatIf -AcceptEULA Run the PowerShell command to test the installation script.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ.\nWait for the command to finish. It will display the output of the installation command without making any changes to the system.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are no errors, continue to the next section; otherwise, check if the errors have any instructions for rectifying the issue and follow them.\nIf there are no useful instructions, check that all previous steps have been followed correctly and, if not, rectify it and run the command again. If this does not work, please contact Cortex Service Portal for further assistance. The WhatIf script will have created a temporary version of the config file in the script location, showing what changes would be made to it when the script runs. The name is appended with -WhatIf (e.g. Cortex.Innovation.Install.Config-WhatIf.json). This file can be provided when obtaining support.\nRun Installation Script Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install HA Services and the required infrastructure.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ. This should be entered carefully and recorded as it may be needed if seeking support from Cortex Service Portal. Press OK.\nWait for the script to finish running. This should take approximately 10 minutes.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, check your configuration files, and retry the installation.\nIn some circumstances, retrying may error due to components being installed already. In this case please run the following command, followed by the original installation command:\n.\\Cortex.Innovation.Uninstall.ps1 -SkipLoadBalancer If the errors do not give any instructions on how to rectify, see Troubleshooting During Installation for further information; if this does not help then please contact Cortex Service Portal for assistance.\nCheck Application Services Log on to the server.\nImport the certificate, used in the ServerCertificatePath parameter of the Configure Installation Script section, to your Current User certificate store. This can be achieved by double clicking on the certificate .PFX file and following the wizard.\nIf using self-signed certificates, the certificate can be retrieved by using the Manage Computer Certificates tool in Windows to export the CortexServerCertificate from the Personal store and then importing it to the Current User store by double-clicking on it and following the wizard.\nOpen a web browser.\nNavigate to https://server.domain.com:9080/Explorer, where server.domain.com is the fully qualified domain name of the server. Replace 9080 with new httpGatewayEndpointPort value if it was changed during configuration.\nThe screen should resemble that in the following figure: Healthy Service Fabric Explorer Cluster\rThe status circles should be entirely green - this indicates that the node and all services and instances are healthy. Other status pages can be accessed by expanding items in the leftmost pane. Issues can be tracked down to the failing component by expanding items with warning triangles or error icons on. The next few diagrams show the status pages for a healthy system.\nAfter expanding the application, clicking on any of the services should display a green circle and Status = Active:\nHealthy Service Fabric Explorer Service\rAfter expanding either of the services, clicking on any of the instances/partitions should display a green circle and Status = Ready:\nHealthy Service Fabric Explorer Instance\rClicking on any of the nodes at the bottom of the leftmost pane should display a green circle and Status = Up:\nHealthy Service Fabric Explorer Node\rIf any warning triangles appear, wait for 5 minutes or so as the cluster may still be starting up. If the cluster looks OK, go to the next section.\nIf the warnings persist or anything on the screen goes red, expand the items to find the individual services and instances which have errors or warnings. Warnings should not be ignored as they can indicate that the service can’t start but is still in the retry phase. Error and warning messages should be displayed on the status screens and should indicate what is wrong.\nIf no useful message can be seen here, the service log files may contain more information. These can be found on the server at:\n%ProgramData%/Cortex/Cortex API Gateway Service %ProgramData%/Cortex/Cortex Flow Execution Service If no solution can be found, please contact Cortex Service Portal for further assistance.\nPreserve installation files Ensure that the installation files are backed up or kept on the server, especially the scripts and config files that have been modified. This will make it easier to perform further actions in future, such as troubleshooting, certificate rollover, uninstallation, reinstallation and updates.\nNext Steps? Install Web Application Server ","categories":"","description":"Information about installing the Application Server.","excerpt":"Information about installing the Application Server.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/install-application-server/","tags":"","title":"Install Application Server"},{"body":"Install Application Server This guide describes how to install the Application Server components on the server. Please ensure that the Prerequisites have been read before starting this installation.\nMake Installation Artefacts Available Copy the following artefacts to a folder on the server (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - App Services.zip Cortex Innovation 2022.9 - App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - App Server Install Scripts.zip file to a folder with the same name.\nInstall Microsoft .NET Framework 4.7.1 Microsoft Service Fabric requires a minimum of Microsoft .NET Framework 4.7.1 to be installed on the server.\nTo find the version of the framework that is installed:\nOn the Start menu, choose Run. In the open box, enter regedit.exe. You must have administrative credentials to run regedit.exe. In the Registry Editor, open the subkey HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full. If the Full subkey is not present, then you do not have the .NET Framework 4.5 or later installed. Check for a DWORD value named Release. The existence of the Release DWORD indicates the .NET Framework 4.5 or newer has been installed on that computer. If the value is 461308 or over then at least .NET Framework 4.7.1 is installed and no further steps need to be taken. If it is not installed, continue with the following steps to install it. To install .NET Framework 4.7.1:\nDownload the .NET Framework 4.7.1 installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. Apply Recommended Security Measures These are non-compulsory security measures, recommended to be applied to the server, in order to prevent potential attacks that exploit known industry security vulnerabilities.\nApplying these measures may impact other applications running on your server. Therefore, it is your responsibility to ensure that other applications and their clients will not be affected by the changes.\nOnly Use Recommended Encryption Algorithms and TLS Protocols A collection of registry settings need to be applied to guarantee your server is only using the recommended encryption algorithms and TLS protocols. Information about these settings can be found at SSL Best Practices.\nWarning\rDisabling specific TLS versions or specific Cipher Suites can have impact on Cortex components themselves as well as their communication capabilities with third party systems and services, e.g. Flow Debugger Service executing flows with blocks which communicate with 3rd parties via PowerShell or REST. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\rThe settings can be applied by running a script. Be aware that the server will be restarted when the script is run. Apply the settings by following these instructions:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Install.SSLBestPractices.ps1 script using the following command:\n.\\Cortex.Innovation.Install.SSLBestPractices.ps1 Note\rTo avoid answering all of the prompts -Override 0 can be added to the end of the script. This will automatically apply all settings and forcibly restart the server.\rIf -Override 0 has been specified no further steps need to be taken and you can move on to the next section when the server has restarted.\nTo use all the recommended settings click Apply all to the first prompt.\nTo selectively apply each setting select Choose which to apply. Each change will then be prompted with a Yes/No confirmation before applying.\nRestart the machine when the script asks.\nAdd Antivirus Exclusions If Windows Defender is not running on the server, ensure that the Antivirus Exclusions have been added to the running antivirus software on the server and continue to the next section, otherwise follow these steps: Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS name or fully qualified domain name of the server:\n.\\Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 -ApplicationServers @(\"app-server1\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nA message will indicate that the script has completed successfully.\nCheck Port Usage To check all necessary ports are free, follow these steps. Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Test.PortUsage.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS name or fully qualified domain name of the server:\n.\\Cortex.Innovation.Test.PortUsage.ps1 -ApplicationServers @(\"app-server1\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nIf all ports are free, the script will report the following:\nAll ports required by Cortex Innovation are free\nIf this is the case, continue to the next section. Otherwise, consult the messages returned by the script, which will give details about how to modify the Cortex.Innovation.Install.Config.json configuration file, in the Cortex Innovation 2022.9 - App Server Install Scripts folder, to use different ports. This will be used later during installation.\nThe Cortex.Innovation.Test.PortUsage.ps1 script cannot currently re-check modified ports in the configuration file so these need to be manually checked to see that they are free.\nConfigure Installation Script In the Cortex Innovation 2022.9 - App Server Install Scripts folder, locate the Cortex.Innovation.Install.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs\rSelf-Signed Certs\r.\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\") ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-app-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\") ` -UseSelfSignedCertificates ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-app-install-log.txt\" Name Description AppServicesPath Configure this value with the location of the App Services zip file on the server. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the server. ApiGatewayBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows). Currently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when installing Gateway. ApiGatewayBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows). This should be Cortex Encrypted. This value will be needed later, when installing Gateway. CustomerName A name identifying the platform being installed. This must have no spaces or symbols. It will be appended to the node names that are displayed in Service Fabric Explorer. ApplicationServerIPv4Addresses The IPv4 address of the server. ServerCertificatePath The local path of a .PFX certificate file on the server. Environment variables cannot be used. This is only needed if installing with CA Certificates (Recommended). The certificate should meet the Certificate Requirements. This certificate will be used for: Securing communication between the Application Services.Allowing Application Services to identify themselves to clients such as Gateway.Preventing unauthorised nodes from joining the single node cluster.Connecting to Service Fabric Explorer from each of the Application Servers.\rWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rServerCertificatePwd The password for the .PFX certificate file specified in ServerCertificatePath. This is only needed if installing with CA Certificates (Recommended). UseSelfSignedCertificates Installs Application Services and required infrastructure using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. SkipLoadBalancer Installs Application Services and required infrastructure without installing a load balancer. Credential The credentials of the user which will be used to perform remote operations on the server. It must be a domain user that is a member of the local Administrators group on the server. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. The ApiGatewayBasicAuthUserName and ApiGatewayBasicAuthPwd will be needed later, when installing Gateway.\nNote\rMore advanced configuration (such as changing ports) can be undertaken by modifying the Cortex.Innovation.Install.Config.json file but this shouldn’t be required for most installations. More information about this can be found at Advanced Application Server and Load Balancer Configuration Changes.\rSave and close Cortex.Innovation.Install.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 -WhatIf Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -WhatIf -AcceptEULA Run the PowerShell command to test the installation script.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ.\nWait for the command to finish. It will display the output of the installation command without making any changes to the system.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are no errors, continue to the next section; otherwise, check if the errors have any instructions for rectifying the issue and follow them.\nIf there are no useful instructions, check that all previous steps have been followed correctly and, if not, rectify it and run the command again. If this does not work, please contact Cortex Service Portal for further assistance. The WhatIf script will have created a temporary version of the config file in the script location, showing what changes would be made to it when the script runs. The name is appended with -WhatIf (e.g. Cortex.Innovation.Install.Config-WhatIf.json). This file can be provided when obtaining support.\nRun Installation Script Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install HA Services and the required infrastructure.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ. This should be entered carefully and recorded as it may be needed if seeking support from Cortex Service Portal. Press OK.\nWait for the script to finish running. This should take approximately 10 minutes.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, check your configuration files, and retry the installation.\nIn some circumstances, retrying may error due to components being installed already. In this case please run the following command, followed by the original installation command:\n.\\Cortex.Innovation.Uninstall.ps1 -SkipLoadBalancer If the errors do not give any instructions on how to rectify, see Troubleshooting During Installation for further information; if this does not help then please contact Cortex Service Portal for assistance.\nCheck Application Services Log on to the server.\nImport the certificate, used in the ServerCertificatePath parameter of the Configure Installation Script section, to your Current User certificate store. This can be achieved by double clicking on the certificate .PFX file and following the wizard.\nIf using self-signed certificates, the certificate can be retrieved by using the Manage Computer Certificates tool in Windows to export the CortexServerCertificate from the Personal store and then importing it to the Current User store by double-clicking on it and following the wizard.\nOpen a web browser.\nNavigate to https://server.domain.com:9080/Explorer, where server.domain.com is the fully qualified domain name of the server. Replace 9080 with new httpGatewayEndpointPort value if it was changed during configuration.\nThe screen should resemble that in the following figure: Healthy Service Fabric Explorer Cluster\rThe status circles should be entirely green - this indicates that the node and all services and instances are healthy. Other status pages can be accessed by expanding items in the leftmost pane. Issues can be tracked down to the failing component by expanding items with warning triangles or error icons on. The next few diagrams show the status pages for a healthy system.\nAfter expanding the application, clicking on any of the services should display a green circle and Status = Active:\nHealthy Service Fabric Explorer Service\rAfter expanding either of the services, clicking on any of the instances/partitions should display a green circle and Status = Ready:\nHealthy Service Fabric Explorer Instance\rClicking on any of the nodes at the bottom of the leftmost pane should display a green circle and Status = Up:\nHealthy Service Fabric Explorer Node\rIf any warning triangles appear, wait for 5 minutes or so as the cluster may still be starting up. If the cluster looks OK, go to the next section.\nIf the warnings persist or anything on the screen goes red, expand the items to find the individual services and instances which have errors or warnings. Warnings should not be ignored as they can indicate that the service can’t start but is still in the retry phase. Error and warning messages should be displayed on the status screens and should indicate what is wrong.\nIf no useful message can be seen here, the service log files may contain more information. These can be found on the server at:\n%ProgramData%/Cortex/Cortex API Gateway Service %ProgramData%/Cortex/Cortex Flow Execution Service If no solution can be found, please contact Cortex Service Portal for further assistance.\nPreserve installation files Ensure that the installation files are backed up or kept on the server, especially the scripts and config files that have been modified. This will make it easier to perform further actions in future, such as troubleshooting, certificate rollover, uninstallation, reinstallation and updates.\nNext Steps? Install Web Application Server ","categories":"","description":"Information about installing the Application Server.","excerpt":"Information about installing the Application Server.","ref":"/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/install-application-server/","tags":"","title":"Install Application Server"},{"body":"Install Application Servers and Load Balancer This guide describes how to install the Application Servers and Load Balancer Server. Please ensure that Prerequisites for adding Innovation to v7.2 have been read before starting this installation.\nMake Installation Artefacts Available Choose one of the Application Servers to be used for installation, and copy the following artefacts to a folder on it (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - App Services.zip Cortex Innovation 2022.9 - App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - App Server Install Scripts.zip file to a folder with the same name.\nInstall Microsoft .NET Framework 4.7.1 Microsoft Service Fabric requires a minimum of Microsoft .NET Framework 4.7.1 to be installed on each Application Server.\nTo find the version of the framework that is installed:\nOn the Start menu, choose Run. In the open box, enter regedit.exe. You must have administrative credentials to run regedit.exe. In the Registry Editor, open the subkey HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full. If the Full subkey is not present, then you do not have the .NET Framework 4.5 or later installed. Check for a DWORD value named Release. The existence of the Release DWORD indicates the .NET Framework 4.5 or newer has been installed on that computer. If the value is 461308 or over then at least .NET Framework 4.7.1 is installed and no further steps need to be taken. If it is not installed, continue with the following steps to install it. To install .NET Framework 4.7.1:\nDownload the .NET Framework 4.7.1 installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. Apply Recommended Security Measures These are non-compulsory security measures, recommended to be applied to Application Servers and the Load Balancer Server, in order to prevent potential attacks that exploit known industry security vulnerabilities.\nApplying these measures may impact other applications running on your servers. Therefore, it is your responsibility to ensure that other applications and their clients will not be affected by the changes.\nOnly Use Recommended Encryption Algorithms and TLS Protocols A collection of registry settings need to be applied to guarantee your server is only using the recommended encryption algorithms and TLS protocols. Information about these settings can be found at SSL Best Practices.\nWarning\rDisabling specific TLS versions or specific Cipher Suites can have impact on Cortex components themselves as well as their communication capabilities with third party systems and services, e.g. Flow Debugger Service executing flows with blocks which communicate with 3rd parties via PowerShell or REST. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\rThe settings can be applied by running a script. Be aware that each server will be restarted when the script is run. Apply the settings by following these instructions:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Install.Multiple.SSLBestPractices.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS names or fully qualified domain names of the Application Servers and the LoadBalancerServer value to contain the NETBIOS names or fully qualified domain name of the Load Balancer Server (remove the LoadBalancerServer parameter if using an alternative load balancer):\n.\\Cortex.Innovation.Install.Multiple.SSLBestPractices.ps1 -ApplicationServers @(\"app-server1\", \"app-server2\", \"app-server3\") -LoadBalancerServer \"lb-server\" Note\rTo avoid answering all of the prompts -Override 0 can be added to the end of the script. This will automatically apply all settings and forcibly restart the servers.\rA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK.\nIf -Override 0 has been specified no further steps need to be taken and you can move on to the next section when the servers have restarted.\nTo use all the recommended settings click Apply all to the each Apply Cortex recommended security best practices prompt.\nTo selectively apply each setting select Choose which to apply. Each change will then be prompted with a Yes/No confirmation before applying. This will need to be done for each server.\nRestart each machine when the script asks. The current machine will be restarted last, the PowerShell script will close at this time.\nAdd Antivirus Exclusions If Windows Defender is not running on the Application Servers, ensure that the Antivirus Exclusions have been added to the running antivirus software on each of the Application Servers and continue to the next section, otherwise follow these steps: Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS names or fully qualified domain names of the Application Servers:\n.\\Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 -ApplicationServers @(\"app-server1\", \"app-server2\", \"app-server3\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all Application Servers and press OK.\nA message will indicate that the script has completed successfully.\nCheck Port Usage To check all necessary ports are free, follow these steps. Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Test.PortUsage.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS names or fully qualified domain names of the Application Servers:\n.\\Cortex.Innovation.Test.PortUsage.ps1 -ApplicationServers @(\"app-server1\", \"app-server2\", \"app-server3\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all Application Servers and press OK.\nIf all ports are free, the script will report the following for each Application Server:\nAll ports required by Cortex Innovation are free\nIf this is the case, continue to the next section. Otherwise, consult the messages returned by the script, which will give details about how to modify the Cortex.Innovation.Install.Config.json configuration file, in the Cortex Innovation 2022.9 - App Server Install Scripts folder, to use different ports. This will be used later during installation.\nThe Cortex.Innovation.Test.PortUsage.ps1 script cannot currently re-check modified ports in the configuration file so these need to be manually checked to see that they are free.\nConfigure Installation Script In the Cortex Innovation 2022.9 - App Server Install Scripts folder, locate the Cortex.Innovation.Install.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs, Built-in Load Balancer\rSelf-Signed Certs, Built-in Load Balancer\rCA Certs, Alternative Load Balancer\rSelf-Signed Certs, Alternative Load Balancer\r.\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -LoadBalancerServerIPv4Address \"192.168.1.4\" ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -ClientCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ClientCertificatePwd \"myPassword\" ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -LoadBalancerServerIPv4Address \"192.168.1.4\" ` -UseSelfSignedCertificates ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -ClientCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ClientCertificatePwd \"myPassword\" ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -UseSelfSignedCertificates ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" Name Description AppServicesPath Configure this value with the location of the Application Services zip file on the Application Server used for installation. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the Application Server used for installation. ApiGatewayBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows).\nFor security reasons it is recommended that the default value BasicAuthUser should be changed.\nCurrently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when upgrading Gateway. ApiGatewayBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows). This password should be Cortex Encrypted. For security reasons it is recommended that the default value ADA9883B11BD4CDC908B8131B57944A4 should be changed. This value will be needed later, when upgrading Gateway. CustomerName A name identifying the platform being installed. This must have no spaces or symbols. It will be appended to the node names that are displayed in Service Fabric Explorer. ApplicationServerIPv4Addresses The IPv4 addresses of the Application Servers. The first of these must be the Application Server used for installation. LoadBalancerServerIPv4Address The IPv4 address of the Load Balancer Server. This is only needed if using the built-in load balancer. ServerCertificatePath The local path of a .PFX certificate file on the first Application Server in the ApplicationServerIPv4Addresses list. Environment variables cannot be used. This is only needed if installing with CA Certificates (Recommended). The certificate should meet the Certificate Requirements. This certificate will be used for: Securing communication between the Application Services.Allowing Application Services to identify themselves to clients such as Gateway.Preventing unauthorised nodes from joining the HA cluster.Connecting to Service Fabric Explorer from each of the Application Servers.\rWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rServerCertificatePwd The password for the .PFX certificate file specified in ServerCertificatePath. This is only needed if installing with CA Certificates (Recommended). ClientCertificatePath The local path of a .PFX certificate file on the first Application Server in the ApplicationServerIPv4Addresses list. This can be the same certificate as the ServerCertificatePath. Environment variables cannot be used. This is only needed if installing with CA Certificates (Recommended) and using the Built-In Load Balancer. The certificate should meet the Certificate Requirements.\nThis certificate will be used for: Securing communication between the load balancer and the nodes on the Application Servers.\rWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rClientCertificatePwd The password for the .PFX certificate file specified in ClientCertificatePath. This is only needed if installing with CA Certificates (Recommended) and using the Built-In Load Balancer. UseSelfSignedCertificates Installs Application Services and required infrastructure using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. SkipLoadBalancer Installs Application Services and required infrastructure without installing a load balancer. Use when using an alternative load balancer or no load balancer. Credential The credentials of the user which will be used to perform remote operations on the Application Servers. It must be a domain user that is a member of the local Administrators group on all servers. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. The ApiGatewayBasicAuthUserName and ApiGatewayBasicAuthPwd will be needed later, when upgrading Gateway.\nNote\rMore advanced configuration (such as changing ports) can be undertaken by modifying the Cortex.Innovation.Install.Config.json file but this shouldn’t be required for most installations. More information about this can be found at Advanced Application Server and Load Balancer Configuration Changes.\rSave and close Cortex.Innovation.Install.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 -WhatIf Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -WhatIf -AcceptEULA Run the PowerShell command to test the installation script.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ.\nWait for the command to finish. It will display the output of the installation command without making any changes to the system, to ensure things like communication between the servers are working.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are no errors, continue to the next section; otherwise, check if the errors have any instructions for rectifying the issue and follow them.\nIf there are no useful instructions, check that all previous steps have been followed correctly and, if not, rectify it and run the command again. If this does not work, please contact Cortex Service Portal for further assistance. The WhatIf script will have created a temporary version of the config file in the script location, showing what changes would be made to it when the script runs. The name is appended with -WhatIf (e.g. Cortex.Innovation.Install.Config-WhatIf.json). This file can be provided when obtaining support.\nRun Installation Script Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install HA Services and the required infrastructure.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ. This should be entered carefully and recorded as it may be needed if seeking support from Cortex Service Portal. Press OK.\nWait for the script to finish running. This should take approximately 10 minutes.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, check your configuration files, and retry the installation.\nIn some circumstances, retrying may error due to components being installed already. In this case please run the following command, followed by the original installation command:\n.\\Cortex.Innovation.Uninstall.ps1 If the errors do not give any instructions on how to rectify, see Troubleshooting During Installation for further information; if this does not help then please contact Cortex Service Portal for assistance.\nCheck Application Services Log on to one of the Application Servers.\nImport the client certificate, used in the ClientCertificatePath parameter of the Configure Installation Script section, to your Current User certificate store. This can be achieved by double clicking on the client certificate .PFX file and following the wizard.\nIf using self-signed certificates, the certificate can be retrieved by using the Manage Computer Certificates tool in Windows to export the CortexServerCertificate from the Personal store and then importing it to the Current User store by double-clicking on it and following the wizard.\nOpen a web browser.\nNavigate to https://app-server.domain.com:9080/Explorer, where app-server.domain.com is the fully qualified domain name of any Application Server. Replace 9080 with new httpGatewayEndpointPort value if it was changed during configuration.\nThe screen should resemble that in the following figure: Healthy Service Fabric Explorer Cluster\rThe status circles should be entirely green - this indicates that all nodes, services and instances are healthy. Other status pages can be accessed by expanding items in the leftmost pane. Issues can be tracked down to the failing component by expanding items with warning triangles or error icons on. The next few diagrams show the status pages for a healthy system.\nAfter expanding the application, clicking on any of the services should display a green circle and Status = Active:\nHealthy Service Fabric Explorer Service\rAfter expanding either of the services, clicking on any of the instances/partitions should display a green circle and Status = Ready:\nHealthy Service Fabric Explorer Instance\rClicking on any of the nodes at the bottom of the leftmost pane should display a green circle and Status = Up:\nHealthy Service Fabric Explorer Node\rIf any warning triangles appear, wait for 5 minutes or so as the cluster may still be starting up. If the cluster looks OK, go to the next section.\nIf the warnings persist or anything on the screen goes red, expand the items to find the individual services and instances which have errors or warnings. Warnings should not be ignored as they can indicate that the service can’t start but is still in the retry phase. Error and warning messages should be displayed on the status screens and should indicate what is wrong.\nIf no useful message can be seen here, the service log files may contain more information. These can be found on each Application Server at:\n%ProgramData%/Cortex/Cortex API Gateway Service %ProgramData%/Cortex/Cortex Flow Execution Service If no solution can be found, please contact Cortex Service Portal for further assistance.\nPreserve installation files Ensure that the installation files are backed up or kept on the server, especially the scripts and config files that have been modified. This will make it easier to perform further actions in future, such as troubleshooting, certificate rollover, uninstallation, reinstallation and updates.\nNext Steps? Upgrade v7.2 Gateway to Include Innovation ","categories":"","description":"Information about installing the Application Servers and Load Balancer Server.","excerpt":"Information about installing the Application Servers and Load Balancer Server.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/install-application-and-loadbalancer-servers/","tags":"","title":"Install Application Servers and Load Balancer"},{"body":"Install Application Servers and Load Balancer This guide describes how to install the Application Servers and Load Balancer Server. Please ensure that the Prerequisites for installing Innovation have been read before starting this installation.\nMake Installation Artefacts Available Choose one of the Application Servers to be used for installation, and copy the following artefacts to a folder on it (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - App Services.zip Cortex Innovation 2022.9 - App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - App Server Install Scripts.zip file to a folder with the same name.\nInstall Microsoft .NET Framework 4.7.1 Microsoft Service Fabric requires a minimum of Microsoft .NET Framework 4.7.1 to be installed on each Application Server.\nTo find the version of the framework that is installed:\nOn the Start menu, choose Run. In the open box, enter regedit.exe. You must have administrative credentials to run regedit.exe. In the Registry Editor, open the subkey HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full. If the Full subkey is not present, then you do not have the .NET Framework 4.5 or later installed. Check for a DWORD value named Release. The existence of the Release DWORD indicates the .NET Framework 4.5 or newer has been installed on that computer. If the value is 461308 or over then at least .NET Framework 4.7.1 is installed and no further steps need to be taken. If it is not installed, continue with the following steps to install it. To install .NET Framework 4.7.1:\nDownload the .NET Framework 4.7.1 installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. Apply Recommended Security Measures These are non-compulsory security measures, recommended to be applied to Application Servers and the Load Balancer Server, in order to prevent potential attacks that exploit known industry security vulnerabilities.\nApplying these measures may impact other applications running on your servers. Therefore, it is your responsibility to ensure that other applications and their clients will not be affected by the changes.\nOnly Use Recommended Encryption Algorithms and TLS Protocols A collection of registry settings need to be applied to guarantee your server is only using the recommended encryption algorithms and TLS protocols. Information about these settings can be found at SSL Best Practices.\nWarning\rDisabling specific TLS versions or specific Cipher Suites can have impact on Cortex components themselves as well as their communication capabilities with third party systems and services, e.g. Flow Debugger Service executing flows with blocks which communicate with 3rd parties via PowerShell or REST. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\rThe settings can be applied by running a script. Be aware that each server will be restarted when the script is run. Apply the settings by following these instructions:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Install.Multiple.SSLBestPractices.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS names or fully qualified domain names of the Application Servers and the LoadBalancerServer value to contain the NETBIOS names or fully qualified domain name of the Load Balancer Server (remove the LoadBalancerServer parameter if using an alternative load balancer):\n.\\Cortex.Innovation.Install.Multiple.SSLBestPractices.ps1 -ApplicationServers @(\"app-server1\", \"app-server2\", \"app-server3\") -LoadBalancerServer \"lb-server\" Note\rTo avoid answering all of the prompts -Override 0 can be added to the end of the script. This will automatically apply all settings and forcibly restart the servers.\rA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK.\nIf -Override 0 has been specified no further steps need to be taken and you can move on to the next section when the servers have restarted.\nTo use all the recommended settings click Apply all to the each Apply Cortex recommended security best practices prompt.\nTo selectively apply each setting select Choose which to apply. Each change will then be prompted with a Yes/No confirmation before applying. This will need to be done for each server.\nRestart each machine when the script asks. The current machine will be restarted last, the PowerShell script will close at this time.\nAdd Antivirus Exclusions If Windows Defender is not running on the Application Servers, ensure that the Antivirus Exclusions have been added to the running antivirus software on each of the Application Servers and continue to the next section, otherwise follow these steps: Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS names or fully qualified domain names of the Application Servers:\n.\\Cortex.Innovation.Add.WindowsDefenderExclusions.ps1 -ApplicationServers @(\"app-server1\", \"app-server2\", \"app-server3\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all Application Servers and press OK.\nA message will indicate that the script has completed successfully.\nCheck Port Usage To check all necessary ports are free, follow these steps. Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Run the Cortex.Innovation.Test.PortUsage.ps1 script using the following command, modifying the ApplicationServers value to contain the NETBIOS names or fully qualified domain names of the Application Servers:\n.\\Cortex.Innovation.Test.PortUsage.ps1 -ApplicationServers @(\"app-server1\", \"app-server2\", \"app-server3\") A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all Application Servers and press OK.\nIf all ports are free, the script will report the following for each Application Server:\nAll ports required by Cortex Innovation are free\nIf this is the case, continue to the next section. Otherwise, consult the messages returned by the script, which will give details about how to modify the Cortex.Innovation.Install.Config.json configuration file, in the Cortex Innovation 2022.9 - App Server Install Scripts folder, to use different ports. This will be used later during installation.\nThe Cortex.Innovation.Test.PortUsage.ps1 script cannot currently re-check modified ports in the configuration file so these need to be manually checked to see that they are free.\nConfigure Installation Script In the Cortex Innovation 2022.9 - App Server Install Scripts folder, locate the Cortex.Innovation.Install.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs, Built-in Load Balancer\rSelf-Signed Certs, Built-in Load Balancer\rCA Certs, Alternative Load Balancer\rSelf-Signed Certs, Alternative Load Balancer\r.\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -LoadBalancerServerIPv4Address \"192.168.1.4\" ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -ClientCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ClientCertificatePwd \"myPassword\" ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -LoadBalancerServerIPv4Address \"192.168.1.4\" ` -UseSelfSignedCertificates ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -ClientCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ClientCertificatePwd \"myPassword\" ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" .\\Cortex.Install.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -AppServicesPath \"C:\\Install\\Cortex Innovation 2022.9 - App Services.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -ApiGatewayBasicAuthUserName \"BasicAuthUser\" ` -ApiGatewayBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -CustomerName \"Customer1\" ` -ApplicationServerIPv4Addresses @(\"192.168.1.1\", \"192.168.1.2\", \"192.168.1.3\") ` -UseSelfSignedCertificates ` -SkipLoadBalancer ` -Credential $Credential ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-ha-install-log.txt\" Name Description AppServicesPath Configure this value with the location of the Application Services zip file on the Application Server used for installation. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the Application Server used for installation. ApiGatewayBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows).\nFor security reasons it is recommended that the default value BasicAuthUser should be changed.\nCurrently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when installing Gateway. ApiGatewayBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when making HTTPS requests to the API Gateway Service (e.g. starting production flows). This password should be Cortex Encrypted. For security reasons it is recommended that the default value ADA9883B11BD4CDC908B8131B57944A4 should be changed. This value will be needed later, when installing Gateway. CustomerName A name identifying the platform being installed. This must have no spaces or symbols. It will be appended to the node names that are displayed in Service Fabric Explorer. ApplicationServerIPv4Addresses The IPv4 addresses of the Application Servers. The first of these must be the Application Server used for installation. LoadBalancerServerIPv4Address The IPv4 address of the Load Balancer Server. This is only needed if using the built-in load balancer. ServerCertificatePath The local path of a .PFX certificate file on the first Application Server in the ApplicationServerIPv4Addresses list. Environment variables cannot be used. This is only needed if installing with CA Certificates (Recommended). The certificate should meet the Certificate Requirements. This certificate will be used for: Securing communication between the Application Services.Allowing Application Services to identify themselves to clients such as Gateway.Preventing unauthorised nodes from joining the HA cluster.Connecting to Service Fabric Explorer from each of the Application Servers.\rWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rServerCertificatePwd The password for the .PFX certificate file specified in ServerCertificatePath. This is only needed if installing with CA Certificates (Recommended). ClientCertificatePath The local path of a .PFX certificate file on the first Application Server in the ApplicationServerIPv4Addresses list. This can be the same certificate as the ServerCertificatePath. Environment variables cannot be used. This is only needed if installing with CA Certificates (Recommended) and using the Built-In Load Balancer. The certificate should meet the Certificate Requirements.\nThis certificate will be used for: Securing communication between the load balancer and the nodes on the Application Servers.\rWarning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rClientCertificatePwd The password for the .PFX certificate file specified in ClientCertificatePath. This is only needed if installing with CA Certificates (Recommended) and using the Built-In Load Balancer. UseSelfSignedCertificates Installs Application Services and required infrastructure using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. SkipLoadBalancer Installs Application Services and required infrastructure without installing a load balancer. Use when using an alternative load balancer or no load balancer. Credential The credentials of the user which will be used to perform remote operations on the Application Servers. It must be a domain user that is a member of the local Administrators group on all servers. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. The ApiGatewayBasicAuthUserName and ApiGatewayBasicAuthPwd will be needed later, when installing Gateway.\nNote\rMore advanced configuration (such as changing ports) can be undertaken by modifying the Cortex.Innovation.Install.Config.json file but this shouldn’t be required for most installations. More information about this can be found at Advanced Application Server and Load Balancer Configuration Changes.\rSave and close Cortex.Innovation.Install.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 -WhatIf Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -WhatIf -AcceptEULA Run the PowerShell command to test the installation script.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ.\nWait for the command to finish. It will display the output of the installation command without making any changes to the system, to ensure things like communication between the servers are working.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are no errors, continue to the next section; otherwise, check if the errors have any instructions for rectifying the issue and follow them.\nIf there are no useful instructions, check that all previous steps have been followed correctly and, if not, rectify it and run the command again. If this does not work, please contact Cortex Service Portal for further assistance. The WhatIf script will have created a temporary version of the config file in the script location, showing what changes would be made to it when the script runs. The name is appended with -WhatIf (e.g. Cortex.Innovation.Install.Config-WhatIf.json). This file can be provided when obtaining support.\nRun Installation Script Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install HA Services and the required infrastructure.\nA credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK.\nA password prompt will appear. Enter a password which will be used to create a user in RabbitMQ. This should be entered carefully and recorded as it may be needed if seeking support from Cortex Service Portal. Press OK.\nWait for the script to finish running. This should take approximately 10 minutes.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, check your configuration files, and retry the installation.\nIn some circumstances, retrying may error due to components being installed already. In this case please run the following command, followed by the original installation command:\n.\\Cortex.Innovation.Uninstall.ps1 If the errors do not give any instructions on how to rectify, see Troubleshooting During Installation for further information; if this does not help then please contact Cortex Service Portal for assistance.\nCheck Application Services Log on to one of the Application Servers.\nImport the client certificate, used in the ClientCertificatePath parameter of the Configure Installation Script section, to your Current User certificate store. This can be achieved by double clicking on the client certificate .PFX file and following the wizard.\nIf using self-signed certificates, the certificate can be retrieved by using the Manage Computer Certificates tool in Windows to export the CortexServerCertificate from the Personal store and then importing it to the Current User store by double-clicking on it and following the wizard.\nOpen a web browser.\nNavigate to https://app-server.domain.com:9080/Explorer, where app-server.domain.com is the fully qualified domain name of any Application Server. Replace 9080 with new httpGatewayEndpointPort value if it was changed during configuration.\nThe screen should resemble that in the following figure: Healthy Service Fabric Explorer Cluster\rThe status circles should be entirely green - this indicates that all nodes, services and instances are healthy. Other status pages can be accessed by expanding items in the leftmost pane. Issues can be tracked down to the failing component by expanding items with warning triangles or error icons on. The next few diagrams show the status pages for a healthy system.\nAfter expanding the application, clicking on any of the services should display a green circle and Status = Active:\nHealthy Service Fabric Explorer Service\rAfter expanding either of the services, clicking on any of the instances/partitions should display a green circle and Status = Ready:\nHealthy Service Fabric Explorer Instance\rClicking on any of the nodes at the bottom of the leftmost pane should display a green circle and Status = Up:\nHealthy Service Fabric Explorer Node\rIf any warning triangles appear, wait for 5 minutes or so as the cluster may still be starting up. If the cluster looks OK, go to the next section.\nIf the warnings persist or anything on the screen goes red, expand the items to find the individual services and instances which have errors or warnings. Warnings should not be ignored as they can indicate that the service can’t start but is still in the retry phase. Error and warning messages should be displayed on the status screens and should indicate what is wrong.\nIf no useful message can be seen here, the service log files may contain more information. These can be found on each Application Server at:\n%ProgramData%/Cortex/Cortex API Gateway Service %ProgramData%/Cortex/Cortex Flow Execution Service If no solution can be found, please contact Cortex Service Portal for further assistance.\nPreserve installation files Ensure that the installation files are backed up or kept on the server, especially the scripts and config files that have been modified. This will make it easier to perform further actions in future, such as troubleshooting, certificate rollover, uninstallation, reinstallation and updates.\nNext Steps? Install Web Application Server ","categories":"","description":"Information about installing the Application Servers and Load Balancer Server.","excerpt":"Information about installing the Application Servers and Load Balancer Server.","ref":"/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-application-and-loadbalancer-servers/","tags":"","title":"Install Application Servers and Load Balancer"},{"body":"","categories":"","description":"Information about installing and configuring Grafana on the Web Application Server.","excerpt":"Information about installing and configuring Grafana on the Web Application Server.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-grafana/","tags":"","title":"Install Grafana"},{"body":"K-O Terms, words and phrases beginning with the letters K through O.\nK Kickstarter Free two/three day workshop that enables the rapid configuration of a cloud-based Cortex platform to prototype, and demonstrate automation in context.\nSee Kickstarter.\nL Launch Program A twelve week program which takes your team through the phases of mobilisation, design of automation, trial testing and sign-off to production.\nSee Launch Program.\nLinux Linux is an open-source Unix-like operating system based on the Linux kernel.\nList A data type that represents a list of items that can iterated or looped over.\nFor more detailed information about the List data type, see Data Types \u003e List\u003cTItem\u003e.\nLiteral A literal is an explicit value that is not calculated during the execution of the flow. A literal can be any of the following data types:\nString Char Int32 Int64 Double Single Boolean Object Dictionary Structure List lowercase The term lowercase refers to small letters (a,b,c …) as distinguished from capital letters (A,B,C…).\nLow-code Low-code is an approach to developing automation through a graphical user interface (GUI) that requires little to no coding; where the developers predominantly use drag-and-drop features, rather than writing code.\nM Method In C#, a Method is used to execute behaviour of a data type (e.g. the ToString() method returns a text representation of the data type).\nSee Method Expressions for information on how methods can be used within the expression editor.\nN Non-Null Non-Null indicates that a data type has been initialised and has a value.\nNuget Package A NuGet package is a ZIP file with the .nupkg extension. It contains compiled code (DLLs), other files related to that code.\nNuGet can be published and shared to a public or private host.\nNull Null indicates that a data type has been initialised with no value.\nO Object A data type that indicates that any data type can be used.\nFor more detailed information about the Object data type, see Data Types \u003e Object.\nOccurrence A value can occur in a collection multiple times, these are called Occurrences.\nOccurrences are 1 based (e.g. The first occurrence of an item in a list is at occurrence 1, the second occurrence of an item is at occurrence 2, etc.).\nSee Collections \u003e Occurrences.\nOn-premise On-premise refers to infrastructure and software that is deployed and running within a physical location of an organisation.\nOperand Describes a literal or variable that has the capability to be operated on. For example, in the expression 1 + 2 the literal values 1 and 2 are operands, whereas + is an operator.\nOperator Operators are used to manipulate and check operands values. For example, in the expression 1 + 2 the operator + adds the two operands 1 and 2, resulting in the expression evaluating to 3.\nFor more detailed information about operators, see C# operators and expressions.\nOutput Output properties are used to save values from a block. These properties will saved to a variable during the block’s execution.\nSee Block Properties \u003e Output Properties.\nOut-of-the-box (OOTB) Out-of-the-box functionality of a product that works immediately after any installation without any configuration or modification.\nOutlook Outlook is a free web-based email service provided by Microsoft.\n","categories":"","description":"Terms, words and phrases beginning with the letters K through O.","excerpt":"Terms, words and phrases beginning with the letters K through O.","ref":"/docs/reference/glossary/k-o/","tags":"","title":"K-O"},{"body":"Set up Grafana Sign up for Grafana Cloud Browse to Grafana Labs.\nFind and click the link to create free account.\nReview the terms and conditions as well as any agreements.\nCreate your account and follow any account verification steps.\nIf asked to start a free trial, do so.\nOn the Let’s create your Grafana Stack dialog:\nEnter an appropriate Team URL which will be used as a customised link to access the Grafana Cloud. Select the Deployment region which is where the service will be deployed to. This should be preferably close to the High Availability nodes. Wait for Grafana Cloud to load\nNext Steps? Set up Grafana Loki ","categories":"","description":"Information about setting up Grafana in the cloud.","excerpt":"Information about setting up Grafana in the cloud.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/setup-grafana/","tags":"","title":"Set up Grafana"},{"body":"\r","categories":"","description":"This section includes tutorials about administering the Cortex Innovation platform.","excerpt":"This section includes tutorials about administering the Cortex Innovation platform.","ref":"/docs/tutorials/administration/","tags":"","title":"Administration"},{"body":"","categories":"","description":"Information about installing and configuring Grafana Loki on the Web Application Server.","excerpt":"Information about installing and configuring Grafana Loki on the Web Application Server.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-loki/","tags":"","title":"Install Grafana Loki"},{"body":"Install the Web Application Server This guide describes how to install the Web Application Server. Please ensure that Install Application Servers and Load Balancer has been completed before starting this installation.\nMake Installation Artefacts Available We recommend that the Flow Debugger Service and Gateway are installed on the same Web Application Server. Copy the following artefacts to a folder on the machine (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - Gateway.zip Cortex Innovation 2022.9 - Flow Debugger Service.zip Cortex Innovation 2022.9 - Web App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - Web App Server Install Scripts.zip zip file to a folder with the same name.\nInstall Prerequisites Licensing Ensure that a valid Cortex licence file named Cortex.lic exists on the Web Application server, in the location %ProgramData%\\Cortex\\Licences. If it does not, follow the instructions located at Licensing Requirements.\nInstall SQL Server or SQL Express Use one of the following installation guides to install SQL Server or SQL Server Express: Cortex Innovation - SQL Server 2019 Installation Guide Cortex Innovation - SQL Server 2016 Installation Guide Cortex Innovation - SQL Server 2016 Express Installation Guide Install Microsoft .NET Framework 4.7.1 Gateway requires a minimum of Microsoft .NET Framework 4.7.1.\nTo find the version of the framework that is installed:\nOn the Start menu, choose Run. In the open box, enter regedit.exe. You must have administrative credentials to run regedit.exe. In the Registry Editor, open the subkey HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full. If the Full subkey is not present, then you do not have the .NET Framework 4.5 or later installed. Check for a DWORD value named Release. The existence of the Release DWORD indicates the .NET Framework 4.5 or newer has been installed on that computer. If the value is 461308 or over then at least .NET Framework 4.7.1 is installed and no further steps need to be taken. If it is not installed, continue with the following steps to install it. To install .NET Framework 4.7.1:\nDownload the .NET Framework 4.7.1 installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. Install Microsoft Web Deploy Check if Web Deploy is already installed by going to Control Panel → Programs → Programs and Features; if Web Deploy is already installed, it will be listed as Microsoft Web Deploy. If it is not installed, download Microsoft Web Deploy version 3.0 or later (WebDeploy_amd64_en-US.exe) to the server. Double-click the downloaded file to start the installation. Follow the installation wizard to install Web Deploy; on the Choose Setup Type page select Typical. Install Visual C++ Redistributable Check if Visual C++ 2013 Redistributable (x64) is already installed by going to Control Panel → Programs → Programs and Features; if Visual C++ Redistributable is already installed, it will be listed as Microsoft Visual C++ 2013 Redistributable (x64). If it is not installed, download Visual C++ Redistributable 2013 (x64). Double-click the downloaded file to start the installation. Follow the installation wizard to install the Visual C++ Redistributable. Install Certificate Both Gateway and the Flow Debugger Service require an X.509 SSL certificate to be installed on the Web Application Server. The certificate must have the following properties:\nEnhanced Key Usage: Server Authentication and Client Authentication Subject Alternative Names (SAN): At minimum the FQDN of the Server. It can also include NetBIOS Name, IP address, localhost, 127.0.0.1 If the user tries to navigate to an address not in the SAN list, then they will receive a certificate error.\nWildcard certificates and self-signed certificates can also be used. However, self-signed certificates are not recommended for production instances. Details on how to create a self-signed certificate can be found at Create Self-Signed Certificates.\nYou can import the certificate by right clicking the certificate file, selecting Install Certificate and following the wizard. When prompted, ensure you import it into the Local Machine store and not Current User.\nTo verify the certificate is imported:\nClick the Windows button (Start) Type certlm.msc and press Enter to open the Certificate Manager dialog Expand Personal and select Certificates You should see your certificate in this store Warning\rIt is critical to set a reminder to update certificates in good time before they expire. If they expire then the platform will cease to function and Cortex Service Portal must be contacted for support.\rIIS Role Setup and Configuration Install Internet Information Services (IIS) Install the required features by following these instructions:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Run the Cortex.Innovation.Install.WindowsFeatures.ps1 script using the following command, this may take a few minutes:\n.\\Cortex.Innovation.Install.WindowsFeatures.ps1 Check the output is as follows:\nWeb-WebSockets is installed Web-Asp-Net45 is installed Web-Net-Ext45 is installed Web-ISAPI-Ext is installed Web-ISAPI-Filter is installed Net-Framework-45-Core is installed Net-Framework-45-ASPNET is installed Web-Default-Doc is installed Web-Dir-Browsing is installed Web-Http-Errors is installed Web-Static-Content is installed Web-Http-Logging is installed Web-Http-Redirect is installed Web-Request-Monitor is installed Web-Stat-Compression is installed Web-Dyn-Compression is installed Web-Filtering is installed Web-Windows-Auth is installed Web-Mgmt-Console is installed Web-Mgmt-Service is installed Register and Allow .NET CLR v4.0.30319 with IIS Note\rUnless .NET CLR v4.0.30319 is registered and allowed with IIS, Gateway and Flow Debugger Service will not work.\rOpen a Windows PowerShell (x64) window as administrator.\nRun the following command:\nDism /online /enable-feature /featurename:IIS-ASPNET45 /all Once PowerShell confirms that it has finished installing .NET CLR v4.0.30319, close the PowerShell window.\nInstall URL Rewrite Module The URL Rewrite IIS Manager module is required to enable web applications on your server to rewrite URLs. This is needed to allow HTTP URLs to redirect to the equivalent HTTPS ones.\nTo install the URL Rewrite module take the following steps:\nIn the left-hand pane of Internet Information Service (IIS) Manager, select the server node. Ensure that there is an icon with the title URL Rewrite under the IIS feature section: Url Rewrite Module Icon\rIf there is an icon, URL Rewrite module is installed and no further steps are required. If there is no icon, the module is not installed and the following steps must be taken: Download the URL Rewrite module installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. After successfully installing, close and reopen IIS Manager. The URL Rewrite icon should now be visible. Apply Recommended Security Measures These are non-compulsory security measures, recommended to be applied to Web Application Servers, in order to prevent potential attacks that exploit known industry security vulnerabilities.\nApplying these measures may impact other applications running on your server. Therefore, it is your responsibility to ensure that other applications and their clients will not be affected by the changes.\nOnly Use Recommended Encryption Algorithms and TLS Protocols A collection of registry settings need to be applied to guarantee your server is only using the recommended encryption algorithms and TLS protocols. Information about these settings can be found at SSL Best Practices.\nWarning\rDisabling specific TLS versions or specific Cipher Suites can have impact on Cortex components themselves as well as their communication capabilities with third party systems and services, e.g. Flow Debugger Service executing flows with blocks which communicate with 3rd parties via PowerShell or REST. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\rApply the settings by following these instructions:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Run the Cortex.Innovation.Install.SSLBestPractices.ps1 script using the following command:\n.\\Cortex.Innovation.Install.SSLBestPractices.ps1 Note\rTo avoid answering all of the prompts -Override 0 can be added to the end of the script. This will automatically apply all settings and forcibly restart the server.\rIf -Override 0 has been specified no further steps need to be taken and you can move on to the next section when the server has restarted.\nTo use all the recommended settings click Apply all to the first prompt.\nTo selectively apply each setting select Choose which to apply. Each change will then be prompted with a Yes/No confirmation before applying.\nRestart the machine when the script asks.\nAdd HTTPS Firewall Rule If any firewall is running on the Web Application Server, it must be configured to allow communication inbound via TCP on the port configured for HTTPS (usually 443). See Configure Firewalls for information about adding rules to Windows Firewall.\nCreate Web Site Gateway and Flow Debugger Service can either be installed to an existing web site or a newly created web site. If you are installing into an existing web site skip to Configure Web Site.\nThe steps to create a new web site are:\nIn Windows File Explorer, navigate to the default IIS folder (usually %SystemDrive%\\inetpub\\wwwroot, e.g. C:\\inetpub\\wwwroot). Ensure there is a folder called Cortex; if not create it. In the left-hand pane of Internet Information Service (IIS) Manager, expand the server node. Right-click the Sites node under the server and select Add Website…. Set the Site name to Cortex. Set the Physical path to the folder created above (e.g. C:\\inetpub\\wwwroot\\Cortex), by clicking on the ellipses …, selecting the appropriate directory and clicking OK. Click OK. If an existing site is already using the specified port, a warning will be displayed. Either click No and change the Port in the Add Website dialog, or click Yes and stop the other website. Configure Web Site The web site which the Gateway and Flow Debugger Service are installed under requires additional configuration.\nConfigure HTTPS Both the Gateway and Flow Debugger Service should be configured to use HTTPS:\nNote\rFor sites using self-signed SSL certificates, the HTTPS URL redirection will only work in Google Chrome browsers. For all other supported browsers, an SSL certificate signed by a Certificate Authority must be used to enable HTTPS URL redirection.\rIn the left-hand pane of Internet Information Service (IIS) Manager, expand the server node. Expand the Sites node under the server. Right-click the web site where Gateway will be installed and select Edit Bindings…. Click Add… Set Type to https. Set the appropriate Port number (typically 443). The Host name box can be left blank. Note\rConfiguring your system to use a port other than the HTTPS default of 443 is not compatible with HTTP Strict Transport Security (HSTS). If your configuration requires HTTPS to run on a port other than 443, the HSTS configuration must be turned off. This can be achieved by configuring the Add Strict-Transport-Security when HTTPS rewrite rule’s enabled setting to false in web.config after installation.\rSelect the SSL certificate that was installed in the Install Certificate section. Click OK. If an existing site is already using the specified SSL port, a warning will be displayed. Either click No and change the Port in the Add Site Binding dialog, or click Yes and stop the other website. It is recommended to remove the http site binding. Install Flow Debugger Service Get Application Pool User A domain user account is required for the Flow Debugger Service web application pool and must be created prior to performing the installation. In line with best practices, this account should not be used for any purposes other than those specified for the Flow Debugger Service. Alternatively, the NETWORK SERVICE user may also be used.\nThis user must currently have access to the default NuGet directory, in order to load block packages correctly. To add permissions for the user take the following steps:\nNavigate to %SystemRoot%\\System32\\config\\systemprofile\\AppData\\Roaming\\ and create a new folder named NuGet if one does not exist. Right-click on the NuGet folder and click Properties. In the dialog, click the Security tab. Click the Edit... button. Click the Add... button. Enter the username of the application pool user and click OK. In the Permissions section at the bottom, check Full control Click OK. The user must be given Log on as a service and Log on as a batch job permissions. To do this take the following steps:\nNavigate to Start -\u003e Administrative Tools -\u003e Local Security Policy. In the Local Security Policy dialog, expand the Local Policies node then select User Rights Assignment. Take the following steps for the Log on as a service and Log on as a batch job policies: In the right-hand panel, double-click on the policy. In the Properties dialog, click on the Add User or Group button. Note\rIt is possible to use the Advanced… button to look up names rather than entering them manually. Various filters can be set to find the correct user or group more easily. Multiple users can be selected by holding down CTRL while clicking. OK adds the selected users or groups into the Enter the object names to select text box.\rType the name of the application pool user account into the Enter the object names to select text box. Click the Check Names button to confirm that the user exists. Click OK on the Select Users dialog, and then confirm the user is correct by clicking OK on the Properties dialog. Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.FlowDebuggerService.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs\rSelf-Signed Certs\r.\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" .\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -UseSelfSignedCertificates ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" Name Description FlowDebuggerServicePath Configure this value with the location of the Flow Debugger Service zip file on the Web Application Server. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the Web Application Server. FlowDebuggerBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. For security reasons it is recommended that the default value BasicAuthUser should be changed.\nCurrently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when installing Gateway. FlowDebuggerBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. This password should be Cortex Encrypted. For security reasons it is recommended that the default value ADA9883B11BD4CDC908B8131B57944A4 should be changed.\nThis value will be needed later, when installing Gateway. UseSelfSignedCertificates Enables Flow Debugger Service to communicate with Gateway using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. Credential The credentials of the user that will be used to run the Debugger application pool in IIS. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.FlowDebuggerService.ps1.\nRun Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.FlowDebuggerService.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install the Flow Debugger Service.\nA credentials prompt will appear. Enter the credentials of the user that should run the Debugger application pool in IIS. If using the NETWORK SERVICE user, enter any user as the username and leave the password blank; the NETWORK SERVICE user will need to be selected in the final step.\nWait for the script to finish running. This should take approximately 2 minutes.\nAn error may have appeared saying:\nThe Windows Process Activation Service service is not started. This can be ignored.\nCheck that there have been no other errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, and retry the installation.\nIf the errors do not give any instructions on how to rectify, please contact Cortex Service Portal for further assistance.\nIf using NETWORK SERVICE for the application pool user:\nOpen Internet Information Services (IIS) Manager. On the left, expand the server node. Click Application Pools. Right-click on the Debugger application pool and select Advanced Settings.... In the Advanced Settings dialog, click on Identity and then click the ellipses (...). In the Application Pool Identity dialog, select Built-in account, then select NetworkService from the drop-down, then click OK. Right-click on the Debugger application pool and click Recycle.... Install Gateway Get Application Pool User A domain user account is required for the Gateway web application pool and must be created prior to performing the installation below.\nThis user account is required to enable Gateway to access the Cortex database, with the following roles:\ndbcreator public To add roles to database users take the following steps:\nOpen SQL Server Management Studio on the Web Application Server and log in.\nExpand the server node, then Security then Logins.\nIf the user that will run the Gateway application pool is not in the list of logins, take the following steps, otherwise skip to step 4:\nRight-click the Logins node and click New Login.... Enter the application pool user in the Login name box. On the left pane, click Server Roles. Check public and dbcreator Click OK. If the user that will run the Gateway application pool is in the list of logins, take the following steps:\nRight-click on the application pool user. Click Properties. On the left pane, click Server Roles. Check public and dbcreator. Click OK. In line with best practices, this account should not be given administrator rights, nor should it be used for any purposes other than those specified for Gateway.\nThe user must be given Log on as a service and Log on as a batch job permissions. To do this take the following steps:\nNavigate to Start -\u003e Administrative Tools -\u003e Local Security Policy. In the Local Security Policy dialog, expand the Local Policies node then select User Rights Assignment. Take the following steps for the Log on as a service and Log on as a batch job policies: In the right-hand panel, double-click on the policy. In the Properties dialog, click on the Add User or Group button. Note\rIt is possible to use the Advanced… button to look up names rather than entering them manually. Various filters can be set to find the correct user or group more easily. Multiple users can be selected by holding down CTRL while clicking. OK adds the selected users or groups into the Enter the object names to select text box.\rType the name of the application pool user account into the Enter the object names to select text box. Click the Check Names button to confirm that the user exists. Click OK on the Select Users dialog, and then confirm the user is correct by clicking OK on the Properties dialog. Create Gateway Application Pool Open Internet Information Services (IIS) Manager. Select and right-click the Application Pools node under the server and select Add Application Pool… Set Name to Cortex Gateway. Ensure that the .NET CLR version is set to .NET CLR Version v4.0.30319 (This may be configured by default). Ensure that the Managed pipeline mode is set to Integrated (This may be configured by default). Click OK Right click on the created application pool and select Advanced Settings… Click the ... next to Identity (under Process Model) to open a dialog, then select Custom Account and Set.... Enter the username and password for the user identified in Get Application Pool User. Click OK to close the Set Credentials dialog. Click OK to close the Application Pool Identity dialog. Click OK to close the Advanced Settings dialog. Create New Web Application In the left-hand pane of Internet Information Service (IIS) Manager, expand the server node. Right-click on the site the application should be installed under and select Add Application… Set the Alias to gateway. This must be lowercase. Click Select… and from the Application pool dropdown select the Cortex Gateway application pool and click OK. Set the Physical path to C:\\inetpub\\wwwroot\\Cortex\\Gateway by clicking on the ellipses … and selecting the appropriate directory. Create the C:\\inetpub\\wwwroot\\Cortex\\Gateway directory if it does not already exist. Click OK. Configure IIS Site Redirect to the Specified Web Application (Optional) If the site hosting the Gateway web application is a newly created Cortex site or an existing site that doesn’t have its own content, it is recommended to redirect the site URL to the gateway web application URL, e.g. https://FullyQualifiedDomainName to https://FullyQualifiedDomainName/gateway.\nOpen Internet Information Services (IIS) Manager. Select the site hosting the gateway web application and from IIS settings double-click the HTTP Redirect icon. Click the check box Redirect requests to this destination. Enter https://FullyQualifiedDomainName/gateway, replacing FullyQualifiedDomainName with the FQDN of the server. In the Redirect Behaviour section, click Only redirect requests to content in this directory (not subdirectories). In Actions click the Apply button. Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.Gateway.ps1 script and open it with a text editor.\nConfigure the script according to the details given below:\n.\\Cortex.Install.Gateway.ps1 ` -GatewayPackagePath \"C:\\Install\\Cortex Innovation 2022.9 - Gateway.zip\" ` -GatewayApplicationIISPath \"Cortex\\gateway\" ` -ModelDBContextConnectionString \"Data Source=localhost;Initial Catalog=CortexWeb;Integrated Security=True;MultipleActiveResultSets=True\" ` -AuthContextConnectionString \"Data Source=localhost;Initial Catalog=CortexWeb.Auth;Integrated Security=True;MultipleActiveResultSets=True\" ` -SignalRContextConnectionString \"Data Source=localhost;Initial Catalog=CortexWeb.SignalR;Integrated Security=True;MultipleActiveResultSets=True\" ` -FeatureFlags \"InnovationId\" ` -ServiceFabricApiGatewayEndpoint \"https://server.domain.com/\" ` -ServiceFabricUsingSelfSignedCertificates $false ` -ServiceFabricApiGatewayBasicAuthUsername \"BasicAuthUser\" ` -ServiceFabricApiGatewayBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerEndpoint \"https://server.domain.com/debugger/api/\" ` -DotNetFlowDebuggerBasicAuthUsername \"BasicAuthUser\" ` -DotNetFlowDebuggerBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerUsingSelfSignedCertificates $false ` -Test:$Test ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-gateway-install-log.txt\" Name Description GatewayPackagePath Configure this value with the location of the Cortex Innovation 2022.9 - Gateway.zip file on the installation server. GatewayApplicationIISPath Change to the correct Site Name/Application if either was modified from the defaults (Cortex/gateway) when creating the website or application. ModelDBContextConnectionString If SQL Server was installed as the default instance, change the Data Sourcein the connection string to localhost or, if it was installed on another machine, change it to the machine name.\nIf SQL Server was installed as a named instance, change it to .\\{instanceName} replacing {instanceName} with the name of the instance or, if SQL Server was installed on a different machine, change it to {machineName}\\{instanceName} replacing {machineName} with the machine name and {instanceName} with the name of the instance. This will set the ModelDBContextConnectionString value in the Gateway web.config. AuthContextConnectionString If SQL Server was installed as the default instance, change the Data Sourcein the connection string to localhost or, if it was installed on another machine, change it to the machine name.\nIf SQL Server was installed as a named instance, change it to .\\{instanceName} replacing {instanceName} with the name of the instance or, if SQL Server was installed on a different machine, change it to {machineName}\\{instanceName} replacing {machineName} with the machine name and {instanceName} with the name of the instance. This will set the AuthContextConnectionString value in the Gateway web.config. SignalRContextConnectionString If SQL Server was installed as the default instance, change the Data Sourcein the connection string to localhost or, if it was installed on another machine, change it to the machine name.\nIf SQL Server was installed as a named instance, change it to .\\{instanceName} replacing {instanceName} with the name of the instance or, if SQL Server was installed on a different machine, change it to {machineName}\\{instanceName} replacing {machineName} with the machine name and {instanceName} with the name of the instance. This will set the SignalRContextConnectionString value in the Gateway web.config. FeatureFlags Replace InnovationId with the Cortex Innovation feature identifier, which should have been provided by Cortex when fulfilling the Licensing Requirements, if it wasn’t it should be requested using Cortex Service Portal.\nThis will set the FeatureFlags value in the Gateway web.config. ServiceFabricApiGatewayEndpoint Replace server.domain.com with the fully qualified domain name of the Load Balancer Server. The port should be specified if it is not the default HTTPS port (443), and there must be a trailing slash, e.g. https://server.domain.com/ or https://server.domain.com:8722/.\nThis will set the ServiceFabricApiGatewayEndpoint value in the Gateway web.config. ServiceFabricUsingSelfSignedCertificates Configure the value as $false if you used valid CA certificates when installing the Application Servers, $true if you used self-signed certificates.\nThis will set the ServiceFabricUsingSelfSignedCertificates value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthUsername This must be changed if you used a non-default ApiGatewayBasicAuthUserName when installing the Application Servers; if so, this value must be configured to the one used.\nThis will set the ServiceFabricApiGatewayBasicAuthUsername value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthPassword This must be changed if you used a non-default ApiGatewayBasicAuthPassword when installing the Application Servers; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will set the ServiceFabricApiGatewayBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerEndpoint Replace server.domain.com with the fully qualified domain name of the Web Application Server.\nThis will set the DotNetFlowDebuggerEndpoint value in the Gateway web.config. DotNetFlowDebuggerBasicAuthUsername This must be changed if you used a non-default FlowDebuggerBasicAuthUserName when installing the Flow Debugger Service; if so, this value must be configured to the one used.\nThis will set the DotNetFlowDebuggerBasicAuthUsername value in the Gateway web.config. DotNetFlowDebuggerBasicAuthPassword This must be changed if you used a non-default FlowDebuggerBasicAuthPassword when installing the Flow Debugger Service; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will set the DotNetFlowDebuggerBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerUsingSelfSignedCertificates Configure the value as $false if you are using valid CA certificates to secure the site containing Gateway and Flow Debugger Service, $true if using self-signed certificates.\nThis will set the DotNetFlowDebuggerUsingSelfSignedCertificates value in the Gateway web.config. Test This does not need to be changed, it will be set at a later stage. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.Gateway.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 -Test Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -Test -AcceptEULA Run the PowerShell command to test the configuration. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nRun Installation Script Ensure the Gateway application pool is stopped:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Stop. Note\rFailure to stop the application pool will result in a permissions error when installing Gateway.\rType the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install Gateway. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nEnsure that the user identified in Get Application Pool User has Full control access to the Gateway folder created in Create New Web Application:\nNavigate to C:\\inetpub\\wwwroot\\Cortex\\. Right-click the Gateway folder and click Properties. In the Gateway Properties dialog, click the Security tab. Click the user identified in Get Application Pool User within the Group or user names section. In the Permissions section, ensure the user has Full control checked. If not: Click the Edit... button. Select the user identified in Get Application Pool User within the Group or user names section. In the Permissions section, check Full control. Click OK, then wait for Windows Security to update the security information to the folder. Click OK. Start the Gateway application pool:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Start. Once the application pool has been started, the site will be available on \u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e/\u003cwebapplicationname\u003e, e.g. https://localhost/gateway. Note\rIf the application pool does not stay started, ensure that the user it runs as has Log on as a service and Log on as a batch job permissions or belongs to a group that has those permissions.\rPreserve installation files Ensure that the installation files are backed up or kept on the server, especially the scripts and config files that have been modified. This will make it easier to perform further actions in future, such as troubleshooting, certificate rollover, uninstallation, reinstallation and updates.\nNext Steps? Setup Gateway ","categories":"","description":"Information about installing the Web Application Server.","excerpt":"Information about installing the Web Application Server.","ref":"/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/install-web-application-server/","tags":"","title":"Install the Web Application Server"},{"body":"Install the Web Application Server This guide describes how to install the Web Application Server components on the server. Please ensure that Install Application Server has been completed before starting this installation.\nMake Installation Artefacts Available Copy the following artefacts to a folder on the server (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - Gateway.zip Cortex Innovation 2022.9 - Flow Debugger Service.zip Cortex Innovation 2022.9 - Web App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - Web App Server Install Scripts.zip zip file to a folder with the same name.\nInstall Prerequisites Licensing Ensure that a valid Cortex licence file named Cortex.lic exists on the server, in the location %ProgramData%\\Cortex\\Licences. If it does not, follow the instructions located at Licensing Requirements.\nInstall SQL Server or SQL Express Use one of the following installation guides to install SQL Server or SQL Server Express: Cortex Innovation - SQL Server 2019 Installation Guide Cortex Innovation - SQL Server 2016 Installation Guide Cortex Innovation - SQL Server 2016 Express Installation Guide Install Microsoft .NET Framework 4.7.1 Gateway requires a minimum of Microsoft .NET Framework 4.7.1.\nTo find the version of the framework that is installed:\nOn the Start menu, choose Run. In the open box, enter regedit.exe. You must have administrative credentials to run regedit.exe. In the Registry Editor, open the subkey HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full. If the Full subkey is not present, then you do not have the .NET Framework 4.5 or later installed. Check for a DWORD value named Release. The existence of the Release DWORD indicates the .NET Framework 4.5 or newer has been installed on that computer. If the value is 461308 or over then at least .NET Framework 4.7.1 is installed and no further steps need to be taken. If it is not installed, continue with the following steps to install it. To install .NET Framework 4.7.1:\nDownload the .NET Framework 4.7.1 installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. Install Microsoft Web Deploy Check if Web Deploy is already installed by going to Control Panel → Programs → Programs and Features; if Web Deploy is already installed, it will be listed as Microsoft Web Deploy. If it is not installed, download Microsoft Web Deploy version 3.0 or later (WebDeploy_amd64_en-US.exe) to the server. Double-click the downloaded file to start the installation. Follow the installation wizard to install Web Deploy; on the Choose Setup Type page select Typical. Install Visual C++ Redistributable Check if Visual C++ 2013 Redistributable (x64) is already installed by going to Control Panel → Programs → Programs and Features; if Visual C++ Redistributable is already installed, it will be listed as Microsoft Visual C++ 2013 Redistributable (x64). If it is not installed, download Visual C++ Redistributable 2013 (x64). Double-click the downloaded file to start the installation. Follow the installation wizard to install the Visual C++ Redistributable. IIS Role Setup and Configuration Install Internet Information Services (IIS) Install the required features by following these instructions:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Run the Cortex.Innovation.Install.WindowsFeatures.ps1 script using the following command, this may take a few minutes:\n.\\Cortex.Innovation.Install.WindowsFeatures.ps1 Check the output is as follows:\nWeb-WebSockets is installed Web-Asp-Net45 is installed Web-Net-Ext45 is installed Web-ISAPI-Ext is installed Web-ISAPI-Filter is installed Net-Framework-45-Core is installed Net-Framework-45-ASPNET is installed Web-Default-Doc is installed Web-Dir-Browsing is installed Web-Http-Errors is installed Web-Static-Content is installed Web-Http-Logging is installed Web-Http-Redirect is installed Web-Request-Monitor is installed Web-Stat-Compression is installed Web-Dyn-Compression is installed Web-Filtering is installed Web-Windows-Auth is installed Web-Mgmt-Console is installed Web-Mgmt-Service is installed Register and Allow .NET CLR v4.0.30319 with IIS Note\rUnless .NET CLR v4.0.30319 is registered and allowed with IIS, Gateway and Flow Debugger Service will not work.\rOpen a Windows PowerShell (x64) window as administrator.\nRun the following command:\nDism /online /enable-feature /featurename:IIS-ASPNET45 /all Once PowerShell confirms that it has finished installing .NET CLR v4.0.30319, close the PowerShell window.\nInstall URL Rewrite Module The URL Rewrite IIS Manager module is required to enable web applications on your server to rewrite URLs. This is needed to allow HTTP URLs to redirect to the equivalent HTTPS ones.\nTo install the URL Rewrite module take the following steps:\nIn the left-hand pane of Internet Information Service (IIS) Manager, select the server node. Ensure that there is an icon with the title URL Rewrite under the IIS feature section: Url Rewrite Module Icon\rIf there is an icon, URL Rewrite module is installed and no further steps are required. If there is no icon, the module is not installed and the following steps must be taken: Download the URL Rewrite module installer. Double-click on the installer file to run it. Follow the wizard to complete the installation. After successfully installing, close and reopen IIS Manager. The URL Rewrite icon should now be visible. Add HTTPS Firewall Rule If any firewall is running on the server, it must be configured to allow communication inbound via TCP on the port configured for HTTPS (usually 443). See Configure Firewalls for information about adding rules to Windows Firewall.\nCreate Web Site Gateway and Flow Debugger Service can either be installed to an existing web site or a newly created web site. If you are installing into an existing web site skip to Configure Web Site.\nThe steps to create a new web site are:\nIn Windows File Explorer, navigate to the default IIS folder (usually %SystemDrive%\\inetpub\\wwwroot, e.g. C:\\inetpub\\wwwroot). Ensure there is a folder called Cortex; if not create it. In the left-hand pane of Internet Information Service (IIS) Manager, expand the server node. Right-click the Sites node under the server and select Add Website…. Set the Site name to Cortex. Set the Physical path to the folder created above (e.g. C:\\inetpub\\wwwroot\\Cortex), by clicking on the ellipses …, selecting the appropriate directory and clicking OK. Click OK. If an existing site is already using the specified port, a warning will be displayed. Either click No and change the Port in the Add Website dialog, or click Yes and stop the other website. Configure Web Site The web site which the Gateway and Flow Debugger Service are installed under requires additional configuration.\nConfigure HTTPS Both the Gateway and Flow Debugger Service should be configured to use HTTPS:\nNote\rFor sites using self-signed SSL certificates, the HTTPS URL redirection will only work in Google Chrome browsers. For all other supported browsers, an SSL certificate signed by a Certificate Authority must be used to enable HTTPS URL redirection.\rIn the left-hand pane of Internet Information Service (IIS) Manager, expand the server node. Expand the Sites node under the server. Right-click the web site where Gateway will be installed and select Edit Bindings…. Click Add… Set Type to https. Set the appropriate Port number (typically 443). The Host name box can be left blank. Note\rConfiguring your system to use a port other than the HTTPS default of 443 is not compatible with HTTP Strict Transport Security (HSTS). If your configuration requires HTTPS to run on a port other than 443, the HSTS configuration must be turned off. This can be achieved by configuring the Add Strict-Transport-Security when HTTPS rewrite rule’s enabled setting to false in web.config after installation.\rSelect the SSL certificate that was used when installing the Application Server. If self-signed certificates were used, this will have the subject CN=CortexServerCertificate. Click OK. If an existing site is already using the specified SSL port, a warning will be displayed. Either click No and change the Port in the Add Site Binding dialog, or click Yes and stop the other website. It is recommended to remove the http site binding. Install Flow Debugger Service Get Application Pool User A domain user account is required for the Flow Debugger Service web application pool and must be created prior to performing the installation. In line with best practices, this account should not be used for any purposes other than those specified for the Flow Debugger Service. Alternatively, the NETWORK SERVICE user may also be used.\nThis user must currently have access to the default NuGet directory, in order to load block packages correctly. To add permissions for the user take the following steps:\nNavigate to %SystemRoot%\\System32\\config\\systemprofile\\AppData\\Roaming\\ and create a new folder named NuGet if one does not exist. Right-click on the NuGet folder and click Properties. In the dialog, click the Security tab. Click the Edit... button. Click the Add... button. Enter the username of the application pool user and click OK. In the Permissions section at the bottom, check Full control Click OK. The user must be given Log on as a service and Log on as a batch job permissions. To do this take the following steps:\nNavigate to Start -\u003e Administrative Tools -\u003e Local Security Policy. In the Local Security Policy dialog, expand the Local Policies node then select User Rights Assignment. Take the following steps for the Log on as a service and Log on as a batch job policies: In the right-hand panel, double-click on the policy. In the Properties dialog, click on the Add User or Group button. Note\rIt is possible to use the Advanced… button to look up names rather than entering them manually. Various filters can be set to find the correct user or group more easily. Multiple users can be selected by holding down CTRL while clicking. OK adds the selected users or groups into the Enter the object names to select text box.\rType the name of the application pool user account into the Enter the object names to select text box. Click the Check Names button to confirm that the user exists. Click OK on the Select Users dialog, and then confirm the user is correct by clicking OK on the Properties dialog. Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.FlowDebuggerService.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs\rSelf-Signed Certs\r.\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" .\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -UseSelfSignedCertificates ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" Name Description FlowDebuggerServicePath Configure this value with the location of the Flow Debugger Service zip file on the server. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the server. FlowDebuggerBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. For security reasons it is recommended that the default value BasicAuthUser should be changed.\nCurrently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when installing Gateway. FlowDebuggerBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. This password should be Cortex Encrypted. For security reasons it is recommended that the default value ADA9883B11BD4CDC908B8131B57944A4 should be changed.\nThis value will be needed later, when installing Gateway. UseSelfSignedCertificates Enables Flow Debugger Service to communicate with Gateway using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. Credential The credentials of the user that will be used to run the Debugger application pool in IIS. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.FlowDebuggerService.ps1.\nRun Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.FlowDebuggerService.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install the Flow Debugger Service.\nA credentials prompt will appear. Enter the credentials of the user that should run the Debugger application pool in IIS. If using the NETWORK SERVICE user, enter any user as the username and leave the password blank; the NETWORK SERVICE user will need to be selected in the final step.\nWait for the script to finish running. This should take approximately 2 minutes.\nAn error may have appeared saying:\nThe Windows Process Activation Service service is not started. This can be ignored.\nCheck that there have been no other errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, and retry the installation.\nIf the errors do not give any instructions on how to rectify, please contact Cortex Service Portal for further assistance.\nIf using NETWORK SERVICE for the application pool user:\nOpen Internet Information Services (IIS) Manager. On the left, expand the server node. Click Application Pools. Right-click on the Debugger application pool and select Advanced Settings.... In the Advanced Settings dialog, click on Identity and then click the ellipses (...). In the Application Pool Identity dialog, select Built-in account, then select NetworkService from the drop-down, then click OK. Right-click on the Debugger application pool and click Recycle.... Install Gateway Get Application Pool User A domain user account is required for the Gateway web application pool and must be created prior to performing the installation below.\nThis user account is required to enable Gateway to access the Cortex database, with the following roles:\ndbcreator public To add roles to database users take the following steps:\nOpen SQL Server Management Studio on the server and log in.\nExpand the server node, then Security then Logins.\nIf the user that will run the Gateway application pool is not in the list of logins, take the following steps, otherwise skip to step 4:\nRight-click the Logins node and click New Login.... Enter the application pool user in the Login name box. On the left pane, click Server Roles. Check public and dbcreator Click OK. If the user that will run the Gateway application pool is in the list of logins, take the following steps:\nRight-click on the application pool user. Click Properties. On the left pane, click Server Roles. Check public and dbcreator. Click OK. In line with best practices, this account should not be given administrator rights, nor should it be used for any purposes other than those specified for Gateway.\nThe user must be given Log on as a service and Log on as a batch job permissions. To do this take the following steps:\nNavigate to Start -\u003e Administrative Tools -\u003e Local Security Policy. In the Local Security Policy dialog, expand the Local Policies node then select User Rights Assignment. Take the following steps for the Log on as a service and Log on as a batch job policies: In the right-hand panel, double-click on the policy. In the Properties dialog, click on the Add User or Group button. Note\rIt is possible to use the Advanced… button to look up names rather than entering them manually. Various filters can be set to find the correct user or group more easily. Multiple users can be selected by holding down CTRL while clicking. OK adds the selected users or groups into the Enter the object names to select text box.\rType the name of the application pool user account into the Enter the object names to select text box. Click the Check Names button to confirm that the user exists. Click OK on the Select Users dialog, and then confirm the user is correct by clicking OK on the Properties dialog. Create Gateway Application Pool Open Internet Information Services (IIS) Manager. Select and right-click the Application Pools node under the server and select Add Application Pool… Set Name to Cortex Gateway. Ensure that the .NET CLR version is set to .NET CLR Version v4.0.30319 (This may be configured by default). Ensure that the Managed pipeline mode is set to Integrated (This may be configured by default). Click OK Right click on the created application pool and select Advanced Settings… Click the ... next to Identity (under Process Model) to open a dialog, then select Custom Account and Set.... Enter the username and password for the user identified in Get Application Pool User. Click OK to close the Set Credentials dialog. Click OK to close the Application Pool Identity dialog. Click OK to close the Advanced Settings dialog. Create New Web Application In the left-hand pane of Internet Information Service (IIS) Manager, expand the server node. Right-click on the site the application should be installed under and select Add Application… Set the Alias to gateway. This must be lowercase. Click Select… and from the Application pool dropdown select the Cortex Gateway application pool and click OK. Set the Physical path to C:\\inetpub\\wwwroot\\Cortex\\Gateway by clicking on the ellipses … and selecting the appropriate directory. Create the C:\\inetpub\\wwwroot\\Cortex\\Gateway directory if it does not already exist. Click OK. Configure IIS Site Redirect to the Specified Web Application (Optional) If the site hosting the Gateway web application is a newly created Cortex site or an existing site that doesn’t have its own content, it is recommended to redirect the site URL to the gateway web application URL, e.g. https://FullyQualifiedDomainName to https://FullyQualifiedDomainName/gateway.\nOpen Internet Information Services (IIS) Manager. Select the site hosting the gateway web application and from IIS settings double-click the HTTP Redirect icon. Click the check box Redirect requests to this destination. Enter https://FullyQualifiedDomainName/gateway, replacing FullyQualifiedDomainName with the FQDN of the server. In the Redirect Behaviour section, click Only redirect requests to content in this directory (not subdirectories). In Actions click the Apply button. Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.Gateway.ps1 script and open it with a text editor.\nConfigure the script according to the details given below:\n.\\Cortex.Install.Gateway.ps1 ` -GatewayPackagePath \"C:\\Install\\Cortex Innovation 2022.9 - Gateway.zip\" ` -GatewayApplicationIISPath \"Cortex\\gateway\" ` -ModelDBContextConnectionString \"Data Source=localhost;Initial Catalog=CortexWeb;Integrated Security=True;MultipleActiveResultSets=True\" ` -AuthContextConnectionString \"Data Source=localhost;Initial Catalog=CortexWeb.Auth;Integrated Security=True;MultipleActiveResultSets=True\" ` -SignalRContextConnectionString \"Data Source=localhost;Initial Catalog=CortexWeb.SignalR;Integrated Security=True;MultipleActiveResultSets=True\" ` -FeatureFlags \"InnovationId\" ` -ServiceFabricApiGatewayEndpoint \"https://server.domain.com:8722/\" ` -ServiceFabricUsingSelfSignedCertificates $false ` -ServiceFabricApiGatewayBasicAuthUsername \"BasicAuthUser\" ` -ServiceFabricApiGatewayBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerEndpoint \"https://server.domain.com/debugger/api/\" ` -DotNetFlowDebuggerBasicAuthUsername \"BasicAuthUser\" ` -DotNetFlowDebuggerBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerUsingSelfSignedCertificates $false ` -Test:$Test ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-gateway-install-log.txt\" Name Description GatewayPackagePath Configure this value with the location of the Cortex Innovation 2022.9 - Gateway.zip file on the installation server. GatewayApplicationIISPath Change to the correct Site Name/Application if either was modified from the defaults (Cortex/gateway) when creating the website or application. ModelDBContextConnectionString If SQL Server was installed as the default instance, change the Data Sourcein the connection string to localhost.\nIf SQL Server was installed as a named instance, change it to .\\{instanceName} replacing {instanceName} with the name of the instance. This will set the ModelDBContextConnectionString value in the Gateway web.config. AuthContextConnectionString If SQL Server was installed as the default instance, change the Data Sourcein the connection string to localhost.\nIf SQL Server was installed as a named instance, change it to .\\{instanceName} replacing {instanceName} with the name of the instance. This will set the AuthContextConnectionString value in the Gateway web.config. SignalRContextConnectionString If SQL Server was installed as the default instance, change the Data Sourcein the connection string to localhost.\nIf SQL Server was installed as a named instance, change it to .\\{instanceName} replacing {instanceName} with the name of the instance. This will set the SignalRContextConnectionString value in the Gateway web.config. FeatureFlags Replace InnovationId with the Cortex Innovation feature identifier, which should have been provided by Cortex when fulfilling the Licensing Requirements, if it wasn’t it should be requested using Cortex Service Portal.\nThis will set the FeatureFlags value in the Gateway web.config. ServiceFabricApiGatewayEndpoint Replace server.domain.com with the fully qualified domain name of the server. The port should be specified as 8722 and there must be a trailing slash, e.g. https://server.domain.com:8722/.\nThis will set the ServiceFabricApiGatewayEndpoint value in the Gateway web.config. ServiceFabricUsingSelfSignedCertificates Configure the value as $false if you used valid CA certificates when installing the Application Server, $true if you used self-signed certificates.\nThis will set the ServiceFabricUsingSelfSignedCertificates value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthUsername This must be changed if you used a non-default ApiGatewayBasicAuthUserName when installing the Application Server; if so, this value must be configured to the one used.\nThis will set the ServiceFabricApiGatewayBasicAuthUsername value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthPassword This must be changed if you used a non-default ApiGatewayBasicAuthPassword when installing the Application Server; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will set the ServiceFabricApiGatewayBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerEndpoint Replace server.domain.com with the fully qualified domain name of the Web Application Server.\nThis will set the DotNetFlowDebuggerEndpoint value in the Gateway web.config. DotNetFlowDebuggerBasicAuthUsername This must be changed if you used a non-default FlowDebuggerBasicAuthUserName when installing the Flow Debugger Service; if so, this value must be configured to the one used.\nThis will set the DotNetFlowDebuggerBasicAuthUsername value in the Gateway web.config. DotNetFlowDebuggerBasicAuthPassword This must be changed if you used a non-default FlowDebuggerBasicAuthPassword when installing the Flow Debugger Service; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will set the DotNetFlowDebuggerBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerUsingSelfSignedCertificates Configure the value as $false if you are using valid CA certificates to secure the site containing Gateway and Flow Debugger Service, $true if using self-signed certificates.\nThis will set the DotNetFlowDebuggerUsingSelfSignedCertificates value in the Gateway web.config. Test This does not need to be changed, it will be set at a later stage. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.Gateway.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 -Test Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -Test -AcceptEULA Run the PowerShell command to test the configuration. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nRun Installation Script Ensure the Gateway application pool is stopped:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Stop. Note\rFailure to stop the application pool will result in a permissions error when installing Gateway.\rType the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install Gateway. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nEnsure that the user identified in Get Application Pool User has Full control access to the Gateway folder created in Create New Web Application:\nNavigate to C:\\inetpub\\wwwroot\\Cortex\\. Right-click the Gateway folder and click Properties. In the Gateway Properties dialog, click the Security tab. Click the user identified in Get Application Pool User within the Group or user names section. In the Permissions section, ensure the user has Full control checked. If not: Click the Edit... button. Select the user identified in Get Application Pool User within the Group or user names section. In the Permissions section, check Full control. Click OK, then wait for Windows Security to update the security information to the folder. Click OK. Start the Gateway application pool:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Start. Once the application pool has been started, the site will be available on \u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e/\u003cwebapplicationname\u003e, e.g. https://localhost/gateway. Note\rIf the application pool does not stay started, ensure that the user it runs as has Log on as a service and Log on as a batch job permissions or belongs to a group that has those permissions.\rPreserve installation files Ensure that the installation files are backed up or kept on the server, especially the scripts and config files that have been modified. This will make it easier to perform further actions in future, such as troubleshooting, certificate rollover, uninstallation, reinstallation and updates.\nNext Steps? Setup Gateway ","categories":"","description":"Information about installing the Web Application Server.","excerpt":"Information about installing the Web Application Server.","ref":"/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/install-web-application-server/","tags":"","title":"Install the Web Application Server"},{"body":"P-T Terms, words and phrases beginning with the letters P through T.\nP PascalCase PascalCase is a typographical convention in which phrases are written without spaces or punctuation, indicating the separation of words with a single capitalized letter, and the first word also starting with a capitalized letter. E.g. “FirstName” and “LastName”.\nPascalCase is often used as a naming convention in programming languages such as C#.\nSee also camelCase.\nPlatform The environment in which software is executed. This can include the hardware, operating system, web browsers or other programs.\nPortal A portal is a specially designed website that serves as a single point of access for information or functionality.\nPowerShell See Windows PowerShell\nPowerShell Core An open-source version of PowerShell that can be run on various platforms, such as:\nLinux macOs Windows See What is PowerShell? for more information about PowerShell Core and Windows PowerShell.\nProcess A process is a collection of related, structured tasks completed by people or equipment in a specific sequence.\nProgramming Language A programming language is a notation for writing computer programs, which are specifications of a computation or algorithm.\nProperty Block (property) See Block Property.\nC# (property) In C#, a Property is used to access or update attributes of a data type (e.g. the Message property of an Exception returns the reason the exception occurred).\nSee Property Expressions for information on how properties can be used within the expression editor.\nProperty Type There are three types of block property:\nInput Properties Output Properties InputOutput Properties See Block Properties \u003e What is a Block Property.\nQ R Read-only Refers to computer files or memory that can be read or used, but not updated or added to in any way.\nRequest A method of communication over a network, in which one computer sends a request to another, which can then respond to the request.\nS SASL Simple Authentication and Security Layer (SASL) is a framework for protocols like SMTP and IMAP to add authentication support.\nSDK SDK stands for “Software Development Kit”, and is a collection of software development tools.\nAn SDK facilitates the creation of applications by having a compiler, debugger and sometimes a software framework.\nService Fabric Service Fabric is an open source project developed by Microsoft used to deliver highly available and durable services at cloud-scale.\nFor more information see What is Service Fabric?\nSingle A data type that represents a fractional, or very large or small number from -3.402823e+38 through 3.402823e+38.\nFor more detailed information about the Single data type, see Data Types \u003e Single.\nSMTP Simple Mail Transfer Protocol (SMTP) is an internet protocol for email transmission. Mail servers typically only use SMTP to send emails.\nSnippets Snippet is a term for a small section of re-usable code.\nSnippets can be accessed from any editor using Intellisense.\nSoftware Development The process of developing software.\nSSL Secure Sockets Layer (SSL) is the technology that keeps an internet connection secure via the encryption of data in transit.\nString A data type that represents text.\nFor more detailed information about the String data type, see Data Types \u003e String.\nStructure A data type that represents a collection of key/item pairs, where each pair consists of a unique String key and its associated item.\nFor more detailed information about the Structure data type, see Data Types \u003e Structure.\nSyntax Highlighting Syntax highlighting is a feature of text editors that are used for programming. The feature displays text in different colours and fonts according to a category of terms.\nSyntax Highlighting improves the readability and provides context of text, and can be used to identify errors within a block of code.\nT Task A unit of work to be done or undertaken.\nText Data which can be interpreted as human-readable text, this is represented by Strings in C#.\nTitle Case Title Case is a typographical convention in which the first letter of all words are capitalized and all other letters lower cased; except for words that are entirely upper cased, such as acronyms, which remain upper cased.\nTLS Transport Layer Security is a more secure, updated version of SSL. Note that TLS is still often referred to as SSL.\nTrigger A mechanism used to initiate an action when a specific event occurs (e.g. When a given date or time is reached).\nType See Data Type.\nTypeahead Typeahead is a language prediction tool that is used to provide suggestions based on what a user has already typed.\n","categories":"","description":"Terms, words and phrases beginning with the letters P through T.","excerpt":"Terms, words and phrases beginning with the letters P through T.","ref":"/docs/reference/glossary/p-t/","tags":"","title":"P-T"},{"body":"Set up Grafana Loki This guide describes how to set up Grafana Loki in the cloud. Please ensure that the Prerequisites have been completed before starting this installation.\nSet up Grafana Loki Browse to the Team URL created during Sign Up For Grafana Cloud. Click the Lightening icon . Select Integrations and Connections. In the Add and manage Grafana Cloud integrations and connections click on the Hosted Logs.. In the Choose your usecase section select Send logs from a standalone host. Enter an Api key name in the Configure promtail to send logs to your Grafana Cloud section and click the Create API key button. The key name is used in the Grafana Cloud website to easily identify the key after its creation. Make a note of the value of the url in the client section of the example configuration. Ignore the instruction to copy and paste the whole content. Next Steps? Install Promtail ","categories":"","description":"Information about setting up Grafana Loki in the cloud.","excerpt":"Information about setting up Grafana Loki in the cloud.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/setup-loki/","tags":"","title":"Set up Grafana Loki"},{"body":"Upgrade v7.2 Gateway to Include Innovation This guide describes how to upgrade Gateway on v7.2 to include Innovation. Please ensure that Install Application Servers and Load Balancer has been completed before starting this installation. These steps assume that the v7.2 version of Gateway and its prerequisites have already been installed.\nThe steps to add Innovation functionality to v7.2 are:\nInstall Flow Debugger Service Upgrade Gateway Make Installation Artefacts Available We recommend that the Flow Debugger Service and Gateway are installed on the same Web Application Server. Copy the following artefacts to a folder on the machine (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - Gateway.zip Cortex Innovation 2022.9 - Flow Debugger Service.zip Cortex Innovation 2022.9 - Web App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - Web App Server Install Scripts.zip zip file to a folder with the same name.\nInstall Prerequisites Licensing Ensure that a valid Cortex licence file named Cortex.lic exists on the Web Application server, in the location %ProgramData%\\Cortex\\Licences. If it does not, follow the instructions located at Licensing Requirements.\nInstall Flow Debugger Service Get Application Pool User A domain user account is required for the Flow Debugger Service web application pool and must be created prior to performing the installation. In line with best practices, this account should not be used for any purposes other than those specified for the Flow Debugger Service. Alternatively, the NETWORK SERVICE user may also be used.\nThis user must currently have access to the default NuGet directory, in order to load block packages correctly. To add permissions for the user take the following steps:\nNavigate to %SystemRoot%\\System32\\config\\systemprofile\\AppData\\Roaming\\ and create a new folder named NuGet if one does not exist. Right-click on the NuGet folder and click Properties. In the dialog, click the Security tab. Click the Edit... button. Click the Add... button. Enter the username of the application pool user and click OK. In the Permissions section at the bottom, check Full control Click OK. The user must be given Log on as a service and Log on as a batch job permissions. To do this take the following steps:\nNavigate to Start -\u003e Administrative Tools -\u003e Local Security Policy. In the Local Security Policy dialog, expand the Local Policies node then select User Rights Assignment. Take the following steps for the Log on as a service and Log on as a batch job policies: In the right-hand panel, double-click on the policy. In the Properties dialog, click on the Add User or Group button. Note\rIt is possible to use the Advanced… button to look up names rather than entering them manually. Various filters can be set to find the correct user or group more easily. Multiple users can be selected by holding down CTRL while clicking. OK adds the selected users or groups into the Enter the object names to select text box.\rType the name of the application pool user account into the Enter the object names to select text box. Click the Check Names button to confirm that the user exists. Click OK on the Select Users dialog, and then confirm the user is correct by clicking OK on the Properties dialog. Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.FlowDebuggerService.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs\rSelf-Signed Certs\r.\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" .\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -UseSelfSignedCertificates ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" Name Description FlowDebuggerServicePath Configure this value with the location of the Flow Debugger Service zip file on the Web Application Server. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the Web Application Server. FlowDebuggerBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. For security reasons it is recommended that the default value BasicAuthUser should be changed.\nCurrently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when upgrading Gateway. FlowDebuggerBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. This password should be Cortex Encrypted. For security reasons it is recommended that the default value ADA9883B11BD4CDC908B8131B57944A4 should be changed.\nThis value will be needed later, when upgrading Gateway. UseSelfSignedCertificates Enables Flow Debugger Service to communicate with Gateway using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. Credential The credentials of the user that will be used to run the Debugger application pool in IIS. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.FlowDebuggerService.ps1.\nRun Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.FlowDebuggerService.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install the Flow Debugger Service.\nA credentials prompt will appear. Enter the credentials of the user that should run the Debugger application pool in IIS. If using the NETWORK SERVICE user, enter any user as the username and leave the password blank; the NETWORK SERVICE user will need to be selected in the final step.\nWait for the script to finish running. This should take approximately 2 minutes.\nAn error may have appeared saying:\nThe Windows Process Activation Service service is not started. This can be ignored.\nCheck that there have been no other errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, and retry the installation.\nIf the errors do not give any instructions on how to rectify, please contact Cortex Service Portal for further assistance.\nIf using NETWORK SERVICE for the application pool user:\nOpen Internet Information Services (IIS) Manager. On the left, expand the server node. Click Application Pools. Right-click on the Debugger application pool and select Advanced Settings.... In the Advanced Settings dialog, click on Identity and then click the ellipses (...). In the Application Pool Identity dialog, select Built-in account, then select NetworkService from the drop-down, then click OK. Right-click on the Debugger application pool and click Recycle.... Upgrade Gateway Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.Gateway.ps1 script and open it with a text editor.\nConfigure the script according to the details given below:\n.\\Cortex.Install.Gateway.ps1 ` -GatewayPackagePath \"C:\\Install\\Cortex Innovation 2022.9 - Gateway.zip\" ` -GatewayApplicationIISPath \"Cortex\\gateway\" ` -FeatureFlags \"InnovationId\" ` -ServiceFabricApiGatewayEndpoint \"https://server.domain.com/\" ` -ServiceFabricUsingSelfSignedCertificates $false ` -ServiceFabricApiGatewayBasicAuthUsername \"BasicAuthUser\" ` -ServiceFabricApiGatewayBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerEndpoint \"https://server.domain.com/debugger/api/\" ` -DotNetFlowDebuggerBasicAuthUsername \"BasicAuthUser\" ` -DotNetFlowDebuggerBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerUsingSelfSignedCertificates $false ` -Test:$Test ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-gateway-install-log.txt\" Name Description GatewayPackagePath Configure this value with the location of the Cortex Innovation 2022.9 - Gateway.zip file on the installation server. GatewayApplicationIISPath Change to the correct Site Name/Application if either was modified from the defaults (Cortex/gateway) when creating the website or application. FeatureFlags Replace InnovationId with the Cortex Innovation feature identifier, which should have been provided by Cortex when fulfilling the Licensing Requirements, if it wasn’t it should be requested using Cortex Service Portal.\nThis will overwrite the FeatureFlags value in the Gateway web.config. ServiceFabricApiGatewayEndpoint Replace server.domain.com with the fully qualified domain name of the Load Balancer Server. The port should be specified if it is not the default HTTPS port (443), and there must be a trailing slash, e.g. https://server.domain.com/ or https://server.domain.com:8722/.\nThis will overwrite the ServiceFabricApiGatewayEndpoint value in the Gateway web.config. ServiceFabricUsingSelfSignedCertificates Configure the value as $false if you used valid CA certificates when installing the Application Servers, $true if you used self-signed certificates.\nThis will overwrite the ServiceFabricUsingSelfSignedCertificates value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthUsername This must be changed if you used a non-default ApiGatewayBasicAuthUserName when installing the Application Servers; if so, this value must be configured to the one used.\nThis will overwrite the ServiceFabricApiGatewayBasicAuthUsername value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthPassword This must be changed if you used a non-default ApiGatewayBasicAuthPassword when installing the Application Servers; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will overwrite the ServiceFabricApiGatewayBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerEndpoint Replace server.domain.com with the fully qualified domain name of the Web Application Server.\nThis will overwrite the DotNetFlowDebuggerEndpoint value in the Gateway web.config. DotNetFlowDebuggerBasicAuthUsername This must be changed if you used a non-default FlowDebuggerBasicAuthUserName when installing the Flow Debugger Service; if so, this value must be configured to the one used.\nThis will overwrite the DotNetFlowDebuggerBasicAuthUsername value in the Gateway web.config. DotNetFlowDebuggerBasicAuthPassword This must be changed if you used a non-default FlowDebuggerBasicAuthPassword when installing the Flow Debugger Service; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will overwrite the DotNetFlowDebuggerBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerUsingSelfSignedCertificates Configure the value as $false if you are using valid CA certificates to secure the site containing Gateway and Flow Debugger Service, $true if using self-signed certificates.\nThis will overwrite the DotNetFlowDebuggerUsingSelfSignedCertificates value in the Gateway web.config. Test This does not need to be changed, it will be set at a later stage. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.Gateway.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 -Test Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -Test -AcceptEULA Run the PowerShell command to test the configuration. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nRun Installation Script Ensure the Gateway application pool is stopped:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Stop. Note\rFailure to stop the application pool will result in a permissions error when installing Gateway.\rType the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install Gateway. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nStart the Gateway application pool:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Start. Once the application pool has been started, the site will be available on \u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e/\u003cwebapplicationname\u003e, e.g. https://localhost/gateway. Note\rIf the application pool does not stay started, ensure that the user it runs as has Log on as a service and Log on as a batch job permissions or belongs to a group that has those permissions.\rNext Steps? Try it out ","categories":"","description":"Information about upgrading v7.2 Gateway with Innovation functionality.","excerpt":"Information about upgrading v7.2 Gateway with Innovation functionality.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/install-web-application-server/","tags":"","title":"Upgrade v7.2 Gateway to Include Innovation"},{"body":"Upgrade v7.2 Gateway to Include Innovation This guide describes how to upgrade Gateway on v7.2 to include Innovation. Please ensure that Install Application Server has been completed before starting this installation. These steps assume that the v7.2 version of Gateway and its prerequisites have already been installed.\nThe steps to add Innovation functionality to 7.2 are:\nInstall Flow Debugger Service Upgrade Gateway Make Installation Artefacts Available Copy the following artefacts to a folder on the machine (the version numbers may differ):\nCortex Innovation 2022.9 - Block Packages.zip Cortex Innovation 2022.9 - Gateway.zip Cortex Innovation 2022.9 - Flow Debugger Service.zip Cortex Innovation 2022.9 - Web App Server Install Scripts.zip Extract the Cortex Innovation 2022.9 - Web App Server Install Scripts.zip zip file to a folder with the same name.\nInstall Prerequisites Licensing Ensure that a valid Cortex licence file named Cortex.lic exists on the server, in the location %ProgramData%\\Cortex\\Licences. If it does not, follow the instructions located at Licensing Requirements.\nInstall Flow Debugger Service Get Application Pool User A domain user account is required for the Flow Debugger Service web application pool and must be created prior to performing the installation. In line with best practices, this account should not be used for any purposes other than those specified for the Flow Debugger Service. Alternatively, the NETWORK SERVICE user may also be used.\nThis user must currently have access to the default NuGet directory, in order to load block packages correctly. To add permissions for the user take the following steps:\nNavigate to %SystemRoot%\\System32\\config\\systemprofile\\AppData\\Roaming\\ and create a new folder named NuGet if one does not exist. Right-click on the NuGet folder and click Properties. In the dialog, click the Security tab. Click the Edit... button. Click the Add... button. Enter the username of the application pool user and click OK. In the Permissions section at the bottom, check Full control Click OK. The user must be given Log on as a service and Log on as a batch job permissions. To do this take the following steps:\nNavigate to Start -\u003e Administrative Tools -\u003e Local Security Policy. In the Local Security Policy dialog, expand the Local Policies node then select User Rights Assignment. Take the following steps for the Log on as a service and Log on as a batch job policies: In the right-hand panel, double-click on the policy. In the Properties dialog, click on the Add User or Group button. Note\rIt is possible to use the Advanced… button to look up names rather than entering them manually. Various filters can be set to find the correct user or group more easily. Multiple users can be selected by holding down CTRL while clicking. OK adds the selected users or groups into the Enter the object names to select text box.\rType the name of the application pool user account into the Enter the object names to select text box. Click the Check Names button to confirm that the user exists. Click OK on the Select Users dialog, and then confirm the user is correct by clicking OK on the Properties dialog. Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.FlowDebuggerService.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nCA Certs\rSelf-Signed Certs\r.\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" .\\Cortex.Install.FlowDebuggerService.ps1 ` -FlowDebuggerServicePath \"C:\\Install\\Cortex Innovation 2022.9 - Flow Debugger Service.zip\" ` -BlockPackagesPath \"C:\\Install\\Cortex Innovation 2022.9 - Block Packages.zip\" ` -FlowDebuggerBasicAuthUserName \"BasicAuthUser\" ` -FlowDebuggerBasicAuthPwd \"ADA9883B11BD4CDC908B8131B57944A4\" ` -UseSelfSignedCertificates ` -Credential $AppPoolIdentity ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-flow-debugger-service-install-log.txt\" Name Description FlowDebuggerServicePath Configure this value with the location of the Flow Debugger Service zip file on the server. BlockPackagesPath Configure this value with the location of the Block Packages zip file on the server. FlowDebuggerBasicAuthUserName Configure this value with the username that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. For security reasons it is recommended that the default value BasicAuthUser should be changed.\nCurrently only Basic Authentication using a single user is supported, OAuth2 will be supported in a future release.\nThis value will be needed later, when upgrading Gateway. FlowDebuggerBasicAuthPwd Configure this value with the password that will be used for Basic Authentication when Gateway makes HTTPS requests to the Flow Debugger Service. This password should be Cortex Encrypted. For security reasons it is recommended that the default value ADA9883B11BD4CDC908B8131B57944A4 should be changed.\nThis value will be needed later, when upgrading Gateway. UseSelfSignedCertificates Enables Flow Debugger Service to communicate with Gateway using generated Self-Signed Certificates rather than CA Certificates. Not recommended for production use. Credential The credentials of the user that will be used to run the Debugger application pool in IIS. This does not need to be changed, a prompt will appear to enter this information when the script is run. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.FlowDebuggerService.ps1.\nRun Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.FlowDebuggerService.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install the Flow Debugger Service.\nA credentials prompt will appear. Enter the credentials of the user that should run the Debugger application pool in IIS. If using the NETWORK SERVICE user, enter any user as the username and leave the password blank; the NETWORK SERVICE user will need to be selected in the final step.\nWait for the script to finish running. This should take approximately 2 minutes.\nAn error may have appeared saying:\nThe Windows Process Activation Service service is not started. This can be ignored.\nCheck that there have been no other errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation, and retry the installation.\nIf the errors do not give any instructions on how to rectify, please contact Cortex Service Portal for further assistance.\nIf using NETWORK SERVICE for the application pool user:\nOpen Internet Information Services (IIS) Manager. On the left, expand the server node. Click Application Pools. Right-click on the Debugger application pool and select Advanced Settings.... In the Advanced Settings dialog, click on Identity and then click the ellipses (...). In the Application Pool Identity dialog, select Built-in account, then select NetworkService from the drop-down, then click OK. Right-click on the Debugger application pool and click Recycle.... Upgrade Gateway Configure Installation Script In the Cortex Innovation 2022.9 - Web App Server Install Scripts folder, locate the Cortex.Innovation.Install.Gateway.ps1 script and open it with a text editor.\nConfigure the script according to the details given below:\n.\\Cortex.Install.Gateway.ps1 ` -GatewayPackagePath \"C:\\Install\\Cortex Innovation 2022.9 - Gateway.zip\" ` -GatewayApplicationIISPath \"Cortex\\gateway\" ` -FeatureFlags \"InnovationId\" ` -ServiceFabricApiGatewayEndpoint \"https://server.domain.com:8722/\" ` -ServiceFabricUsingSelfSignedCertificates $false ` -ServiceFabricApiGatewayBasicAuthUsername \"BasicAuthUser\" ` -ServiceFabricApiGatewayBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerEndpoint \"https://server.domain.com/debugger/api/\" ` -DotNetFlowDebuggerBasicAuthUsername \"BasicAuthUser\" ` -DotNetFlowDebuggerBasicAuthPassword \"ADA9883B11BD4CDC908B8131B57944A4\" ` -DotNetFlowDebuggerUsingSelfSignedCertificates $false ` -Test:$Test ` -AcceptEULA:$AcceptEula ` *\u003e\u00261 | Tee-Object -FilePath \"cortex-gateway-install-log.txt\" Name Description GatewayPackagePath Configure this value with the location of the Cortex Innovation 2022.9 - Gateway.zip file on the installation server. GatewayApplicationIISPath Change to the correct Site Name/Application if either was modified from the defaults (Cortex/gateway) when creating the website or application. FeatureFlags Replace InnovationId with the Cortex Innovation feature identifier, which should have been provided by Cortex when fulfilling the Licensing Requirements, if it wasn’t it should be requested using Cortex Service Portal.This will overwrite the FeatureFlags value in the Gateway web.config. ServiceFabricApiGatewayEndpoint Replace server.domain.com with the fully qualified domain name of the server. The port should be specified as 8722 and there must be a trailing slash, e.g. https://server.domain.com:8722/.\nThis will overwrite the ServiceFabricApiGatewayEndpoint value in the Gateway web.config. ServiceFabricUsingSelfSignedCertificates Configure the value as $false if you used valid CA certificates when installing the Application Server, $true if you used self-signed certificates.\nThis will overwrite the ServiceFabricUsingSelfSignedCertificates value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthUsername This must be changed if you used a non-default ApiGatewayBasicAuthUserName when installing the Application Server; if so, this value must be configured to the one used.\nThis will overwrite the ServiceFabricApiGatewayBasicAuthUsername value in the Gateway web.config. ServiceFabricApiGatewayBasicAuthPassword This must be changed if you used a non-default ApiGatewayBasicAuthPassword when installing the Application Server; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will overwrite the ServiceFabricApiGatewayBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerEndpoint Replace server.domain.com with the fully qualified domain name of the Web Application Server.\nThis will overwrite the DotNetFlowDebuggerEndpoint value in the Gateway web.config. DotNetFlowDebuggerBasicAuthUsername This must be changed if you used a non-default FlowDebuggerBasicAuthUserName when installing the Flow Debugger Service; if so, this value must be configured to the one used.\nThis will overwrite the DotNetFlowDebuggerBasicAuthUsername value in the Gateway web.config. DotNetFlowDebuggerBasicAuthPassword This must be changed if you used a non-default FlowDebuggerBasicAuthPassword when installing the Flow Debugger Service; if so, this value must be configured to the one used. It can be Cortex Encrypted.\nThis will overwrite the DotNetFlowDebuggerBasicAuthPassword value in the Gateway web.config. DotNetFlowDebuggerUsingSelfSignedCertificates Configure the value as $false if you are using valid CA certificates to secure the site containing Gateway and Flow Debugger Service, $true if using self-signed certificates.\nThis will overwrite the DotNetFlowDebuggerUsingSelfSignedCertificates value in the Gateway web.config. Test This does not need to be changed, it will be set at a later stage. AcceptEULA This does not need to be changed, the EULA will be accepted at a later stage. FilePath The filename that installation logs are written to. If this should be written to a different location than where the installation files are then a full path should be specified. Save and close Cortex.Innovation.Install.Gateway.ps1.\nTest Installation Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Web App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Web App Server Install Scripts\" Type the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 -Test Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -Test -AcceptEULA Run the PowerShell command to test the configuration. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nRun Installation Script Ensure the Gateway application pool is stopped:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Stop. Note\rFailure to stop the application pool will result in a permissions error when installing Gateway.\rType the following command into PowerShell:\n.\\Cortex.Innovation.Install.Gateway.ps1 Please read the End User Licence Agreement which can be found here. Once you agree to the terms, add the flag -AcceptEULA to the command entered above, e.g:\n.\\\u003cCortexInnovationInstallScriptName\u003e.ps1 -AcceptEULA Run the PowerShell command to install Gateway. In the event of any errors, there will be an error message displayed at the end of the output with a line confirming the Error Count.\nStart the Gateway application pool:\nOpen Internet Information Service (IIS) Manager. In the left pane, expand the server node. Click Application Pools to display a list of the Application Pools. Right-click the Cortex Gateway application pool and select Start. Once the application pool has been started, the site will be available on \u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e/\u003cwebapplicationname\u003e, e.g. https://localhost/gateway. Note\rIf the application pool does not stay started, ensure that the user it runs as has Log on as a service and Log on as a batch job permissions or belongs to a group that has those permissions.\rNext Steps? Try it out ","categories":"","description":"Information about upgrading v7.2 Gateway with Innovation functionality.","excerpt":"Information about upgrading v7.2 Gateway with Innovation functionality.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/install-web-application-server/","tags":"","title":"Upgrade v7.2 Gateway to Include Innovation"},{"body":"","categories":"","description":"Information about installing and configuring Promtail on the Application Server(s).","excerpt":"Information about installing and configuring Promtail on the Application Server(s).","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/install-promtail/","tags":"","title":"Install Promtail"},{"body":"","categories":"","description":"Information about installing and configuring Promtail on the Application Server(s).","excerpt":"Information about installing and configuring Promtail on the Application Server(s).","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/install-promtail/","tags":"","title":"Install Promtail"},{"body":"Setup Gateway This guide describes how to setup Gateway. Please ensure that Install Web Application Server has been completed before taking these steps.\nGateway Initial Setup Log on to Gateway and run through the setup wizard:\nOpen a supported web browser and navigate to \u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e/\u003cwebapplicationname\u003e, e.g. https://localhost/gateway.\nIf an error message is displayed in the browser, wait a few minutes and refresh the page as it is possible that the website was still starting.\nLog on using the default credentials that Gateway deploys with:\nUsername: administrator\nPassword: Adm1n1strat0r\nOn a newly installed system, you will be presented with a Setup Wizard at this point, which will guide you through some basic configuration steps:\nAccount Details LDAP Connection LDAP Authorisation Follow the steps in the setup wizard to configure the relevant areas:\nAccount Details Click Next Step: Initial Setup Screen\rEnter an email address for the Administrator and click Next Step: Administrator Details Screen\rChange the Administrator password to a unique, secret password and click Next Step: Change Password Screen\rLDAP Connection Enter the details of your Active Directory server and provide a Username and Password for a user with read access to it:\nA connection to an Active Directory server must be established in order to assign authorisation rights to users.\nIn the Server field, enter the Hostname, FQDN or IP Address of the Active Directory server that Gateway should use to authenticate and authorise users. In the Port field, enter the port number of the Active Directory server. The well-known port for LDAP traffic is 389; if SSL encryption is used, the well-known port is 636. If an SSL connection is to be used, tick the box Use SSL. In the Username field, enter a valid username of a user that has read permissions for the Active Directory server. In the Password field, enter the password of the user entered in the previous step. To reduce the scope of any Active Directory searches, add one or more base DNs (Distinguished Names). For each base DN click Add and enter the full LDAP path e.g CN=group, OU=organisational unit, DC=domain, DC=com. These will be used as the roots of any Active Directory searches performed. For more information about distinguished names see https://msdn.microsoft.com/en-us/library/aa366101(v=vs.85).aspx. Click Test Connection to validate the connection and the user credentials entered and click Next Step.\nLDAP Connection Screen\rLDAP Authorisation If the authorisation grid fails to load first time round, click Retry.\nAssign access permissions to Active Directory groups:\nTo allow users to access the various roles within Gateway, it is first necessary to assign them the appropriate access rights. Gateway currently supports four roles, but only two are relevant for Cortex Innovation:\nAdmin Studio To give a user access to a role, set access for a group or Organisational Unit (OU) that the user is a member of:\nExpand the groups or OUs, or search for the group or OU, to be assigned one or more roles. Check the relevant roles for each group. Checking a parent group will cascade the setting to all child groups. LDAP Authorisation Screen\rClick Complete Setup to commit the changes.\nTo test the permissions, log out as Administrator and then log in as a user with Studio permissions.\nConfigure the Gateway Databases to use Transparent Data Encryption Note\rTransparent Data Encryption cannot be applied to SQL Server Express, only full SQL Server instances.\rOnce Gateway has been configured, if you wish to encrypt the databases using Transparent Data Encryption for improved security, this should now be performed by following the steps in Configuring TDE.\nNext Steps? Try it out ","categories":"","description":"Information about setting up Cortex Gateway for first-time use.","excerpt":"Information about setting up Cortex Gateway for first-time use.","ref":"/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/setup-gateway/","tags":"","title":"Setup Gateway"},{"body":"Setup Gateway This guide describes how to setup Gateway. Please ensure that Install Web Application Server has been completed before taking these steps.\nGateway Initial Setup Log on to Gateway and run through the setup wizard:\nOpen a supported web browser and navigate to \u003cprotocol\u003e://\u003chost\u003e:\u003cport\u003e/\u003cwebapplicationname\u003e, e.g. https://localhost/gateway.\nIf an error message is displayed in the browser, wait a few minutes and refresh the page as it is possible that the website was still starting.\nLog on using the default credentials that Gateway deploys with:\nUsername: administrator\nPassword: Adm1n1strat0r\nOn a newly installed system, you will be presented with a Setup Wizard at this point, which will guide you through some basic configuration steps:\nAccount Details LDAP Connection LDAP Authorisation Follow the steps in the setup wizard to configure the relevant areas:\nAccount Details Click Next Step: Initial Setup Screen\rEnter an email address for the Administrator and click Next Step: Administrator Details Screen\rChange the Administrator password to a unique, secret password and click Next Step: Change Password Screen\rLDAP Connection Enter the details of your Active Directory server and provide a Username and Password for a user with read access to it:\nA connection to an Active Directory server must be established in order to assign authorisation rights to users.\nIn the Server field, enter the Hostname, FQDN or IP Address of the Active Directory server that Gateway should use to authenticate and authorise users. In the Port field, enter the port number of the Active Directory server. The well-known port for LDAP traffic is 389; if SSL encryption is used, the well-known port is 636. If an SSL connection is to be used, tick the box Use SSL. In the Username field, enter a valid username of a user that has read permissions for the Active Directory server. In the Password field, enter the password of the user entered in the previous step. To reduce the scope of any Active Directory searches, add one or more base DNs (Distinguished Names). For each base DN click Add and enter the full LDAP path e.g CN=group, OU=organisational unit, DC=domain, DC=com. These will be used as the roots of any Active Directory searches performed. For more information about distinguished names see https://msdn.microsoft.com/en-us/library/aa366101(v=vs.85).aspx. Click Test Connection to validate the connection and the user credentials entered and click Next Step.\nLDAP Connection Screen\rLDAP Authorisation If the authorisation grid fails to load first time round, click Retry.\nAssign access permissions to Active Directory groups:\nTo allow users to access the various roles within Gateway, it is first necessary to assign them the appropriate access rights. Gateway currently supports four roles, but only two are relevant for Cortex Innovation:\nAdmin Studio To give a user access to a role, set access for a group or Organisational Unit (OU) that the user is a member of:\nExpand the groups or OUs, or search for the group or OU, to be assigned one or more roles. Check the relevant roles for each group. Checking a parent group will cascade the setting to all child groups. LDAP Authorisation Screen\rClick Complete Setup to commit the changes.\nTo test the permissions, log out as Administrator and then log in as a user with Studio permissions.\nConfigure the Gateway Databases to use Transparent Data Encryption Note\rTransparent Data Encryption cannot be applied to SQL Express, only SQL Server instances.\rOnce Gateway has been configured, if you wish to encrypt the databases using Transparent Data Encryption for improved security, this should now be performed by following the steps in Configuring TDE.\nNext Steps? Try it out ","categories":"","description":"Information about setting up Cortex Gateway for first-time use.","excerpt":"Information about setting up Cortex Gateway for first-time use.","ref":"/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/setup-gateway/","tags":"","title":"Setup Gateway"},{"body":"\rSingle server installations with HA are not recommended for the following scenarios:\nProduction installations that are required to scale and support HA ","categories":"","description":"Information about installing Cortex Innovation on a single on-premise server without high availability (HA), including: information about components, supported architectures, prerequisites and installation instructions.","excerpt":"Information about installing Cortex Innovation on a single on-premise server without high availability (HA), including: information about components, supported architectures, prerequisites and …","ref":"/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/","tags":"","title":"Single Server - Without HA"},{"body":"U-Z Terms, words and phrases beginning with the letters U through Z.\nU Unicode Unicode is a standard used to ensure consistent encoding, representation, and handling of text.\nSee What is Unicode?.\nUPPERCASE The term uppercase refers to capital letters (A,B,C…) as distinguished from small letters (a,b,c …).\nV Variable A variable is a named container for storing data that can then be used in Block Properties.\nData in a variable can be read, updated, or removed by different blocks.\nFor more detailed information about variables, see Fundamentals \u003e Variables.\nW Whitespace In programming, whitespace is any character or series of characters that represent horizontal or vertical space in typography. When rendered, a whitespace character does not correspond to a visible character, but typically does occupy an area on a page.\nSee Text \u003e Empty Text and Whitespace.\nWindows PowerShell PowerShell is a task automation and configuration management program from Microsoft, consisting of a command-line shell and the associated scripting language.\nSee What is PowerShell? for more information about PowerShell Core and Windows PowerShell.\nX Y Z Zero Based Zero Based is a way of numbering in which the initial item of a list is assigned the index 0.\n","categories":"","description":"Terms, words and phrases beginning with the letters U through Z.","excerpt":"Terms, words and phrases beginning with the letters U through Z.","ref":"/docs/reference/glossary/u-z/","tags":"","title":"U-Z"},{"body":"Import Dashboards This guide describes where to get the default Cortex Innovation Dashboards from and how to import them for use in Grafana Cloud.\nPlease ensure that the set up for Grafana and Loki have been completed before starting this section.\nDownload the Cortex Innovation Default Dashboards Download Grafana.Dashboards.zip archive containing the Cortex Innovation default dashboards. Extract the content of the downloaded archive to a suitable location. Create Folder for Dashboards Log in to Grafana Cloud with a user that has the Admin role. Hover over the Dashboards icon in the side menu, and then click + New folder. Enter a folder name, e.g. Cortex. Click Create. Import Dashboards Log in to Grafana Cloud with a user that has the Admin role. Hover over the Dashboards icon in the side menu, and then click Import. Click the Upload JSON file button. Locate the Flow Execution Requests.json file extracted from the downloaded Grafana.Dashboards.zip. Select the file and click Open. Select the folder in Grafana you wish the dashboard to be saved in, e.g. Cortex. Select your configured Loki data source from the dropdown menu. Click Import. Repeat steps 2 - 8 for the Platform Health.json file. Configure Data Sources It is necessary to update the Custom Filter inside the dashboards to use the correct data source.\nTo do this, follow these steps for all default Cortex Innovation dashboards imported:\nLog in to Grafana Cloud with a user that has the Admin role. To open a dashboard: Hover over the Dashboards icon in the side menu, and then click Browse. Click the folder name that the dashboards were imported to. Click the Flow Execution Requests dashboard to open it. Open the Dashboard Settings menu via the cog icon in the top right side of the dashboard. Click Variables on the left-hand side of the page. Click Custom Filter in the Variables list. Select your configured Loki data source in the Options \u003e Data source drop-down menu. Click Update. Click the back button on the top left corner of the page to go back to the dashboard. Click the + icon next to the Custom Filter to confirm that a list of available filter options is visible. If Grafana Loki has not received any logs from Promtail there will be no options available for selection. Repeat steps 2 - 9 for the Platform Health dashboard. Next Steps? Try it Out ","categories":"","description":"Information about setting up Grafana to communicate with the Cloud Grafana Loki as well as importing and configuring the default set of dashboards.","excerpt":"Information about setting up Grafana to communicate with the Cloud Grafana Loki as well as importing and configuring the default set of dashboards.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/import-dashboards/","tags":"","title":"Import Dashboards"},{"body":"Setup Grafana This guide describes where to get the default Cortex Innovation Dashboards from and how to import them for use in Grafana.\nPlease ensure that the Installations for Grafana and Loki have been completed before starting this section.\nConfigure Loki Data Source in Grafana Log in to your configured Grafana instance with a user that has the admin role.\nIn Grafana, go to Configuration \u003e Data Sources via the cog icon on the left sidebar.\nClick the big Add data source button.\nChoose Loki from the list.\nConfigure the data source as follows:\nOption Description Value Name The name of the data source to use in Grafana Cortex Loki URL The address of your Grafana Loki Server http://localhost:3100 Timeout The HTTP request timeout in seconds set to the same value as configured in the Grafana Loki loki-local-config.yaml configuration file located alongside the Grafana Loki loki-windows-amd64.exe file. 600 Click Save and Test.\nData source connected and labels found. message should be displayed above the Save and Test\nDownload the Cortex Innovation Default Dashboards Download Grafana.Dashboards.zip archive containing the Cortex Innovation default dashboards. Extract the content of the downloaded archive to a suitable location. Create Folder for Dashboards Log in to your configured Grafana with a user that has the Admin role. To create a folder, click the + icon in the side menu, and then click Folder. Enter a folder name, e.g. Cortex. Click Create. Import Dashboards Log in to your configured Grafana with a user that has the Admin role.\nTo import a dashboard, click the + icon in the side menu, and then click Import.\nClick the Upload JSON file button.\nNote\rThis button is broken in the Grafana 8.5.3 version and it may be necessary to use your keyboard’s tab button until the Upload JSON file button is highlighted and press Enter.\rLocate the Flow Execution Requests.json file extracted from the downloaded Grafana.Dashboards.zip.\nSelect the file and click Open.\nSelect the folder in Grafana you wish the dashboard to be saved in, e.g. Cortex.\nSelect your configured Loki data source from the dropdown menu.\nClick Import.\nRepeat steps 2 - 8 for the Platform Health.json file.\nConfigure Data Sources It is necessary to update the Custom Filter inside the dashboards to use the correct data source.\nTo do this, follow these steps for all default Cortex Innovation dashboards imported:\nLog in to your configured Grafana with a user that has the Admin role. To open a dashboard: Click the Dashboards icon in the side menu, and then click Browse. Click the folder name that the dashboards were imported to. Click the Flow Execution Requests dashboard to open it. Open the Dashboard Settings menu via the cog icon in the top right-hand side of the dashboard. Click Variables on the left-hand side of the page. Click Custom Filter at the bottom of the Variables list. Select your configured Loki data source in the Options \u003e Data source drop-down menu. Click Update. Click the back button on the top left corner of the page to go back to the dashboard. Click the + icon next to the Custom Filter to confirm that a list of available filter options is visible. Repeat steps 2 - 9 for the Platform Health dashboard. Next Steps? Try it Out ","categories":"","description":"Information about setting up Grafana to communicate with the installed Grafana Loki as well as importing and configuring the default set of dashboards.","excerpt":"Information about setting up Grafana to communicate with the installed Grafana Loki as well as importing and configuring the default set of dashboards.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/setup-grafana/","tags":"","title":"Setup Grafana"},{"body":"Try it out This guide describes how to try out a new Innovation installation to make sure it is working.\nTest Debugging Flows Test the platform by creating a new flow and executing it using the following steps:\nClick on the Flows charm, then the + button and click Group to open a dialog. Enter a name for the group, configure the Permission Groups and click OK to create the group. Click on the group to open it (refresh the page if it does not appear). Inside the group, click the + button again and click on Flow(Innovation) to open a dialog. If the menu item is not present, it means that the FeatureFlags in the CortexGateway.SetParameters.xml file was not set properly when installing Gateway. See Troubleshooting for more information. Enter a name for the flow, configure the Permission Groups and click OK to create the flow. The flow should be displayed with a start flow block and end flow block. A list of block palettes should be displayed down the left hand side: New Flow - Number of palettes may differ\rIf the blocks in the flow do not display or the palettes are not visible, see Troubleshooting for more information. Add a Set Variable block and connect it between the start and end blocks. Click the Set Variable block to open the Property Editor. Set the Value property to the expression DateTimeOffset.Now. Type Result into the Variable property and click Create Result. In the Variable Editor, set Is Output Variable? to true for the new Result variable. Set a breakpoint on the end block and start the flow. An execution token should appear, the Result variable should show the current time. If the token does not appear, try refreshing the page. Continue or stop the execution. Commit the flow. Test Publishing Production Flows Log in to Gateway with a user that has the Admin role. Click on the Settings charm, then Packages. Click Add Package Definition. Enter a package name and select the new flow to add to the package. Click Save to save the new package. Click Publish. A success message should appear. If it doesn’t it means that either one or more of the parameters prefixed with Service Fabric in the CortexGateway.SetParameters.xml file was not set properly when updating Gateway, or the Application Services aren’t healthy. See Troubleshooting for more information. Test Executing Production Flows Open an HTTP client, such as Postman. Make a request with the following format:\nProperty Value Action POST URL https://{FQDN of Load Balancer Server}/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://load-balancer.domain.com/api/default/default/flows/NewFlow/executions?packageName=NewPackage Content Type application/json Body {} Authentication Basic Username The value used for ApiGatewayBasicAuthUserName when installing Application Services Password The value used for ApiGatewayBasicAuthPwd when installing Application Services (Unencrypted) Note\rIf you used self-signed certificates when installing the Application Servers you will need to disable SSL certificate validation in your HTTP client.\rThe request should return a JSON object with the output variables of the flow e.g. { \"Output\": \"2022-03-09T07:35:16+0000\" }.\nCortex Innovation has now been verified and is ready to use.\n","categories":"","description":"Information about trying out Cortex Innovation for the first time.","excerpt":"Information about trying out Cortex Innovation for the first time.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/multiple-server-with-ha/try-it-out/","tags":"","title":"Try it out"},{"body":"Try it out This guide describes how to try out a new Innovation installation to make sure it is working. Please ensure that Setup Gateway has been completed before taking these steps.\nTest Debugging Flows Test the platform by creating a new flow and executing it using the following steps:\nClick on the Flows charm, then the + button and click Group to open a dialog. Enter a name for the group, configure the Permission Groups and click OK to create the group. Click on the group to open it (refresh the page if it does not appear). Inside the group, click the + button again and click on Flow(Innovation) to open a dialog. If the menu item is not present, it means that the FeatureFlags in the CortexGateway.SetParameters.xml file was not set properly when installing Gateway. See Troubleshooting for more information. Enter a name for the flow, configure the Permission Groups and click OK to create the flow. The flow should be displayed with a start flow block and end flow block. A list of block palettes should be displayed down the left hand side: New Flow - Number of palettes may differ\rIf the blocks in the flow do not display or the palettes are not visible, see Troubleshooting for more information. Add a Set Variable block and connect it between the start and end blocks. Click the Set Variable block to open the Property Editor. Set the Value property to the expression DateTimeOffset.Now. Type Result into the Variable property and click Create Result. In the Variable Editor, set Is Output Variable? to true for the new Result variable. Set a breakpoint on the end block and start the flow. An execution token should appear, the Result variable should show the current time. If the token does not appear, try refreshing the page. Continue or stop the execution. Commit the flow. Test Publishing Production Flows Log in to Gateway with a user that has the Admin role. Click on the Settings charm, then Packages. Click Add Package Definition. Enter a package name and select the new flow to add to the package. Click Save to save the new package. Click Publish. A success message should appear. If it doesn’t it means that either one or more of the parameters prefixed with Service Fabric in the CortexGateway.SetParameters.xml file was not set properly when installing Gateway, or the Application Services aren’t healthy. See Troubleshooting for more information. Test Executing Production Flows Open an HTTP client, such as Postman. Make a request with the following format:\nProperty Value Action POST URL https://{FQDN of server}:8722/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://server.domain.com:8722/api/default/default/flows/NewFlow/executions?packageName=NewPackage Content Type application/json Body {} Authentication Basic Username The value used for ApiGatewayBasicAuthUserName when installing Application Services Password The value used for ApiGatewayBasicAuthPwd when installing Application Services (Unencrypted) Note\rIf you used self-signed certificates when installing the server you will need to disable SSL certificate validation in your HTTP client.\rThe request should return a JSON object with the output variables of the flow e.g. { \"Output\": \"2022-03-09T07:35:16+0000\" }.\nCortex Innovation has now been verified and is ready to use.\n","categories":"","description":"Information about trying out Cortex Innovation for the first time.","excerpt":"Information about trying out Cortex Innovation for the first time.","ref":"/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/try-it-out/","tags":"","title":"Try it out"},{"body":"Try it out This guide describes how to try out a new Innovation installation to make sure it is working. Please ensure that Setup Gateway has been completed before taking these steps.\nTest Debugging Flows Test the platform by creating a new flow and executing it using the following steps:\nClick on the Flows charm, then the + button and click Group to open a dialog. Enter a name for the group, configure the Permission Groups and click OK to create the group. Click on the group to open it (refresh the page if it does not appear). Inside the group, click the + button again and click on Flow to open a dialog. If the menu item is not present, it means that the FeatureFlags in the CortexGateway.SetParameters.xml file was not set properly when installing Gateway. See Troubleshooting for more information. Enter a name for the flow, configure the Permission Groups and click OK to create the flow. The flow should be displayed with a start flow block and end flow block. A list of block palettes should be displayed down the left hand side: New Flow - Number of palettes may differ\rIf the blocks in the flow do not display or the palettes are not visible, see Troubleshooting for more information. Add a Set Variable block and connect it between the start and end blocks. Click the Set Variable block to open the Property Editor. Set the Value property to the expression DateTimeOffset.Now. Type Result into the Variable property and click Create Result. In the Variable Editor, set Is Output Variable? to true for the new Result variable. Set a breakpoint on the end block and start the flow. An execution token should appear, the Result variable should show the current time. If the token does not appear, try refreshing the page. Continue or stop the execution. Commit the flow. Test Publishing Production Flows Log in to Gateway with a user that has the Admin role. Click on the Settings charm, then Packages. Click Add Package Definition. Enter a package name and select the new flow to add to the package. Click Save to save the new package. Click Publish. A success message should appear. If it doesn’t it means that either one or more of the parameters prefixed with Service Fabric in the CortexGateway.SetParameters.xml file was not set properly when installing Gateway, or the Application Services aren’t healthy. See Troubleshooting for more information. Test Executing Production Flows Open an HTTP client, such as Postman. Make a request with the following format:\nProperty Value Action POST URL https://{FQDN of Load Balancer Server}/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://load-balancer.domain.com/api/default/default/flows/NewFlow/executions?packageName=NewPackage Content Type application/json Body {} Authentication Basic Username The value used for ApiGatewayBasicAuthUserName when installing Application Services Password The value used for ApiGatewayBasicAuthPwd when installing Application Services (Unencrypted) Note\rIf you used self-signed certificates when installing the Application Servers you will need to disable SSL certificate validation in your HTTP client.\rThe request should return a JSON object with the output variables of the flow e.g. { \"Output\": \"2022-03-09T07:35:16+0000\" }.\nCortex Innovation has now been verified and is ready to use.\n","categories":"","description":"Information about trying out Cortex Innovation for the first time.","excerpt":"Information about trying out Cortex Innovation for the first time.","ref":"/docs/getting-started/on-premise/install-innovation-only/multiple-server-with-ha/try-it-out/","tags":"","title":"Try it out"},{"body":"Try it out This guide describes how to try out a new Innovation installation to make sure it is working. Please ensure that Setup Gateway has been completed before taking these steps.\nTest Debugging Flows Test the platform by creating a new flow and executing it using the following steps:\nClick on the Flows charm, then the + button and click Group to open a dialog. Enter a name for the group, configure the Permission Groups and click OK to create the group. Click on the group to open it (refresh the page if it does not appear). Inside the group, click the + button again and click on Flow to open a dialog. If the menu item is not present, it means that the FeatureFlags in the CortexGateway.SetParameters.xml file was not set properly when installing Gateway. See Troubleshooting for more information. Enter a name for the flow, configure the Permission Groups and click OK to create the flow. The flow should be displayed with a start flow block and end flow block. A list of block palettes should be displayed down the left hand side: New Flow - Number of palettes may differ\rIf the blocks in the flow do not display or the palettes are not visible, see Troubleshooting for more information. Add a Set Variable block and connect it between the start and end blocks. Click the Set Variable block to open the Property Editor. Set the Value property to the expression DateTimeOffset.Now. Type Result into the Variable property and click Create Result. In the Variable Editor, set Is Output Variable? to true for the new Result variable. Set a breakpoint on the end block and start the flow. An execution token should appear, the Result variable should show the current time. If the token does not appear, try refreshing the page. Continue or stop the execution. Commit the flow. Test Publishing Production Flows Log in to Gateway with a user that has the Admin role. Click on the Settings charm, then Packages. Click Add Package Definition. Enter a package name and select the new flow to add to the package. Click Save to save the new package. Click Publish. A success message should appear. If it doesn’t it means that either one or more of the parameters prefixed with Service Fabric in the CortexGateway.SetParameters.xml file was not set properly when installing Gateway, or the Application Services aren’t healthy. See Troubleshooting for more information. Test Executing Production Flows Open an HTTP client, such as Postman. Make a request with the following format:\nProperty Value Action POST URL https://{FQDN of server}:8722/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://server.domain.com:8722/api/default/default/flows/NewFlow/executions?packageName=NewPackage Content Type application/json Body {} Authentication Basic Username The value used for ApiGatewayBasicAuthUserName when installing Application Services Password The value used for ApiGatewayBasicAuthPwd when installing Application Services (Unencrypted) Note\rIf you used self-signed certificates when installing the server you will need to disable SSL certificate validation in your HTTP client.\rThe request should return a JSON object with the output variables of the flow e.g. { \"Output\": \"2022-03-09T07:35:16+0000\" }.\nCortex Innovation has now been verified and is ready to use.\n","categories":"","description":"Information about trying out Cortex Innovation for the first time.","excerpt":"Information about trying out Cortex Innovation for the first time.","ref":"/docs/getting-started/on-premise/install-innovation-only/single-server-without-ha/try-it-out/","tags":"","title":"Try it out"},{"body":"Try it Out Check Dashboards are Displaying Data Note\rThis test uses the test flow published as part of testing the Innovation installation. See Testing HA installation or Testing non-HA installation. An alternative flow can be used that exists on the system and can be executed.\rOpen an HTTP client, such as Postman. Make a request with the following format:\nProperty Value Action POST URL For HA installation use: https://{FQDN of Load Balancer Server}/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://load-balancer\u0026#46;domain\u0026#46;com/api/default/default/flows/NewFlow/executions?packageName=NewPackage For non-HA installation use: https://{FQDN of server}:8722/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://server\u0026#46;domain\u0026#46;com:8722/api/default/default/flows/NewFlow/executions?packageName=NewPackage Content Type application/json Body {} Authentication Basic Username The value used for ApiGatewayBasicAuthUserName when installing Application Services. See HA Installation script configuration or Non-HA Installation script configuration for the value specified. Password The value used for ApiGatewayBasicAuthPwd when installing Application Services (Unencrypted). See HA Installation script configuration or Non-HA Installation script configuration for the value specified. Note\rIf you used self-signed certificates when installing the Application Servers you may need to disable SSL certificate validation in your HTTP client.\rOnce the request has completed, using a web browser, log in to your configured Grafana.\nClick the Dashboards icon in the side menu, and then click Browse.\nClick the folder name that the dashboards were imported to.\nClick the Flow Execution Requests dashboard to open it.\nThe request made at step 1 should be visible on the dashboard. Note\rIf other requests have been made then there may be more than one request visible on the dashboard.\rClick the Dashboards icon in the side menu, and then click Browse.\nClick the folder name that the dashboards were imported to.\nClick the Platform Health dashboard to open it.\nThe request made at step 1 should be visible on the dashboard. Note\rIf other requests have been made then there may be more than one request visible on the dashboard.\r","categories":"","description":"Information about trying out Grafana Observability Dashboards for the first time.","excerpt":"Information about trying out Grafana Observability Dashboards for the first time.","ref":"/docs/getting-started/cloud/add-observability-to-innovation/grafana/try-it-out/","tags":"","title":"Try it Out"},{"body":"Try it Out Check Dashboards are Displaying Data Note\rThis test uses the test flow published as part of testing the Innovation installation. See Testing HA installation or Testing non-HA installation. An alternative flow can be used that exists on the system and can be executed.\rOpen an HTTP client, such as Postman. Make a request with the following format:\nProperty Value Action POST URL For HA installation use: https://{FQDN of Load Balancer Server}/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://load-balancer\u0026#46;domain\u0026#46;com/api/default/default/flows/NewFlow/executions?packageName=NewPackage For non-HA installation use: https://{FQDN of server}:8722/api/default/default/flows/{Flow Name}/executions?packageName={Package Name}\ne.g. https://server\u0026#46;domain\u0026#46;com:8722/api/default/default/flows/NewFlow/executions?packageName=NewPackage Content Type application/json Body {} Authentication Basic Username The value used for ApiGatewayBasicAuthUserName when installing Application Services. See HA Installation script configuration or Non-HA Installation script configuration for the value specified. Password The value used for ApiGatewayBasicAuthPwd when installing Application Services (Unencrypted). See HA Installation script configuration or Non-HA Installation script configuration for the value specified. Note\rIf you used self-signed certificates when installing the Application Servers you may need to disable SSL certificate validation in your HTTP client.\rOnce the request has completed, using a web browser, log in to your configured Grafana.\nClick the Dashboards icon in the side menu, and then click Browse.\nClick the folder name that the dashboards were imported to.\nClick the Flow Execution Requests dashboard to open it.\nThe request made at step 1 should be visible on the dashboard. Note\rIf other requests have been made then there may be more than one request visible on the dashboard.\rClick the Dashboards icon in the side menu, and then click Browse.\nClick the folder name that the dashboards were imported to.\nClick the Platform Health dashboard to open it.\nThe request made at step 1 should be visible on the dashboard. Note\rIf other requests have been made then there may be more than one request visible on the dashboard.\r","categories":"","description":"Information about trying out Grafana Observability Dashboards for the first time.","excerpt":"Information about trying out Grafana Observability Dashboards for the first time.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/try-it-out/","tags":"","title":"Try it Out"},{"body":"","categories":"","description":"Supporting information about installing and configuring a Grafana observability platform for Cortex Innovation.","excerpt":"Supporting information about installing and configuring a Grafana observability platform for Cortex Innovation.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/","tags":"","title":"Advanced Setup"},{"body":"","categories":"","description":"Supporting information about installing Cortex Innovation with non-default configurations.","excerpt":"Supporting information about installing Cortex Innovation with non-default configurations.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/","tags":"","title":"Advanced Setup"},{"body":"0-9 Terms, words and phrases beginning with the numbers 0 through 9.\n0 0 Based See Zero Based.\n1 16-bit 16-bit refers to a measurement of units of memory or data that are 16 bits in size.\n2 3 32-bit 32-bit refers to a measurement of units of memory or data that are 32 bits in size.\n3rd-Party Systems 3rd-party systems refer to systems, services or applications that are not developed by Cortex.\n4 5 6 64-bit 64-bit refers to a measurement of units of memory or data that are 64 bits in size.\n7 8 9 ","categories":"","description":"Terms, words and phrases beginning with the numbers 0 through 9.","excerpt":"Terms, words and phrases beginning with the numbers 0 through 9.","ref":"/docs/reference/glossary/0-9/","tags":"","title":"0-9"},{"body":"","categories":"","description":"Information regarding what a block property is, the types of properties, the different property editors, and block properties that are common or advanced.","excerpt":"Information regarding what a block property is, the types of properties, the different property editors, and block properties that are common or advanced.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/","tags":"","title":"Block Properties"},{"body":"Calling Other Flows Summary A flow may trigger the execution of another flow.\nCalling Another Flow A flow can be called from another flow in the following ways:\nUsing the Run Flow block to trigger the execution of another flow directly Using the Execute HTTP Request block to trigger a flow through the API Gateway service (this should only be used to call flows published in a separate Cortex Innovation platform) Input Variables Sometimes flows require data to be passed to them through the use of input variables (e.g. a flow used to log errors may require a file path for where the logs are saved).\nInput variables can be passed into flows in the following ways:\nFor the Run Flow block, input variables are configured using the Inputs property; for more information see Run Flow Example For the Execute HTTP Request block, input variables are configured within the body of the HttpRequest; for more information see example of Calling Another Flow Output Variables Sometimes flows may return data through the use of output variables (e.g. a flow used to interact with a database may return its results).\nOutput variables are returned to the calling flow in the following ways:\nFor the Run Flow block, output variables are saved to the Outputs property; for more information see Run Flow Example For the Execute HTTP Request block, output variables are returned within the ResponseBody of the HttpResponse property; for more information see example of Calling Another Flow Remarks Known Limitations Flows can only be Called Synchronously Currently it is only possible to call other flows synchronously; this means the calling flow will wait for the called flow to complete its execution before continuing.\nIn the future it will be possible to call flows asynchronously; this means the calling flow will continue after the called flow starts its execution without waiting for the called flow to complete.\nSee Also Related Concepts Flows Blocks Executions Related Blocks Run Flow Execute HTTP Request External Documentation None\n","categories":"","description":"Information regarding calling, and passing data to, other flows.","excerpt":"Information regarding calling, and passing data to, other flows.","ref":"/docs/reference/concepts/fundamentals/flows/calling-other-flows/","tags":"","title":"Calling Other Flows"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the logs generated by Cortex Studio.","excerpt":"This section includes all reference documentation for the logs generated by Cortex Studio.","ref":"/docs/reference/logs/cortex-studio/","tags":"","title":"Cortex Studio"},{"body":"Executions in Development Summary Whilst debugging a flow, each execution is represented by a token that moves through the flow, showing which block is currently being executed.\nA flow can be debugged in Cortex Studio by clicking the Start an execution button or by making an API call to Cortex Studio, providing input variables to the flow, if required; this will validate the flow a nd then begin an execution.\nThe following parameters can be specified:\nShow execution on workspace - when this is true, the token will be shown at every step throughout the flow, otherwise the token will only be shown when the execution pauses, hits a breakpoint, or an exception occurs when Break on exception is true Break on exception - when this is true the execution will pause when an exception occurs Providing Input Variables Any flow that has Input Variables defined requires them to be provided when debugging, these may be provided to a flow in the following ways:\nFrom Cortex Studio using the Inputs Property in the Settings Editor From an HTTP request using the inputVariables in the body of the request Retrieving Output Variables Any flow that has Output Variables defined can have those variables retrieved after the execution has completed by using the outputVariables in the body of the HTTP response.\nValidating a Flow The flow is validated before it’s debugged, if this is successful an execution will begin.\nIf there are any issues with the flow then the execution will not start and details of what needs to be resolved will be returned. If the flow was debugged by clicking the Start an execution button, then entries will be displayed in the Messages Grid; if it was debugged by making an HTTP request to Cortex Studio, then a 400 Bad Request is returned.\nFor a complete list see Validation messages.\nSelecting an Execution One or more executions can be selected within Cortex Studio by clicking on their token, or selecting them using the Executions Grid. This allows:\nInteracting with an Execution Viewing an Execution’s Variables Viewing an Execution’s Exceptions Interacting with an Execution Once executions are selected in Cortex Studio they can be interacted with in the following ways:\nPaused Stepped Continued Stopped Set Next Block to Execute Set Next Block to Execute allows a developer to choose which block will be executed next for the selected execution, even if this block is not connected to the flow.\nExamples of what this can be used to do whilst debugging include:\nRetrying a block due to a transient exception such as network connectivity Retrying a block after using Edit and Continue to fix an incorrectly configured block Skipping over functionality that is not yet working Skipping to specific functionality within the flow in order to test it Running logic that is not part of the flow (e.g. running a clean up script to reset any external data sources for the next execution of the flow) Currently, Set Next Block to Execute is not available when multiple executions are selected, or the block and execution are on different workspaces.\nEdit and Continue an Execution Edit and Continue allows a developer to pause all executions, and make changes to the flow before continuing debugging.\nExamples of what this can be used to do whilst debugging include:\nMaking changes such as adding, updating and removing: blocks, connections, variables Fixing an incorrectly configured block Currently when using Edit and Continue, it is not possible to directly change the value of a variable without using a block.\nViewing an Execution’s Variables When debugging a flow in Cortex Studio, selecting an execution will display all initialised variables that are in scope in the Variables Viewer.\nTo see the data in a variable, select the variable in the Variables Viewer and the data will be presented in the Variable Details Viewer. If the data is large enough to negatively affect the performance of Cortex Studio it will not be displayed unless the Load Value Button is clicked.\nViewing an Execution’s Exceptions When debugging a flow in Cortex Studio, selecting an execution will display all exceptions that have been thrown for that execution in the Exceptions Viewer.\nIn future, it will be possible to navigate to the block that caused the exception.\nHandling an Execution’s Exceptions Exceptions thrown by an execution can be handled at any level within a flow.\nExceptions can be handled:\nAt the block level; for further information, see Handling Exceptions within a Block At the workspace level; for further information, see Handling Exceptions within a Workspace At the flow level; for further information, see Handling Exceptions within a Flow If an exception occurs within the workspace of the Handle Flow Exception block and is not handled, the execution will end with a status of Error.\nLogs Generated There are two ways that logs are generated while debugging a flow, they are:\nAutomatically generated by the Cortex Flow Debugger Service Developer generated by using the Log Event block Remarks Known Limitations Updating a Variable’s value is not possible without using a Block When using Edit and Continue, it is not possible to directly change the value of a variable without using a block.\nIn future this limitation may be removed.\nSet Next Block to Execute not available when multiple Executions are selected It is not possible to use Set Next Block to Execute when there are multiple executions selected on the same workspace.\nIn future this limitation may be removed.\nSet Next Block to Execute not available when the Block and Execution are on different Workspaces It is not possible to use Set Next Block to Execute when the selected execution is not on the same workspace as the block being set next to execute.\nIn future this limitation may be removed.\nSee Also Related Concepts Flows Workspaces Blocks Variables Data Types Exceptions Messages Related Data Types All Data Types Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding working with executions in development (i.e. Cortex Studio).","excerpt":"Information regarding working with executions in development (i.e. Cortex Studio).","ref":"/docs/reference/concepts/fundamentals/executions/executions-in-development/","tags":"","title":"Executions in Development"},{"body":"Generics Summary TODO\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding generic data types.","excerpt":"Information regarding generic data types.","ref":"/docs/reference/concepts/fundamentals/data-types/generics/","tags":"","title":"Generics"},{"body":"Handling Exceptions Summary Exceptions within a flow can be handled at the following levels:\nThe block level (Highest Priority) The workspace level The flow level (Lowest Priority) Handling Exceptions at the Block level Exceptions thrown within the execution of a block can be handled by connecting a Handle Block Exception block to the red exception output port. These blocks allow for specific match criteria to be provided; if an exception matches the criteria it will be handled by the block and can be saved to a variable, otherwise, it will be passed to the next chained exception handling block. This process repeats until the exception is either handled or there are no more blocks in the chain; if the exception is not handled at this level it is passed up to the workspace level.\nMatching Exceptions Handle Block Exception blocks can be configured to handle exceptions that match specific criteria (e.g. The Exception Type or Message contains matching text). If an exception matches the criteria, the exception is handled, saved to a variable if provided, and the execution moves to the block connected to the output port; if the exception does not match the criteria the execution moves to the next chained exception handling block.\nChaining Block Exception Handling Blocks Handle Block Exception blocks can be chained together by connecting the red exception output port of one block to the red exception input port of another. When an exception is not handled, it will be passed to the next chained exception handling block. This process repeats until the exception is either handled or there are no more blocks in the chain; if the exception is not handled at this level it is passed up to the workspace level.\nThe Handle Block Exception block can be used to handle all exceptions. This block does not have an exception output port and therefore ends the chain.\nSaving the Block Exception Handle Block Exception blocks can be used to save the handled exception to a variable. If it is not necessary to save the exception to a variable, it may be discarded by setting the block’s Exception property to use the built-in discard variable ($)_.\nHandling Exceptions at the Workspace level Exceptions not handled at the block level are passed up to the workspace level.\nIf an unhandled exception occurs in a Nested Workspace where a Handle Workspace Exception block exists:\nThe exception will be passed to the Handle Workspace Exception block The exception will be handled and can be saved to a variable The execution will move to the block connected to the output port of the Handle Workspace Exception block If an unhandled exception occurs in a Nested Workspace where a Handle Workspace Exception block does not exist:\nThe exception will be rethrown by the Workspace block the workspace belongs to This process repeats until the exception is handled at the block level or workspace level, or reaches the Top-Level Workspace If an unhandled exception occurs in or reaches the Top-Level Workspace, and is not handled by any Handle Block Exception blocks or the Handle Workspace Exception block, it will be passed up to the flow level.\nPlease note that there are a number of restrictions when using the Handle Workspace Exception block.\nSaving the Workspace Exception The Handle Workspace Exception block can be used to save the handled exception to a variable. If it is not necessary to save the exception to a variable, it may be discarded by setting the block’s Exception property to use the built-in discard variable ($)_.\nHandling Exceptions at the Flow level If an unhandled exception occurs in or reaches the Top-Level Workspace, and is not handled at the block level or workspace level, it will be passed up to the flow level, where:\nThe exception will be passed to the Handle Flow Exception block The exception will be handled and can be saved to a variable The execution will enter the Handle Flow Exception block’s workspace The execution will end after the Handle Flow Exception block’s workspace has completed The Handle Flow Exception block is automatically added to the Top-Level Workspace when a new flow is created, there are restrictions that apply to this block.\nThe Handle Flow Exception block it has its own workspace, which can access its own variables and those defined at the scope of the Top-Level Workspace.\nThe logic contained within the Handle Flow Exception workspace must end the execution using an End Flow block. By default, this workspace contains a Start Workspace block connected to an End Flow block, which will cause the flow to end without error.\nHandling Exceptions in the Handle Flow Exception block Exceptions that occur within the workspace of the Handle Flow Exception block can be handled at the block level and workspace level. If an exception is not handled, the execution will end with a status of Error.\nSaving the Flow Exception The Handle Flow Exception block can be used to save the handled exception to a variable. If it is not necessary to save the exception to a variable, it may be discarded by setting the block’s Exception property to use the built-in discard variable ($)_.\nRemarks Known Limitations The Top-Level Workspace cannot contain a Handle Workspace Exception block The Top-Level Workspace cannot contain a Handle Workspace Exception block; if one is added, it will be reported when trying to validate the flow. For more information see Validating a Flow in Development and Validating a Flow in Production.\nAny unhandled exceptions thrown on the Top-Level Workspace will be handled by the Handle Flow Exception block.\nIn the future this may change.\nA Nested Workspace cannot contain more than one Handle Workspace Exception block A Nested Workspace cannot contain more than one Handle Workspace Exception block; if more than one is added, it will be reported when trying to validate the flow. For more information see Validating a Flow in Development and Validating a Flow in Production.\nIn the future this may change.\nEnforced restrictions to prevent infinite recursion For each execution of a workspace, the Handle Workspace Exception block will only handle the first unhandled exception within its workspace, this is to prevent infinite recursion within the flow.\nFor more information see Handling Exceptions at the Workspace level.\nIn the future this may change.\nSee Also Related Concepts Flows Blocks Workspaces Variables Executions Related Data Types All Exceptions Related Blocks Handle Block Exception blocks Handle Workspace Exception Handle Flow Exception Workspace Start Workspace End Flow External Documentation None\n","categories":"","description":"Information regarding handling exceptions at the block, workspace and flow level.","excerpt":"Information regarding handling exceptions at the block, workspace and flow level.","ref":"/docs/reference/concepts/fundamentals/exceptions/handling-exceptions/","tags":"","title":"Handling Exceptions"},{"body":"Handling Exceptions within a Workspace Summary Exceptions within a workspace can be handled at the following levels:\nThe block level (Highest Priority) The workspace level The flow level (Lowest Priority) A single Handle Workspace Exception block may be placed on a workspace to handle any exceptions that are not handled at the block level.\nFor more information, see Handling Exceptions.\nRemarks Known Limitations Handle Workspace Exception block can only be used once per execution of a Workspace The Handle Workspace Exception block will only handle the first unhandled exception within its workspace. Subsequent unhandled exceptions are passed to the next relevant exception handling block. In future this limitation may be removed.\nSee Also Related Concepts Flows Workspaces Blocks Executions Exceptions Related Blocks Handle Workspace Exception External Documentation None\n","categories":"","description":"Information regarding handling exceptions at different levels within a workspace.","excerpt":"Information regarding handling exceptions at different levels within a workspace.","ref":"/docs/reference/concepts/fundamentals/workspaces/handling-exceptions-within-a-workspace/","tags":"","title":"Handling Exceptions within a Workspace"},{"body":"Invariant Culture Summary TODO: summary\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with Invariant Culture.","excerpt":"Information related to working with Invariant Culture.","ref":"/docs/reference/concepts/working-with/culture/invariant-culture/","tags":"","title":"Invariant Culture"},{"body":"Items Summary TODO:\nOverview/summary What is an Item? How are they accessed? Link to Indexes Link to Keys If you are using C# syntax, then the equality is done using reference equality for reference types, and value equality for value types If you are using List of Dictionary blocks, then the equality is done using reference equality for reference types and falls back to value equality if no reference was found, and value equality for value types Remarks Known Limitations None\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with Items.","excerpt":"Information related to working with Items.","ref":"/docs/reference/concepts/working-with/collections/items/","tags":"","title":"Items"},{"body":"","categories":"","description":"Information regarding the Literal, Variable, and Expression Editors.","excerpt":"Information regarding the Literal, Variable, and Expression Editors.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/","tags":"","title":"Property Editors"},{"body":"","categories":"","description":"This section includes all reference documentation for the Cortex Innovation platform.","excerpt":"This section includes all reference documentation for the Cortex Innovation platform.","ref":"/docs/reference/","tags":"","title":"Reference"},{"body":"","categories":"","description":"This section includes information about how to troubleshoot the platform.","excerpt":"This section includes information about how to troubleshoot the platform.","ref":"/docs/reference/troubleshooting/","tags":"","title":"Troubleshooting"},{"body":"\r","categories":"","description":"This section includes all reference documentation for messages generated during validation.","excerpt":"This section includes all reference documentation for messages generated during validation.","ref":"/docs/reference/messages/validation/","tags":"","title":"Validation"},{"body":"Variable Editor Summary TODO\nUsing Variables TODO:\nYou can use any available variable. Available variables are restricted by the scope of the currently selected block All available variables will be shown when the variable editor is empty; typing in the editor will filter the available variables with those that match (contains text) on either the variable name or scope TODO: Image of using a variable\nTODO: Image of selecting available variables\nScoped Variables TODO:\nAvailable variables are scoped by the workspace of the block selected Can see variables of the same name that are on accessible scopes Link to known limitation. If there are two or more variables with the same name, the variable with the closest scope will be always used even if another is selected TODO: Image of scoped variables (different names and same names)\nAccessing Variable Properties or Indexes TODO:\nProperties and indexes can be accessed from the Variable editor Translation error shown in messages viewer when using properties or indexes incorrectly for variable that is not dynamic TODO: Image of accessing variable property and index\nMissing Variables TODO:\nIf a variable does not exist, then a orange border will be shown around the Variable editor It is possible to create a new variable from a missing one using the variable editor TODO: Image of orange border for missing variables\nCreating Variables TODO:\nIf a variable does not already exist, the variable editor can be used to create a new one at the current scope If the variable name is invalid (C# identifier naming rules) then there will be no option to create a new variable TODO: Image of option to create a new variable\nRenaming Variables TODO:\nIf a variable editor already contains a reference to a variable that exists, typing the name of a non-existent variable will provide the option to rename the previously selected variable (and all references to it within the flow) to the new variable name If the variable name is invalid (C# identifier naming rules) then there will be no option to rename the variable Renaming a variable does not include any index or method expressions (e.g. renaming to ($)NewVar.ToString() will rename the selected variable to ($)NewVar) TODO: Image of option to rename a variable\nRemarks Known Limitations TODO:\nIf there are two or more variables with the same name, the variable with the closest scope will be always used even if another is selected Currently, available variables are not restricted based on the type of the variable and if that is valid for the selected property See Also Related Concepts TODO\nRelated Blocks TODO\nRelated Data Types TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding using the Variable Editor.","excerpt":"Information regarding using the Variable Editor.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/variable-editor/","tags":"","title":"Variable Editor"},{"body":"","categories":"","description":"Information regarding what a workspace is, workspace scopes, and handling exceptions within a workspace.","excerpt":"Information regarding what a workspace is, workspace scopes, and handling exceptions within a workspace.","ref":"/docs/reference/concepts/fundamentals/workspaces/","tags":"","title":"Workspaces"},{"body":"","categories":"","description":"Information regarding what a block is,  block properties and their editors, and handling exceptions thrown by a block.","excerpt":"Information regarding what a block is,  block properties and their editors, and handling exceptions thrown by a block.","ref":"/docs/reference/concepts/fundamentals/blocks/","tags":"","title":"Blocks"},{"body":"Common Properties Summary There are a number of properties that are common across all or most blocks.\nThese properties include:\nDescription Property Block Timeout Property Description Property The Description property is available on all blocks. It defaults to the name of the block and can be used to describe the action or function the block is performing. Any text entered in the Description property is displayed next to the block’s icon on the workspace.\nBlock Timeout Property The Block Timeout property is an advanced property available on most blocks. It is used to set a duration of time (using a TimePeriod) that the block must complete its action within, otherwise a BlockTimeoutException is raised.\nThe default value of null, or a TimePeriod of 0 seconds, indicates that there is no timeout.\nNegative TimePeriod values will cause an InvalidBlockTimeoutException to be raised when the block is executed.\nRemarks Known Limitations None\nSee Also Related Concepts Workspaces Blocks Advanced Properties Exceptions Related Blocks All Blocks Related Data Types String TimePeriod Related Exceptions BlockTimeoutException InvalidBlockTimeoutException External Documentation None\n","categories":"","description":"Information regarding properties that are common to all or most blocks.","excerpt":"Information regarding properties that are common to all or most blocks.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/common-properties/","tags":"","title":"Common Properties"},{"body":"\rTODO:\nConfiguration Serilog Log Event block Structure of a log Different types of log Pause CreateDebugSession etc ","categories":"","description":"This section includes all reference documentation for the logs generated by the Cortex Flow Debugger Service.","excerpt":"This section includes all reference documentation for the logs generated by the Cortex Flow Debugger Service.","ref":"/docs/reference/logs/cortex-flow-debugger-service/","tags":"","title":"Cortex Flow Debugger Service"},{"body":"Current Culture Summary TODO: summary\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with Current Culture.","excerpt":"Information related to working with Current Culture.","ref":"/docs/reference/concepts/working-with/culture/current-culture/","tags":"","title":"Current Culture"},{"body":"Executions in Production Summary A flow can be started in Production by making an API call to the Cortex API Gateway Service, providing input variables to the flow, if required; this will validate the flow and then begin an execution.\nProviding Input Variables Any flow that has Input Variables defined can have those variables provided by using the inputVariables in the body of the HTTP request.\nRetrieving Output Variables Any flow that has Output Variables defined can have those variables retrieved after the execution has completed by using the outputVariables in the body of the HTTP response\nValidating a Flow The flow is validated before it’s started, if this is successful an execution will begin.\nIf there are any issues with the flow then the execution will not start and details of what needs to be resolved will be returned. If the flow was started by making an HTTP request to the Cortex API Gateway Service, then a 400 Bad Request is returned.\nFor a complete list see Validation messages.\nHandling an Execution’s Exceptions Exceptions thrown by an execution can be handled at any level within a flow.\nExceptions can be handled:\nAt the block level; for further information, see Handling Exceptions within a Block At the workspace level; for further information, see Handling Exceptions within a Workspace At the flow level; for further information, see Handling Exceptions within a Flow If an exception occurs within the workspace of the Handle Flow Exception block and is not handled, the execution will end and then a 500 Internal Server Error is returned.\nLogs Generated There are two ways that logs are generated while executing a flow in Production, they are:\nAutomatically generated by the Cortex API Gateway Service Developer generated by using the Log Event block Remarks Known Limitations None\nSee Also Related Concepts Flows Workspaces Blocks Variables Data Types Exceptions Messages Related Data Types All Data Types Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding working with executions in production (i.e. Cortex API Gateway Service).","excerpt":"Information regarding working with executions in production (i.e. Cortex API Gateway Service).","ref":"/docs/reference/concepts/fundamentals/executions/executions-in-production/","tags":"","title":"Executions in Production"},{"body":"Expression Editor Summary The Expression Editor is the most powerful property editor and can accept literal values, expressions, and variables.\nLiteral Values A literal is an explicit value that is not calculated during the execution of the flow. A literal can be any of the following data types:\nString Char Int32 Int64 Double Single Boolean Object Dictionary Structure List String literal String literals are surrounded by double quotes. For example:\n\"Example String\" The example above becomes:\nExample String Double quotes that form part of the string, along with the back-slash character and any unicode character codes or hexadecimal character codes, must be escaped by a back-slash character. For example:\n\"He said \\\"Come here\\x0021\\\"\" The example above becomes:\nHe said \"Come here!\" For verbatim string literals, double quotes that form part of the string literal must be duplicated to give a single double quote character. For example:\n@\"He said \"\"Come here!\"\"\" The example above becomes:\nHe said \"Come here!\" For interpolated strings, variables or expressions are surrounded by single curly braces. For example:\n$\"He said \\\"Come here {($)Name}!\\\"\" For further information on interpolated strings using variables or expressions see String expressions\nIn the case of interpolated verbatim string literals, double curly braces are not interpreted literally; they produce a single curly brace character. For example:\n$@\"This is a single square brace \"\"[\"\", and this is a single curly brace \"\"{{\"\"\" The example above becomes:\nThis is a single square brace \"[\", and this is a single curly brace \"{\" For further information, see String Literals\nChar literal Char literals are single characters; they are surrounded by single quotes. For example:\n'A' '\\u0041' The example above becomes:\n'A' 'A' For further information, Char Literals\nInt32 literal If an integer literal value is greater than or equal to Int32.MinValue or less than or equal to Int32.MaxValue, then it will be of type Int32\n1234 If an integer literal value is less than Int32.MinValue or greater than Int32.MaxValue, then it will be of type Int64.\nFor further information, see Integer Literals.\nInt64 literal If an integer literal value is less than Int32.MinValue or greater than Int32.MaxValue, then it will be of type Int64.\n2147483648 1234l 1234L For further information, see Integer Literals.\nDouble literal By default, floating point literals are of type Double.\n1234.456 The suffix d or D can used to create a floating point literal of type Double, but is unnecessary.\n1234.456d 1234.456D For further information, see Real Literals.\nSingle literal If it is necessary to create an floating point literal of type Single with a value greater than or equal to Single.MinValue or less than or equal to Single.MaxValue, then the floating point literal must be suffixed by the character f or F. For example:\n1234.456f 1234.456F For further information, see Real Literals.\nBoolean literal A Boolean literal represents a truth-value of either true or false.\ntrue or false For further information, see Boolean Literals.\nObject literal Currently, creating an object using literal syntax is not supported.\nDictionary literal Currently, creating a dictionary using literal syntax is not supported; any attempt to make a dictionary using literal syntax will create a Structure instead.\nStructure literal Structures are a special type of Dictionary that always have string keys.\n{ \"Name1\" : \"\", \"Name2\" : 1, \"Name3\" : true, \"Name4\" : {}, \"Name5\" : [], \"Name6\" : null } They differ from a Dictionary in the syntax used for accessing the item:\nDictionary items can be accessed using Index expressions Structure items can be accessed using Property expressions or Index expressions List literal A List is an object that consists of a number of ordered items that can be of any data type.\n[ \"Example String\", 1, true, {}, [], null ] Lists may be heterogeneous, where the items may be of different data types, or homogeneous, when the items are all of the same data type.\nVariables Variables are named containers for storing values of any data type; a variable’s value can be read, updated, replaced, or removed using variable syntax; where the variable name is prefixed with ($) (e.g. ($)VariableName).\nVariables can be used within expressions.\nExpressions An expression is a combination of operands (i.e. variables, literals, calls to methods and properties exposed on data types) and operators (i.e. =, +, -, *, /) that will be evaluated when the flow execution reaches the block.\nExpressions use the syntax of the C# programming language.\nTypes of expressions:\nArithmetic Boolean Comparison String Dictionary Structure List Constructors Methods Properties Enums Casting Indexes Arithmetic expressions The following operators perform arithmetic operations with operands that have numeric values.\nIn the examples below assume:\n($)Int1 has been set to 6 ($)Int2 has been set to 3 Expression Result Notes ($)Int1 + ($)Int2 9 Add ($)Int1 - ($)Int2 3 Subtract ($)Int1 * ($)Int2 18 Multiply ($)Int1 / ($)Int2 2 Divide ($)Int1 % ($)Int2 0 Remainder For further information, see Arithmetic Operators.\nBoolean expressions The following operators perform logical operations with operands that have boolean values.\nIn the examples below assume:\n($)Bool1 has been set to false ($)Bool2 has been set to true Expression Result Notes ($)Bool1 \u0026\u0026 ($)Bool2 false AND ($)Bool2 || ($)Bool1 true OR ($)Bool1 ^ ($)Bool2 true XOR !($)Bool1 true NOT For further information, see Boolean Logical Operators.\nComparison expressions The following operators perform comparison operations with operands.\nIn the examples below assume:\n($)Int1 has been set to 1 ($)Int2 has been set to 2 Expression Result Notes ($)Int1 == ($)Int2 false Equal ($)Int1 != ($)Int2 true Not Equal ($)Int1 \u003e ($)Int2 false Greater Than ($)Int1 \u003e= ($)Int2 false Greater Than or Equal ($)Int1 \u003c ($)Int2 true Less Than ($)Int1 \u003c= ($)Int2 true Less Than or Equal For further information, see Equality Operators, Comparison Operators, and Object Equality.\nString expressions There are three types of string expressions:\nConcatenated Strings Interpolated Strings Verbatim Strings If a data type is used in a string expression that is not a String, then it will be implicitly cast to a String as part of the expression.\nIn all of the examples below assume:\n($)String1 has been set to \"hello\" ($)String2 has been set to \"world\" ($)Int has been set to 1234 Concatenated Strings Concatenation is the process of appending one String to the end of another String. You concatenate strings by using the + operator.\nExpression Result Notes ($)String1 + \" \" + ($)String2 \"hello world\" ($)String1 + \" \" + ($)Int \"hello 1234\" The variable ($)Int is implicitly cast to a String as part of the expression For further information, see String concatenation.\nInterpolated Strings Interpolation is the process of inserting expressions and variables into a String. An interpolated string is declared by prefixing the string with the $ character.\nExpression Result Notes $\"{($)String1} {($)String2}\" \"hello world\" $\"{($)String1} {($)Int}\" \"hello 1234\" The variable ($)Int is implicitly cast to a String as part of the expression $\"{($)String1} {($)Int + 1}\" \"hello 1235\" The expression ($)Int + 1 is evaluated and the result is implicitly cast to a String as part of the expression For further information, see String interpolation.\nVerbatim Strings A verbatim string identifies that characters within the string should be processed literally, and do not need to be escaped. However, the following exceptions apply:\nIn both Verbatim and Interpolated Verbatim strings the double quote character \" is escaped by prefixing it with another double quote character In Interpolated Verbatim strings the curly brace characters { and } are escaped by prefixing them with the same curly brace character Expression Result Notes @\"c:\\programs\\file.txt\" \"c:\\\\programs\\\\file.txt\" @\"They said \"\"Hello!\"\"\" \"They said \\\"Hello!\\\"\" The \" character is escaped $@\"{{ Some Text }}\" \"{ Some Text }\" Interpolated Verbatim String, The curly brace characters are escaped $@\"c:\\programs\\{($)String1}.txt\" \"c:\\\\programs\\\\hello.txt\" Interpolated Verbatim String For further information, see Verbatim string literals and Verbatim String Interpolation.\nDictionary expressions Dictionaries can be created using Constructor expressions and their items can be accessed using Index expressions.\nFor examples of creating Dictionaries using constructor expressions, see Create a Dictionary\u003cTKey, TItem\u003e.\nStructure expressions Structures can be created using Constructor expressions and their items can be accessed using Property expressions (keys must follow C# identifier naming rules) or Index expressions (keys do not need to follow C# identifier naming rules).\nFor examples of creating Structures using constructor expressions, see Create a Structure.\nList expressions Lists can be created using Constructor expressions and their items can be accessed using Index expressions.\nFor examples of creating Lists using constructor expressions, see Create a List\u003cTItem\u003e.\nConstructor expressions Constructors can be used to create a new instance of a Data Type. A Data Type can have multiple constructors, each with different parameters that are used to create the new instance.\nMethods on how to create a new instance of a Data Type can be found in the relevant documentation for that Data Type; information regarding how to create a new Data Type using a constructor can be found in the “Remarks” section under “Create a/an \u003cDataType\u003e” (where \u003cDataType\u003e is replaced by the type’s name).\nThe following examples show two ways a DateTimeOffset can be created using a constructor:\nIn the examples below assume the variable ($)Year has been set to 2022.\nExpression Result Notes new DateTimeOffset() 0001-01-01T00:00:00+00:00 12AM 1st January 0001 with 0 hour UTC offset, the default for a new DateTimeOffset with no parameters new DateTimeOffset(($)Year, 7, 1, 14, 0, 0, 0, new TimeSpan(1, 0, 0)) 2022-07-01T14:00:00+01:00 2PM 1st July 2022 with 1 hour UTC offset Note that some Data Types should be created via literal values instead of their constructors, these include:\nString Char Int32 Int64 Double Single Boolean For further information, see Constructors.\nMethod expressions Methods can be used to execute specific functionality. The methods accessible are defined by the Data Type, and information regarding methods can be found in the relevant documentation for that Data Type.\nMethods can have parameters passed into them that are then used to execute the functionality, not all methods have parameters. The same method can be defined multiple times, each with different sets of parameters.\nIn the examples below assume the variable ($)Int has been set to 1.\nExpression Result Notes TimePeriod.FromSeconds(60) {\"Years\": 0, \"Months\": 0, \"Days\": 0, \"Hours\": 0, \"Minutes\": 1, \"Seconds\": 0, \"Milliseconds\": 0} Method with parameters ($)Int.ToString() \"1\" Method without parameters ($)Int.ToString(\"P0\") \"100%\" The ToString() method can take parameters in order to format the result. In this case 1 was converted into a percent with zero decimal places For further information, see Methods.\nProperty expressions Properties can be used to read data from and/or write data to a Data Type. The properties accessible are defined by the Data Type, and information regarding properties can be found in the relevant documentation for that Data Type.\nProperties can be read-write, read-only, or write-only (extremely rare) depending on the access specified by the Data Type.\nWhilst Structures are Collections, they also allow for their keys to be accessed as properties.\nIn the examples below assume:\n($)TimePeriod has been set to {\"Years\": 1, \"Months\": 0, \"Days\": 0, \"Hours\": 0, \"Minutes\": 0, \"Seconds\": 0, \"Milliseconds\": 0} ($)Structure has been set to {\"FirstKey\": 1, \"SecondKey\": 2} Expression Result Notes DateTimeOffset.UtcNow 2022-07-01T13:00:00.0000000+00:00 Read-only property, this only works in Input Properties ($)TimePeriod.Years 1 Read-write property, this can be used in Input, Output, and InputOutput Properties. The result column shows reading the property; writing to the property can be achieved by using any Output Property. ($)Structure.FirstKey 1 Read-write property, this can be used in Input, Output, and InputOutput Properties. The result column shows reading the property; writing to the property can be achieved by using any Output Property. For further information, see Properties.\nEnum expressions Enum data types have a defined set of values, where each value has an associated String name and Int32 value. Information regarding values can be found in the relevant documentation for that Data Type.\nValues within an Enum can be accessed in the same way as properties or can they can be cast from an Int32 value.\nIn the examples below assume the variable ($)Int has been set to 6.\nExpression Result Notes DayOfWeek.Sunday DayOfWeek.Sunday Where the name is \"Sunday\" and the value is 0 (DayOfWeek)($)Int DayOfWeek.Saturday Int32 cast to an Enum. Where the name is \"Saturday\" and the value is 6 For further information, see Enumeration types.\nCasting expressions Data Types can be cast to other Data Types through the use of explicit casting, this can sometimes result in the loss of information when converting to a type that does not store the same amount of information. Information regarding which types a Data Type can cast to can be found in the “Summary” section under “Can be cast to” in the relevant documentation for that Data Type.\nData Types can be used as other Data Types through the use of implicit casting, this is an automatic process that requires no expression syntax. Information regarding which types a Data Type can be used as can be found in the “Summary” section under “Can be used as” in the relevant documentation for that Data Type.\nIn the examples below assume the variable ($)Int has been set to 6.\nExpression Result Notes (DayOfWeek)($)Int DayOfWeek.Saturday Int32 cast to an Enum. Where the name is \"Saturday\" and the value is 6 (Int16)($)Int 6 An Int32 can be cast to an Int16 as long as value is from -32,768 through 32,767 (Int32)1.9 1 Casting a Double to an Int32 will cause any decimal places to be lost ($)Int 6.0 When using a block property of type Double an Int32 is implicitly cast to Double without any expression syntax For further information, see Explicit Conversions and Implicit Conversions.\nIndex expressions Data Types that are Collections or String can have their items accessed using index notation:\n[0] gets the first item [1] gets the second item [\"key\"] gets the item with the key \"key\". Ranges can also be used within index notation:\n[0..3] gets three items from the first item (inclusively) (i.e. the first, second, and third item) [^1] gets the last item [^2] gets the second to last item [..] gets all items [..3] gets three items from the first item (inclusively) (i.e. the first, second, and third item) [3..] gets all items from the fourth item (inclusively) (i.e. the fourth to the last item) For further information on index and range syntax, see Indices and Ranges.\nIn the examples below assume:\n($)List has been set to [1, 2, 3, 4, 5] ($)Dictionary of type Dictionary\u003cstring, Int32\u003e has been set to {\"FirstKey\": 1, \"SecondKey\": 2} ($)Structure has been set to {\"FirstKey\": 1, \"SecondKey\": [1, 2, 3]} ($)String has been set to \"Some Text\". Expression Result Notes ($)List[2] 3 The third item in the list is returned ($)List[0..2] [1, 2] The first and second item in the list are returned ($)List[^2] 4 The second to last item in the list is returned ($)List[^2..^0] [4, 5] The second to last and the last item in the list are returned ($)List[1..^1] [2, 3, 4] The second item to the second to last item in the list are returned ($)List[..] [1, 2, 3, 4, 5] All items in the list are returned ($)List[..2] [1, 2] The first item and the second item in the list are returned ($)List[2..] [3, 4, 5] The third item to the last item in the list are returned ($)Dictionary[\"FirstKey\"] 1 The item with the key \"FirstKey\" is returned ($)Structure[\"SecondKey\"] [1, 2, 3] The item with the key \"SecondKey\" is returned ($)Structure[\"SecondKey\"][0] 1 The first item within the item with key \"SecondKey\" is returned ($)String[0] 'S' The first character in the string is returned Remarks Known Limitations Cannot Create Objects using Literal Syntax Currently, creating an object using literal syntax is not supported.\nObjects can be created using expressions, for more information see Constructor expressions.\nCannot Create Dictionaries using Literal Syntax Currently, creating a dictionary using literal syntax is not supported; any attempt to make a dictionary using literal syntax will create a Structure instead.\nDictionaries can be created using expressions, for more information see Dictionary expressions.\nWhen using variables of the same name the closest scoped is used It is possible to create multiple variables with the same name in the Variables Grid. When using the same name in different workspaces, the variable with the closest scope will be used.\nFor example:\nTop-Level workspace has the variable ($)Variable Child-Level workspace also has the variable ($)Variable When executing a block in Child-Level that uses ($)Variable, the variable that is used is the variable defined in Child-Level.\nThis may change in future to allow developers to specifically select which of the variables with the same name is used in this scenario.\nSee Also Related Concepts Workspaces Literal Editor Variable Editor Variables Data Types Object Casting Related Blocks All Blocks Related Data Types All Data Types External Documentation Boolean Literals Char Literals Integer Literals Real Literals String Literals Arithmetic Operators Boolean Logical Operators Comparison Operators Equality Operators String concatenation String interpolation Verbatim string literals Verbatim String Interpolation Constructors Methods Properties C# identifier naming rules Enumeration types Explicit Conversions Implicit Conversions Indices and Ranges ","categories":"","description":"Information regarding using the Expression Editor to create literal values, expressions, or use variables.","excerpt":"Information regarding using the Expression Editor to create literal values, expressions, or use variables.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/property-editors/expression-editor/","tags":"","title":"Expression Editor"},{"body":"Handling Exceptions within a Block Summary Exceptions within a block can be handled at the following levels:\nThe block level (Highest Priority) The workspace level The flow level (Lowest Priority) Exceptions thrown within the execution of a block can be handled at the block level by connecting any Handle Block Exception block to the exception output port. Multiple Handle Block Exception blocks can be chained to handle different exceptions.\nFor more information, see Handling Exceptions.\nRemarks Known Limitations None\nSee Also Related Concepts Flows Workspaces Blocks Exceptions Related Blocks Handle Block Exception External Documentation None\n","categories":"","description":"Information regarding handling exceptions within a block.","excerpt":"Information regarding handling exceptions within a block.","ref":"/docs/reference/concepts/fundamentals/blocks/handling-exceptions-within-a-block/","tags":"","title":"Handling Exceptions within a Block"},{"body":"Handling Exceptions within a Flow Summary Exceptions within a flow can be handled at the following levels:\nThe block level (Highest Priority) The workspace level The flow level (Lowest Priority) The Handle Flow Exception block, which is located on the top-level workspace, handles any exceptions that are not handled at the block or workspace level.\nFor more information, see Handling Exceptions.\nRemarks Flow cannot be re-entered from the Handle Flow Exception Workspace Is it not possible to re-enter a flow once a flow execution enters the workspace of the Handle Flow Exception block.\nKnown Limitations None\nSee Also Related Concepts Flows Workspaces Blocks Executions Exceptions Related Blocks Handle Flow Exception External Documentation None\n","categories":"","description":"Information regarding handling exceptions at different levels within a flow.","excerpt":"Information regarding handling exceptions at different levels within a flow.","ref":"/docs/reference/concepts/fundamentals/flows/handling-exceptions-within-a-flow/","tags":"","title":"Handling Exceptions within a Flow"},{"body":"Null and Nullable Types Summary TODO\nNull TODO\nNullable Types TODO\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding null and nullable data types.","excerpt":"Information regarding null and nullable data types.","ref":"/docs/reference/concepts/fundamentals/data-types/null-and-nullable-types/","tags":"","title":"Null and Nullable Types"},{"body":"Throwing Exceptions Summary A developer can throw an exception as part of a flow.\nScenarios where throwing exceptions is useful include:\nA developer throwing a new exception when a flow reaches a state where it cannot complete its defined functionality A developer enriching an exception that has already been thrown to provide more clarity and/or detail A developer rethrowing an exception to propagate the exception to the caller; typically this can be useful when calling another flow For information about throwing an exception, please see the:\nThrow New Flow Exception block Rethrow Exception block Remarks Known Limitations None\nSee Also Related Concepts Flows Blocks Related Blocks Throw New Flow Exception Rethrow Exception External Documentation None\n","categories":"","description":"Information regarding throwing an exception within a flow, and scenarios when it is useful to throw an exception.","excerpt":"Information regarding throwing an exception within a flow, and scenarios when it is useful to throw an exception.","ref":"/docs/reference/concepts/fundamentals/exceptions/throwing-exceptions/","tags":"","title":"Throwing Exceptions"},{"body":"Using Variables Summary There are a number of ways to use variables:\nThe Variable Editor can be used to create and select variables The Expression Editor can be used to include variables within expressions Variable Editor The Variable Editor allows the the developer to create and use variables whilst configuring a block.\nCreating a Variable If a variable does not already exist, the Variable Editor can be used to create a new one at the scope of the selected block.\nIf the variable name is invalid (does not conform with the C# identifier naming rules) then there will be no option to create a new variable.\nUsing a Variable The Variable Editor provides a list of variables that are available at the scope of the selected block.\nTyping any text in the Variable Editor will filter the available variables, showing any variable whose name or scope contains the text.\nThe Variable Editor also allows for:\nUsing Items in Collections Using Properties of Data Types Using Methods of Data Types Using Items in Collections Variables that contain a Collection or String data type can have their respective items or characters accessed using index notation:\n[0] gets the first item [1] gets the second item [\"key\"] gets the item with the key \"key\". Ranges can also be used within index notation:\n[0..3] gets three items from the first item (inclusively) (i.e. the first, second, and third item) [^1] gets the last item [^2] gets the second to last item [..] gets all items [..3] gets three items from the first item (inclusively) (i.e. the first, second, and third item) [3..] gets all items from the fourth item (inclusively) (i.e. the fourth to the last item) In the examples below assume:\n($)List has been set to [1, 2, 3, 4, 5] ($)Dictionary of type Dictionary\u003cstring, Int32\u003e has been set to {\"FirstKey\": 1, \"SecondKey\": 2} ($)Structure has been set to {\"FirstKey\": 1, \"SecondKey\": [1, 2, 3]} ($)String has been set to \"Some Text\". Text Result Notes List[2] 3 The third item in the list is returned List[0..2] [1, 2] The first and second item in the list are returned List[^2] 4 The second to last item in the list is returned List[^2..^0] [4, 5] The second to last and the last item in the list are returned List[1..^1] [2, 3, 4] The second item to the second to last item in the list are returned List[..] [1, 2, 3, 4, 5] All items in the list are returned List[..2] [1, 2] The first item and the second item in the list are returned List[2..] [3, 4, 5] The third item to the last item in the list are returned Dictionary[\"FirstKey\"] 1 The item with the key \"FirstKey\" is returned Structure[\"SecondKey\"] [1, 2, 3] The item with the key \"SecondKey\" is returned Structure[\"SecondKey\"][0] 1 The first item within the item with key \"SecondKey\" is returned String[0] 'S' The first character in the string is returned Using Properties of Data Types Properties can be used to read data from and/or write data to a variable. The properties accessible are defined by the Data Type, and information regarding properties can be found in the relevant documentation for that Data Type.\nProperties can be read-write, read-only, or write-only (extremely rare) depending on the access specified by the Data Type.\nWhilst Structures are Collections, they also allow for their keys to be accessed as properties.\nIn the examples below assume:\n($)List has been set to [1, 2, 3] ($)TimePeriod has been set to {\"Years\": 1, \"Months\": 0, \"Days\": 0, \"Hours\": 0, \"Minutes\": 0, \"Seconds\": 0, \"Milliseconds\": 0} ($)Structure has been set to {\"FirstKey\": 1, \"SecondKey\": 2} Text Result Notes List.Count 3 Read-only property, this only works in Input Properties TimePeriod.Years 1 Read-write property, this can be used in Input, Output, and InputOutput Properties. The result column shows reading the property; writing to the property can be achieved by using any Output Property. Structure.FirstKey 1 Read-write property, this can be used in Input, Output, and InputOutput Properties. The result column shows reading the property; writing to the property can be achieved by using any Output Property. Using Methods of Data Types Methods can be used to execute specific functionality. The methods accessible are defined by the Data Type, and information regarding methods can be found in the relevant documentation for that Data Type.\nMethods can have parameters passed into them that are then used to execute the functionality, not all methods have parameters. The same method can be defined multiple times, each with different sets of parameters.\nIn the examples below assume the variable ($)Int has been set to 1.\nText Result Notes Int.ToString() \"1\" Method without parameters Int.ToString(\"P0\") \"100%\" The ToString() method can take parameters in order to format the result. In this case 1 was converted into a percent with zero decimal places Expression Editor Variables are named containers for storing values of any data type; a variable can be included within expressions created using the Expression Editor. A variable is used by prefixing the variable’s name with ($) (e.g. ($)VariableName).\nRemarks Case Sensitivity When using variables in the Variable or Expression Editor, the names are case insensitive. For example, List is the same as list.\nWhen using properties or methods of any variable, or items in Collections (e.g. Dictionaries, Structures etc.), their names are case sensitive.\nFor Example:\nText Notes FlowException.Message Message property cannot be accessed using FlowException.message Int.ToString() ToString() method cannot be accessed using Int.toString() Dictionary[\"Item1\"] \"Item1\" item cannot be accessed using the key Dictionary[\"item1\"] Known Limitations When using variables of the same name the closest scoped is used It is possible to create multiple variables with the same name in the Variables Grid. When using the same name in different workspaces, the variable with the closest scope will be used.\nFor example:\nTop-Level workspace has the variable ($)Variable Child-Level workspace also has the variable ($)Variable When executing a block in Child-Level that uses ($)Variable, the variable that is used is the variable defined in Child-Level.\nThis may change in future to allow developers to specifically select which of the variables with the same name is used in this scenario.\nSee Also Related Concepts Flows Workspaces Blocks Block Properties Related Data Types All Data Types Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding using variables in the Variable and Expression editors.","excerpt":"Information regarding using variables in the Variable and Expression editors.","ref":"/docs/reference/concepts/fundamentals/variables/using-variables/","tags":"","title":"Using Variables"},{"body":"Variable Scopes Summary Each workspace in a flow has a scope. A scope is where variables are defined and controls where they can be used.\nVariables can only be used in the workspace of the scope they are defined in and any descendant workspaces. Only variables in scope will be available in the Variable Editor, or the Expression Editor using snippets. For an example see Accessing Variables from Other Scopes.\nWhen the flow execution exits a workspace, any local-scope variables that have been declared in that workspace are deleted and their values, if any, are lost.\nAccessing Variables from Other Scopes For example, the table below shows a hierarchy of workspaces and which variables are available to each workspace due to their scope:\nWorkspace Name Parent Workspace Defined Variables Available Variables Top-Level Workspace N/A GlobalVarAGlobalVarB GlobalVarAGlobalVarB ChildWorkspace1 Top-Level Workspace ChildVarAChildVarB GlobalVarAGlobalVarBChildVarAChildVarB ChildWorkspace2 Top-Level Workspace ChildVarCChildVarD GlobalVarAGlobalVarBChildVarCChildVarD GrandChildWorkspace1 ChildWorkspace1 GrandChildVarAGrandChildVarB GlobalVarAGlobalVarBChildVarAChildVarBGrandChildVarAGrandChildVarB GrandChildWorkspace2 ChildWorkspace2 GrandChildVarCGrandChildVarD GlobalVarAGlobalVarBChildVarCChildVarDGrandChildVarCGrandChildVarD Creating Variables at a Specific Scope Variables can be created by using the Variables Grid, or through the use of the Variable Editor. When a new variable is created, it is created in the scope of the currently selected workspace. It is possible to Change a Variable’s Scope\nChanging a Variable’s Scope A variable’s scope can be changed by using the Variables Grid.\nRemarks Known Limitations When using variables of the same name the closest scoped is used It is possible to create multiple variables with the same name in the Variables Grid. When using the same name in different workspaces, the variable with the closest scope will be used.\nFor example:\nTop-Level workspace has the variable ($)Variable Child-Level workspace also has the variable ($)Variable When executing a block in Child-Level that uses ($)Variable, the variable that is used is the variable defined in Child-Level.\nThis may change in future to allow developers to specifically select which of the variables with the same name is used in this scenario.\nSee Also Related Concepts Flows Workspaces Blocks Block Properties Executions Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding variable scopes, including: what they are, creating variables at a specific scope, and changing a variable's scope.","excerpt":"Information regarding variable scopes, including: what they are, creating variables at a specific scope, and changing a variable's scope.","ref":"/docs/reference/concepts/fundamentals/variables/variable-scopes/","tags":"","title":"Variable Scopes"},{"body":"Advanced Properties Summary Some blocks have advanced properties that do not normally need to be configured but allow for more advanced scenarios (e.g. A block to send emails would have advanced properties for specifying things like cc, bcc, attachments etc.). Advanced properties may have explicit default values or will be initialised with values that allow the block to run without configuration.\nAll advanced properties are hidden by default and can be shown by Toggling Advanced Properties, their values will be used in the block’s execution regardless of whether they are hidden or shown.\nToggling Advanced Properties All advanced properties can be shown or hidden using the Show/Hide Advanced Properties button found on the top right of the Property Editor. This button is used to toggle whether properties are shown or hidden.\nFinding Advanced Properties A property is defined as advanced within the documentation of a Block or Data Type.\nInformation regarding which properties are advanced for a Block can be found in the “Properties” section. The table within each property in the relevant documentation will have an “Is Advanced” row stating whether the property is advanced or not.\nInformation regarding which properties are advanced for a Data Type can be found in the “Remarks” section under “Advanced Properties” in the relevant documentation for that Data Type.\nRemarks Known Limitations Toggling advanced properties is not persisted between blocks Currently, when advanced properties are shown when editing a block the advanced toggle state is not persisted when switching between blocks.\nIn future this limitation may be removed.\nToggling advanced properties shows or hides all advanced properties Currently, it is not possible to show or hide individual advanced properties.\nIn future this limitation may be removed.\nSee Also Related Concepts Blocks Block Properties Related Blocks All Blocks External Documentation None\n","categories":"","description":"Information regarding properties that do not normally need to be configured but allow for more advanced scenarios.","excerpt":"Information regarding properties that do not normally need to be configured but allow for more advanced scenarios.","ref":"/docs/reference/concepts/fundamentals/blocks/block-properties/advanced-properties/","tags":"","title":"Advanced Properties"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the logs generated by the Cortex API Gateway Service.","excerpt":"This section includes all reference documentation for the logs generated by the Cortex API Gateway Service.","ref":"/docs/reference/logs/cortex-api-gateway-service/","tags":"","title":"Cortex API Gateway Service"},{"body":"Specific Cultures Summary TODO: summary\nFor a list of cultures that can be returned on Windows systems see https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c under The Language table (Language tag defines the code required to create the culture) Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with specific cultures.","excerpt":"Information related to working with specific cultures.","ref":"/docs/reference/concepts/working-with/culture/specific-cultures/","tags":"","title":"Specific Cultures"},{"body":"","categories":"","description":"Information regarding what a variable is, using variables, and variable scopes.","excerpt":"Information regarding what a variable is, using variables, and variable scopes.","ref":"/docs/reference/concepts/fundamentals/variables/","tags":"","title":"Variables"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the logs generated by the Cortex Flow Execution Service.","excerpt":"This section includes all reference documentation for the logs generated by the Cortex Flow Execution Service.","ref":"/docs/reference/logs/cortex-flow-execution-service/","tags":"","title":"Cortex Flow Execution Service"},{"body":"Custom Cultures Summary TODO: summary\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with custom cultures.","excerpt":"Information related to working with custom cultures.","ref":"/docs/reference/concepts/working-with/culture/custom-cultures/","tags":"","title":"Custom Cultures"},{"body":"","categories":"","description":"Information regarding what a data type is, and the difference between basic and complex data types.","excerpt":"Information regarding what a data type is, and the difference between basic and complex data types.","ref":"/docs/reference/concepts/fundamentals/data-types/","tags":"","title":"Data Types"},{"body":"","categories":"","description":"Information regarding what an execution is, starting executions, execution variables, exceptions thrown during an execution, and execution metadata.","excerpt":"Information regarding what an execution is, starting executions, execution variables, exceptions thrown during an execution, and execution metadata.","ref":"/docs/reference/concepts/fundamentals/executions/","tags":"","title":"Executions"},{"body":"","categories":"","description":"Information regarding what an exceptions is, handling exceptions, and throwing exceptions.","excerpt":"Information regarding what an exceptions is, handling exceptions, and throwing exceptions.","ref":"/docs/reference/concepts/fundamentals/exceptions/","tags":"","title":"Exceptions"},{"body":"","categories":"","description":"Information regarding what a message is.","excerpt":"Information regarding what a message is.","ref":"/docs/reference/concepts/fundamentals/messages/","tags":"","title":"Messages"},{"body":"","categories":"","description":"Explanation of terms, words and phrases used throughout the Cortex documentation.","excerpt":"Explanation of terms, words and phrases used throughout the Cortex documentation.","ref":"/docs/reference/glossary/","tags":"","title":"Glossary"},{"body":"\r","categories":"","description":"Answers to our most frequently asked questions.","excerpt":"Answers to our most frequently asked questions.","ref":"/docs/faqs/","tags":"","title":"FAQs"},{"body":"\rSingle server installations with HA are not recommended for the following scenarios:\nProduction installations that are required to scale and support HA ","categories":"","description":"Information about adding Cortex Innovation to Cortex 7.2 on a single on-premise server without high availability (HA), including: information about components, supported architectures, prerequisites and installation instructions.","excerpt":"Information about adding Cortex Innovation to Cortex 7.2 on a single on-premise server without high availability (HA), including: information about components, supported architectures, prerequisites …","ref":"/docs/getting-started/on-premise/add-innovation-to-72/single-server-without-ha/","tags":"","title":"Single Server - Without HA"},{"body":"Summary The 2022.9 Release is now available.\nDownload Artefacts Installation artefacts can be requested by raising a case in the Cortex Service Portal.\nRelease Notes Overview 2022.9 is the first release of the next generation of Cortex and begins our journey to improve on the previous 7.X generation in the following areas:\nPerformance Availability Scalability Usability Security Observability Cost of ownership Documentation This first release shows improved performance vs 7.X, using a new high availability (HA) architecture and components including the new Innovation Engine which has support for 180+ blocks.\nSpeed and ease of developing automation solutions has been improved with the introduction of:\nA new Property Editor for configuring blocks Validation messages to warn the developer of errors with their flows Flow contracts declaring what information is required to run a flow and what data will be returned. A new Package Management system has been introduced to improve the speed and ease of deploying solutions into production.\nSecurity has been improved by the introduction of the new concept of Encrypted Text, which ensures sensitive information must be encrypted before a flow can be run.\nStructured Logging has been introduced and acts as the source of data for the new Grafana Dashboards providing observability over the platform health and flow execution requests.\nFinally, this Product Portal has been created to act as a central source of information regarding the Innovation Platform, including information of how to install Innovation on its own or add it to an existing 7.X installation.\nComponents Release Component Version Updated This Release Update Type Notes Cortex API Gateway Service 15.0.1.2241 Yes First Release Cortex Flow Debugger Service 9.0.4.2241 Yes First Release Cortex Flow Execution Service 9.0.1.2241 Yes First Release Cortex Gateway, including Cortex Studio 3.1.3 Yes Minor Support for Innovation added Cortex Block Packages 29.2.0 Yes First Release Features Improved Performance vs 7.X The 2022.9 release has shown significant performance improvements compared to 7.X both in our own observations and customers installations. For example, one customer solution that has been migrated to 2022.9 has shown the time taken to run their tests reduce from 210 minutes to 10 minutes.\nNew HA architecture Innovation can be installed on-premise across multiple servers with our new high availability (HA) architecture based on Microsoft’s Service Fabric. This provides:\nElimination of single points of failure resulting in reduced downtime The ability to perform zero downtime upgrades Increased processing capacity resulting in increased throughput It also lays the foundations for future releases to provide:\nManual scaling and on demand automated scaling Single click deployments and upgrades Multi Tenancy, including the ability to choose the level of separation of tenants based on your compliance and hardware constraints The use of Service Fabric currently permits deployment on VMs hosted with any cloud service provider, and in future deploying on Microsoft’s Azure Service Fabric and Linux based operating systems.\nAffected Components:\nCortex API Gateway Service Cortex Flow Execution Service New Innovation Engine A new engine, which executes the automation solutions developed for the Innovation Platform, has been created. In early customer deployments this has shown a dramatic improvement in performance vs the 7.X Engine.\nThe new engine supports expressions written in the C# Programming Language.\nIt also lays the foundations for future releases to provide:\nAutogeneration of new blocks from existing dotnet dlls and nuget packages An SDK to develop your own blocks Execution of automation solutions on Linux based operating systems Execution of automation solutions on serverless cloud services such as Microsoft’s Azure Functions and AWS Lambda Affected Components:\nCortex Flow Debugger Service Cortex Flow Execution Service Innovation Engine Requires New Cortex.lic Licence A new Cortex.lic licence is required in order to debug flows developed for the Innovation Engine and execute them in Production.\nFor more information about licensing requirements, including how to obtain a licence, see:\nInstalling Innovation Only:\nMultiple Server - With HA Single Server - Without HA Adding Innovation to a 7.2 Installation:\nMultiple Server - With HA Single Server - Without HA Please note 7.2 installations still require a g2.ok licence for each Cortex Server component.\nAffected Components:\nCortex Flow Debugger Service Cortex Flow Execution Service 180+ New Blocks 180+ new Blocks have been added to the Innovation platform to work with:\nData Date \u0026 Time Decisions Dictionaries Email Exceptions Files \u0026 Folders Flows Google Workspace Http Lists Logs Microsoft365 Objects PowerShell Schedules Ssh Text Variables Workspaces Xml Many palettes include blocks for performing single and batch operations, such as copying a single file or copying multiple files.\nIn comparison to 7.X, improvements have been made to:\nThe performance of blocks in the Innovation platform The consistency in naming of blocks and properties in relation to their functionality The consistency in functionality across similar palettes such as Lists and Dictionaries Most blocks have a Block Timeout property that can be used to cancel a block operation if it has run for longer than intended.\nAffected Components:\nCortex Block Packages New concept of Encryptable and Encrypted Text The concept of Encryptable and Encrypted text has been added to the Innovation Engine, allowing for data to be encrypted and handled by the platform.\nTwo data types have been added, EncryptableText and EncryptedText. Any block property using EncryptableText allows for encrypted, partially encrypted or unencrypted values to be used. Any block property using EncryptedText will only allow encrypted values to be used, throwing an error if partially encrypted or unencrypted values are used.\nThe same encryption mechanism is used in both the 2022.9 and the 7.X platforms.\nAffected Components:\nCortex Flow Debugger Service Cortex Flow Execution Service Cortex Studio Cortex Block Packages New Property Editor A new Property Editor has been added to Cortex Studio for configuring blocks, allowing for quicker configuration and better ease of use compared to 7.X.\nEach Block Property can be configured using one of three new editors:\nVariable Editor Literal Editor Expression Editor Affected Components:\nCortex Flow Debugger Service Cortex Flow Execution Service Cortex Studio Cortex Block Packages Variable Editor The Variable Editor is used to select, create and rename variables that will be used by a block. It has typeahead selection of variables accessible by the block being configured, highlighting if the variable selected is missing and not available.\nThe Variable Editor allows for the creation of missing variables at the scope of the block being configured.\nThe Variable Editor allows for a variable to be renamed from within the editor, also updating any references to this variable in the flow.\nLiteral Editor The Literal Editor is used to create complex data types more easily, allowing you to switch between any available Data Types for the Block Property selected.\nPlease note that the Literal Editor does not currently support any Collection data types, this may change in a future release.\nExpression Editor The Expression Editor allows for use of C# code for the Block Property selected. It contains built in encryption to convert any text highlighted to an EncryptedText.\nIt also has:\nBuilt-in snippets that are filtered based on the Block Property selected to help configure the block Built-in tools, such as Full Screen, Find and Replace, Change all occurrences, etc Other Features of the Property Editor Other features of the Property Editor include:\nCreating all missing variables required by a block using the Add Variables button Every block has a sensible editor selected for each Block Property, as well as a sensible default value to minimise the configuration required Advanced Properties that do not normally need to be configured have preset default values and are hidden from view Advanced Properties can be shown for more complex configuration of blocks using the Show/Hide Advanced Properties button The Product Portal page for a block can be accessed from the Property Editor by using the Help button Affected Components:\nCortex Flow Debugger Service Cortex Studio Messages Validation is now performed before a flow execution begins, the process will evaluate the flow assessing for any issues that would cause the flow to fail and returns them as validation errors.\nAfter validating a flow in development, any validation message in the messages grid can be double clicked to navigate to the source of the issue.\nThis feature lays the foundations for future releases to provide configurable best practices, where a system can have:\nControl over whether a validation rule is classed as an error, warning, information, or shown at all Control over whether a flow can be run or debugged, committed, or published when specific validation rules are broken Suggested automatic fixes for specific error, warning, and information messages, including a single click application of the fix Suggested manual fixes for specific error, warning, and information messages, including a description of how to apply the fix Additional classification of rules such as performance, security, and development best practices It also leads to the:\nIdentification of fixes that need to be applied to flows in order to migrate them to a new version of the Innovation Platform Required automatic fixes, including a single click application of the fix Required manual fixes, including a description of how to apply the fix Affected Components:\nCortex Flow Debugger Service Cortex Flow Execution Service Cortex Studio Flow Contract Flows can now declare which Input Variables are required to run the flow, and what Output Variables will be returned by the flow. This is called the Flow Contract.\nIf a call to start a flow execution does not meet the requirements of the Flow Contract, then the execution will not begin and validation errors will be returned.\nAffected Components:\nCortex Flow Debugger Service Cortex Flow Execution Service Cortex Studio Calling other Flows Flows can be called from within another flow by using the Run Flow block, passing in any Input Variables required by the child flow, and returning any Output Variables when the child flow’s execution has completed.\nBy default a new flow is set up to handle any exceptions at the flow level and end the flow without error. However, when calling a child flow it may be useful to propagate any exceptions to the parent flow; this can be done by using the Rethrow Exception block within the Handle Flow Exception workspace, causing the flow to end with an error.\nPlease note:\nFlows can only be run synchronously and the parent flow will wait for any child flow execution to finish before continuing. This may change in a future release to support running flows asynchronously In 7.X, flows could also call subtasks. In 2022.9 and onwards, subtasks no longer exist Affected Components:\nCortex Flow Debugger Service Cortex Flow Execution Service Cortex Studio Debug with Input Variables When debugging a flow, any Input Variables can be provided within the Input Variables property in the flow’s Settings Editor.\nAffected Components:\nCortex Flow Debugger Service Cortex Studio Package Management A new Package Management system has been added to Cortex Studio and allows a flow developer to:\nCreate a Package Add new versions of a Package Publish specific version(s) of a Package Unpublish specific version(s) of a Package Export a Package version out of Cortex Studio Import a Package version into Cortex Studio Packages are intended to represent self contained automation solutions and are aimed at improving the speed and ease of deploying these solutions into production.\nPackages introduce the ability to host and execute multiple automation solutions on the same platform/hardware (reducing costs), as well as being able to run multiple versions of the same solution (permitting CI/CD).\nThe Cortex API Gateway Service exposes a versioned API for executing flows in specific packages and package versions. This allows for the integration with third party applications, websites or toolings such as CI/CD Pipelines.\nThis feature lays the foundations for future releases to provide multi tenancy with environment variables.\nAffected Components:\nCortex API Gateway Service Cortex Flow Execution Service Cortex Studio Structured Logging Structured logging provides a defined format for logs produced by the Innovation Platform, this helps with reporting and diagnostics and is used as the source of dashboards. The structured logs produced are in a JSON format.\nStructured logging has been added to the following components:\nCortex API Gateway Cortex Flow Debugger Service The ability to write structured logs has also been exposed to flow developers so they can write logs in the same format as the platform; they can be created by using the Log Event block.\nPlease note that structured logging may be added to more components in a future release.\nThis feature provides telemetry which can be used in future to offer request tracing and configurable alerting within the Innovation Platform.\nAffected Components:\nCortex API Gateway Service Cortex Flow Debugger Service Grafana Dashboards Dashboards have been created to provide observability of the Innovation Platform in Production.\nThe new dashboards are:\nPlatform Health Flow Execution Requests In future additional dashboards may be added. Currently, these have been produced for Grafana and in future releases other reporting and observability platforms such as Splunk and Elastic may be supported.\nFor more information about adding observability to Innovation see:\nInstalling Grafana On-Premise Setup Grafana Cloud Affected Components:\nNone Simplified Installation The installation of 2022.9 has been improved in comparison to the 7.X Platform.\nThe installation is:\nSimpler and easier to perform Quicker with significantly fewer steps Also, the installation documentation is clearer and more concise, whilst being more comprehensive.\nThis feature lays the foundations for future releases to provide single click installation of development and production environments from Cortex Studio.\nAffected Components:\nNone Versioned APIs The Innovation Platform has been developed with an API First approach, allowing the APIs used within the platform to be more robust and easier to use compared to the 7.X platform.\nAPI Versioning has been applied to the Cortex API Gateway Service and Cortex Flow Debugger Service, this means that improvements can be made to the APIs without breaking automation solutions when new updates are rolled out.\nAffected Components:\nCortex API Gateway Service Cortex Flow Debugger Service Product Portal The Product Portal contains materials regarding the 2022.9 release and how to use the product; it is hosted online but can be hosted locally if required.\nCortex Studio integrates with the portal, providing links to documentation for Blocks and Exceptions. In future this may extend to Validation Messages, Guides, Tutorials, etc.\nCortex Studio can be configured to connect and integrate with a locally hosted version of the Product Portal; typically this would only be required for air gapped systems where connectivity to the internet is unavailable.\nAffected Components:\nCortex Studio Bug Fixes As 2022.9 is the first GA release of the platform there are no bug fixes.\nDeprecated Features The following features have been deprecated in the 2022.9 release:\nSQL Server will no longer be required by Gateway in a future release; currently targeting removal in the 2023.3 or 2023.6 release and no additional third party software should be required Removed Features The following features have been removed in the 2022.9 release:\nSubtasks Breaking Changes As 2022.9 is the first GA release of the platform there are no breaking changes. However, if you have installed the early access 2022.6 release, flows may need to be manually migrated to be compatible; please request assistance by raising a case in the Cortex Service Portal.\nPlease note that 7.X flows cannot be run by the Innovation Engine. In a future release we will provide the capability to partially or fully automate the migration of 7.X flows to be compatible with the Innovation Engine.\nKnown Limitations As 2022.9 is the first GA release of the platform we have chosen not to list all known limitations here. Most pages within the Product Portal contain a “Known Limitations” section listing any relevant known limitations.\nIn future releases, this section will contain known limitations newly introduced as part of that release.\nVersion Support Operating Systems OS Type Supported Versions Windows Server 2016Server 2019 Linux Linux is not currently supported Databases Database Type Supported Versions SQL Server SQL Server 2016SQL Server 2019 Other No other databases are currently supported Note: This is for the platform’s functionality and does not represent the databases that can be connected to and interacted with using the platform.\n7.X Compatibility 7.X Version Is compatible? Notes 7.2 Yes 7.1 No Need to upgrade 7.1 to 7.2 for compatibility 7.0 No Need to upgrade 7.0 to 7.2 for compatibility Install Instructions If you are installing a new 2022.9 platform or adding it to an existing 7.2 Installation see the guidance below; otherwise, if you are upgrading from an existing 2022.6 platform refer to the Upgrade Instructions.\nInstalling Innovation Only:\nMultiple Server - With HA Single Server - Without HA Adding Innovation to a 7.2 Installation:\nMultiple Server - With HA Single Server - Without HA Upgrade Instructions As 2022.9 is the first GA release of the platform there are no upgrade instructions. However, if you have installed the early access 2022.6 release; please request assistance by raising a case in the Cortex Service Portal.\nUpcoming Releases 2023 releases are currently forecast to be made available on:\nRelease Release Type Forecast Release Date 2023.3 RTM Week commencing 27th March 2023 2023.6 RTM Week commencing 3rd July 2023 2023.9 GA Week commencing 25th September 2023 Any changes to these forecasts will be announced via the News channel.\n","categories":"","description":"","excerpt":"Summary The 2022.9 Release is now available.\nDownload Artefacts Installation artefacts can be requested by raising a case in the Cortex Service Portal.\nRelease Notes Overview 2022.9 is the first …","ref":"/blog/2022/10/27/2022.9/","tags":"","title":"2022.9"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/releases/2022.x/","tags":"","title":"2022.X"},{"body":"\rAdd Item At Beginning (Cortex.Blocks.Lists.AddItem.AddItemAtBeginningBlock`2)\nDescription Adds an Item at the beginning of a List.\nExamples Add an Item at the beginning of an empty List This example will add \"New Item\" at the beginning of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with value \"New Item\" ($)Item is a variable of type String Result Adding \"New Item\" at the beginning of [] results in the variable ($)List being updated to the following:\n[\"New Item\"] Add an Item at the beginning of a List This example will add \"New Item\" at the beginning of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with value \"New Item\" ($)Item is a variable of type String Result Adding \"New Item\" at the beginning of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"New Item\", \"Some Text\", 1] Properties List The List where the Item is added.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be added to the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Item The Item to be added at the beginning of the List.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when Item is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Adds an Item at the beginning of a List.","excerpt":"Adds an Item at the beginning of a List.","ref":"/docs/reference/blocks/lists/add-item/add-item-at-beginning-block-2/","tags":"","title":"Add Item At Beginning"},{"body":"\rAdd Item At End (Cortex.Blocks.Lists.AddItem.AddItemAtEndBlock`2)\nDescription Adds an Item at the end of a List.\nExamples Add an Item at the end of an empty List This example will add \"New Item\" at the end of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with value \"New Item\" ($)Item is a variable of type String Result Adding \"New Item\" at the end of [] results in the variable ($)List being updated to the following:\n[\"New Item\"] Add an Item at the end of a List This example will add \"New Item\" at the end of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with value \"New Item\" ($)Item is a variable of type String Result Adding \"New Item\" at the end of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"Some Text\", 1, \"New Item\"] Properties List The List where the Item is added.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be added to the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Item The Item to be added at the end of the List.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when Item is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Adds an Item at the end of a List.","excerpt":"Adds an Item at the end of a List.","ref":"/docs/reference/blocks/lists/add-item/add-item-at-end-block-2/","tags":"","title":"Add Item At End"},{"body":"\rAdd Item At Index (Cortex.Blocks.Lists.AddItem.AddItemAtIndexBlock`2)\nDescription Adds an Item at the specified Index of a List.\nExamples Add an Item at the first Index (i.e. 0) of an empty List This example will add \"New Item\" at index 0 of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with value \"New Item\" ($)Item is a variable of type String Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Adding \"New Item\" at index 0 of [] results in the variable ($)List being updated to the following:\n[\"New Item\"] Add an Item at the first Index (i.e. 0) of a List This example will add \"New Item\" at index 0 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with value \"New Item\" ($)Item is a variable of type String Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Adding \"New Item\" at index 0 of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"New Item\", \"Some Text\", 1] Add an Item at the end (i.e. Index equals count of items) of a List This example will add \"New Item\" at index 2 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with value \"New Item\" ($)Item is a variable of type String Index ($)Index, with value 2 ($)Index is a variable of type Int32 Result Adding \"New Item\" at index 2 of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"Some Text\", 1, \"New Item\"] Properties List The List where the Item is added.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be added to the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Item The Item to be added at the specified Index of the List.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Index The Index to add the Item at.\nValid values are between and including 0 and the total count of items in the List.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when Item is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Index is out of the range of the list indexes. Valid indexes are between and including 0 and the count of items in the List. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Adds an Item at the specified Index of a List.","excerpt":"Adds an Item at the specified Index of a List.","ref":"/docs/reference/blocks/lists/add-item/add-item-at-index-block-2/","tags":"","title":"Add Item At Index"},{"body":"\rAdd Item With Key (Cortex.Blocks.Dictionaries.AddItem.AddItemWithKeyBlock`3)\nDescription Adds an Item to a Dictionary with the specified Key.\nExamples Add an Item to an empty Dictionary This example will add 1 to {} with a key of \"Key1\".\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Item ($)Item, with value 1 ($)Item is a variable of type Int32 Result Adding 1 to {} with a key of \"Key1\" results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 1} Add an Item to a Dictionary This example will add 2 to {\"Key1\" : 1} with a key of \"Key2\".\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key2\" ($)Key is a variable of type String Item ($)Item, with value 2 ($)Item is a variable of type Int32 Result Adding 2 to {\"Key1\" : 1} with a key of \"Key2\" results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 1, \"Key2\" : 2} Properties Dictionary The Dictionary where the Item is added with the specified Key.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key to add the Item with.\nKeys cannot be null and must be unique within a dictionary, as they are used to lookup the item they correspond to.\nFor information and examples of how it is determined whether a key is already present, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Item The Item to be added to the Dictionary with the specified Key.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when Item is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. KeyPresentException Thrown when an item with the specified Key is already present. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Adds an item to a Dictionary with the specified key.","excerpt":"Adds an item to a Dictionary with the specified key.","ref":"/docs/reference/blocks/dictionaries/add-item/add-item-with-key-block-3/","tags":"","title":"Add Item With Key"},{"body":"","categories":"","description":"Add an item or multiple items to a dictionary.","excerpt":"Add an item or multiple items to a dictionary.","ref":"/docs/reference/blocks/dictionaries/add-item/","tags":"","title":"Add Item(s)"},{"body":"","categories":"","description":"Add an item or multiple items to a list.","excerpt":"Add an item or multiple items to a list.","ref":"/docs/reference/blocks/lists/add-item/","tags":"","title":"Add Item(s)"},{"body":"\rAdd Items At Beginning (Cortex.Blocks.Lists.AddItem.AddItemsAtBeginningBlock`2)\nDescription Adds Items at the beginning of a List.\nExamples Add Items at the beginning of an empty List This example will add [\"New Item 1\", \"New Item 2\"] at the beginning of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Items ($)Items, with value [\"New Item 1\", \"New Item 2\"] ($)Items is a variable of type IEnumerable\u003cString\u003e Result Adding [\"New Item 1\", \"New Item 2\"] at the beginning of [] results in the variable ($)List being updated to the following:\n[\"New Item 1\", \"New Item 2\"] Add Items at the beginning of a List This example will add [\"New Item 1\", \"New Item 2\"] at the beginning of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Items ($)Items, with value [\"New Item 1\", \"New Item 2\"] ($)Items is a variable of type IEnumerable\u003cString\u003e Result Adding [\"New Item 1\", \"New Item 2\"] at the beginning of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"New Item 1\", \"New Item 2\", \"Some Text\", 1] Properties List The List where the Items are added.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be added to the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Items The Items to be added at the beginning of the List.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List or Items is null. Remarks Empty Items If Items is empty (i.e. []) there is nothing to add, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Adds Items at the beginning of a List.","excerpt":"Adds Items at the beginning of a List.","ref":"/docs/reference/blocks/lists/add-item/add-items-at-beginning-block-2/","tags":"","title":"Add Items At Beginning"},{"body":"\rAdd Items At End (Cortex.Blocks.Lists.AddItem.AddItemsAtEndBlock`2)\nDescription Adds Items at the end of a List.\nExamples Add Items at the end of an empty List This example will add [\"New Item 1\", \"New Item 2\"] at the end of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Items ($)Items, with value [\"New Item 1\", \"New Item 2\"] ($)Items is a variable of type IEnumerable\u003cString\u003e Result Adding [\"New Item 1\", \"New Item 2\"] at the end of [] results in the variable ($)List being updated to the following:\n[\"New Item 1\", \"New Item 2\"] Add Items at the end of a List This example will add [\"New Item 1\", \"New Item 2\"] at the end of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Items ($)Items, with value [\"New Item 1\", \"New Item 2\"] ($)Items is a variable of type IEnumerable\u003cString\u003e Result Adding [\"New Item 1\", \"New Item 2\"] at the end of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"Some Text\", 1, \"New Item 1\", \"New Item 2\"] Properties List The List where the Items are added.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be added to the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Items The Items to be added at the end of the List.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List or Items is null. Remarks Empty Items If Items is empty (i.e. []) there is nothing to add, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Adds Items at the end of a List.","excerpt":"Adds Items at the end of a List.","ref":"/docs/reference/blocks/lists/add-item/add-items-at-end-block-2/","tags":"","title":"Add Items At End"},{"body":"\rAdd Items At Index (Cortex.Blocks.Lists.AddItem.AddItemsAtIndexBlock`2)\nDescription Adds Items at the specified Index of a List.\nExamples Add Items at the first index (i.e. 0) of an empty List This example will add [\"New Item 1\", \"New Item 2\"] at index 0 of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Items ($)Items, with value [\"New Item 1\", \"New Item 2\"] ($)Items is a variable of type IEnumerable\u003cString\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Adding [\"New Item 1\", \"New Item 2\"] at index 0 of [] results in the variable ($)List being updated to the following:\n[\"New Item 1\", \"New Item 2\"] Add Items at the first Index (i.e. 0) of a List This example will add [\"New Item 1\", \"New Item 2\"] at index 0 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Items ($)Items, with value [\"New Item 1\", \"New Item 2\"] ($)Items is a variable of type IEnumerable\u003cString\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Adding [\"New Item 1\", \"New Item 2\"] at index 0 of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"New Item 1\", \"New Item 2\", \"Some Text\", 1] Add Items at the end (i.e. Index equals count of items) of a List This example will add [\"New Item 1\", \"New Item 2\"] at index 2 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Items ($)Items, with value [\"New Item 1\", \"New Item 2\"] ($)Items is a variable of type IEnumerable\u003cString\u003e Index ($)Index, with value 2 ($)Index is a variable of type Int32 Result Adding [\"New Item 1\", \"New Item 2\"] at index 2 of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"Some Text\", 1, \"New Item 1\", \"New Item 2\"] Properties List The List where the Items are added.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be added to the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Items The Items to be added at the specified Index of the List.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Index The Index to add the Items at.\nValid values are between and including 0 and the total count of items in the List.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List or Items is null. PropertyValueOutOfRangeException Thrown when Index is out of the range of the list indexes. Valid indexes are between and including 0 and the count of items in the List. Remarks Empty Items If Items is empty (i.e. []) there is nothing to add, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Adds Items at the specified Index of a List.","excerpt":"Adds Items at the specified Index of a List.","ref":"/docs/reference/blocks/lists/add-item/add-items-at-index-block-2/","tags":"","title":"Add Items At Index"},{"body":"","categories":"","description":"Add text to another text.","excerpt":"Add text to another text.","ref":"/docs/reference/blocks/text/add-text/","tags":"","title":"Add Text"},{"body":"\rAdd Text After Index (Cortex.Blocks.Text.AddText.AddTextAfterIndexBlock)\nDescription Adds Text To Add to another Text after the given Index.\nExamples Add Text To Add to another Text after the given Index This example will add \"|\" after \"A\" (which is at index 0) in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value \"|\" ($)TextToAdd is a variable of type String Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result \"A\" is at index 0 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, adding \"|\" after index 0 results in the variable ($)Text being updated to the following:\n\"A|BCDEFGHIJKLMNOPQRSTUVWXYZ\" Add null or empty Text To Add to another Text after the given Index This example will try to add null or \"\" after \"A\" (which is at index 0) in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value null or \"\" ($)TextToAdd is a variable of type String Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Adding null or \"\" performs no operation as there is nothing to add, so the variable ($)Text will remain as follows:\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text where the Text To Add is added.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Add The Text To Add to the Text after the given Index.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Index The Index to add the Text To Add after.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Index is less than zero or greater than the length of Text - 1. Remarks Null or empty Text To Add If Text To Add is null or empty (i.e. \"\") nothing is added to Text. See Example above.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text To Add added in the correct place and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Adds text to another text after a given index.","excerpt":"Adds text to another text after a given index.","ref":"/docs/reference/blocks/text/add-text/add-text-after-index-block/","tags":"","title":"Add Text After Index"},{"body":"\rAdd Text At Beginning (Cortex.Blocks.Text.AddText.AddTextAtBeginningBlock)\nDescription Adds Text To Add at the beginning of another Text.\nExamples Add Text To Add at the beginning of another Text This example will add \"|\" at the beginning of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value \"|\" ($)TextToAdd is a variable of type String Result Adding \"|\" at the beginning of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" results in the variable ($)Text being updated to the following:\n\"|ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Add Text To Add at the beginning of a null or empty Text This example will try to add \"|\" at the beginning of null or \"\".\nProperties Property Value Notes Text ($)Text, with value null or \"\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value \"|\" ($)TextToAdd is a variable of type String Result Adding \"|\" to null or \"\" results in the variable ($)Text being updated to the following:\n\"|\" Add null or empty Text To Add at the beginning of another Text This example will try to add null or \"\" at the beginnning of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value null or \"\" ($)TextToAdd is a variable of type String Result Adding null or \"\" performs no operation as there is nothing to add, so the variable ($)Text will remain as follows:\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text where the Text To Add is added.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Add The Text To Add at the beginning of the Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Exceptions No exceptions are thrown by the block.\nRemarks Null or empty Text If Text is null or empty (i.e. \"\") it is replaced with the Text To Add. See Example above.\nNull or empty Text To Add If Text To Add is null or empty (i.e. \"\") nothing is added to Text. See Example above.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text To Add added in the correct place and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Adds text at the beginning of another text.","excerpt":"Adds text at the beginning of another text.","ref":"/docs/reference/blocks/text/add-text/add-text-at-beginning-block/","tags":"","title":"Add Text At Beginning"},{"body":"\rAdd Text At End (Cortex.Blocks.Text.AddText.AddTextAtEndBlock)\nDescription Adds Text To Add at the end of another Text.\nExamples Add Text To Add at the end of another Text This example will add \"|\" at the end of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value \"|\" ($)TextToAdd is a variable of type String Result Adding \"|\" at the end of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" results in the variable ($)Text being updated to the following:\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZ|\" Add Text To Add at the end of a null or empty Text This example will try to add \"|\" at the end of null or \"\".\nProperties Property Value Notes Text ($)Text, with value null or \"\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value \"|\" ($)TextToAdd is a variable of type String Result Adding \"|\" to null or \"\" results in the variable ($)Text being updated to the following:\n\"|\" Add null or empty Text To Add at the end of another Text This example will try to add null or \"\" at the end of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value null or \"\" ($)TextToAdd is a variable of type String Result Adding null or \"\" performs no operation as there is nothing to add, so the variable ($)Text will remain as follows:\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text where the Text To Add is added.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Add The Text To Add at the end of the Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Exceptions No exceptions are thrown by the block.\nRemarks Null or empty Text If Text is null or empty (i.e. \"\") it is replaced with the Text To Add. See Example above.\nNull or empty Text To Add If Text To Add is null or empty (i.e. \"\") nothing is added to Text. See Example above.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text To Add added in the correct place and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Adds text at the end of another text.","excerpt":"Adds text at the end of another text.","ref":"/docs/reference/blocks/text/add-text/add-text-at-end-block/","tags":"","title":"Add Text At End"},{"body":"\rAdd Text Before Index (Cortex.Blocks.Text.AddText.AddTextBeforeIndexBlock)\nDescription Adds Text To Add to another Text before the specified Index.\nExamples Add Text To Add to another Text before the given Index This example will add \"|\" before \"A\" (which is at index 0) in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value \"|\" ($)TextToAdd is a variable of type String Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result \"A\" is at index 0 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, adding \"|\" before index 0 results in the variable ($)Text being updated to the following:\n\"|ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Add null or empty Text To Add to another Text before the given Index This example will try to add null or \"\" before \"A\" (which is at index 0) in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Text To Add ($)TextToAdd, with value null or \"\" ($)TextToAdd is a variable of type String Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Adding null or \"\" performs no operation as there is nothing to add, so the variable ($)Text will remain as follows:\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text where the Text To Add is added.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Add The Text To Add to the Text before the given Index.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Index The Index to add the Text To Add before.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Index is less than zero or greater than the length of Text - 1. Remarks Null or empty Text To Add If Text To Add is null or empty (i.e. \"\") nothing is added to Text. See Example above.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text To Add added in the correct place and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Adds text to another text before the specified index.","excerpt":"Adds text to another text before the specified index.","ref":"/docs/reference/blocks/text/add-text/add-text-before-index-block/","tags":"","title":"Add Text Before Index"},{"body":"","categories":"","description":"Add a time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds) to a date time.","excerpt":"Add a time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds) to a date time.","ref":"/docs/reference/blocks/date-and-time/add-time-period/","tags":"","title":"Add Time Period"},{"body":"\rAdd Time Period (Cortex.Blocks.DateAndTime.AddTimePeriod.AddTimePeriodBlock)\nDescription Adds a Time Period to the specified Date Time.\nThis block can add both positive and negative TimePeriod values.\nExamples Add a positive Time Period This example will add 1 year, 1 month, 1 day, 1 hour and 30 minutes to 2021-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Time Period ($)TimePeriod, with value of {\"Years\": 1, \"Months\": 1, \"Days\": 1, \"Hours\": 1, \"Minutes\": 30, \"Seconds\": 0, \"Milliseconds\": 0} ($)TimePeriod is a variable of type TimePeriod Result Adding 1 year, 1 month, 1 day, 1 hour and 30 minutes to 2021-01-01T00:00:00+00:00 will result in the variable ($)DateTime being updated. Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2022-02-02T01:30:00+00:00\" Add a negative Time Period This example will add -1 year to 2021-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Time Period ($)TimePeriod, with value of {\"Years\": -1, \"Months\": 0, \"Days\": 0, \"Hours\": 0, \"Minutes\": 0, \"Seconds\": 0, \"Milliseconds\": 0} ($)TimePeriod is a variable of type TimePeriod Result Adding -1 year from 2021-01-01T00:00:00+00:00 will result in 1 year being subtracted and the variable ($)DateTime being updated. Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2020-01-01T00:00:00+00:00\" Properties Date Time The Date Time to add the Time Period to.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Time Period The Time Period to add to the Date Time to.\nTime Period can have positive and negative components where components are:\nYears Months Days Hours Minutes Seconds Milliseconds When adding a Time Period, the block will first add years, followed by months, days, hours, minutes, seconds and finally milliseconds.\nWhen adding months, if the current day component is greater than the last day in the resultant month, it will update the day to the last day for that month (e.g. adding one month onto 2021-01-31T23:59:59+00:00 will equate to 2021-02-28T23:59:59+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type TimePeriod Property Type Input Is Advanced false Default Editor Literal Default Value Years: 0 Months: 0 Days: 0 Hours: 0 Minutes: 0 Seconds: 0 Milliseconds: 0 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when adding Time Period to Date Time will result in the Date Time being less than 0001-01-01T00:00:00+00:00. See Property Less Than Minimum Value. Thrown when adding Time Period to Date Time will result in the Date Time being greater than 9999-12-31T23:59:59+00:00. See Property Greater Than Maximum Value. Remarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\nOrder of calculations When adding a Time Period, the block will first add years, followed by months, days, hours, minutes, seconds and finally milliseconds.\nAddition of Months When adding months to the Date Time, if the current day component is greater than the last day in the resultant month, it will update the day to the last day for that month (e.g. adding one month onto 2021-01-31T23:59:59+00:00 will equate to 2021-02-28T23:59:59+00:00).\nDaylight Savings This block copes with UTC time offsets but does not know anything about which time zone the Date Time represents; as a result it cannot take daylight savings into account as these are related to time zones rather than UTC time offsets.\n","categories":"","description":"Adds a Time Period to a specified Date Time.","excerpt":"Adds a Time Period to a specified Date Time.","ref":"/docs/reference/blocks/date-and-time/add-time-period/add-time-period-block/","tags":"","title":"Add Time Period"},{"body":"Advanced Application Server and Load Balancer Configuration Changes Advanced configuration (such as port changes) can be undertaken by taking the following steps before running the PowerShell script. Some values will be modified by the script and they will take precedence, but those parameters can be removed from the script and this file used entirely if required.\nMultiple Server With HA In the Cortex Innovation 2022.9 - Installation Scripts folder, locate the file Cortex.Innovation.Install.Config.json and open it with a text editor.\nChange the configuration file according to your cluster, referring to the following example and details:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 { \"customers\": [ { \"name\": \"Customer1\", \"isPrimary\": true, \"rules\": { \"clientConnectionEndpointPort\": \"8001\", \"clusterConnectionEndpointPort\": \"8002\", \"leaseDriverEndpointPort\": \"8003\", \"serviceConnectionEndpointPort\": \"8004\", \"httpGatewayEndpointPort\": \"9080\", \"reverseProxyEndpointPort\": \"9081\", \"applicationPorts\": \"10010-10500\", \"ephemeralPorts\": \"10501-20000\" }, \"loadBalancer\": { \"installDirectory\": \"%ProgramData%\\\\loadbalancer\", \"iPAddress\": \"192.168.20.178\", \"loadBalancerSnmpPort\": \"162\", \"snmpReceiverServicePort\": \"10001\", \"loadBalancerTlsPort\": \"443\", \"apiGatewayServicePort\": \"8722\", \"adminCertificate\": \"loadBalancerCertificate\" }, \"servers\": [ { \"serverName\": \"app-server1\", \"iPAddress\": \"192.168.1.1\" }, { \"serverName\": \"app-server2\", \"iPAddress\": \"192.168.1.2\" }, { \"serverName\": \"app-server3\", \"iPAddress\": \"192.168.1.3\" } ] } ], \"servers\": { \"app-server1\": { \"faultDomain\": \"fd:/fd1\", \"serverCertificate\": \"serverCert\" }, \"app-server2\": { \"faultDomain\": \"fd:/fd2\", \"serverCertificate\": \"serverCert\" }, \"app-server3\": { \"faultDomain\": \"fd:/fd3\", \"serverCertificate\": \"serverCert\" } }, \"rules\": { \"windowsSmbRemoteRegistry\": [ \"135\", \"137\", \"138\", \"139\", \"445\" ], \"rabbitMqAmqpPorts\": [ \"5671\" ], \"rabbitMqEpmdPort\": \"4369\", \"rabbitMqErlangDistributionClientPorts\": \"35672-35682\", \"rabbitMqErlangDistributionServerPort\": \"25672\", \"rabbitMqManagementApiPort\": \"15671\" }, \"serverCertificates\": { \"serverCert\": { \"pfxCertificatePath\": \"C:\\\\Certificates\\\\wildCardCert.pfx\", \"pfxCertificatePassword\": \"pfxPassword\", \"pemRootCertificatePath\": \"\" } }, \"adminCertificates\": { \"loadBalancerCert\": { \"pfxCertificatePath\": \"C:\\\\Certificates\\\\lbCert.pfx\", \"pfxCertificatePassword\": \"pfxPassword\", \"pemRootCertificatePath\": \"\" } } } Line Description 4 A name identifying the platform being installed. This should have no spaces or symbols. It will be appended to the node names that are displayed in the Service Fabric management tool. 16-24 If the bundled load balancer is not being used, delete these lines 17 A local empty or non-existent directory on the load balancer server that the load balancer can be installed in. The directory path will be created if it does not exist. The installation user must have permissions to create and write to directories here. Ensure that all backslashes are escaped with another backslash. Environment variables may be used. 18 The IPv4 address of the server that the load balancer should run on. 21 The port that the HTTPS load balancer server should run on. This port should not be in use by anything else. 22 The port that the API Gateway Service is running on the Application Servers. This should be 8722. 23 The name of a certificate entry in the adminCertificates section. If this line is removed, an auto-generated self-signed certificate will be used. 27, 31, 35 The short computer names of the Application Servers. These must not contain the domain. The installation will be run on the first of these nodes. 28, 32, 36 The respective IPv4 addresses of the Application Servers. 42, 46, 50 These keys should be changed to the computer names of the Application Servers to match those on lines 26, 30 and 24 44, 48, 52 The name of a certificate entry in the serverCertificates section. This should be the same for all Application Servers. If these lines are removed, an auto-generated self-signed certificate will be used. Self-signed certificates are not recommended for production systems. 73-75 Skip configuring these lines if self-signed certificates are being used. 80-82 Skip configuring these lines if self-signed certificates are being used or if the bundled load balancer is not being used. 74 This is the local path of a .PFX certificate file on the first Application Server, containing a full chain certificate with private key. Ensure that all backslashes are escaped with another backslash. Environment variables cannot be used. 75 The password used to secure the .PFX file. 76 This only needs to be used if the installation has failed due to a missing root certificate. See Troubleshooting Root Certificate Error for information. 81 This is the local path of a .PFX certificate file on the first Application Server, containing a full chain certificate with private key. Ensure that all backslashes are escaped with another backslash. Environment variables cannot be used. 82 The password used to secure the .PFX file. 83 This only needs to be used if the installation has failed due to a missing root certificate. See Troubleshooting Root Certificate Error for information. Save and close the config file.\nSingle Server Without HA In the Cortex Innovation 2022.9 - Installation Scripts folder, locate the file Cortex.Innovation.Install.Config.json and open it with a text editor.\nChange the configuration file according to your cluster, referring to the following example and details:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 { \"customers\": [ { \"name\": \"Customer1\", \"isPrimary\": true, \"rules\": { \"clientConnectionEndpointPort\": \"8001\", \"clusterConnectionEndpointPort\": \"8002\", \"leaseDriverEndpointPort\": \"8003\", \"serviceConnectionEndpointPort\": \"8004\", \"httpGatewayEndpointPort\": \"9080\", \"reverseProxyEndpointPort\": \"9081\", \"applicationPorts\": \"10010-10500\", \"ephemeralPorts\": \"10501-20000\" }, \"servers\": [ { \"serverName\": \"app-server1\", \"iPAddress\": \"192.168.1.1\" } ] } ], \"servers\": { \"app-server1\": { \"faultDomain\": \"fd:/fd1\", \"serverCertificate\": \"serverCert\" } }, \"rules\": { \"windowsSmbRemoteRegistry\": [ \"135\", \"137\", \"138\", \"139\", \"445\" ], \"rabbitMqAmqpPorts\": [ \"5671\" ], \"rabbitMqEpmdPort\": \"4369\", \"rabbitMqErlangDistributionClientPorts\": \"35672-35682\", \"rabbitMqErlangDistributionServerPort\": \"25672\", \"rabbitMqManagementApiPort\": \"15671\" }, \"serverCertificates\": { \"serverCert\": { \"pfxCertificatePath\": \"C:\\\\Certificates\\\\wildCardCert.pfx\", \"pfxCertificatePassword\": \"pfxPassword\", \"pemRootCertificatePath\": \"\" } } } Line Description 4 A name identifying the platform being installed. This should have no spaces or symbols. It will be appended to the node names that are displayed in the Service Fabric management tool. 18 The short computer names of the node. This must not contain the domain. The installation will be run on the this node. 19 The IPv4 address of the node. 25 This key should be changed to the computer names of the node to match that on line 18 27 The name of a certificate entry in the serverCertificates section. If this line is removed, an auto-generated self-signed certificate will be used. Self-signed certificates are not recommended for production systems. 48-50 Skip configuring these lines if self-signed certificates are being used. 48 This is the local path of a .PFX certificate file on the server, containing a full chain certificate with private key. Ensure that all backslashes are escaped with another backslash. Environment variables cannot be used. 49 The password used to secure the .PFX file. 50 This only needs to be used if the installation has failed due to a missing root certificate. See Troubleshooting Root Certificate Error for information. Save and close the config file.\n","categories":"","description":"Information about installing Cortex Innovation with non-default installation values.","excerpt":"Information about installing Cortex Innovation with non-default installation values.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/advanced-config-changes/","tags":"","title":"Advanced Application Server and Load Balancer Configuration Changes"},{"body":"Array (System.Array)\nSummary Any data type representing an array of items.\nThe type of items that can be contained in the array depend upon the type of the array.\nCommon examples include arrays of strings and integers (i.e. String[] and Int32[]); for more see Most Common Array Data Types.\nArrays are very similar to Lists, but have some key differences, such as they are a fixed size and cannot be added to, or deleted from. For more information about the differences between Arrays and Lists, and when to use each of them see Arrays vs Lists.\nCategory: Collections Name: Array Full Name: System.Array Alias: N/A Description: Any data type representing an array of items. The type of items that can be contained in the array depend upon the type of the array. Size: Varies Default Value: null Can be used as: IEnumerable, Object, dynamic Can be cast to: N/A Remarks Most Common Array Data Types Any of the following data types can be used where an Array is required:\nObject[] - an array containing Object items String[] - an array containing String items Boolean[] - an array containing Boolean items Int16[] - an array containing Int16 items Int32[] - an array containing Int32 items Int64[] - an array containing Int64 items Single[] - an array containing Single items Double[] - an array containing Double items Create an Array The following table shows some of the ways that an Array can be created.\nMethod Example Result Editor Support Notes Use an explicit Array expression new Object[] {} [] Expression Object[] containing zero items new String[] { \"Some Text\" } [\"Some Text\"] Expression String[] containing one String item new Boolean[] { true, false } [true, false] Expression Boolean[] containing two Boolean items new Int32[] { 1, 2, 3 } [1, 2, 3] Expression Int32[] containing three Int32 items new Object[] { \"Some Text\", true, 1 } [\"Some Text\", true, 1] Expression Object[] containing a String item, a Boolean item and an Int32 item Use an implicit Array expression new [] { \"Some Text\" } [\"Some Text\"] Expression String[] containing one String item. Implicit arrays must only contain a single data type new [] { true, false } [true, false] Expression Boolean[] containing two Boolean items new [] { 1, 2, 3 } [1, 2, 3] Expression Int32[] containing three Int32 items Convert Array to Text The following table shows some of the ways that an Array can be converted to text.\nMethod Example Result Editor Support Notes Use Convert Object To Json block where Object property has an Object[] value of [\"Some Text\", true, 1] \"[\\r\\n \\\"Some Text\\\",\\r\\n true,\\r\\n 1\\r\\n]\" N/A See Convert Object To Json Property Editor Support Currently no Input, InputOutput or Output properties require the Array data type.\nKnown Limitations None\nSee Also Related Data Types IEnumerable Related Concepts Working with Collections External Documentation System.Array ","categories":"","description":"Any data type representing an array of items. The type of items that can be contained in the array depend upon the type of the array. Common examples include arrays of strings and integers (i.e. `String[]` and `Int32[]`).","excerpt":"Any data type representing an array of items. The type of items that can be contained in the array depend upon the type of the array. Common examples include arrays of strings and integers (i.e. …","ref":"/docs/reference/data-types/collections/array/","tags":"","title":"Array"},{"body":"Attributes Summary TODO:\nSupported file and folder attributes and examples of using them https://docs.microsoft.com/en-us/dotnet/api/system.io.fileattributes?view=net-5.0 Currently there are no specific blocks for setting attributes of files and folders (setting can be done through c# or PowerShell) Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding file and folder attributes.","excerpt":"Information regarding file and folder attributes.","ref":"/docs/reference/concepts/working-with/files-and-folders/attributes/","tags":"","title":"Attributes"},{"body":"BasicEmailSessionDetails (Cortex.DataTypes.Email.BasicEmailSessionDetails)\nSummary The BasicEmailSessionDetails data type is used to represent configuration for opening and maintaining a session with a mail server.\nCategory: Email Name: BasicEmailSessionDetails Full Name: Cortex.DataTypes.Email.BasicEmailSessionDetails Alias: N/A Description: Configuration for opening and maintaining a session with a mail server. Default Value: null Can be used as: BasicEmailSessionDetails, Object, dynamic Can be cast to: N/A Properties ServerDetails The ServerDetails are used to configure the Host and Port of the SMTP server to connect to and whether or not to UseSsl.\nData Type ServerDetails Is Advanced false Default Editor Literal Default Value ServerDetails with value shown below: { \"Host\": \"\", \"Port\": 465, \"UseSsl\": true } Credentials The Credentials are used to configure the Username and Password used for SMTP Authentication.\nData Type UserCredentials Is Advanced false Default Editor Literal Default Value UserCredentials with value shown below: { \"Domain\": \"\", \"Username\": \"\", \"Password\": \"\" } Remarks Create a BasicEmailSessionDetails The following table shows some of the ways that BasicEmailSessionDetails can be created.\nMethod Example Result Editor Support Notes Use a BasicEmailSessionDetails constructor new BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}} Expression The Password property in the UserCredentials must be encrypted, for more information on how to encrypt the Password, see EncryptedText. A BasicEmailSessionDetails can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes ServerDetails ServerDetails Host: \"smtp.gmail.com\"\nPort: 465\nUseSsl: true The ServerDetails that are used to connect to the server. Credentials UserCredentials Domain: \"\"\nUsername: \"sender@gmail.com\"\nPassword: \"encryptedPassword\" The Credentials that are used for authentication on the server.\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the Password, see EncryptedText. Convert BasicEmailSessionDetails to Text Method Example Result Editor Support Notes Use Convert Object To Json block where Object property has a value of {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}} \"{\\r\\n \\\"ServerDetails\\\": {\\r\\n \\\"Host\\\": \\\"smtp.gmail.com\\\",\\r\\n \\\"Port\\\": 465,\\r\\n \\\"UseSsl\\\": true\\r\\n },\\r\\n \\\"Credentials\\\": {\\r\\n \\\"Domain\\\": null,\\r\\n \\\"Username\\\": \\\"sender@gmail.com\\\",\\r\\n \\\"Password\\\": \\\"encryptedPassword\\\"\\r\\n }\\r\\n}\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is BasicEmailSessionDetails. The Literal Editor is available for Input properties where the data type is BasicEmailSessionDetails. The Variable Editor is available for Input, InputOutput and Output properties where the data type is BasicEmailSessionDetails. Known Limitations Currently, this data type is not compatible for use with unauthenticated SMTP servers.\nThis limitation may be removed in the future.\nSee Also Related Data Types ServerDetails UserCredentials EncryptedText Related Concepts Working with Email External Documentation None\n","categories":"","description":"Used to represent configuration for opening and maintaining a session with a mail server.","excerpt":"Used to represent configuration for opening and maintaining a session with a mail server.","ref":"/docs/reference/data-types/email/basicemailsessiondetails/","tags":"","title":"BasicEmailSessionDetails"},{"body":"","categories":"","description":"Exceptions related to Blocks","excerpt":"Exceptions related to Blocks","ref":"/docs/reference/exceptions/flows/blocks/","tags":"","title":"Blocks"},{"body":"BlockTimeoutException (Cortex.Exceptions.Flows.Blocks.BlockTimeoutException)\nDescription TODO\nReasons Block Timeout Reached TODO\nMessage Format TODO\nThe format of the Message is as follows:\n\"TODO: \\r\\nPlease click the HelpLink for more information on how to fix this.\" How to fix TODO\nEnsure the action that the block is taking is likely to complete within the given TimePeriod.\nProperties TODO\nException Type The type of the exception (i.e. BlockTimeoutException).\nData Type String Message TODO\nThe exception message, providing information about the exception that occurred.\nData Type String Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations TODO\nIf a block is at a point that cannot cancel, then it will cancel at the next available opportunity.\nSee Also TODO\nRelated Data Types TODO\nString TimePeriod Related Concepts TODO\nBlocks Block Properties Exceptions Related Blocks TODO: Update list\nAll Blocks except:\nFlows Start Flow End Flow Schedules Wait For Duration Workspaces Start Workspace End Workspace External Documentation TODO\n","categories":"","description":"The exception thrown when a block timeout has been reached.","excerpt":"The exception thrown when a block timeout has been reached.","ref":"/docs/reference/exceptions/flows/blocks/block-timeout-exception/","tags":"","title":"BlockTimeoutException"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/","tags":"","title":"Blog"},{"body":"Boolean (System.Boolean)\nSummary The Boolean data type is used to represent a logical value of true or false.\nCategory: Conditional Logic Name: Boolean Full Name: System.Boolean Alias: bool Description: A logical value of true or false. Size: 1 bit Default Value: false Can be used as: Nullable\u003cBoolean\u003e, Object, dynamic Can be cast to: N/A Remarks Create a Boolean The following table shows some of the ways that a Boolean can be created.\nMethod Example Result Editor Support Notes Declare a Boolean literal true true Literal, Expression True false false Literal, Expression False Use a Boolean expression 1 == 1 true Expression Uses equals operator 1 != 1 false Expression Uses not equals operator 1 \u003e 0 true Expression Uses greater than operator 1 \u003c 0 false Expression Uses less than operator 1 \u003e= 0 true Expression Uses greater than or equals operator 1 \u003c= 0 false Expression Uses less than or equals operator true \u0026\u0026 false false Expression Uses logical AND operator true || false true Expression Uses logical OR operator !(true || false) false Expression Uses logical NOT operator Boolean.Parse(\"true\") true Expression Attempts to parse text and convert it to a Boolean value. See Boolean.Parse Convert.ToBoolean(\"true\") true Expression Attempts to convert text to a Boolean value. See Convert.ToBoolean Convert Boolean to Text The following table shows some of the ways that a Boolean can be converted to text.\nMethod Example Result Editor Support Notes Use ToString true.ToString() \"True\" Expression See Boolean.ToString ($)BooleanVariable.ToString() where ($)BooleanVariable has a value of true \"True\" Expression See Boolean.ToString Use Convert.ToString Convert.ToString(true) \"True\" Expression See Convert.ToString Convert.ToString(($)BooleanVariable) where ($)BooleanVariable has a value of true \"True\" Expression See Convert.ToString Use Convert Object To Text block where Object property has a value of true \"True\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a value of true \"true\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is Boolean. The Literal Editor is available for Input properties where the data type is Boolean. Expression syntax is not supported within the Literal Editor for the Boolean data type. The Variable Editor is available for InputOutput and Output properties where the data type is Boolean. Known Limitations None\nSee Also Related Data Types None\nRelated Concepts None\nExternal Documentation System.Boolean ","categories":"","description":"Used to represent a logical value of `true` or `false`.","excerpt":"Used to represent a logical value of `true` or `false`.","ref":"/docs/reference/data-types/conditional-logic/boolean/","tags":"","title":"Boolean"},{"body":"CannotModifyReadOnlyDictionaryException (Cortex.Exceptions.Dictionaries.CannotModifyReadOnlyDictionaryException)\nThe exception thrown when trying to modify a read-only dictionary.\nDictionaries implementing IDictionary\u003cTKey, TItem\u003e have the option to be read-only.\nThe format of the exception message is as follows:\n\"'\u003cproperty-display-name\u003e' cannot be because it's read-only. Please click the HelpLink for more information on how to fix this.\" How to fix If the dictionary was written directly into the block property using an expression, use a dictionary type that is not read-only, such as Dictionary\u003cTKey, TItem\u003e.\nWhen using a variable, convert the read-only dictionary to a dictionary that can be written to by using the .ToDictionary(item =\u003e item.Key, item =\u003e item.Value) expression like follows:\n($)Dictionary.ToDictionary(item =\u003e item.Key, item =\u003e item.Value); TODO: Confirm if this is all correct\n","categories":"","description":"The exception thrown when trying to modify a read-only dictionary.","excerpt":"The exception thrown when trying to modify a read-only dictionary.","ref":"/docs/reference/exceptions/dictionaries/cannotmodifyreadonlydictionaryexception/","tags":"","title":"CannotModifyReadOnlyDictionaryException"},{"body":"CannotModifyReadOnlyListException (Cortex.Exceptions.Lists.CannotModifyReadOnlyListException)\nThe exception thrown when trying to modify a read-only list.\nLists deriving from IList\u003cT\u003e have the option to be read-only.\nThe format of the exception message is as follows:\n\"The value of '\u003cproperty-display-name\u003e' cannot be modified. This is because the value of '\u003cproperty-display-name\u003e' is read-only. See the CannotModifyReadOnlyListException help page for more information on how to fix this.\" How to fix If the list was written directly into the block property using an expression, use a list type that is not read-only, such as List\u003cT\u003e.\nWhen using a variable, convert the list to a list that can be written to by using the .ToList() expression like follows:\n($)List.ToList() TODO: Confirm if this is all correct - look at cannotmodifyreadonlydictionaryexception for consistency\n","categories":"","description":"The exception thrown when trying to modify a read-only list.","excerpt":"The exception thrown when trying to modify a read-only list.","ref":"/docs/reference/exceptions/lists/cannotmodifyreadonlylistexception/","tags":"","title":"CannotModifyReadOnlyListException"},{"body":"Casing Summary TODO:\nBest Practices Comparing strings - do not lower or upper pick a relevant culture or ignore case Links:\nhttps://docs.microsoft.com/en-us/dotnet/core/extensions/performing-culture-insensitive-string-operations https://docs.microsoft.com/en-us/dotnet/standard/base-types/changing-case#compare-strings-of-mixed-case Common types of text casing There are many different types of text casing.\nThe table below lists some of the most common types of text casing:\nName Example Notes lowercase \"this is lowercase\" All letters in all words are lower cased. UPPERCASE \"THIS IS UPPERCASE\" All letters in all words are capitalized. Title Case \"This Is Title Case\" First letter in all words is capitalized, all other letters are lower cased; except for words that are entirely upper cased, such as acronyms, which remain upper cased; spaces and punctuation are preserved. camelCase \"thisIsCamelCase\" First letter in all words (except the first) is capitalized, all other letters are lower cased, and all spaces and punctuation are removed. PascalCase \"ThisIsCamelCase\" First letter in all words is capitalized, all other letters are lower cased, and all spaces and punctuation are removed. Culture Info Culture Info specifies the culture-specific casing rules used to determine how the case of text is changed.\nThe table below lists the most common supported culture info:\nName Text Value Description Invariant Culture CultureInfo.InvariantCulture Used to compare text using culture-sensitive sort rules and the Invariant Culture. Case of the texts is considered when comparing. Current Culture CultureInfo.CurrentCulture Used to compare text using culture-sensitive sort rules and the Current Culture. Case of the texts is considered when comparing. In addition to Invariant and Current Culture, there are two other types of culture that can be used:\nSpecific Cultures Custom Cultures For more information about culture info, please see CultureInfo.\nInvariant Culture For Invariant Culture, the casing rules used to determine how the case of text is changed are not culture-sensitive.\nTODO:\nLink to Working with Culture -\u003e Invariant Culture When to use? If not sure what to choose? notes about invariant culture and a worked through example From https://docs.microsoft.com/en-us/dotnet/api/system.globalization.textinfo.toupper?view=net-6.0 If a security decision depends on a string comparison or a case-change operation, the application should use the InvariantCulture to ensure that the behavior is consistent regardless of the culture settings of the system. However, the invariant culture must be used only by processes that require culture-independent results, such as system services. Otherwise, it produces results that might be linguistically incorrect or culturally inappropriate.\nCurrent Culture For Current Culture, the casing rules used to determine how the case of text is changed are culture-sensitive and based on the culture of the operating system the flow execution is running on.\nTODO:\nLink to Working with Culture -\u003e Current Culture When to use? If not sure what to choose? Best practices - all OSes in cluster should be installed with same OS culture and settings etc. - should also be time sync’d Notes about current culture and a worked through example Specific Cultures TODO:\nTalk about how there are a number of specific cultures, each with their own casing rules When to use? If not sure what to choose? Link to Working with Culture -\u003e Specific Cultures For a list of cultures that can be returned on Windows systems see https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c under The Language table (Language tag defines the code required to create the culture) Custom Cultures TODO:\nTalk about how there can be custom cultures installed, each with their own casing rules When to use? If not sure what to choose? Link to Working with Culture -\u003e Custom Cultures Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO:\nConvert to Uppercase etc External Documentation TODO\n","categories":"","description":"Information regarding text casing.","excerpt":"Information regarding text casing.","ref":"/docs/reference/concepts/working-with/text/casing/","tags":"","title":"Casing"},{"body":"Char (System.Char)\nSummary The Char data type is used to represent unicode characters.\nThe String data type represents text as a sequence of Char values.\nCategory: Text Name: Char Full Name: System.Char Alias: char Description: A unicode character, surrounded by single quotes (e.g. 'a' or '!') Size: 2 bytes Default Value: '\\0' or 'U0000' Can be used as: Int32, Int64, Single, Double, Object, dynamic Can be cast to: Int16 (e.g. (Int16)'a' or (System.Int16)'a' or (short)'a') Remarks Create a Char The following table shows some of the ways that a Char can be created.\nMethod Example Result Editor Support Notes Declare a character literal 'a' 'a' Expression Declare a Unicode escape sequence '\\u0061' 'a' Expression Declare a hexadecimal escape sequence '\\x0061' or '\\x061' or '\\x61' 'a' Expression Cast an Int32 value (Char)97 'a' Expression Property Editor Support Currently no Input, InputOutput or Output properties require the Char data type.\nKnown Limitations None\nSee Also Related Data Types String Related Concepts Working with Text External Documentation System.Char ","categories":"","description":"Used to represent unicode characters.","excerpt":"Used to represent unicode characters.","ref":"/docs/reference/data-types/text/char/","tags":"","title":"Char"},{"body":"","categories":"","description":"Check if a file exists.","excerpt":"Check if a file exists.","ref":"/docs/reference/blocks/files-and-folders/check-file/","tags":"","title":"Check File Exists"},{"body":"\rCheck File Exists (Cortex.Blocks.FilesAndFolders.CheckFile.CheckFileExistsBlock)\nDescription Checks if a File Exists at the specified File Path.\nExamples File exists at the specified File Path This example will check if \"C:\\Windows\\System32\\cmd.exe\" exists on the Windows server executing the flow.\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Windows\\System32\\cmd.exe\" ($)FilePath is a variable of type String File Exists ($)FileExists, with no value ($)FileExists is a variable that will be set to a Boolean value Result \"C:\\Windows\\System32\\cmd.exe\" is the command prompt application on Windows machines. Checking this on the Windows server executing the flow will result in the variable ($)FileExists being updated to the following:\ntrue File does not exist at the specified File Path This example will check if \"/etc/passwd\" exists on the Windows server executing the flow.\nProperties Property Value Notes File Path ($)FilePath, with value \"/etc/passwd\" ($)FilePath is a variable of type String File Exists ($)FileExists, with no value ($)FileExists is a variable that will be set to a Boolean value Result \"/etc/passwd\" is a file that exists on Linux machines containing the list of system accounts. Checking this on the Windows server executing the flow will result in the variable ($)FileExists being updated to the following:\nfalse Properties File Path The File Path to check a file exists at.\nThe File Path is case-insensitive, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value File Exists The result of the file exists check.\nIf the file exists at the specified File Path, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)FileExists with no value Exceptions No exceptions are thrown by the block.\nRemarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Windows\\\\System32\\\\cmd.exe\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Windows\\System32\\cmd.exe\") Null File Path If File Path is null the variable specified in the File Exists property will be set to false.\nEmpty File Path If File Path is empty (i.e. \"\") the variable specified in the File Exists property will be set to false.\nInvalid File Path If File Path is invalid (i.e. contains any of the following characters: \", *, ?, |, \u003c, \u003e, :, \\, /) the variable specified in the File Exists property will be set to false.\nFile Path points to a folder If File Path points to a folder, the variable specified in the File Exists property will be set to false.\nTo check if a folder exists, use the Check Folder Exists block.\nFile Path contains leading spaces If File Path contains leading spaces they are not removed; however, trailing spaces are removed.\nError occurs whilst checking if the file exists If any error occurs whilst checking if a file exists at the specified File Path, the variable specified in the File Exists property will be set to false.\nUser does not have necessary permissions to check if the file exists If the user the flow is executing as does not have permissions to check if a file exists at the specified File Path, the variable specified in the File Exists property will be set to false.\n","categories":"","description":"Checks if a file exists at the specified file path.","excerpt":"Checks if a file exists at the specified file path.","ref":"/docs/reference/blocks/files-and-folders/check-file/check-file-exists-block/","tags":"","title":"Check File Exists"},{"body":"","categories":"","description":"Check if a folder exists.","excerpt":"Check if a folder exists.","ref":"/docs/reference/blocks/files-and-folders/check-folder/","tags":"","title":"Check Folder Exists"},{"body":"\rCheck Folder Exists (Cortex.Blocks.FilesAndFolders.CheckFolder.CheckFolderExistsBlock)\nDescription Checks if a Folder Exists at the specified Folder Path.\nExamples Folder exists at the specified Folder Path This example will check if \"C:\\Windows\\System32\" exists on the Windows server executing the flow.\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Windows\\System32\" ($)FolderPath is a variable of type String Folder Exists ($)FolderExists, with no value ($)FolderExists is a variable that will be set to a Boolean value Result \"C:\\Windows\\System32\" is the folder on Windows machines that contains files critical to the functioning of the operating system. Checking this on the Windows server executing the flow will result in the variable ($)FolderExists being updated to the following:\ntrue Folder does not exist at the specified Folder Path This example will check if \"/etc\" exists on the Windows server executing the flow.\nProperties Property Value Notes Folder Path ($)FolderPath, with value \"/etc\" ($)FolderPath is a variable of type String Folder Exists ($)FolderExists, with no value ($)FolderExists is a variable that will be set to a Boolean value Result \"/etc\" is the folder on Linux machines containing system configuration files. Checking this on the Windows server executing the flow will result in the variable ($)FolderExists being updated to the following:\nfalse Properties Folder Path The Folder Path to check a folder exists at.\nThe Folder Path is case-insensitive, any trailing spaces will be automatically removed, and can end with or without a trailing \\ (e.g. @\"C:\\Windows\\System32\" or @\"C:\\Windows\\System32\\\").\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value Folder Exists The result of the folder exists check.\nIf the folder exists at the specified Folder Path, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)FolderExists with no value Exceptions No exceptions are thrown by the block.\nRemarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nFolder Path needs escaping Folder Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Windows\\\\System32\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Windows\\System32\") Null Folder Path If Folder Path is null the variable specified in the Folder Exists property will be set to false.\nEmpty Folder Path If Folder Path is empty (i.e. \"\") the variable specified in the Folder Exists property will be set to false.\nInvalid Folder Path If Folder Path is invalid (i.e. contains any of the following characters: \", *, ?, |, \u003c, \u003e, :, \\, /) the variable specified in the Folder Exists property will be set to false.\nFolder Path points to a file If Folder Path points to a file, the variable specified in the Folder Exists property will be set to false.\nTo check if a file exists, use the Check File Exists block.\nFolder Path contains leading spaces If Folder Path contains leading spaces they are not removed; however, trailing spaces are removed.\nError occurs whilst checking if the folder exists If any error occurs whilst checking if a folder exists at the specified Folder Path, the variable specified in the Folder Exists property will be set to false.\nUser does not have necessary permissions to check if the folder exists If the user the flow is executing as does not have permissions to check if a folder exists at the specified Folder Path, the variable specified in the Folder Exists property will be set to false.\n","categories":"","description":"Checks if a folder exists at the specified folder path.","excerpt":"Checks if a folder exists at the specified folder path.","ref":"/docs/reference/blocks/files-and-folders/check-folder/check-folder-exists-block/","tags":"","title":"Check Folder Exists"},{"body":"","categories":"","description":"Information related to working with collections such as Lists, Dictionaries and Structures.","excerpt":"Information related to working with collections such as Lists, Dictionaries and Structures.","ref":"/docs/reference/concepts/working-with/collections/","tags":"","title":"Collections"},{"body":"Command (Cortex.DataTypes.Data.Command)\nSummary A Command data type is used to define a single statement that can be run against a data source. The statement can be parameterised, which is recommended to prevent SQL Injection.\nCategory: Data Name: Command Full Name: Cortex.DataTypes.Data.Command Alias: N/A Description: Defines a single statement that can be run against a data source. Default Value: null Can be used as: DataCommand, Object, dynamic Can be cast to: N/A Properties Command Text The Command Text is used to define a single statement that will be run against the data source.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value $@\"\" Parameters Parameters are used to pass information to the statement that will be run against the data source.\nIt is recommended to always use Parameterised Commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nFor more information see Parameterised Commands.\nData Type dynamic Is Advanced true Default Editor Expression Default Value dynamic with no value Remarks Create a Command The following table shows some of the ways that a Command can be created.\nMethod Example Result Editor Support Notes Use a Command constructor new Command(\"SELECT * FROM Table\", null) {CommandText: \"SELECT * FROM Table\", Parameters: null} Expression new Command(\"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", new {SelectParameter = 3}) {\"CommandText\": \"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", \"Parameters\": {\"SelectParameter\": 3}} Expression It is recommended to always use Parameterised Commands as they prevent SQL Injection A Command can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes CommandText EncryptableText $@\"SELECT * FROM Table WHERE Id \u003c @SelectParameter\" The command that will be executed or queried against the data source. Parameters dynamic new {SelectParameter = 3} The parameters that are used within a Parameterised Command. Convert Command to Text Method Example Result Editor Support Notes Use ToString ($)Command.ToString() \"Cortex.DataTypes.Data.Command\" Expression ToString will return the Full Name of the Command Data Type Use Convert Object To Text block where Object property has a value of {CommandText: \"SELECT * FROM Table\", Parameters: null} \"Cortex.DataTypes.Data.Command\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a value of {CommandText: \"SELECT * FROM Table\", Parameters: null} \"{\\r\\n \\\"CommandText\\\": \\\"SELECT * FROM Table\\\",\\r\\n \\\"Parameters\\\": null\\r\\n}\" N/A See Convert Object To Json Parameterised Commands It is recommended to always use parameterised commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nThe @ symbol denotes a parameter within the CommandText (e.g. \"SELECT * FROM Table WHERE Name = @Parameter\"). An example of using parameters can be found in Executing Multiple Commands (Safe), whereas, an example of inserting variables into a statement without parameters can be found in Executing Multiple Commands (Unsafe)\nFor more information see Parameterised Commands.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is Command. The Literal Editor is not available for Input properties where the data type is Command. The Variable Editor is available for Input, InputOutput and Output properties where the data type is Command. Known limitations ToString Method always returns the Full Name Currently, if the ToString() method is used on a Command, then its Full Name will be returned; instead of a representation of the data within the Command.\nIn future this limitation may be removed.\nSee Also Related Data Types DataCommand Commands QueryCommand NonQueryCommand Related Concepts Working with Data Sources External Documentation SQL Injection ","categories":"","description":"Defines a single statement that can be run against a data source.","excerpt":"Defines a single statement that can be run against a data source.","ref":"/docs/reference/data-types/data/command/","tags":"","title":"Command"},{"body":"CommandException (Cortex.Exceptions.Data.CommandException)\nException thrown when any command execution has resulted in an exception being thrown.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" TODO: This is an example of how we can do exceptions with categories and error codes\nCategory Error Code Notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials.AccessTokenUri 300 How to fix TODO:\n301 How to fix TODO:\n302 How to fix TODO:\n","categories":"","description":"Exception thrown when any command execution has resulted in an exception being thrown.","excerpt":"Exception thrown when any command execution has resulted in an exception being thrown.","ref":"/docs/reference/exceptions/data/commandexception/","tags":"","title":"CommandException"},{"body":"Commands (Cortex.DataTypes.Data.Commands)\nSummary A Commands data type is used to define single or multiple statements that can be run against a data source. Statements can be parameterised, which is recommended to prevent SQL Injection.\nCategory: Data Name: Commands Full Name: Cortex.DataTypes.Data.Commands Alias: N/A Description: Defines single or multiple statements that can be run against a data source. Default Value: null Can be used as: DataCommand, Object, dynamic Can be cast to: N/A Properties Command Text The Command Text is used to define single or multiple statements that will be run against the data source.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value $@\"\" Parameters Parameters are used to pass information to the single or multiple statements that will be run against the data source.\nIt is recommended to always use Parameterised Commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nFor more information see Parameterised Commands.\nData Type dynamic Is Advanced true Default Editor Expression Default Value dynamic with no value Remarks Create a Commands The following table shows some of the ways that a Commands can be created.\nMethod Example Result Editor Support Notes Use a Commands constructor new Commands(\"SELECT * FROM Table\", null) {CommandText: \"SELECT * FROM Table\", Parameters: null} Expression new Commands(\"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", new {SelectParameter = 3}) {\"CommandText\": \"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", \"Parameters\": {\"SelectParameter\": 3}} Expression It is recommended to always use Parameterised Commands as they prevent SQL Injection A Commands can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes CommandText EncryptableText $@\"SELECT * FROM Table WHERE Id \u003c @SelectParameter\" The command that will be executed or queried against the data source. Parameters dynamic new {SelectParameter = 3} The parameters that are used within a Parameterised Command. Convert Commands to Text Method Example Result Editor Support Notes Use ToString ($)Commands.ToString() \"Cortex.DataTypes.Data.Commands\" Expression ToString will return the Full Name of the Commands Data Type Use Convert Object To Text block where Object property has a value of {CommandText: \"SELECT * FROM Table\", Parameters: null} \"Cortex.DataTypes.Data.Commands\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a value of {CommandText: \"SELECT * FROM Table\", Parameters: null} \"{\\r\\n \\\"CommandText\\\": \\\"SELECT * FROM Table\\\",\\r\\n \\\"Parameters\\\": null\\r\\n}\" N/A See Convert Object To Json Parameterised Commands It is recommended to always use parameterised commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nThe @ symbol denotes a parameter within the CommandText (e.g. \"SELECT * FROM Table WHERE Name = @Parameter\"). An example of using parameters can be found in Executing Multiple Commands (Safe), whereas, an example of inserting variables into a statement without parameters can be found in Executing Multiple Commands (Unsafe)\nFor more information see Parameterised Commands.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is Commands. The Literal Editor is available for Input properties where the data type is Commands. The Variable Editor is available for Input, InputOutput and Output properties where the data type is Commands. Known limitations ToString Method always returns the Full Name Currently, if the ToString() method is used on a Commands, then its Full Name will be returned; instead of a representation of the data within the Commands.\nIn future this limitation may be removed.\nSee Also Related Data Types DataCommand Command QueryCommand NonQueryCommand Related Concepts Working with Data Sources External Documentation SQL Injection ","categories":"","description":"Holds the information for parsing a command, running multiple query and non query commands against a data source.","excerpt":"Holds the information for parsing a command, running multiple query and non query commands against a data source.","ref":"/docs/reference/data-types/data/commands/","tags":"","title":"Commands"},{"body":"","categories":"","description":"Exceptions related to commonly occurring errors","excerpt":"Exceptions related to commonly occurring errors","ref":"/docs/reference/exceptions/common/","tags":"","title":"Common"},{"body":"Configure Firewalls Add Inbound Rules to Windows Firewall To set up inbound rules for Windows Firewall take the following steps for each rule that you want to add:\nNavigate to Start → Administrative Tools → Windows Firewall with Advanced Security. In the left-hand panel, click on the Inbound Rules node. In the right-hand panel, click on New Rule. In the New Inbound Rule Wizard, select the Port option then click on the Next \u003e button. Select either TCP or UDP depending on the rule that is being made. Select Specific local ports. Enter the required ports in a comma separated list (e.g. 443, 80) in the text box and press Next \u003e. Select Allow the connection then click Next \u003e. Click Next \u003e again, then add an identifiable name for the rule Click Finish. ","categories":"","description":"Information about configuring Firewalls, e.g. adding rules.","excerpt":"Information about configuring Firewalls, e.g. adding rules.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/configure-firewalls/","tags":"","title":"Configure Firewalls"},{"body":"Configure the Gateway Databases to use Transparent Data Encryption Once the Gateway Setup steps have been completed, if you wish to encrypt the databases using Transparent Data Encryption (TDE) for improved security, this should now be performed.\nNote\rTDE cannot be applied to SQL Express, only SQL Server instances.\rEnabling TDE on the databases ensures that the data is encrypted on disk. The process to do this requires that you:\nCreate a master key in the master database with a strong password. This password must be remembered and/or saved in a secure location to enable decryption of the database later. Create a certificate within SQL Server. Backup the certificate and store it in a secure location. If a database needed to be restored elsewhere for any reason the certificate will need to be imported to the new server. Create a database encryption key in each user database to be encrypted. Enable encryption on the database. To enable TDE on the suite of Gateway Databases you should complete the following steps:\nOpen SQL Server Management Studio.\nOpen the Cortex.Install.TDE.sql script included within the Cortex Innovation 2022.9 - Web App Server Install Scripts folder. Note\rThis script will attempt to encrypt all Cortex Databases that exist on the system. Any that do not exist will be skipped. If you do not wish to encrypt all existing Cortex Databases then you should contact Cortex Service Portal for assistance with script modification.\rSet the @sPassword parameter value to a password that you wish to use. Note\rThis password must be set to a value that is not a blank or empty string, it cannot be null and the script will not execute if it is not changed from the pre-populated value of StrongPassword. The password must also meet your system’s minimum security requirements.\rYou can change the names of the certificate and the name of the master key by changing the @sCertName and @sKeyName parameters if you so wish.\nYou can change the location that the certificate and key are backed up to by changing the value of the @sBackupLocation parameter.\nThe location must already exist, and there must not be any files within the specified location with the same name as the certificate or master key names that have been specified.\nThe user that this script will be executed as must also have write permissions to this location.\nOnce the parameters have been set appropriately you should now save the script.\nWe recommended that the modified script is saved out to file (taking care to observe your own organisation’s security policies for password management), before it is executed. This may help facilitate the support process if anything goes wrong.\nClick Execute to run the script. It may take several minutes to execute depending on the size of the databases.\nOnce the script has completed successfully, you should move the backed-up certificate and master key to a secure location and the password specified should also be stored securely.\n","categories":"","description":"Information about configuring Gateway Databases to use Transparent Data Encryption.","excerpt":"Information about configuring Gateway Databases to use Transparent Data Encryption.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/tde/","tags":"","title":"Configure the Gateway Databases to use Transparent Data Encryption"},{"body":"ConnectionDetails (Cortex.DataTypes.Data.ConnectionDetails)\nSummary Any data type representing configuration for establishing and maintaining a connection to a data source.\nCategory: Data Name: ConnectionDetails Full Name: Cortex.DataTypes.Data.ConnectionDetails Alias: N/A Description: Any data type representing configuration for establishing and maintaining a connection to a data source. Default Value: null Can be used as: Object, dynamic Can be cast to: N/A Remarks Most Common ConnectionDetails Data Types Any of the following data types can be used where a ConnectionDetails is required:\nSqlServerConnectionDetails OdbcConnectionDetails Create a ConnectionDetails For some of the ways that a ConnectionDetails can be created, please see each of the ConnectionDetails data types:\nSqlServerConnectionDetails OdbcConnectionDetails Convert ConnectionDetails to Text For some of the ways that a ConnectionDetails can be converted to text, please see each of the ConnectionDetails data types:\nSqlServerConnectionDetails OdbcConnectionDetails Known limitations None\nSee Also Related Data Types SqlServerConnectionDetails OdbcConnectionDetails Related Concepts Working with Data Sources External Documentation None\n","categories":"","description":"Any data type representing configuration for establishing and maintaining a connection to a data source.","excerpt":"Any data type representing configuration for establishing and maintaining a connection to a data source.","ref":"/docs/reference/data-types/data/connectiondetails/","tags":"","title":"ConnectionDetails"},{"body":"\rContains All Text (Cortex.Blocks.Text.ContainsText.ContainsAllTextBlock)\nDescription Checks if Text contains all of the texts in a given set of Texts To Find.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to perform the check.\nExamples Text contains all of the texts in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains all of the texts in [\"The\", \"quick\", \"brown\", \"fox\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"The\", \"quick\", \"brown\", \"fox\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains All Text ($)ContainsAllText, with no value ($)ContainsAllText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains all of the texts in [\"The\", \"quick\", \"brown\", \"fox\"]. Therefore, the variable ($)ContainsAllText will be updated to the following:\ntrue Text does not contain all of the texts in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains all of the texts in [\"the\", \"slow\", \"brown\", \"fox\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"the\", \"slow\", \"brown\", \"fox\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains All Text ($)ContainsAllText, with no value ($)ContainsAllText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" does not contain all of the texts in [\"the\", \"slow\", \"brown\", \"fox\"]; \"slow\" is missing, and \"the\" does not match \"The\" as the specified Comparison Type uses case-sensitive matching. Therefore, the variable ($)ContainsAllText will be updated to the following:\nfalse Text contains text that matches all of the patterns in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains text that matches all of the patterns in [\"?he\", \"?uick\", \"*?own\", \"fox\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"?he\", \"?uick\", \"*?own\", \"fox\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains All Text ($)ContainsAllText, with no value ($)ContainsAllText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains text that matches all of the patterns in [\"?he\", \"?uick\", \"*?own\", \"fox\"]. Therefore, the variable ($)ContainsAllText will be updated to the following:\ntrue Text contains text that matches all of the regexes in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains text that matches all of the regexes in [\"^The\", \"(quick|fast)\", \"b.* \", \"(fox|Fox)\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"^The\", \"(quick|fast)\", \"b.* \", \"(fox|Fox)\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains All Text ($)ContainsAllText, with no value ($)ContainsAllText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains text that matches all of the regexes in [\"^The\", \"(quick|fast)\", \"b.* \", \"(fox|Fox)\"]. Therefore, the variable ($)ContainsAllText will be updated to the following:\ntrue Properties Text The Text to check whether it contains all of the texts in the given set of Texts To Find.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Texts To Find The set of Texts To Find to check are all contained in Text.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cstring\u003e() {} Search Options Search Options can be specified to choose whether items in Texts To Find should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Texts To Find it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to determine whether each text in Texts To Find is contained in Text\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Contains All Text The result of the contains all text check.\nIf all of the texts in Texts To Find are contained in Text, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsAllText with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). PropertyNullException Thrown when Texts To Find is null. RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and one or more items in Texts To Find are not a valid regex (e.g. (). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\"), the variable specified in the Contains All Text property is set to false.\nNull or empty Texts To Find If Texts To Find is empty or contains any null or empty (i.e. \"\") text, the variable specified in the Contains All Text property is set to false.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Checks if text contains all of the texts in a given set of texts.","excerpt":"Checks if text contains all of the texts in a given set of texts.","ref":"/docs/reference/blocks/text/contains-text/contains-all-text-block/","tags":"","title":"Contains All Text"},{"body":"\rContains Any Text (Cortex.Blocks.Text.ContainsText.ContainsAnyTextBlock)\nDescription Checks if Text contains any of the texts in a given set of Texts To Find.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to perform the check.\nExamples Text contains any of the texts in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains at least one of the texts in [\"The\", \"fast\", \"red\", \"fox\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"The\", \"fast\", \"red\", \"fox\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Any Text ($)ContainsAnyText, with no value ($)ContainsAnyText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains the text \"The\" and \"fox\" in [\"The\", \"fast\", \"red\", \"fox\"]. Therefore, the variable ($)ContainsAnyText will be updated to the following:\ntrue Text does not contain any of the texts in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains at least one of the texts in [\"the\", \"slow\", \"red\", \"Fox\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"the\", \"slow\", \"red\", \"Fox\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Any Text ($)ContainsAnyText, with no value ($)ContainsAnyText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" does not contain any of the texts in [\"the\", \"slow\", \"red\", \"Flow\"]; \"slow\" and \"red\" are both missing, and \"the\" and \"Fox\" do not match \"The\" and \"fox\" respectively as the specified Comparison Type uses case-sensitive matching. Therefore, the variable ($)ContainsAnyText will be updated to the following:\nfalse Text contains text that matches any of the patterns in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains text that matches any of the patterns in [\"?he\", \"Q?ick\", \"B*?wn\", \"Fox\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"?he\", \"Q?ick\", \"B*?wn\", \"Fox\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Any Text ($)ContainsAnyText, with no value ($)ContainsAnyText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains text that matches one of the patterns in [\"?he\", \"Q?ick\", \"B*?wn\", \"Fox\"]; \"?he\" matches \"The\" and \"the\". Therefore, the variable ($)ContainsAnyText will be updated to the following:\ntrue Text contains text that matches any of the regexes in Texts To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains text that matches any of the regexes in [\"^The\", \"(Quick|Fast)\", \"b.* \", \"(fox|Fox)$\"].\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Texts To Find ($)TextsToFind, with value [\"^The\", \"(Quick|Fast)\", \"b.* \", \"(fox|Fox)$\"] ($)TextsToFind is a variable of type IEnumerable\u003cString\u003e Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Any Text ($)ContainsAnyText, with no value ($)ContainsAnyText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains text that matches any of the regexes in [\"^The\", \"(Quick|Fast)\", \"b.* \", \"(fox|Fox)$\"]; \"^The\" matches \"The\" at the start of the sentence. Therefore, the variable ($)ContainsAnyText will be updated to the following:\ntrue Properties Text The Text to check whether it contains any of the texts in the given set of Texts To Find.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Texts To Find The set of Texts To Find to check any are contained in Text.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cstring\u003e() {} Search Options Search Options can be specified to choose whether items in Texts To Find should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Texts To Find it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to determine whether each text in Texts To Find is contained in Text\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Contains Any Text The result of the contains any text check.\nIf any of the texts in Texts To Find is contained in Text, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsAnyText with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). PropertyNullException Thrown when Texts To Find is null. RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and one or more items in Texts To Find are not a valid regex (e.g. (). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\"), the variable specified in the Contains Any Text property is set to false.\nNull or empty Texts To Find If Texts To Find is empty or only contains null or empty (i.e. \"\") text, the variable specified in the Contains Any Text property is set to false.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Checks if text contains any of the texts in a given set of texts.","excerpt":"Checks if text contains any of the texts in a given set of texts.","ref":"/docs/reference/blocks/text/contains-text/contains-any-text-block/","tags":"","title":"Contains Any Text"},{"body":"\rContains Item With Key (Cortex.Blocks.Dictionaries.ContainsItem.ContainsItemWithKeyBlock`3)\nDescription Checks if Dictionary contains at least one item with the specified Key.\nExamples Dictionary contains item with Key This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item with the key \"Key1\".\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains one item with the key Key1. Therefore, the variable ($)ContainsItem will be updated to the following:\ntrue Dictionary does not contain item with Key This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item with the key \"Key10\".\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key10\" ($)Key is a variable of type String Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} does not contain any items with the key \"Key10\". Therefore, the variable ($)ContainsItem will be updated to the following:\nfalse Properties Dictionary The Dictionary to check whether it contains at least one item with the specified Key.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key to check for matching items.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Contains Item The result of the contains item check.\nIf Dictionary contains at least one item with the specified Key, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsItem with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}), the variable specified in the Contains Item property is set to false.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Checks if a Dictionary contains at least one item with the specified key.","excerpt":"Checks if a Dictionary contains at least one item with the specified key.","ref":"/docs/reference/blocks/dictionaries/contains-item/contains-item-with-key-block-3/","tags":"","title":"Contains Item With Key"},{"body":"\rContains Item With Key And Value (Cortex.Blocks.Dictionaries.ContainsItem.ContainsItemWithKeyAndValueBlock`3)\nDescription Checks if Dictionary contains at least one item with the specified Key and matching the specified Value.\nExamples Dictionary contains item with Key and Value This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item with the key \"Key1\" and value 1.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Value ($)Value, with value 1 ($)Value is a variable of type Int32 Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains one item with the key Key1 and value 1. Therefore, the variable ($)ContainsItem will be updated to the following:\ntrue Dictionary does not contain item with Key and Value This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item with the key \"Key1\" and value 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Value ($)Value, with value 10 ($)Value is a variable of type Int32 Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains one item with the key \"Key1\", but its value is not 10. Therefore, the variable ($)ContainsItem will be updated to the following:\nfalse Properties Dictionary The Dictionary to check whether it contains at least one item with the specified Key and matching Value.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key to check for matching items.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Value The Value to check for matching items.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Contains Item The result of the contains item check.\nIf Dictionary contains at least one item with the specified Key and matching Value, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsItem with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nItem Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}), the variable specified in the Contains Item property is set to false.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Checks if a Dictionary contains at least one item with the specified key and matching the specified value.","excerpt":"Checks if a Dictionary contains at least one item with the specified key and matching the specified value.","ref":"/docs/reference/blocks/dictionaries/contains-item/contains-item-with-key-and-value-block-3/","tags":"","title":"Contains Item With Key And Value"},{"body":"\rContains Item With Value (Cortex.Blocks.Dictionaries.ContainsItem.ContainsItemWithValueBlock`3)\nDescription Checks if Dictionary contains at least one item matching Value.\nExamples Dictionary contains item with Value This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains the value 1.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains two items with the value 1. Therefore, the variable ($)ContainsItem will be updated to the following:\ntrue Dictionary does not contain item with Value This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains the value 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 10 ($)Value is a variable of type Int32 Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} does not contain any items with the value 10. Therefore, the variable ($)ContainsItem will be updated to the following:\nfalse Properties Dictionary The Dictionary to check whether it contains at least one item matching the specified Value.\nItems are considered matching if they have the specified Value.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Value The Value to check for matching items.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Contains Item The result of the contains item check.\nIf Dictionary contains at least one item matching the specified Value, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsItem with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}), the variable specified in the Contains Item property is set to false.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Checks if a Dictionary contains at least one item matching the specified value.","excerpt":"Checks if a Dictionary contains at least one item matching the specified value.","ref":"/docs/reference/blocks/dictionaries/contains-item/contains-item-with-value-block-3/","tags":"","title":"Contains Item With Value"},{"body":"\rContains Item With Value (Cortex.Blocks.Lists.ContainsItem.ContainsItemWithValueBlock`2)\nDescription Checks if List contains at least one item matching Value.\nExamples List contains item with Value This example will check whether [1, 2, 3, 3, 2, 1] contains the value 1.\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result [1, 2, 3, 3, 2, 1] contains two items with the value 1. Therefore, the variable ($)ContainsItem will be updated to the following:\ntrue List does not contain item with Value This example will check whether [1, 2, 3, 3, 2, 1] contains the value 10.\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 10 ($)Value is a variable of type Int32 Contains Item ($)ContainsItem, with no value ($)ContainsItem is a variable that will be set to a Boolean value Result [1, 2, 3, 3, 2, 1] does not contain any items with the value 10. Therefore, the variable ($)ContainsItem will be updated to the following:\nfalse Properties List The List to check whether it contains at least one item matching the specified Value.\nItems are considered matching if they have the specified Value.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value to check for matching items.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Contains Item The result of the contains item check.\nIf List contains at least one item matching the specified Value, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsItem with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []), the variable specified in the Contains Item property is set to false.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Checks if a List contains at least one item matching the specified value.","excerpt":"Checks if a List contains at least one item matching the specified value.","ref":"/docs/reference/blocks/lists/contains-item/contains-item-with-value-block-2/","tags":"","title":"Contains Item With Value"},{"body":"","categories":"","description":"Check if an item or multiple items are contained in a dictionary.","excerpt":"Check if an item or multiple items are contained in a dictionary.","ref":"/docs/reference/blocks/dictionaries/contains-item/","tags":"","title":"Contains Item(s)"},{"body":"","categories":"","description":"Check if an item or multiple items are contained in a list.","excerpt":"Check if an item or multiple items are contained in a list.","ref":"/docs/reference/blocks/lists/contains-item/","tags":"","title":"Contains Item(s)"},{"body":"\rContains Items With Keys (Cortex.Blocks.Dictionaries.ContainsItem.ContainsItemsWithKeysBlock`3)\nDescription Checks if Dictionary contains at least one item with each of the specified Keys.\nExamples Dictionary contains items with Keys This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item with each of the keys in [\"Key1\", \"Key2\", \"Key3\"].\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Keys ($)Keys, with value [\"Key1\", \"Key2\", \"Key3\"] ($)Keys is a variable of type IEnumerable\u003cString\u003e Contains Items ($)ContainsItems, with no value ($)ContainsItems is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item matching each of the values in [\"Key1\", \"Key2\", \"Key3\"]; it contains one item with the key \"Key1\", one item with the key \"Key2\" and one item with the key \"Key3\". Therefore, the variable ($)ContainsItems will be updated to the following:\ntrue Dictionary does not contain items with Keys This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item with each of the keys in [\"Key1\", \"Key2\", \"Key3\", \"Key10\"].\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Keys ($)Keys, with value [\"Key1\", \"Key2\", \"Key3\", \"Key10\"] ($)Keys is a variable of type IEnumerable\u003cString\u003e Contains Items ($)ContainsItems, with no value ($)ContainsItems is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} does not contain at least one item matching each of the values in [\"Key1\", \"Key2\", \"Key3\"]; it contains one item with the key \"Key1\", one item with the key \"Key2\" and one item with the key \"Key3\", but no items with the key \"Key10\". Therefore, the variable ($)ContainsItems will be updated to the following:\nfalse Properties Dictionary The Dictionary to check whether it contains at least one item with each of the specified Keys.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Keys The Keys to check for matching items.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type IEnumerable\u003cTKey\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Contains Items The result of the contains items check.\nIf Dictionary contains at least one item with each of the specified Keys, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsItems with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentNullException Thrown when any key in Keys is null PropertyNullException Thrown when Dictionary or Keys are null. Remarks Key Equality For information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}), the variable specified in the Contains Items property is set to false.\nEmpty Keys If Keys is empty (i.e. []), the variable specified in the Contains Items property is set to false.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Checks if a Dictionary contains at least one item with each of the specified keys.","excerpt":"Checks if a Dictionary contains at least one item with each of the specified keys.","ref":"/docs/reference/blocks/dictionaries/contains-item/contains-items-with-keys-block-3/","tags":"","title":"Contains Items With Keys"},{"body":"\rContains Items With Values (Cortex.Blocks.Dictionaries.ContainsItem.ContainsItemsWithValuesBlock`3)\nDescription Checks if Dictionary contains at least one item matching each of the specified Values.\nExamples Dictionary contains items with Values This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item matching each of the values in [1, 2, 3].\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Values ($)Values, with value [1, 2, 3] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Contains Items ($)ContainsItems, with no value ($)ContainsItems is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item matching each of the values in [1, 2, 3]; it contains two items with the value 1, two items with the value 2 and two items with the value 3. Therefore, the variable ($)ContainsItems will be updated to the following:\ntrue Dictionary does not contain items with Values This example will check whether {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} contains at least one item matching each of the values in [1, 2, 3, 10].\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Values ($)Values, with value [1, 2, 3, 10] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Contains Items ($)ContainsItems, with no value ($)ContainsItems is a variable that will be set to a Boolean value Result {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} does not contain at least one item matching each of the values in [1, 2, 3, 10]; it contains two items with the value 1, two items with the value 2 and two items with the value 3, but no items with the value 10. Therefore, the variable ($)ContainsItems will be updated to the following:\nfalse Properties Dictionary The Dictionary to check whether it contains at least one item matching each of the specified Values.\nItems are considered matching if they have a value matching one of the specified Values.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Values The Values to check for matching items.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Contains Items The result of the contains items check.\nIf Dictionary contains at least one item matching each of the specified Values, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsItems with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Dictionary or Values are null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}), the variable specified in the Contains Items property is set to false.\nEmpty Values If Values is empty (i.e. []), the variable specified in the Contains Items property is set to false.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Checks if a Dictionary contains at least one item matching each of the specified values.","excerpt":"Checks if a Dictionary contains at least one item matching each of the specified values.","ref":"/docs/reference/blocks/dictionaries/contains-item/contains-items-with-values-block-3/","tags":"","title":"Contains Items With Values"},{"body":"\rContains Items With Values (Cortex.Blocks.Lists.ContainsItem.ContainsItemsWithValuesBlock`2)\nDescription Checks if List contains at least one item matching each of the specified Values.\nExamples List contains items with Values This example will check whether [1, 2, 3, 3, 2, 1] contains at least one item matching each of the values in [1, 2, 3].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Values ($)Values, with value [1, 2, 3] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Contains Items ($)ContainsItems, with no value ($)ContainsItems is a variable that will be set to a Boolean value Result [1, 2, 3, 3, 2, 1] contains at least one item matching each of the values in [1, 2, 3]; it contains two items with the value 1, two items with the value 2 and two items with the value 3. Therefore, the variable ($)ContainsItems will be updated to the following:\ntrue List does not contain items with Values This example will check whether [1, 2, 3, 3, 2, 1] contains at least one item matching each of the values in [1, 2, 3, 10].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Values ($)Values, with value [1, 2, 3, 10] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Contains Items ($)ContainsItems, with no value ($)ContainsItems is a variable that will be set to a Boolean value Result [1, 2, 3, 3, 2, 1] does not contain at least one item matching each of the values in [1, 2, 3, 10]; it contains two items with the value 1, two items with the value 2 and two items with the value 3, but no items with the value 10. Therefore, the variable ($)ContainsItems will be updated to the following:\nfalse Properties List The List to check whether it contains at least one item matching each of the specified Values.\nItems are considered matching if they have a value matching one of the specified Values.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Values The Values to check for matching items.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Contains Items The result of the contains items check.\nIf List contains at least one item matching each of the specified Values, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsItems with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when List or Values are null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []), the variable specified in the Contains Items property is set to false.\nEmpty Values If Values is empty (i.e. []), the variable specified in the Contains Items property is set to false.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Checks if a List contains at least one item matching each of the specified values.","excerpt":"Checks if a List contains at least one item matching each of the specified values.","ref":"/docs/reference/blocks/lists/contains-item/contains-items-with-values-block-2/","tags":"","title":"Contains Items With Values"},{"body":"","categories":"","description":"Check if text is contained in another text.","excerpt":"Check if text is contained in another text.","ref":"/docs/reference/blocks/text/contains-text/","tags":"","title":"Contains Text"},{"body":"\rContains Text (Cortex.Blocks.Text.ContainsText.ContainsTextBlock)\nDescription Checks if Text contains Text To Find.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to perform the check.\nExamples Text contains Text To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains the text \"quick brown fox\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"quick brown fox\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Text ($)ContainsText, with no value ($)ContainsText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains the text \"quick brown fox\". Therefore, the variable ($)ContainsText will be updated to the following:\ntrue Text does not contain Text To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains the text \"quick red fox\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"quick red fox\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Text ($)ContainsText, with no value ($)ContainsText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" does not contain \"quick red fox\". Therefore, the variable ($)ContainsText will be updated to the following:\nfalse Text contains text that matches the pattern in Text To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains text that matches the pattern \"*?he\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"?he\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Text ($)ContainsText, with no value ($)ContainsText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains \"The\" and \"the\" that matches the pattern \"?he\". Therefore, the variable ($)ContainsText will be updated to the following:\ntrue Text contains text that matches the regex in Text To Find This example will check whether \"The quick brown fox jumps over the lazy dog\" contains text that matches the regex \"^The\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"^The\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Contains Text ($)ContainsText, with no value ($)ContainsText is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" contains \"The\" at the start of the sentence that matches the regex \"^The\". Therefore, the variable ($)ContainsText will be updated to the following:\ntrue Properties Text The Text to check whether it contains Text To Find.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Find The Text To Find in Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Search Options Search Options can be specified to choose whether Text To Find should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Text To Find it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to determine whether Text To Find is contained in Text\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Contains Text The result of the contains text check.\nIf Text To Find is contained in Text, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)ContainsText with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and Text To Find is not a valid regex (e.g. (). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\"), the variable specified in the Contains Text property is set to false.\nNull or empty Text To Find If Text To Find is null or empty (i.e. \"\"), the variable specified in the Contains Text property is set to false.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Checks if text contains another text.","excerpt":"Checks if text contains another text.","ref":"/docs/reference/blocks/text/contains-text/contains-text-block/","tags":"","title":"Contains Text"},{"body":"ContentOptions (Cortex.DataTypes.FilesAndFolders.ContentOptions)\nSummary Values Files Folders Remarks Create ContentOptions Convert ContentOptions to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to define whether the Get Folder Content block should get file or folder paths.","excerpt":"Used to define whether the Get Folder Content block should get file or folder paths.","ref":"/docs/reference/data-types/files-and-folders/contentoptions/","tags":"","title":"ContentOptions"},{"body":"","categories":"","description":"Convert a date time to and from text.","excerpt":"Convert a date time to and from text.","ref":"/docs/reference/blocks/date-and-time/convert-date-time/","tags":"","title":"Convert Date Time"},{"body":"\rConvert Date Time To Text (Cortex.Blocks.DateAndTime.ConvertDateTime.ConvertDateTimeToTextBlock)\nDescription Converts a Date Time to Text.\nAdditional options can be specified:\nFormat Template can be specified to define the format the Date Time should be converted to (e.g. \"dd/MM/yyyy\"). Format Provider can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting). Examples ISO 8601 Standard Format This example will convert a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset) to the ISO 8601 Standard format (i.e. \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\").\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Format Template ($)FormatTemplate, with value null ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value null ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Converting a Date Time representing midnight on 31st December 2021 (with a 0 UTC time offset and without specifying any format template or provider) will result in the variable ($)Text being updated to the following ISO 8601 Standard text representation:\n\"2021-12-31T00:00:00.0000000+00:00\" Default format for Invariant Culture This example will convert a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset) to the default format for Invariant Culture (i.e. \"MM/dd/yyyy HH:mm:ss zzz\").\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Format Template ($)FormatTemplate, with value null ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value CultureInfo.InvariantCulture ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Converting a Date Time representing midnight on 31st December 2021 (with a 0 UTC time offset and without a format template), but specifying Invariant Culture text representation, will result in the variable ($)Text being updated to the following:\n\"12/31/2021 00:00:00 +00:00\" Full Date Long Time format for Invariant Culture This example will convert a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset) to the Full Date Long Time format for Invariant Culture (i.e. \"dddd, dd MMMM yyyy HH:mm:ss\").\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Format Template ($)FormatTemplate, with value \"F\" ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value CultureInfo.InvariantCulture ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Converting a Date Time representing midnight on 31st December 2021 (with a 0 UTC time offset), and specifying the Full Date Long Time format for Invariant Culture, will result in the variable ($)Text being updated to the following:\n\"Friday, 31 December 2021 00:00:00\" Default format for American English (“en-US”) This example will convert a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset) to the default format for American English \"en-US\" (i.e. \"MM/d/yyyy h:m:s tt zzz\").\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Format Template ($)FormatTemplate, with value null ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value new CultureInfo(\"en-US\") ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Converting a Date Time representing midnight on 31st December 2021 (with a 0 UTC time offset and without a format template), but specifying an American English \"en-US\" text representation, will result in the variable ($)Text being updated to the following:\n\"12/31/2021 12:00:00 AM +00:00\" Full Date Long Time format for American English (“en-US”) This example will convert a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset) to the Full Date Long Time format for American English \"en-US\" (i.e. \"dddd, MMMM d, yyyy h:m:s tt\").\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Format Template ($)FormatTemplate, with value \"F\" ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value new CultureInfo(\"en-US\") ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Converting a Date Time representing midnight on 31st December 2021 (with a 0 UTC time offset), and specifying the Full Date Long Time format for American English \"en-US\", will result in the variable ($)Text being updated to the following:\n\"Friday, December 31, 2021 12:00:00 AM\" Properties Date Time The Date Time to convert to Text.\nBy default, if no Format Template or Format Provider are specified, the resultant Text will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Format Template Format Template can be specified to define the format the Date Time should be converted to (e.g. \"dd/MM/yyyy\" -\u003e \"31/12/2021\").\nIf Format Template contains valid format specifiers (e.g. \"dd\" for 2 digit day representation), they will be subsitituted based on the Date Time; characters that are not format specifiers will be passed through as literal text.\nIf Format Template is not specified, null or empty (i.e. \"\"), the default format template of the specified Format Provider is used. If Format Provider is also not specified or null the ISO 8601 Standard format will be used (i.e. \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\").\nFor information about format templates and specifiers, please see Date and Time Formatting.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value yyyy-MM-ddTHH:mm:ss.fffffffzzz Format Provider Format Provider can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting.).\nIf Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\nData Type IFormatProvider Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Text The Text representation of the Date Time.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Text with no value Exceptions The exceptions thrown by the block can be found below:\nName Description FormatException Thrown when Format Template is a single invalid format specifier (i.e. \"a\"). Remarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\nFormat Template and Specifiers Please note that changes to operating system date and time formats, could result in some of the examples above displaying different results.\nFor information about format templates and specifiers, please see Date and Time Formatting.\nNull or Empty Format Template If Format Template is not specified, null or empty (i.e. \"\"), the default format template of the specified Format Provider is used. If Format Provider is also not specified or null the ISO 8601 Standard format will be used (i.e. \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\").\nNull Format Provider If Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\n","categories":"","description":"Converts a Date Time to Text.","excerpt":"Converts a Date Time to Text.","ref":"/docs/reference/blocks/date-and-time/convert-date-time/convert-date-time-to-text-block/","tags":"","title":"Convert Date Time To Text"},{"body":"","categories":"","description":"Convert json to and from other data types.","excerpt":"Convert json to and from other data types.","ref":"/docs/reference/blocks/json/convert-json/","tags":"","title":"Convert Json"},{"body":"\rConvert Json To Object (Cortex.Blocks.Json.ConvertJson.ConvertJsonToObjectBlock)\nDescription Converts Json to an Object.\nAn additional Settings option can be specified to control how the conversion should deal with things such as:\nnull objects Date Time formats and offsets Number formats Text escaping Type information For information about the default Settings used if none are specified, as well as all other options that can be configured, please see JsonSerializerSettings.\nExamples Convert Json to a List (without Type information) This example will convert \"[[1, 2, 3], [4, 5, 6]]\" into a List\u003cObject\u003e.\nProperties Property Value Notes Json ($)Json, with value \"[[1, 2, 3], [4, 5, 6]]\" ($)Json is a variable of type String Settings ($)Settings, with value null ($)Settings is a variable of type JsonSerializerSettings Object ($)Object, with no value ($)Object is a variable that will be set to a dynamic value (i.e. in this example to a List\u003cObject\u003e). Result Converting \"[[1, 2, 3], [4, 5, 6]]\" to an object results in the variable ($)Object being updated to the following:\n[ [ 1, 2, 3 ], [ 4, 5, 6 ] ] As the Json does not include any type information, ($)Object will be a List\u003cObject\u003e, rather than a List\u003cList\u003cInt32\u003e\u003e. This is because when performing the conversion there is no type information to tell the converter that the items in the list are List\u003cInt32\u003e data types.\nSee Convert Json to a List (with Type information) for an example on how to include type information in the Json.\nConvert Json to a List (with Type information) This example will convert \"[[1, 2, 3], [4, 5, 6]]\" into a List\u003cList\u003cInt32\u003e\u003e, rather than a List\u003cObject\u003e as above.\nFor this to work, type information needs to be included in the Json representation. This can be seen below:\n{ \"$type\": \"System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [ { \"$type\": \"System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [1,2,3] }, { \"$type\": \"System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [4,5,6] } ] } Realistically, this example is only useful if you have already produced Json including type information by using the Convert Object To Json block. If this is the case, you can then convert it back with the correct data types.\nProperties Property Value Notes Json ($)Json, with complex value as shown above ($)Json is a variable of type String Settings ($)Settings, with value new JsonSerializerSettings{TypeNameHandling = TypeNameHandling.All} ($)Settings is a variable of type JsonSerializerSettings Object ($)Object, with no value ($)Object is a variable that will be set to a dynamic value (i.e. in this example to a List\u003cList\u003cInt32\u003e\u003e). Result Converting:\n{ \"$type\": \"System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [ { \"$type\": \"System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [1,2,3] }, { \"$type\": \"System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [4,5,6] } ] } to an object results in the variable ($)Object being updated to the following:\n[ [ 1, 2, 3 ], [ 4, 5, 6 ] ] As the Json does include type information, ($)Object will be a List\u003cList\u003cInt32\u003e\u003e, rather than a List\u003cObject\u003e.\nProperties Json The Json to convert into an Object.\nDuring the conversion it will be attempted to convert the Json to the correct data type where possible. If the correct data type cannot be determined, then collection data types will be converted to a List\u003cdynamic\u003e, and other objects will be converted to a Structure.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Json with no value Settings Optional Settings that can be specified to control how the conversion should deal with things such as:\nnull objects Date Time formats and offsets Number formats Text escaping For information about the default Settings used if none are specified, as well as all other options that can be configured, please see JsonSerializerSettings.\nData Type JsonSerializerSettings Property Type Input Is Advanced true Default Editor Expression Default Value new JsonSerializerSettings {} Object The Object that has been converted from Json.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)Object with no value Exceptions The exceptions thrown by the block can be found below:\nName Description JsonReaderException Thrown when an error occurs reading the Json. JsonSerializationException Thrown when an error occurs converting the Json to an Object. PropertyEmptyException Thrown when Json is empty (i.e. \"\"). PropertyNullException Thrown when Json is null. Remarks “{}” Json If Json is set to the text \"{}\", Object will be set to an empty Structure.\n“[]” Json If Json is set to the text \"[]\", Object will be set to an empty List\u003cdynamic\u003e.\n“null” Json If Json is set to the text \"null\", Object will be set to null.\nRound-tripping For most data types it should be possible to pass the Json created by a Convert Object To Json block to this block, and then pass the Object created by this block back to a Convert Object To Json block; this is called round-tripping.\nIt should be noted however, that not all data types will be able to be round-tripped.\nAn example of a data type that is not able to be round-tripped is HttpRequestHeaders. As it does not contain a public constructor it will not be able to be converted from its Json representation back into an HttpRequestHeaders; instead a JsonSerializationException will be thrown with a message like: \"Cannot create and populate list type System.Net.Http.Headers.HttpRequestHeaders\".\n","categories":"","description":"Converts Json to an Object.","excerpt":"Converts Json to an Object.","ref":"/docs/reference/blocks/json/convert-json/convert-json-to-object-block/","tags":"","title":"Convert Json To Object"},{"body":"","categories":"","description":"Convert an object to other data types.","excerpt":"Convert an object to other data types.","ref":"/docs/reference/blocks/objects/convert-object/","tags":"","title":"Convert Object"},{"body":"\rConvert Object To Json (Cortex.Blocks.Json.ConvertJson.ConvertObjectToJsonBlock)\nDescription Converts an Object to Json.\nAn additional Settings option can be specified to control how the conversion should deal with things such as:\nnull objects Date Time formats and offsets Number formats Text escaping Type information For information about the default Settings used if none are specified, as well as all other options that can be configured, please see JsonSerializerSettings.\nExamples Convert a List to Json (without Type information) This example will convert [[1, 2, 3], [4, 5, 6]] to its Json representation, without including type information.\nProperties Property Value Notes Object ($)Object, with value [[1, 2, 3], [4, 5, 6]] ($)Object is a variable of type List\u003cList\u003cInt32\u003e\u003e Settings ($)Settings, with value null ($)Settings is a variable of type JsonSerializerSettings Json ($)Json, with no value ($)Json is a variable that will be set to a String value. Result Converting [[1, 2, 3], [4, 5, 6]] to Json results in the variable ($)Json being updated to the following:\n\"[[1, 2, 3],[4, 5, 6]]\" As the resultant Json does not include any type information, if this Json was then used as input to the Convert Json To Object block, the resultant object would be a List\u003cObject\u003e, rather than a List\u003cList\u003cInt32\u003e\u003e.\nSee Convert a List To Json (with Type information) for an example on how to include type information in the Json.\nConvert a List to Json (with Type information) This example will convert [[1, 2, 3], [4, 5, 6]] to its Json representation, including type information.\nProperties Property Value Notes Object ($)Object, with value [[1, 2, 3], [4, 5, 6]] ($)Object is a variable of type List\u003cList\u003cInt32\u003e\u003e Settings ($)Settings, with value new JsonSerializerSettings{TypeNameHandling = TypeNameHandling.All} ($)Settings is a variable of type JsonSerializerSettings Json ($)Json, with no value ($)Json is a variable that will be set to a String value. Result Converting [[1, 2, 3], [4, 5, 6]] to its Json representation (including type information) results in the variable ($)Json being updated to the following:\n{ \"$type\": \"System.Collections.Generic.List`1[[System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [ { \"$type\": \"System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [1,2,3] }, { \"$type\": \"System.Collections.Generic.List`1[[System.Int32, System.Private.CoreLib]], System.Private.CoreLib\", \"$values\": [4,5,6] } ] } Properties Object The Object to convert to Json.\nObject can be any data type.\nData Type dynamic Property Type Input Is Advanced false Default Editor Variable Default Value ($)Object with no value Settings Optional Settings that can be specified to control how the conversion should deal with things such as:\nnull objects Date Time formats and offsets Number formats Text escaping For information about the default Settings used if none are specified, as well as all other options that can be configured, please see JsonSerializerSettings.\nData Type JsonSerializerSettings Property Type Input Is Advanced true Default Editor Expression Default Value new JsonSerializerSettings {Formatting = Formatting.Indented} Json The Json that has been converted from Object.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Json with no value Exceptions The exceptions thrown by the block can be found below:\nName Description JsonSerializationException Thrown when an error occurs converting the Object to Json. Remarks Object is empty Structure or Object If Object is set to an empty Structure or Object, Json is set to the text \"{}\".\nObject is empty List If Object is set to an empty List, Json is set to the text \"[]\".\nNull Object If Object is set to null, Json will be set to the text \"null\".\nRound-tripping For most data types it should be possible to pass the Json created by this block to the Convert Json To Object block, and then pass the Object created by the Convert Json To Object block back to this block; this is called round-tripping.\nIt should be noted however, that not all data types will be able to be round-tripped.\nAn example of a data type that is not able to be round-tripped is HttpRequestHeaders. As it does not contain a public constructor it will not be able to be converted from its Json representation back into an HttpRequestHeaders; instead a JsonSerializationException will be thrown with a message like: \"Cannot create and populate list type System.Net.Http.Headers.HttpRequestHeaders\".\n","categories":"","description":"Converts an Object To Json.","excerpt":"Converts an Object To Json.","ref":"/docs/reference/blocks/json/convert-json/convert-object-to-json-block/","tags":"","title":"Convert Object To Json"},{"body":"\rConvert Object To Text (Cortex.Blocks.Object.ConvertObject.ConvertObjectToTextBlock`1)\nDescription Converts the given Object to Text.\nIt does this by replacing all {Property} format parameters in the specified Format Template with the corresponding property value from the given Object.\nAn additional Format Provider option can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting).\nExamples Convert Structure to Text This example will convert:\n{ \"LastPaymentAmount\": 99.99, \"PercentagePaidOff\": 0.8000, \"PercentageRemaining\": 0.2000, \"TotalPaidOff\": 350.99, \"TotalRemaining\": 40 } to text, based on the following format template:\n\"Your latest payment of {LastPaymentAmount:C2} has been received. You have paid {PercentagePaidOff:P0} of your total and have {TotalRemaining:C2} outstanding.\" The format parameter {LastPaymentAmount:C2} will display the 99.99 as U.S currency to two decimal places (i.e. $99.99):\nLastPaymentAmount - is replaced by the value of the \"LastPaymentAmount\" property (i.e. 99.99). C - indicates to include the currency symbol for the specified culture (i.e. $). 2 - indicates to format the value to two decimal places. The format parameter {PercentagePaidOff:P0} will display the 0.8000 as a percentage to zero decimal places (i.e. 80 %):\nPercentagePaidOff - is replaced by the value of the \"PercentagePaidOff\" (i.e. 0.8000). P - indicates the value should be formatted as a percentage. 0 - indicates to format the percentage value to zero decimal places. The format parameter {TotalRemaining:C2} will display the 40 as U.S currency to two decimal places (i.e. $40.00):\nTotalRemaining - is replaced by the value of the \"TotalRemaining\" property (i.e. 40). C - indicates to include the currency symbol for the specified culture (i.e. $). 2 - indicates to format the value to two decimal places. For information about format templates and parameters, please see Text Formatting.\nProperties Property Value Notes Object ($)Object, with value {\"LastPaymentAmount\":99.99, \"PercentagePaidOff\":0.8000, \"PercentageRemaining\":0.2000, \"TotalPaidOff\":350.99, \"TotalRemaining\":40} ($)Object is a variable of type Structure Format Template ($)FormatTemplate, with value \"Your latest payment of {LastPaymentAmount:C2} has been received. You have paid {PercentagePaidOff:P0} of your total and have {TotalRemaining:C2} outstanding.\" ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value new CultureInfo(\"en-US\") ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Converting:\n{ \"LastPaymentAmount\": 99.99, \"PercentagePaidOff\": 0.8000, \"PercentageRemaining\": 0.2000, \"TotalPaidOff\": 350.99, \"TotalRemaining\": 40 } to text, based on the following format template:\n\"Your latest payment of {LastPaymentAmount:C2} has been received. You have paid {PercentagePaidOff:P0} of your total and have {TotalRemaining:C2} outstanding.\" results in the variable ($)Text being updated to the following:\n\"Your latest payment of $99.99 has been received. You have paid 80 % of your total and have $40.00 outstanding.\" Properties Object The Object to convert to Text.\nAll {Property} format parameters which match a property name in the Object will be replaced by that property’s value.\nThe values of matching properties do not have to be text, they can be any data type. Any non-text value will be converted to its text representation when it is replaced.\nFor information about how types are converted to their text representation please see Converting Objects To Text.\nData Type TObject Property Type Input Is Advanced false Default Editor Variable Default Value ($)Object with no value Format Template Format Template can be specified to define the format of the resultant Text.\nAll {Property} format parameters in Format Template will be replaced with the corresponding property value from the Object.\n{Property} format parameters are case-sensitive, so must exactly match the property name in the Object; those that do not will not be replaced.\nIf Format Template is specified but does not contain any {Property} format parameters, nothing is replaced; Text will be set to the value of Format Template.\nIf Format Template is not specified, null or empty (i.e. \"\"), Text will be set to the value of Convert.ToString(Object, Format Provider).\nFor information about format templates and parameters, please see Text Formatting.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Format Provider Format Provider can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting.).\nIf Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\nData Type IFormatProvider Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Text The formatted Text that results from replacing all {Property} format parameters in Format Template with their corresponding property value from the given Object.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Text with no value Exceptions The exceptions thrown by the block can be found below:\nName Description FormatException Thrown when Format Template contains a format parameter that is invalid or not well-formed (e.g. \"Cost is {TotalCost:Q2}, as \"Q\" is not a valid format parameter). PropertyNullException Thrown when Object is null. Remarks Text Formatting Please note that changes to operating system settings, could result in some of the examples above displaying different results.\nFor information about format templates and parameters, please see Text Formatting.\nNull or Empty Format Template If Format Template is specified but does not contain any {Property} format parameters, nothing is replaced; Text will be set to the value of Format Template.\nIf Format Template is not specified, null or empty (i.e. \"\"), Text will be set to the value of Convert.ToString(Object, Format Provider).\nNull Format Provider If Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\nNested Properties Format parameters support nested properties, which means given an object like the following:\n{ \"LastPaymentAmount\": 99.99, \"PaidOff\": { \"Percentage\": 0.8000, \"Total\": 350.99 }, \"Remaining\": { \"Remaining\": 0.2000, \"Total\": 40 } } that nested property values such as PaidOff.Total can be accessed. This is done by using the following format parameter syntax:\n\"{PaidOff.Total}\" Known Limitations Currently the block does not support indexing into properties (i.e. ListProperty[0] or DictionaryProperty[\"key\"]).\n","categories":"","description":"Converts an object to text by replacing all `{Property}` format parameters in a specified format template with the Object's corresponding property value.","excerpt":"Converts an object to text by replacing all `{Property}` format parameters in a specified format template with the Object's corresponding property value.","ref":"/docs/reference/blocks/objects/convert-object/convert-object-to-text-block-1/","tags":"","title":"Convert Object To Text"},{"body":"\rConvert Structure To Xml (Cortex.Blocks.Xml.ConvertXml.ConvertStructureToXmlBlock)\nDescription Converts a Structure to Xml.\nEach top-level Key will be converted using the following rules:\nKeys become Nodes Items become the values of the corresponding node. Each inner key will be converted using the following rules:\nInner keys become inner nodes within their parent node. Items of inner keys become the values of the corresponding inner nodes. For example:\n\"topLevelNode\": { \"innerNode\" : \"innerNodeValue\" } will be converted into:\n@\"\u003ctopLevelNode\u003e \u003cinnerNode\u003einnerNodeValue\u003c/innerNode\u003e \u003c/topLevelNode\u003e\" Examples Convert a Structure To Xml This example will convert the Structure below to its Xml representation.\n{ \"node1\" : \"1\", \"node2\" : \"2\", \"node3\" : \"3\" } Properties Property Value Notes Structure ($)Structure, with value {{ \"node1\" : \"1\"}, {\"node2\" : \"2\"}, {\"node3\" : \"3\"}} ($)Structure is a variable of type Structure Xml ($)Xml, with no value ($)Xml is a variable that will be set to a String value. Result Converting:\n{ \"node1\" : \"1\", \"node2\" : \"2\", \"node3\" : \"3\" } to Xml results in the variable ($)Xml being updated to the following:\n@\"\u003cCortex_DataTypes_Dictionaries_Structure\u003e \u003cnode1\u003e1\u003c/node1\u003e \u003cnode2\u003e2\u003c/node2\u003e \u003cnode3\u003e3\u003c/node3\u003e \u003c/Cortex_DataTypes_Dictionaries_Structure\u003e\" The \"Cortex_DataTypes_Dictionaries_Structure\" root node is added as there is no single top-level key. The \"node1\" Key is converted into a child node of \"Cortex_DataTypes_Dictionaries_Structure\" with its corresponding Item as the value. The \"node2\" Key is converted into a child node of \"Cortex_DataTypes_Dictionaries_Structure\" with its corresponding Item as the value. The \"node3\" Key is converted into a child node of \"Cortex_DataTypes_Dictionaries_Structure\" with its corresponding Item as the value. Convert a Complex Structure to Xml This example will convert the Structure below to its Xml representation. This scenario is unlikely unless Xml has been converted to a Structure and is being Round-Tripped.\n{ \"topLevelKey\": { \"@topLevelAttribute\" : \"exampleAttribute\", \"innerKey\" : { \"@innerNodeAttribute\" : \"exampleInnerNodeAttribute\", \"nestedKey\": \"nested key text\", \"#text\": \"inner key text\" }, \"id\": [ 1, 2, 3 ], } } Properties Property Value Notes Structure ($)Structure, with value\"{\"topLevelNode\": {\"@topLevelAttribute\" : \"exampleAttribute\", \"innerNode\" : { \"@innerNodeAttribute\" : \"exampleInnerNodeAttribute\", \"nestedNode\": \"nested node text\", \"#text\": \"inner node text\" }, \"id\": [ 1, 2, 3 ], } }\" ($)Structure is a variable of type Structure Xml ($)Xml, with no value ($)Xml is a variable that will be set to a String value. Result Converting:\n{ \"topLevelKey\": { \"@topLevelAttribute\" : \"exampleAttribute\", \"innerKey\" : { \"@innerNodeAttribute\" : \"exampleInnerNodeAttribute\", \"nestedKey\": \"nested key text\", \"#text\": \"inner key text\" }, \"id\": [ 1, 2, 3 ], } } to Xml results in the variable ($)Xml being updated to the following:\n@\"\u003ctopLevelKey topLevelAttribute=\"\"exampleAttribute\"\"\u003e \u003cinnerKey innerNodeAttribute=\"\"exampleInnerNodeAttribute\"\"\u003e \u003cnestedKey\u003enested key text\u003c/nestedKey\u003e inner key text \u003c/innerKey\u003e \u003cid\u003e1\u003c/id\u003e \u003cid\u003e2\u003c/id\u003e \u003cid\u003e3\u003c/id\u003e \u003c/topLevelKey\u003e\" The key \"topLevelKey\" is converted into the \"topLevelKey\" node. The key \"@topLevelAttribute\" is converted into the \"topLevelAttribute\" attribute with its corresponding item as the value. The key \"innerKey\" is converted into the \"innerKey\" node. The key \"@innerNodeAttribute\" is converted into the \"innerNodeAttribute\" attribute with its corresponding item as the value. The key \"nestedKey\" is converted into the \"nestedKey\" node with its corresponding item as the value. The key \"#text\" is converted into the value of the \"innerKey\" key with its corresponding item as the value. The key \"id\" is converted into three \"id\" nodes with each corresponding item as their values. Properties Structure The Structure to convert into Xml.\nData Type Structure Property Type Input Is Advanced false Default Editor Variable Default Value ($)Structure with no value Xml The Xml that has been converted from the Structure.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Xml with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Structure is null. PropertyEmptyException Thrown when Structure does not contain any items. XmlSerializationException Thrown when Structure has a key that is an empty string. Thrown when the Structure includes an xml declaration key (e.g. \"?xml\" can only accept the following attributes: \"@version\", \"@encoding\" and \"@standalone\".) or a document type definition key (e.g. \"!DOCTYPE\" can only accept the following attributes: \"@name\", \"@public\", \"@system\" and \"@internalSubset\"). Thrown when the Structure includes an xml declaration key (e.g. \"?xml\") with an attribute that has an invalid Primitive Value. (e.g. Key: \"@version\", Value: false, where \"@version\" must be a numeric value). Thrown when the Structure includes a document type definition key (e.g. \"!DOCTYPE\") that has an attribute with an invalid Primitive Value. (e.g. Key: \"@name\", Value: 22, where \"@name\" must be a text value). Thrown when the Structure includes an attribute key with a Complex Type as a value. (e.g. Key: \"@name\", Value: new UserCredentials{...}). Remarks Attributes If a Node requires an attribute, the attribute is defined by a Key where the key is the attribute name with an \"@\" before it and the Item is the attribute data, for example:\n{ \"node\": { \"@attribute\": \"Attribute Value\", \"innernode\": \"Inner Node Value\" } } The Xml example above would be converted to the following Structure\n@\"\u003cnode attribute=\"Attribute Value\"\u003e \u003cinnerNode\u003eInner Node Value\u003c/innerNode\u003e \u003c/node\u003e\" Primitive Values within Attribute Keys Attribute keys may only have Primitive Values as shown in the example below. An XmlSerializationException will be thrown if a Complex Value is used as an attribute key.\n{ \"node\": { \"@validAttribute\": \"Attribute Value\", \"@invalidAttribute\": new ComplexValue(\"Invalid\"), } } Key Restrictions An Xml declaration key (e.g. \"?xml\") can only accept the following attributes: \"@version\", \"@encoding\" and \"@standalone\".\nA document type definition key (e.g. \"!DOCTYPE\") can only accept the following attributes: \"@name\", \"@public\", \"@system\" and \"@internalSubset\".\n\"$id\", \"$ref\", \"$type\", \"$value\" and \"values\" are reserved words and should not be used as keys.\nText Nodes If a key contains a structure as its item, the inner keys are converted into Nodes with their corresponding items as the values. The key \"#text\" is converted into value of its parent node.\n{ \"node\": { \"innerNode\": { \"@attrubute\": \"attributeValue\", \"#text\": \"Inner Node Value\" }, \"#text\": \"Node Value\" } } The Structure example above would be converted to the following Xml.\n@\"\u003cnode\u003e \u003cinnerNode attribute=\"attributeValue\"\u003e Inner Node Value \u003c/innerNode\u003e Node Value \u003c/node\u003e\" Duplicate Nodes at the Same Level If there are multiple duplicate nodes at the same level, they are defined using a Key where the key is the duplicated node name and the Item is a list of each of the corresponding duplicate node’s values, for example:\n{ \"node\": { \"duplicateNode\": [\"First Duplicate Node\", \"Second Duplicate Node\"], \"distinctNode\": \"Distinct Node\" } } The Structure example above would be converted to the following Xml.\n@\"\u003cnode\u003e \u003cduplicateNode\u003e First Duplicate Node \u003c/duplicateNode\u003e \u003cduplicateNode\u003e Second Duplicate Node \u003c/duplicateNode\u003e \u003cdistinctNode\u003e Distinct Node \u003c/distinctNode\u003e \u003c/node\u003e\" Using Non-Alphanumeric Symbols within Node Names Any non-alphanumeric symbol (i.e. symbols that are not \"0\" to \"9\", \"a\" to \"z\", or \"A\" to \"Z\") will be converted to their respective Unicode values when used within a Key. For example, \"!\" and \"\u0026\" are both non-alphanumeric symbols and would be converted to \"x0021\" and \"x0026\" respectively.\nFor more information on characters and their Unicode values please see Character Sets\nRound-tripping It should be possible to pass the Xml created by this block to the Convert Xml To Structure block, and then pass the Structure created by the Convert Xml To Structure block back to this block, as long all values within the Xml are Strings; this is called round-tripping.\n\u003cCortex_DataTypes_Dictionaries_Structure\u003e Node \"\u003cCortex_DataTypes_Dictionaries_Structure\u003e\" is added as a root node when the Structure has more than one top-level key to ensure that valid Xml is produced.\n{ \"node1\" : \"1\", \"node2\" : \"2\", \"node3\" : \"3\" } The Xml example above would be converted to the following Structure.\n@\"\u003cCortex_DataTypes_Dictionaries_Structure\u003e \u003cnode1\u003e1\u003c/node1\u003e \u003cnode2\u003e2\u003c/node2\u003e \u003cnode3\u003e3\u003c/node3\u003e \u003c/Cortex_DataTypes_Dictionaries_Structure\u003e\" ","categories":"","description":"Converts a Structure To Xml.","excerpt":"Converts a Structure To Xml.","ref":"/docs/reference/blocks/xml/convert-xml/convert-structure-to-xml-block/","tags":"","title":"Convert Structure To Xml"},{"body":"\rConvert Text To Date Time (Cortex.Blocks.DateAndTime.ConvertDateTime.ConvertTextToDateTimeBlock)\nDescription Converts Text to a Date Time.\nAdditional options can be specified:\nFormat Template can be specified to explicity define the format of the Text (e.g. \"dd/MM/yyyy\"). Format Provider can be specified to define the cultural rules used to control the conversion (e.g. new CultureInfo(\"en-US\") will apply American English rules to the conversion). Examples ISO 8601 Standard Format ISO 8601 Standard format is \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\".\nThis example will convert \"2021-12-31T00:00:00.0000000+00:00\" to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset).\nProperties Property Value Notes Text ($)Text, with value \"2021-12-31T00:00:00+00:00\" ($)Text is a variable of type String Format Template ($)FormatTemplate, with value null ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value null ($)FormatProvider is a variable of type IFormatProvider Date Time ($)DateTime, with no value ($)DateTime is a variable that will be set to a DateTimeOffset value Result Converting \"2021-12-31T00:00:00.0000000+00:00\" to a Date Time (without specifying any format template or provider) will result in the variable ($)DateTime being updated to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset). Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T00:00:00.0000000+00:00\" Default format for Invariant Culture Default format for Invariant Culture is \"MM/dd/yyyy HH:mm:ss zzz\".\nThis example will convert \"12/31/2021 00:00:00 +00:00\" to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset).\nProperties Property Value Notes Text ($)Text, with value \"12/31/2021 00:00:00 +00:00\" ($)Text is a variable of type String Format Template ($)FormatTemplate, with value null ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value CultureInfo.InvariantCulture ($)FormatProvider is a variable of type IFormatProvider Date Time ($)DateTime, with no value ($)DateTime is a variable that will be set to a DateTimeOffset value Result Converting \"12/31/2021 00:00:00 +00:00\" to a Date Time without specifying a format template but specifying Invariant Culture, will result in the variable ($)DateTime being updated to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset). Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T00:00:00.0000000+00:00\" Full Date Long Time format for Invariant Culture Full Date Long Time format for Invariant Culture is \"dddd, dd MMMM yyyy HH:mm:ss\".\nThis example will convert \"Friday, 31 December 2021 00:00:00\" to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset).\nProperty Value Notes Text ($)Text, with value \"Friday, 31 December 2021 00:00:00\" ($)Text is a variable of type String Format Template ($)FormatTemplate, with value \"F\" ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value CultureInfo.InvariantCulture ($)FormatProvider is a variable of type IFormatProvider Date Time ($)DateTime, with no value ($)DateTime is a variable that will be set to a DateTimeOffset value Result Converting \"Friday, 31 December 2021 00:00:00\" to a Date Time specifying the Full Date Long Time format for Invariant Culture, will result in the variable ($)DateTime being updated to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset). Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T00:00:00.0000000+00:00\" Default format for American English (“en-US”) Default format for American English (“en-US”) is \"MM/d/yyyy h:m:s tt zzz\".\nThis example will convert \"12/31/2021 12:00:00 AM +00:00\" to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset).\nProperty Value Notes Text ($)Text, with value \"12/31/2021 12:00:00 AM +00:00\" ($)Text is a variable of type String Format Template ($)FormatTemplate, with value null ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value new CultureInfo(\"en-US\") ($)FormatProvider is a variable of type IFormatProvider Date Time ($)DateTime, with no value ($)DateTime is a variable that will be set to a DateTimeOffset value Result Converting \"12/31/2021 12:00:00 AM +00:00\" to a Date Time without specifying a format template but specifying American English \"en-US\", will result in the variable ($)DateTime being updated to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset). Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T00:00:00.0000000+00:00\" Full Date Long Time format for American English (“en-US”) Full Date Long Time format for American English (“en-US”) is \"dddd, MMMM d, yyyy h:m:s tt\".\nThis example will convert \"Friday, December 31, 2021 12:00:00 AM\" to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset).\nProperties Property Value Notes Text ($)Text, with value \"Friday, December 31, 2021 12:00:00 AM\" ($)Text is a variable of type String Format Template ($)FormatTemplate, with value \"F\" ($)FormatTemplate is a variable of type String Format Provider ($)FormatProvider, with value new CultureInfo(\"en-US\") ($)FormatProvider is a variable of type IFormatProvider Date Time ($)DateTime, with no value ($)DateTime is a variable that will be set to a DateTimeOffset value Result Converting \"Friday, December 31, 2021 12:00:00 AM\" to a Date Time specifying the Full Date Long Time format for American English \"en-US\", will result in the variable ($)DateTime being updated to a Date Time representing midnight on 31st December 2021 (with 0 UTC time offset). Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T00:00:00.0000000+00:00\" Properties Text The Text to convert to a Date Time.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Format Template Format Template can be specified to define the format the Text is in (e.g. \"dd/MM/yyyy\").\nIf Format Template does not contain any valid format specifiers (e.g. \"ww/ww/wwww\") and the text exactly matches the Format Template (e.g. \"ww/ww/wwww\"), then Date Time is set to a DateTimeOffset value that represents the current Date and Time.\nIf Format Template is not specified, null or empty (i.e. \"\"), the ISO 8601 Standard format will be used for the conversion (i.e. \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\").\nIf the ISO 8601 Standard format fails, then the default template of the specified Format Provider will be used; if there is no specified Format Provider, then Invariant Culture rules will be used instead.\nFor information about format templates and specifiers, please see Date and Time Formatting.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value yyyy-MM-ddTHH:mm:ss.fffffffzzz Format Provider Format Provider can be specified to define the cultural rules used to control the conversion (e.g. new CultureInfo(\"en-US\") will apply American English rules to the conversion).\nIf Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\nData Type IFormatProvider Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Date Time The Date Time that has been converted from Text.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Output Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Exceptions The exceptions thrown by the block can be found below:\nName Description FormatException Thrown when Format Template does not contain any valid specifiers (e.g. \"ww/ww/wwww\"). Thrown when Format Template contains non-specifier characters, and Text does not match the characters exactly (e.g. \"01/10/2021 12:00\" and \"dd/ww/yyyy hh:mm\" will throw, but \"01/ww/2021 12:00\" and \"dd/ww/yyyy hh:mm\" does not). Thrown when Format Template is null or empty (i.e. \"\") and the Text does not match the ISO 8601 Standard format, the default format of the Format Provider (e.g. \"31/12/2021 00:00\" and \"dd/MM/yyyy\"). PropertyEmptyException Thrown when Text is empty (i.e. \"\"). PropertyNullException Thrown when Text is null. Remarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\nFormat Template and Specifiers Please note that changes to operating system date and time formats, could result in some of the examples above displaying different results.\nFor information about format templates and specifiers, please see Date and Time Formatting.\nNull or Empty Format Template If Format Template is not specified, null or empty (i.e. \"\"), the ISO 8601 Standard format will be used for the conversion (i.e. \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\").\nIf the ISO 8601 Standard format fails, then the default template of the specified Format Provider will be used; if there is no specified Format Provider, then Invariant Culture rules will be used instead.\nNull Format Provider If Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\n","categories":"","description":"Converts Text to a Date Time.","excerpt":"Converts Text to a Date Time.","ref":"/docs/reference/blocks/date-and-time/convert-date-time/convert-text-to-date-time-block/","tags":"","title":"Convert Text To Date Time"},{"body":"","categories":"","description":"Convert text to a different format (e.g. `\"lowercase\"`, `\"UPPERCASE\"`, `\"Title Case\"`, `\"camelCase\"`, `\"PascalCase\"`).","excerpt":"Convert text to a different format (e.g. `\"lowercase\"`, `\"UPPERCASE\"`, `\"Title Case\"`, `\"camelCase\"`, `\"PascalCase\"`).","ref":"/docs/reference/blocks/text/convert-to/","tags":"","title":"Convert To"},{"body":"\rConvert To Camel Case (Cortex.Blocks.Text.ConvertTo.ConvertToCamelCaseBlock)\nDescription Converts Text to camel case.\nConverting to camel case will result in all words (except the first) having their first letter capitalized, all other letters lower cased, and all spaces and punctuation being removed (e.g. \"TEXT to convert to camel-case!\" will be converted to \"textToConvertToCamelCase\").\nExamples Text converted to camel case This example will convert \"The quick brown fox jumps over the lazy dog\" to camel case.\nIt performs a culture-insensitive conversion of the text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Culture Info ($)CultureInfo, with value CultureInfo.InvariantCulture ($)CultureInfo is a variable of type CultureInfo Result Converting \"The quick brown fox jumps over the lazy dog\" to camel case will result in the variable ($)Text being updated to the following:\n\"theQuickBrownFoxJumpsOverTheLazyDog\" Properties Text The Text to convert to camel case.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Culture Info The Culture Info used to perform the conversion of the Text.\nFor information about the supported values for the Culture Info property and examples of how it affects casing rules, please see Casing.\nData Type CultureInfo Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when the culture identifier of the Culture Info is invalid (e.g. new CultureInfo(\"InvalidCultureIdentifier\")). See Value Is Invalid. Remarks Culture Info For information about the supported values for the CultureInfo property and examples of how it affects casing rules, please see Casing.\nNull Culture Info If Culture Info is null, it will be set to CultureInfo.InvariantCulture.\nNull or empty Text If Text is null or empty (i.e. \"\"), no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text converted to camel case and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Converts text to camel case (e.g. `\"camelCase\"`).","excerpt":"Converts text to camel case (e.g. `\"camelCase\"`).","ref":"/docs/reference/blocks/text/convert-to/convert-to-camel-case-block/","tags":"","title":"Convert To Camel Case"},{"body":"\rConvert To Lower Case (Cortex.Blocks.Text.ConvertTo.ConvertToLowerCaseBlock)\nDescription Converts Text to lower case.\nConverting to lower case will result in all letters being lower cased; spaces and punctuation will be preserved (e.g. \"TEXT to convert to lower-case!\" will be converted to \"text to convert to lower-case!\").\nExamples Text converted to lower case This example will convert \"The quick brown fox jumps over the lazy dog\" to lower case.\nIt performs a culture-insensitive conversion of the text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Culture Info ($)CultureInfo, with value CultureInfo.InvariantCulture ($)CultureInfo is a variable of type CultureInfo Result Converting \"The quick brown fox jumps over the lazy dog\" to lower case will result in the variable ($)Text being updated to the following:\n\"the quick brown fox jumps over the lazy dog\" Properties Text The Text to convert to lower case.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Culture Info The Culture Info used to perform the conversion of the Text.\nFor information about the supported values for the Culture Info property and examples of how it affects casing rules, please see Casing.\nData Type CultureInfo Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when the culture identifier of the Culture Info is invalid (e.g. new CultureInfo(\"InvalidCultureIdentifier\")). See Value Is Invalid. Remarks Culture Info For information about the supported values for the CultureInfo property and examples of how it affects casing rules, please see Casing.\nNull Culture Info If Culture Info is null, it will be set to CultureInfo.InvariantCulture.\nNull or empty Text If Text is null or empty (i.e. \"\"), no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text converted to lower case and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Converts text to lower case (e.g. `\"lowercase\"`).","excerpt":"Converts text to lower case (e.g. `\"lowercase\"`).","ref":"/docs/reference/blocks/text/convert-to/convert-to-lower-case-block/","tags":"","title":"Convert To Lower Case"},{"body":"\rConvert To Pascal Case (Cortex.Blocks.Text.ConvertTo.ConvertToPascalCaseBlock)\nDescription Converts Text to pascal case.\nConverting to pascal case will result in all words having their first letter capitalized, all other letters lower cased, and all spaces and punctuation being removed (e.g. \"TEXT to convert to pascal-case!\" will be converted to \"TextToConvertToPascalCase\").\nExamples Text converted to pascal case This example will convert \"The quick brown fox jumps over the lazy dog\" to pascal case.\nIt performs a culture-insensitive conversion of the text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Culture Info ($)CultureInfo, with value CultureInfo.InvariantCulture ($)CultureInfo is a variable of type CultureInfo Result Converting \"The quick brown fox jumps over the lazy dog\" to pascal case will result in the variable ($)Text being updated to the following:\n\"TheQuickBrownFoxJumpsOverTheLazyDog\" Properties Text The Text to convert to pascal case.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Culture Info The Culture Info used to perform the conversion of the Text.\nFor information about the supported values for the Culture Info property and examples of how it affects casing rules, please see Casing.\nData Type CultureInfo Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when the culture identifier of the Culture Info is invalid (e.g. new CultureInfo(\"InvalidCultureIdentifier\")). See Value Is Invalid. Remarks Culture Info For information about the supported values for the CultureInfo property and examples of how it affects casing rules, please see Casing.\nNull Culture Info If Culture Info is null, it will be set to CultureInfo.InvariantCulture.\nNull or empty Text If Text is null or empty (i.e. \"\"), no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text converted to pascal case and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Converts text to pascal case (e.g. `\"PascalCase\"`).","excerpt":"Converts text to pascal case (e.g. `\"PascalCase\"`).","ref":"/docs/reference/blocks/text/convert-to/convert-to-pascal-case-block/","tags":"","title":"Convert To Pascal Case"},{"body":"\rConvert To Title Case (Cortex.Blocks.Text.ConvertTo.ConvertToTitleCaseBlock)\nDescription Converts Text to title case.\nConverting to title case will result in all words having their first letter capitalized and all other letters lower cased; except for words that are entirely upper cased, such as acronyms, which remain upper cased; spaces and punctuation will be preserved (e.g. \"TEXT to convert to title-case!\" will be converted to \"TEXT To Convert To Title-Case!\").\nExamples Text converted to title case This example will convert \"The quick brown fox jumps over the lazy dog\" to title case.\nIt performs a culture-insensitive conversion of the text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Culture Info ($)CultureInfo, with value CultureInfo.InvariantCulture ($)CultureInfo is a variable of type CultureInfo Result Converting \"The quick brown fox jumps over the lazy dog\" to title case will result in the variable ($)Text being updated to the following:\n\"The Quick Brown Fox Jumps Over The Lazy Dog\" Properties Text The Text to convert to title case.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Culture Info The Culture Info used to perform the conversion of the Text.\nFor information about the supported values for the Culture Info property and examples of how it affects casing rules, please see Casing.\nData Type CultureInfo Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when the culture identifier of the Culture Info is invalid (e.g. new CultureInfo(\"InvalidCultureIdentifier\")). See Value Is Invalid. Remarks Culture Info For information about the supported values for the CultureInfo property and examples of how it affects casing rules, please see Casing.\nNull Culture Info If Culture Info is null, it will be set to CultureInfo.InvariantCulture.\nNull or empty Text If Text is null or empty (i.e. \"\"), no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text converted to title case and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Converts text to title case (e.g. `\"Title Case\"`).","excerpt":"Converts text to title case (e.g. `\"Title Case\"`).","ref":"/docs/reference/blocks/text/convert-to/convert-to-title-case-block/","tags":"","title":"Convert To Title Case"},{"body":"\rConvert To Upper Case (Cortex.Blocks.Text.ConvertTo.ConvertToUpperCaseBlock)\nDescription Converts Text to upper case.\nConverting to upper case will result in all letters being upper cased; spaces and punctuation will be preserved (e.g. \"TEXT to convert to upper-case!\" will be converted to \"TEXT TO CONVERT TO UPPER-CASE!\").\nExamples Text converted to upper case This example will convert \"The quick brown fox jumps over the lazy dog\" to upper case.\nIt performs a culture-insensitive conversion of the text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Culture Info ($)CultureInfo, with value CultureInfo.InvariantCulture ($)CultureInfo is a variable of type CultureInfo Result Converting \"The quick brown fox jumps over the lazy dog\" to upper case will result in the variable ($)Text being updated to the following:\n\"THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\" Properties Text The Text to convert to upper case.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Culture Info The Culture Info used to perform the conversion of the Text.\nFor information about the supported values for the Culture Info property and examples of how it affects casing rules, please see Casing.\nData Type CultureInfo Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when the culture identifier of the Culture Info is invalid (e.g. new CultureInfo(\"InvalidCultureIdentifier\")). See Value Is Invalid. Remarks Culture Info For information about the supported values for the CultureInfo property and examples of how it affects casing rules, please see Casing.\nNull Culture Info If Culture Info is null, it will be set to CultureInfo.InvariantCulture.\nNull or empty Text If Text is null or empty (i.e. \"\"), no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Text converted to upper case and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Converts text to upper case (e.g. `\"UPPERCASE\"`).","excerpt":"Converts text to upper case (e.g. `\"UPPERCASE\"`).","ref":"/docs/reference/blocks/text/convert-to/convert-to-upper-case-block/","tags":"","title":"Convert To Upper Case"},{"body":"","categories":"","description":"Convert xml to and from other data types.","excerpt":"Convert xml to and from other data types.","ref":"/docs/reference/blocks/xml/convert-xml/","tags":"","title":"Convert Xml"},{"body":"\rConvert Xml To Structure (Cortex.Blocks.Xml.ConvertXml.ConvertXmlToStructureBlock)\nDescription Converts Xml to a Structure.\nEach top-level Node will be converted using the following rules:\nNode names become Keys Node values become Items Each inner Node will be converted using the following rules:\nInner node names become Keys within the top-level node’s Item Inner node values become the corresponding Item for their Key For example:\n@\"\u003ctopLevelNode\u003e \u003cinnerNode\u003einnerNodeValue\u003c/innerNode\u003e \u003c/topLevelNode\u003e\" will be converted into:\n\"topLevelNode\": { \"innerNode\" : \"innerNodeValue\" } Examples Convert Xml to a Structure This example will convert the Xml below to its Structure representation.\n@\"\u003ctopLevelNode topLevelAttribute=\"\"exampleAttribute\"\"\u003e \u003cinnerNode innerNodeAttribute=\"\"exampleInnerNodeAttribute\"\"\u003e \u003cnestedNode\u003enested node text\u003c/nestedNode\u003e inner node text \u003c/innerNode\u003e \u003cid\u003e1\u003c/id\u003e \u003cid\u003e2\u003c/id\u003e \u003cid\u003e3\u003c/id\u003e \u003c/topLevelNode\u003e\" Properties Property Value Notes Xml ($)Xml, with value \"\u003ctopLevelNode topLevelAttribute=\"\"exampleAttribute\"\"\u003e\u003cinnerNode innerNodeAttribute=\"\"exampleInnerNodeAttribute\"\"\u003e\u003cnestedNode\u003enested node text\u003c/nestedNode\u003einner node text\u003c/innerNode\u003e\u003cid\u003e1\u003c/id\u003e\u003cid\u003e2\u003c/id\u003e\u003cid\u003e3\u003c/id\u003e\u003c/topLevelNode\u003e\" ($)Xml is a variable of type String Structure ($)Structure, with no value ($)Structure is a variable that will be set to a Structure value Result Converting:\n@\"\u003ctopLevelNode topLevelAttribute=\"\"exampleAttribute\"\"\u003e \u003cinnerNode innerNodeAttribute=\"\"exampleInnerNodeAttribute\"\"\u003e \u003cnestedNode\u003enested node text\u003c/nestedNode\u003e inner node text \u003c/innerNode\u003e \u003cid\u003e1\u003c/id\u003e \u003cid\u003e2\u003c/id\u003e \u003cid\u003e3\u003c/id\u003e \u003c/topLevelNode\u003e\" to a Structure results in the variable ($)Structure being updated to the following:\n{ \"topLevelNode\": { \"@topLevelAttribute\" : \"exampleAttribute\", \"innerNode\" : { \"@innerNodeAttribute\" : \"exampleInnerNodeAttribute\", \"nestedNode\": \"nested node text\", \"#text\": \"inner node text\" }, \"id\": [ 1, 2, 3 ], } } The node \"topLevelNode\" is converted into the \"topLevelNode\" key. The attribute \"topLevelAttribute\" is converted into the \"@topLevelAttribute\" key with its corresponding value as the item. The node \"innerNode\" is converted into the \"innerNode\" key. The attribute \"innerNodeAttribute\" is converted into the \"@innerNodeAttribute\" key with its corresponding value as the item. The node \"nestedNode\" is converted into the \"nestedNode\" key with its corresponding value as the item. The value of \"innerNode\" is converted into the \"#text\" key with its corresponding value as the item. The three \"id\" nodes are converted into a single \"id\" key with each corresponding value being an entry of the item list. Convert Round-tripped Xml to a Structure This example will convert the Xml below to its Structure representation. This example will only occur when a Structure is Converted to Xml using the Convert Structure To Xml block and is then converted again using this block. This is called Round-Tripping.\nProperties Property Value Notes Xml ($)Xml, with value \"\u003cCortex_DataTypes_Dictionaries_Structure\u003e\u003cnode1\u003e1\u003c/node1\u003e\u003cnode2\u003e2\u003c/node2\u003e\u003cnode3\u003e3\u003c/node3\u003e\u003c/Cortex_DataTypes_Dictionaries_Structure\u003e\" ($)Xml is a variable of type String Structure ($)Structure, with no value ($)Structure is a variable that will be set to a Structure value Result Converting:\n@\"\u003cCortex_DataTypes_Dictionaries_Structure\u003e \u003cnode1\u003e1\u003c/node1\u003e \u003cnode2\u003e2\u003c/node2\u003e \u003cnode3\u003e3\u003c/node3\u003e \u003c/Cortex_DataTypes_Dictionaries_Structure\u003e\" to a Structure results in the variable ($)Structure being updated to the following:\n{ \"node1\" : \"1\", \"node2\" : \"2\", \"node3\" : \"3\" } The \"Cortex_DataTypes_Dictionaries_Structure\" root node is removed and the child nodes are all at the root level. The \"node1\" Node is converted into a Key of \"node1\" with its corresponding value as the Item. The \"node2\" Node is converted into a Key of \"node2\" with its corresponding value as the Item. The \"node3\" Node is converted into a Key of \"node3\" with its corresponding value as the Item. Properties Xml The Xml to convert into a Structure.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Xml with no value Structure The Structure that has been converted from the Xml.\nData Type Structure Property Type Output Is Advanced false Default Editor Variable Default Value ($)Structure with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Xml is null. PropertyEmptyException Thrown when Xml is empty (i.e. \"\"). XmlSerializationException Thrown when the Xml is not valid (i.e the Xml contains an ampersand symbol or is missing a root node). Remarks Attributes If a Node has an attribute, the attribute is converted to a Key where the key is the attribute name with an \"@\" before it and the value is the attribute data, for example:\n@\"\u003cnode attribute=\"Attribute Value\"\u003e \u003cinnerNode\u003eInner Node Value\u003c/innerNode\u003e \u003c/node\u003e\" The Xml example above would be converted to the following Structure\n{ \"node\": { \"@attribute\": \"Attribute Value\", \"innernode\": \"Inner Node Value\" } } Text Nodes If a node contains a value and inner nodes or attributes, the inner nodes and attributes are converted into Keys with their corresponding values as the Items. The value of the node is converted into the \"#text\" key with its value as the item.\n@\"\u003cnode\u003e \u003cinnerNode attribute=\"attributeValue\"\u003e Inner Node Value \u003c/innerNode\u003e Node Value \u003c/node\u003e\" The Xml example above would be converted to the following Structure.\n{ \"node\": { \"innerNode\": { \"@attrubute\": \"attributeValue\", \"#text\": \"Inner Node Value\" }, \"#text\": \"Node Value\" } } Duplicate Nodes at the Same Level If a node contains duplicate nodes at the same level, they are converted into a Key where the key is the duplicated node name and the Item is a list of each of the corresponding duplicate node’s values, for example:\n@\"\u003cnode\u003e \u003cduplicateNode\u003e First Duplicate Node \u003c/duplicateNode\u003e \u003cduplicateNode\u003e Second Duplicate Node \u003c/duplicateNode\u003e \u003cdistinctNode\u003e Distinct Node \u003c/distinctNode\u003e \u003c/node\u003e\" The Xml example above would be converted to the following Structure.\n{ \"node\": { \"duplicateNode\": [\"First Duplicate Node\", \"Second Duplicate Node\"], \"distinctNode\": \"Distinct Node\" } } Using Non-Alphanumeric Symbols within Node Names Any non-alphanumeric symbol (i.e. symbols that are not \"0\" to \"9\", \"a\" to \"z\", or \"A\" to \"Z\") will be converted to their respective Unicode values when used within a node name. For example, \"!\" and \"\u0026\" are both non-alphanumeric symbols and would be converted to \"x0021\" and \"x0026\" respectively.\nFor more information on characters and their Unicode values please see Character Sets\nRound-tripping It should be possible to pass the Structure created by this block to the Convert Structure To Xml block, and then pass the Xml created by the Convert Structure To Xml block back to this block, as long all values within the Xml are Strings; this is called round-tripping.\n\u003cCortex_DataTypes_Dictionaries_Structure\u003e Node The Convert Structure To Xml adds \"\u003cCortex_DataTypes_Dictionaries_Structure\u003e\" as a root node when the structure has more than one top-level key to ensure that valid Xml is produced.\nWhen the \"\u003cCortex_DataTypes_Dictionaries_Structure\u003e\" root node is converted from Xml to a Structure the root node is removed and any inner nodes become the top-level keys.\n@\"\u003cCortex_DataTypes_Dictionaries_Structure\u003e \u003cnode1\u003e1\u003c/node1\u003e \u003cnode2\u003e2\u003c/node2\u003e \u003cnode3\u003e3\u003c/node3\u003e \u003c/Cortex_DataTypes_Dictionaries_Structure\u003e\" The Xml example above would be converted to the following Structure.\n{ \"node1\" : \"1\", \"node2\" : \"2\", \"node3\" : \"3\" } This example will only occur when a Structure is Converted to Xml and is then converted again using this block. This is called Round-Tripping.\n","categories":"","description":"Converts Xml to a Structure.","excerpt":"Converts Xml to a Structure.","ref":"/docs/reference/blocks/xml/convert-xml/convert-xml-to-structure-block/","tags":"","title":"Convert Xml To Structure"},{"body":"Converting Objects To Text Summary TODO\nUsing Blocks TODO:\nExplain that blocks can be used - maybe with examples or link to examples within the block documentation Format Text With Value Format Text With Values Join Text Convert Date Time To Text Convert Object To Text - need to make it clear how this works - does tostring and if tostring returns class name does json serialisation Convert Object To Json - need to make it clear how this works - does json serialisation Using Expressions ToString() TODO:\n.ToString() - talk about that some objects will just return their name, text formatting format providers etc. Convert.ToString() Examples and where to find in Data Types documentation String interpolation See Interpolated Strings.\nString.Format() TODO: String.Format\nRemarks Known Limitations Support for {{}} is Missing Using {{VariableName}} expression syntax to convert a variable to its String representation is currently not supported.\nIt is possible to convert a variable to its string representation within an expression by using the ToString() method (e.g. ($)VariableName.ToString())\nIn future this limitation may be removed.\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO:\nFormat Text With Value Format Text With Values Join Text Convert Date Time To Text Convert Object To Text - need to make it clear how this works - does tostring and if tostring returns class name does json serialisation Convert Object To Json - need to make it clear how this works - does json serialisation External Documentation TODO\n","categories":"","description":"Information regarding converting objects to their text representation.","excerpt":"Information regarding converting objects to their text representation.","ref":"/docs/reference/concepts/working-with/text/converting-objects-to-text/","tags":"","title":"Converting Objects To Text"},{"body":"\rCopy File (Cortex.Blocks.FilesAndFolders.CopyFile.CopyFileBlock)\nDescription Copies a file at the specified File Path to the given Destination Path, with an option to Overwrite the file if it already exists.\nExamples Copy a file to a folder keeping the same file name This example will copy \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\", with the same file name of \"OriginalFile.txt\".\nIn this example assume \"C:\\Destination\" does not already contain a file named \"OriginalFile.txt\", so overwrite can be set to either true or false and it will still work.\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\OriginalFile.txt\" ($)FilePath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Result Copying \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\" that does not already contain a file named \"OriginalFile.txt\" will:\nCreate a new file at \"C:\\Destination\\OriginalFile.txt\" with: The content copied from \"C:\\Source\\OriginalFile.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\OriginalFile.txt\". The File Attributes copied from \"C:\\Source\\OriginalFile.txt\". Copy a file to a folder with a new name This example will copy \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\", with a new file name of \"NewFile.txt\".\nTo rename the file when it is being copied, please note that the Destination Path must be a file path, rather than a folder path (e.g. \"C:\\Destination\\NewFile.txt\" rather than \"C:\\Destination\").\nIn this example assume \"C:\\Destination\" does not already contain a file named \"NewFile.txt\", so overwrite can be set to either true or false and it will still work.\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\OriginalFile.txt\" ($)FilePath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\\NewFile.txt\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Result Copying \"C:\\Source\\OriginalFile.txt\" to the path \"C:\\Destination\\NewFile.txt\" that does not already exist will:\nCreate a new file at \"C:\\Destination\\NewFile.txt\" with: The content copied from \"C:\\Source\\OriginalFile.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\OriginalFile.txt\". The File Attributes copied from \"C:\\Source\\OriginalFile.txt\". Copy a file to a folder overwriting any file that already exists with the same name This example will copy \"C:\\Source\\FileAlreadyExists.txt\" to \"C:\\Destination\", with the same file name of \"FileAlreadyExists.txt\".\nIn this example assume \"C:\\Destination\" already contains a file named \"FileAlreadyExists.txt\", so overwrite must be set to true to ensure the content of the existing file can be overwritten.\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\FileAlreadyExists.txt\" ($)FilePath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Result Copying \"C:\\Source\\FileAlreadyExists.txt\" to \"C:\\Destination\" and overwriting the existing file named \"FileAlreadyExists.txt\" will:\nOverwrite the existing file at \"C:\\Destination\\FileAlreadyExists.txt\" with: The content copied from \"C:\\Source\\FileAlreadyExists.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\FileAlreadyExists.txt\". The File Attributes copied from \"C:\\Source\\FileAlreadyExists.txt\". Properties File Path The File Path to copy the file from.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Destination Path The Destination Path to copy the file to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path can either point to a folder or a file:\nIf it points to a folder, the copied file will have the name specified in the File Path. If it points to a file, the copied file will have the name specified in the Destination Path. Any non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the file in the Destination Path if it already exists.\nIf the file exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The Destination Path (if it points to a file), or the Destination Path (if it points to a folder) plus the file name, exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException The File Path does not exist. The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path or Destination Path is invalid (for example, it is on an unmapped drive). The file in the specified Destination Path exists and overwrite is false. The file in the specified Destination Path exists, is read-only and overwrite is true. The file in the specified Destination Path exists, is hidden and overwrite is true, but the file in the specified File Path is not hidden. The user the flow is executing as does not have the required permissions to copy the file (e.g. not having read access to the File Path or write access to the Destination Path). An unexpected error occurs when copying the file. PropertyEmptyException Thrown when File Path or Destination Path are empty (i.e. \"\"). PropertyNullException Thrown when File Path or Destination Path are null. Remarks File and Folder Paths For information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path and Destination Path need escaping File Path and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\OriginalFile.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\OriginalFile.txt\") and Destination Path (e.g. @\"C:\\Destination\"). File Attributes When copying a file from the File Path to the new Destination Path, all of the file’s attributes will also be copied.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\n","categories":"","description":"Copies a file at the specified file path to the given destination path.","excerpt":"Copies a file at the specified file path to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/copy-file/copy-file-block/","tags":"","title":"Copy File"},{"body":"","categories":"","description":"Copy a file or multiple files.","excerpt":"Copy a file or multiple files.","ref":"/docs/reference/blocks/files-and-folders/copy-file/","tags":"","title":"Copy File(s)"},{"body":"\rCopy Files (Cortex.Blocks.FilesAndFolders.CopyFile.CopyFilesBlock)\nDescription Copies files at the specified File Paths to the given Destination Path, with an option to Overwrite the files if they already exist.\nExamples Copy files to a folder keeping the same file names This example will copy [\"C:\\Source\\OriginalFile1.txt\", \"C:\\Source\\OriginalFile2.txt\"] to \"C:\\Destination\", with the same file names of \"OriginalFile1.txt\" and \"OriginalFile2.txt\".\nIn this example assume \"C:\\Destination\" does not already contain a file named \"OriginalFile1.txt\" or a file named \"OriginalFile2.txt\", so overwrite can be set to either true or false and it will still work.\nProperties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\OriginalFile1.txt\", @\"C:\\Source\\OriginalFile2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Result Copying [\"C:\\Source\\OriginalFile1.txt\", \"C:\\Source\\OriginalFile2.txt\"] to \"C:\\Destination\" that does not already contain files named \"OriginalFile1.txt\" and \"OriginalFile2.txt\" will:\nCreate a new file at \"C:\\Destination\\OriginalFile1.txt\" with: The content copied from \"C:\\Source\\OriginalFile1.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\OriginalFile1.txt\". The File Attributes copied from \"C:\\Source\\OriginalFile1.txt\". Create a new file at \"C:\\Destination\\OriginalFile2.txt\" with: The content copied from \"C:\\Source\\OriginalFile2.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\OriginalFile2.txt\". The File Attributes copied from \"C:\\Source\\OriginalFile2.txt\". Copy files to a folder overwriting any files that already exists with the same names This example will copy [\"C:\\Source\\FileAlreadyExists1.txt\", \"C:\\Source\\FileAlreadyExists2.txt\"] to \"C:\\Destination\", with the same file names of \"FileAlreadyExists1.txt\" and \"FileAlreadyExists2.txt\".\nIn this example assume \"C:\\Destination\" already contains a file named \"FileAlreadyExists1.txt\" and a file named \"FileAlreadyExists2.txt\", so overwrite must be set to true to ensure the content of the existing files can be overwritten.\nProperties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\FileAlreadyExists1.txt\", @\"C:\\Source\\FileAlreadyExists2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Result Copying [\"C:\\Source\\FileAlreadyExists1.txt\", \"C:\\Source\\FileAlreadyExists2.txt\"] to \"C:\\Destination\" and overwriting the existing files named \"FileAlreadyExists1.txt\" and \"FileAlreadyExists2.txt\" will:\nOverwrite the existing file at \"C:\\Destination\\FileAlreadyExists1.txt\" with: The content copied from \"C:\\Source\\FileAlreadyExists1.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\FileAlreadyExists1.txt\". The File Attributes copied from \"C:\\Source\\FileAlreadyExists1.txt\". Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists2.txt\" with: The content copied from \"C:\\Source\\FileAlreadyExists2.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\FileAlreadyExists2.txt\". The File Attributes copied from \"C:\\Source\\FileAlreadyExists2.txt\". Properties File Paths The File Paths to copy the files from.\nEach file path in File Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePaths with no value Destination Path The Destination Path to copy the files to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path must point to a folder, otherwise an InvalidPathException will be thrown.\nThe copied files will have the names specified in the File Paths.\nAny non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the files in the Destination Path if they already exist.\nIf any file exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path does not point to a folder. The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The Destination Path (if it points to a file), or the Destination Path (if it points to a folder) plus the file name, exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException Any file path in File Paths is null or empty (i.e. \"\"). For more information, see Null or Empty File Paths Any file path in File Paths is duplicated. For more information, see Duplicate File Paths Any file path in File Paths does not exist. Any file path in File Paths points to a folder. Any file path in File Paths contains leading spaces. Any file path in File Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. Any file path in File Paths exceeds the system-defined maximum length (typically 32,767 characters). Any file path in File Paths or Destination Path is invalid (for example, it is on an unmapped drive). Any file path in File Paths exists in the specified Destination Path and overwrite is false. Any file path in File Paths exists in the specified Destination Path with the same name, is read-only and overwrite is true. Any file path in File Paths exists in the specified Destination Path with the same name, is hidden and overwrite is true, but the file in the specified File Paths is not hidden. The user the flow is executing as does not have the required permissions to copy any file (e.g. not having read access to a file path in File Paths or write access to the Destination Path). An unexpected error occurs when copying a file. PropertyEmptyException Thrown when File Paths does not contain any items, or Destination Path is empty (i.e. \"\"). PropertyNullException Thrown when File Paths or Destination Path are null. Remarks File and Folder Paths For information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Paths and Destination Path need escaping Each file path in File Paths and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\OriginalFile.txt\"), or Prepending an @ character before the start of the file path (e.g. @\"C:\\Source\\OriginalFile.txt\") and Destination Path (e.g. @\"C:\\Destination\"). File Attributes When copying a file in the File Paths to the new Destination Path, all of the file’s attributes will also be copied.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nHandling of Exceptions If an exception occurs when trying to copy a file in the File Paths, it will be recorded and the block will continue processing the remaining files. Once all files are processed, recorded exceptions will be thrown within an OperationFailedException.\n","categories":"","description":"Copies files at the specified file paths to the given destination path.","excerpt":"Copies files at the specified file paths to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/copy-file/copy-files-block/","tags":"","title":"Copy Files"},{"body":"\rCopy Folder (Cortex.Blocks.FilesAndFolders.CopyFolder.CopyFolderBlock)\nDescription Copies a folder at the specified Folder Path to the given Destination Path, with an option to copy the folder and its content, or just its Content Only.\nAn option can also be specified to Overwrite anything being copied that already exists in the Destination Path.\nExamples Copy a folder and its content This example will copy \"C:\\Source\\Folder\" and its content to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". A file named \"File.txt\". \"C:\\Destination\" does not already contain a folder named \"Folder\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Copying \"C:\\Source\\Folder\" and its content to \"C:\\Destination\" that does not already contain a folder named \"Folder\" will:\nCreate a new folder at \"C:\\Destination\\Folder\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder\". Create a new folder at \"C:\\Destination\\Folder\\SubFolder\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder\\SubFolder\". Create a new file at \"C:\\Destination\\Folder\\File.txt\" with: The content copied from \"C:\\Source\\Folder\\File.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder\\File.txt\". The File attributes copied from \"C:\\Source\\Folder\\File.txt\". Copy a folder and its content, overwriting any content that already exists This example will copy \"C:\\Source\\Folder\" and its content to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". An empty sub-folder named \"SubFolderAlreadyExists\". A file named \"File.txt\". A file named \"FileAlreadyExists.txt\". \"C:\\Destination\" already contains a folder named \"Folder\", which already contains: A folder named \"SubFolderAlreadyExists\". A file named \"FileAlreadyExists.txt\". Therefore, overwrite must be set to true to ensure the existing \"SubFolderAlreadyExists\" and \"FileAlreadyExists.txt\" can be overwritten.\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Copying \"C:\\Source\\Folder\" and its content to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\Folder\", \"C:\\Destination\\Folder\\SubFolderAlreadyExists\" and \"C:\\Destination\\Folder\\FileAlreadyExists.txt\" already exist will:\nOverwrite the existing folder at \"C:\\Destination\\Folder\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new empty folder at \"C:\\Destination\\Folder\\SubFolder\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder\\SubFolder\". Overwrite the existing folder at \"C:\\Destination\\Folder\\SubFolderAlreadyExists\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new file at \"C:\\Destination\\Folder\\File.txt\" with: The content copied from \"C:\\Source\\Folder\\File.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder\\File.txt\". The File attributes copied from \"C:\\Source\\Folder\\File.txt\". Overwrite the existing file at \"C:\\Destination\\Folder\\FileAlreadyExists.txt\" with: The content copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The File attributes copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". Copy a folder’s content only This example will copy \"C:\\Source\\Folder\" content only to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". A file named \"File.txt\". \"C:\\Destination\" does not already contain a folder named \"SubFolder\" or a file named \"File.txt\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Copying \"C:\\Source\\Folder\" content only to \"C:\\Destination\" that does not already contain a folder named \"SubFolder\" or a file named \"File.txt\" will:\nCreate a new folder at \"C:\\Destination\\SubFolder\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder\\SubFolder\". Create a new file at \"C:\\Destination\\File.txt\" with: The content copied from \"C:\\Source\\Folder\\File.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder\\File.txt\". The File attributes copied from \"C:\\Source\\Folder\\File.txt\". Copy a folder’s content only, overwriting any content that already exists This example will copy \"C:\\Source\\Folder\" content only to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". An empty sub-folder named \"SubFolderAlreadyExists\". A file named \"File.txt\". A file named \"FileAlreadyExists.txt\". \"C:\\Destination\" already contains: A folder named \"SubFolderAlreadyExists\". A file named \"FileAlreadyExists.txt\". Therefore, overwrite must be set to true to ensure the existing \"SubFolderAlreadyExists\" and \"FileAlreadyExists.txt\" can be overwritten.\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Copying \"C:\\Source\\Folder\" content only to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\SubFolderAlreadyExists\" and \"C:\\Destination\\FileAlreadyExists.txt\" already exist will:\nCreate a new empty folder at \"C:\\Destination\\SubFolder\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder\\SubFolder\". Overwrite the existing folder at \"C:\\Destination\\SubFolderAlreadyExists\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new file at \"C:\\Destination\\File.txt\" with: The content copied from \"C:\\Source\\Folder\\File.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder\\File.txt\". The File attributes copied from \"C:\\Source\\Folder\\File.txt\". Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists.txt\" with: The content copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The File attributes copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". Copy a folder and its content to the same location but with a different name If it is required to copy a folder and its content into the same folder it is currently located in, but with a different name, then it is not possible to do with this block; the Duplicate Folder block must be used instead.\nCopy a folder and its content to a different location but with a different name If it is required to copy a folder and its content into a different folder than the one it is currently located in, but with a different name, then it is not possible to do with this block; the Rename Folder block must be used instead.\nProperties Folder Path The Folder Path to copy the folder and/or its content from.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value Destination Path The Destination Path to copy the folder and/or its content to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path must point to a folder, otherwise an InvalidPathException will be thrown.\nThe copied folders and files will have the same names as the folders and files copied.\nAny non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the folder and/or contents being copied to in the Destination Path if they already exist.\nIf the folder and/or contents exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing folders and files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Content Only Option to specify whether to copy the folder and its content or just the Content Only.\nTo copy the folder and its content, Content Only must be set to false; to copy just the content, Content Only must be set to true.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path points to a file. The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Destination Path exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException The Folder Path does not exist. The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The Folder Path or Destination Path is a win32 device path (i.e starts with a \"\\\\.\\\"). The Folder Path or Destination Path is invalid (for example, it is on an unmapped drive). The Folder Path and Destination Path point to the same folder and Content Only is true. The Folder Path is a child folder in the Destination Path and Content Only is false. Any file being copied already exists in the specified Destination Path and overwrite is false. Any file being copied already exists in the specified Destination Path, is read-only and overwrite is true. Any file being copied already exists in the specified Destination Path, is hidden and overwrite is true, but the file under the specified Folder Path is not hidden. The user the flow is executing as does not have the required permissions to copy the folder or any of its content (e.g. not having read access to the Folder Path or its content, or write access to the Destination Path). The operation is cyclic (e.g. copying a folder into one of its sub-folders). An unexpected error occurs when copying the folder or any of its content. PropertyEmptyException Thrown when Folder Path or Destination Path are empty (i.e. \"\"). PropertyNullException Thrown when Folder Path or Destination Path are null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path and Destination Path need escaping Folder Path and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\") and Destination Path (e.g. @\"C:\\Destination\"). Folder Attributes When copying the folder at the specified Folder Path or any folder under it to the new Destination Path, if the copied folder already exists its attributes remain unchanged, otherwise they are copied.\nFor information about the folder attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nFile Attributes When copying a file under Folder Path to the new Destination Path, all of the file’s attributes are also copied.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nHandling of Exceptions If an exception occurs when trying to copy Folder Path, an OperationFailedException will be thrown.\n","categories":"","description":"Copies a folder at the specified folder path to the given destination path.","excerpt":"Copies a folder at the specified folder path to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/copy-folder/copy-folder-block/","tags":"","title":"Copy Folder"},{"body":"","categories":"","description":"Copy a folder or multiple folders.","excerpt":"Copy a folder or multiple folders.","ref":"/docs/reference/blocks/files-and-folders/copy-folder/","tags":"","title":"Copy Folder(s)"},{"body":"\rCopy Folders (Cortex.Blocks.FilesAndFolders.CopyFolder.CopyFoldersBlock)\nDescription Copies folders at the specified Folder Paths to the given Destination Path, with an option to copy the folders and their content, or just their Content Only.\nAn option can also be specified to Overwrite anything being copied that already exists in the Destination Path.\nExamples Copy folders and their content This example will copy [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". A file named \"File1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". A file named \"File2.txt\". \"C:\\Destination\" does not already contain a folder named \"Folder1\" or \"Folder2\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Copying [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\" that does not already contain folders named \"Folder1\" and \"Folder2\" will:\nCreate a new folder at \"C:\\Destination\\Folder1\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder1\". Create a new folder at \"C:\\Destination\\Folder1\\SubFolder1\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder1\\SubFolder1\". Create a new file at \"C:\\Destination\\Folder1\\File1.txt\" with: The content copied from \"C:\\Source\\Folder1\\File1.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder1\\File1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\File1.txt\". Create a new folder at \"C:\\Destination\\Folder2\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder2\". Create a new folder at \"C:\\Destination\\Folder2\\SubFolder2\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder2\\SubFolder2\". Create a new file at \"C:\\Destination\\Folder2\\File2.txt\" with: The content copied from \"C:\\Source\\Folder2\\File2.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder2\\File2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\File2.txt\". Copy folders and their content, overwriting any content that already exists This example will copy [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". An empty sub-folder named \"SubFolderAlreadyExists1\". A file named \"File1.txt\". A file named \"FileAlreadyExists1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". An empty sub-folder named \"SubFolderAlreadyExists2\". A file named \"File2.txt\". A file named \"FileAlreadyExists2.txt\". \"C:\\Destination\" already contains: A folder named \"Folder1\", which already contains: A folder named \"SubFolderAlreadyExists1\". A file named \"FileAlreadyExists1.txt\". A folder named \"Folder2\", which already contains: A folder named \"SubFolderAlreadyExists2\". A file named \"FileAlreadyExists2.txt\". Therefore, overwrite must be set to true to ensure the existing folders and files can be overwritten.\nProperties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Copying [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\Folder1\", \"C:\\Destination\\Folder1\\SubFolderAlreadyExists1\", \"C:\\Destination\\Folder1\\FileAlreadyExists1.txt\", \"C:\\Destination\\Folder2\", \"C:\\Destination\\Folder2\\SubFolderAlreadyExists2\" and \"C:\\Destination\\Folder2\\FileAlreadyExists2.txt\" already exist will:\nOverwrite the existing folder at \"C:\\Destination\\Folder1\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new empty folder at \"C:\\Destination\\Folder1\\SubFolder1\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder1\\SubFolder1\". Overwrite the existing folder at \"C:\\Destination\\Folder1\\SubFolderAlreadyExists1\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new file at \"C:\\Destination\\Folder1\\File1.txt\" with: The content copied from \"C:\\Source\\Folder1\\File1.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder1\\File1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\File1.txt\". Overwrite the existing file at \"C:\\Destination\\Folder1\\FileAlreadyExists1.txt\" with: The content copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". Overwrite the existing folder at \"C:\\Destination\\Folder2\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new empty folder at \"C:\\Destination\\Folder2\\SubFolder2\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder2\\SubFolder2\". Overwrite the existing folder at \"C:\\Destination\\Folder2\\SubFolderAlreadyExists2\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new file at \"C:\\Destination\\Folder2\\File2.txt\" with: The content copied from \"C:\\Source\\Folder2\\File2.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder2\\File2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\File2.txt\". Overwrite the existing file at \"C:\\Destination\\Folder2\\FileAlreadyExists2.txt\" with: The content copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". Copy the folders’ content only This example will copy [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". A file named \"File1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". A file named \"File2.txt\". \"C:\\Destination\" does not already contain a folder named \"SubFolder1\" or \"SubFolder2\" or a file named \"File1.txt\" or \"File2.txt\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Copying [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\" that does not already contain a folder named \"SubFolder1\" or \"SubFolder2\" or a file named \"File1.txt\" or \"File2.txt\" will:\nCreate a new folder at \"C:\\Destination\\SubFolder1\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder1\\SubFolder1\". Create a new file at \"C:\\Destination\\File1.txt\" with: The content copied from \"C:\\Source\\Folder1\\File1.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder1\\File1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\File1.txt\". Create a new folder at \"C:\\Destination\\SubFolder2\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder2\\SubFolder2\". Create a new file at \"C:\\Destination\\File2.txt\" with: The content copied from \"C:\\Source\\Folder2\\File2.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder2\\File2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\File2.txt\". Copy folders’ content only, overwriting any content that already exists This example will copy [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". An empty sub-folder named \"SubFolderAlreadyExists1\". A file named \"File1.txt\". A file named \"FileAlreadyExists1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". An empty sub-folder named \"SubFolderAlreadyExists2\". A file named \"File2.txt\". A file named \"FileAlreadyExists2.txt\". \"C:\\Destination\" already contains: A folder named \"SubFolderAlreadyExists1\". A folder named \"SubFolderAlreadyExists2\". A file named \"FileAlreadyExists1.txt\". A file named \"FileAlreadyExists2.txt\". Therefore, overwrite must be set to true to ensure the existing folders and files can be overwritten.\nProperties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Copying [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\SubFolderAlreadyExists1\", \"C:\\Destination\\SubFolderAlreadyExists2\", \"C:\\Destination\\FileAlreadyExists1.txt\" and \"C:\\Destination\\FileAlreadyExists2.txt\" already exist will:\nCreate a new empty folder at \"C:\\Destination\\SubFolder1\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder1\\SubFolder1\". Overwrite the existing folder at \"C:\\Destination\\SubFolderAlreadyExists1\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new file at \"C:\\Destination\\File1.txt\" with: The content copied from \"C:\\Source\\Folder1\\File1.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder1\\File1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\File1.txt\". Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists1.txt\" with: The content copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". Create a new empty folder at \"C:\\Destination\\SubFolder2\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder2\\SubFolder2\". Overwrite the existing folder at \"C:\\Destination\\SubFolderAlreadyExists2\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Create a new file at \"C:\\Destination\\File2.txt\" with: The content copied from \"C:\\Source\\Folder2\\File2.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder2\\File2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\File2.txt\". Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists2.txt\" with: The content copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Created left unchanged. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". Copy folders and their content to the same location but with a different name If it is required to copy folders and their content into the same folder they are currently located in, but with a different name, then it is not possible to do with this block; the Duplicate Folder block must be used instead.\nCopy folders and their content to a different location but with a different name If it is required to copy folders and their content into a different folder than the one they are currently located in, but with a different name, then it is not possible to do with this block; the Rename Folder block must be used instead.\nProperties Folder Paths The Folder Paths to copy the folders and/or their content from.\nEach folder path in Folder Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPaths with no value Destination Path The Destination Path to copy the folders and/or their content to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path must point to a folder, otherwise an InvalidPathException will be thrown.\nThe copied folders and files will have the same names as the folders and files copied.\nAny non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the folders and/or contents being copied to in the Destination Path if they already exist.\nIf any of the folders and/or contents exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing folders and files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Content Only Option to specify whether to copy the folders and their content or just the Content Only.\nTo copy the folders and their content, Content Only must be set to false; to copy just the content, Content Only must be set to true.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path points to a file. The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Destination Path exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException Any folder path in Folder Paths is null or empty (i.e. \"\"). For more information, see Null or Empty Folder Paths Any folder path in Folder Paths is duplicated. For more information, see Duplicate Folder Paths Any folder path in Folder Paths does not exist. Any folder path in Folder Paths points to a file. Any folder path in Folder Paths contains leading spaces. Any folder path in Folder Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. Any folder path in Folder Paths exceeds the system-defined maximum length (typically 32,767 characters). Any folder path in Folder Paths or Destination Path is a win32 device path (i.e starts with a \"\\\\.\\\"). Any folder path in Folder Paths or Destination Path is invalid (for example, it is on an unmapped drive). Any folder path in Folder Paths and Destination Path point to the same folder and Content Only is true. Any folder path in Folder Paths is a child folder in the Destination Path and Content Only is false. Any file being copied already exists in the specified Destination Path and overwrite is false. Any file being copied already exists in the specified Destination Path, is read-only and overwrite is true. Any file being copied already exists in the specified Destination Path, is hidden and overwrite is true, but the file under any of the specified Folder Paths is not hidden. The user the flow is executing as does not have the required permissions to copy the folder or any of its content (e.g. not having read access to any of the folders in Folder Paths or its content, or write access to the Destination Path). The operation is cyclic (e.g. copying a folder into one of its sub-folders). An unexpected error occurs when copying a folder or any of its content. PropertyEmptyException Thrown when Folder Paths does not contain any items, or Destination Path are empty (i.e. \"\"). PropertyNullException Thrown when Folder Paths or Destination Path are null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path and Destination Path need escaping Each folder paths in Folder Paths and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the folder path (e.g. @\"C:\\Source\") and Destination Path (e.g. @\"C:\\Destination\"). Folder Attributes When copying the folders at the specified Folder Paths or any folder under them to the new Destination Path, if the copied folder already exists its attributes remain unchanged, otherwise they are copied.\nFor information about the folder attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nFile Attributes When copying a file under any of the Folder Paths to the new Destination Path, all of the file’s attributes are also copied.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nConflicting Content If two or more paths in the specified Folder Paths contain content (folders or files) with the same name, and Overwrite and Content Only are true:\nThe attributes of the folder/file in the Destination Path will be that of the first one copied. For files, the content of the file in the Destination Path will be that of the last one copied. Handling of Exceptions If an exception occurs when trying to copy a folder in Folder Paths, it will be recorded and the block will continue processing the remaining folders. Once all folders are processed, recorded exceptions will be thrown within an OperationFailedException.\n","categories":"","description":"Copies folders at the specified folder paths to the given destination path.","excerpt":"Copies folders at the specified folder paths to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/copy-folder/copy-folders-block/","tags":"","title":"Copy Folders"},{"body":"","categories":"","description":"Copy an object.","excerpt":"Copy an object.","ref":"/docs/reference/blocks/objects/copy-object/","tags":"","title":"Copy Object"},{"body":"\rCopy Object (Cortex.Blocks.Objects.CopyObject.CopyObjectBlock`1)\nDescription Makes a Copy of an Object.\nAny type of object can be copied, including Lists, Dictionaries, Structures etc.\nA deep copy will be performed, which means if the Object contains other objects, they are also copied. This is as opposed to a shallow copy, which only makes a copy of the Object; in a shallow copy contained objects are not copied, they are left as the original.\nExamples Copy a List This example will make a copy of [[1, 2, 3], [4, 5, 6]].\nProperties Property Value Notes Object ($)Object, with value [[1, 2, 3], [4, 5, 6]] ($)Object is a variable of type List\u003cList\u003cInt32\u003e\u003e Copy ($)Copy, with no value ($)Copy is a variable that will be set to the type of the item (i.e. List\u003cList\u003cInt32\u003e\u003e) Result Making a copy of [[1, 2, 3], [4, 5, 6]] results in the variable ($)Copy being updated to the following:\n[ [ 1, 2, 3 ], [ 4, 5, 6 ] ] Note that ($)Copy is an exact copy. If ($)Copy has new items added to it, items updated in it, or items removed from it, the original that ($)Copy was copied from will not be affected.\nProperties Object The Object to make the Copy of.\nAny type of object can be copied, including Lists, Dictionaries, Structures etc.\nA deep copy will be performed, which means if the Object contains other objects, they are also copied. This is as opposed to a shallow copy, which only makes a copy of the Object; in a shallow copy contained objects are not copied, they are left as the original.\nData Type TObject Property Type Input Is Advanced false Default Editor Variable Default Value ($)Object with no value Copy The Copy of the Object.\nData Type TObject Property Type Output Is Advanced false Default Editor Variable Default Value ($)Copy with no value Exceptions No exceptions are thrown by the block.\nRemarks Null Object If Object is not provided or is set to null, Copy will be set to null.\n","categories":"","description":"Copies an Object.","excerpt":"Copies an Object.","ref":"/docs/reference/blocks/objects/copy-object/copy-object-block-1/","tags":"","title":"Copy Object"},{"body":"\rCortex v2022 - Product Portal\rWhat's New?\nDiscover what’s new in the Cortex platform.\nOverview\nFind out what the Cortex platform is, what it can do, and how you can get started?\nGetting Started\nGet up and running with the Cortex platform in minutes.\nGuides\nThis section includes all guides for the Cortex platform.\nTutorials\nThis section includes all tutorials for the Cortex platform.\nReference\nThis section includes all reference documentation for the Cortex platform.\n...a world where everyone can automate!\r","categories":"","description":"","excerpt":"\rCortex v2022 - Product Portal\rWhat's New?\nDiscover what’s new in the Cortex platform.\nOverview\nFind out what the Cortex platform is, what it can do, and how you can get started?\nGetting Started\nGet …","ref":"/","tags":"","title":"Cortex"},{"body":"\r","categories":"","description":"The Cortex API Gateway Service.","excerpt":"The Cortex API Gateway Service.","ref":"/docs/guides/cortex-api-gateway-service/","tags":"","title":"Cortex API Gateway Service"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the APIs exposed by the Cortex API Gateway Service.","excerpt":"This section includes all reference documentation for the APIs exposed by the Cortex API Gateway Service.","ref":"/docs/reference/apis/cortex-api-gateway-service/","tags":"","title":"Cortex API Gateway Service"},{"body":"\r","categories":"","description":"The Cortex Flow Debugger Service.","excerpt":"The Cortex Flow Debugger Service.","ref":"/docs/guides/cortex-flow-debugger-service/","tags":"","title":"Cortex Flow Debugger Service"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the APIs exposed by the Cortex Flow Debugger Service.","excerpt":"This section includes all reference documentation for the APIs exposed by the Cortex Flow Debugger Service.","ref":"/docs/reference/apis/cortex-flow-debugger-service/","tags":"","title":"Cortex Flow Debugger Service"},{"body":"\r","categories":"","description":"The Cortex Flow Execution Service.","excerpt":"The Cortex Flow Execution Service.","ref":"/docs/guides/cortex-flow-execution-service/","tags":"","title":"Cortex Flow Execution Service"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the APIs exposed by the Cortex Flow Execution Service.","excerpt":"This section includes all reference documentation for the APIs exposed by the Cortex Flow Execution Service.","ref":"/docs/reference/apis/cortex-flow-execution-service/","tags":"","title":"Cortex Flow Execution Service"},{"body":"\r","categories":"","description":"The centralised web-based portal for accessing all user applications and tooling in the Cortex Innovation platform.","excerpt":"The centralised web-based portal for accessing all user applications and tooling in the Cortex Innovation platform.","ref":"/docs/guides/cortex-gateway/","tags":"","title":"Cortex Gateway"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the APIs exposed by Cortex Gateway.","excerpt":"This section includes all reference documentation for the APIs exposed by Cortex Gateway.","ref":"/docs/reference/apis/cortex-gateway/","tags":"","title":"Cortex Gateway"},{"body":"\r","categories":"","description":"Cortex Gateway and Studio Management tools and settings","excerpt":"Cortex Gateway and Studio Management tools and settings","ref":"/docs/guides/cortex-gateway/settings/","tags":"","title":"Cortex Gateway Management"},{"body":"\r","categories":"","description":"The web-based, low-code, integrated development environment (IDE) for creating, editing, debugging, testing and managing flows that define the logic and actions required to capture and automate simple user tasks through to complex business or IT processes.","excerpt":"The web-based, low-code, integrated development environment (IDE) for creating, editing, debugging, testing and managing flows that define the logic and actions required to capture and automate simple …","ref":"/docs/guides/cortex-studio/","tags":"","title":"Cortex Studio"},{"body":"\r","categories":"","description":"This section includes all reference documentation for the APIs exposed by Cortex Studio.","excerpt":"This section includes all reference documentation for the APIs exposed by Cortex Studio.","ref":"/docs/reference/apis/cortex-studio/","tags":"","title":"Cortex Studio"},{"body":"\rSummary TODO: What is used for, etc.\nSnippets TODO: How to Access, Whats Available, etc\nTools TODO: Full Screen, Find and Replace, Command Menu, Replace All (Ctrl F2), etc\nExample Expressions TODO: Variable, Object Construct (Complex/Collection), String Concatenation/Interpolation, Arithmetics, etc\nRemarks Known Limitations See Also Related Concepts TODO\n","categories":"","description":"A guide on how to use the Expression Editor","excerpt":"A guide on how to use the Expression Editor","ref":"/docs/guides/cortex-studio/expression-editor/","tags":"","title":"Cortex Studio - Expression Editor"},{"body":"\rSummary TODO: What is used for, etc.\nSelecting a Literal Type TODO: Searching/Filtering\nRemarks Known Limitations See Also Related Concepts TODO\n","categories":"","description":"A guide on how to use the Literal Editor","excerpt":"A guide on how to use the Literal Editor","ref":"/docs/guides/cortex-studio/literal-editor/","tags":"","title":"Cortex Studio - Literal Editor"},{"body":"\rSummary TODO: What is used for, etc.\nSelecting Variables TODO: Searching/Filtering TODO: Complex/Collection variable referencing\nCreating Variables TODO: Create variable from property, create all undefined variables\nRemarks Known Limitations See Also Related Concepts TODO\n","categories":"","description":"A guide on how to use the Variable Editor","excerpt":"A guide on how to use the Variable Editor","ref":"/docs/guides/cortex-studio/variable-editor/","tags":"","title":"Cortex Studio - Variable Editor"},{"body":"\rCreate Folder (Cortex.Blocks.FilesAndFolders.CreateFolder.CreateFolderBlock)\nDescription Creates a folder at the specified Folder Path.\nExamples Create a folder This example will create \"C:\\Source\\NewFolder\".\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\NewFolder\" ($)FolderPath is a variable of type String Result Creating \"C:\\Source\\NewFolder\" results in the folder \"NewFolder\" being created in the folder \"C:\\Source\".\nProperties Folder Path The Folder Path to create the folder at.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nAny folders that do not exist in the Folder Path will be created.\nIf the Folder Path already exists, a new folder is not created, and no exception is thrown.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The Folder Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to create the folder at the Folder Path. An unexpected error occurs when creating the folder at the Folder Path or any of its content. PropertyEmptyException Thrown when Folder Path is empty (i.e. \"\"). PropertyNullException Thrown when Folder Path is null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path needs escaping Folder Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\"). Folder Path already exists If the Folder Path already exists nothing is created, and no exception is thrown.\n","categories":"","description":"Creates a folder at the specified folder path.","excerpt":"Creates a folder at the specified folder path.","ref":"/docs/reference/blocks/files-and-folders/create-folder/create-folder-block/","tags":"","title":"Create Folder"},{"body":"","categories":"","description":"Create a folder or multiple folders.","excerpt":"Create a folder or multiple folders.","ref":"/docs/reference/blocks/files-and-folders/create-folder/","tags":"","title":"Create Folder(s)"},{"body":"\rCreate Folders (Cortex.Blocks.FilesAndFolders.CreateFolder.CreateFoldersBlock)\nDescription Creates folders at the specified Folder Paths.\nExamples Create folders This example will create [\"C:\\Source\\NewFolder1\", \"C:\\Source\\NewFolder2\"].\nProperties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\NewFolder1\", @\"C:\\Source\\NewFolder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Result Creating [\"C:\\Source\\NewFolder1\", \"C:\\Source\\NewFolder2\"] results in the folders \"NewFolder1\" and \"NewFolder2\" being create in the folder \"C:\\Source\".\nProperties Folder Paths The Folder Paths to create the folders at.\nEach folder path in Folder Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nAny folders that do not exist in any of the Folder Paths will be created.\nIf a folder in Folder Paths already exists, a new folder is not created, and no exception is thrown.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPaths with no value Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException Any folder path in Folder Paths is null or empty (i.e. \"\"). For more information, see Null or Empty Folder Paths. Any folder path in Folder Paths is duplicated. For more information, see Duplicate Folder Paths. Any folder path in Folder Paths points to a file. Any folder path in Folder Paths contains leading spaces. Any folder path in Folder Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. Any folder path in Folder Paths exceeds the system-defined maximum length (typically 32,767 characters). Any folder path in Folder Paths is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to create a folder in the Folder Paths. An unexpected error occurs when creating a folder in the Folder Paths or any of its content. PropertyEmptyException Thrown when Folder Paths does not contain any items. PropertyNullException Thrown when Folder Paths is null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Paths need escaping Each folder path in Folder Paths requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the folder path (e.g. @\"C:\\Source\"). Folder Path already exists If a folder path in Folder Paths already exists nothing is created, and no exception is thrown.\nHandling of Exceptions If an exception occurs when trying to create a folder in Folder Paths, it will be recorded and the block will continue processing the remaining folders. Once all folders are processed, recorded exceptions will be thrown within an OperationFailedException.\n","categories":"","description":"Create folders at the specified folder paths.","excerpt":"Create folders at the specified folder paths.","ref":"/docs/reference/blocks/files-and-folders/create-folder/create-folders-block/","tags":"","title":"Create Folders"},{"body":"Create Self-Signed Certificates Self-signed certificates should be generated using OpenSSL which is bundled in the Cortex Web Application Server Installation Scripts:\nSetup OpenSSL in PowerShell Open a Windows PowerShell (x64) window as administrator.\nMake a directory in which to store the certificates by running the following command, changing the path as required:\nmkdir C:\\Certificates Navigate PowerShell to inside the certificates folder created above, using the following command, modifying the path as necessary:\ncd \"C:\\Certificates\" Temporarily add OpenSSL to the Path environment variable of your system by running the following command, modifying the path according to the location of openssl.exe in the installation scripts on the machine:\n$env:PATH += \";C:\\Cortex Innovation 2022.9 - Web App Server Install Scripts\\OpenSSL\" Generate the Root CA Certificate Create the root CA private key by running the following command:\nopenssl genrsa -out cortexCA.key 4096 Generate the root CA certificate signed with the private key:\nCopy the following text into a text editor:\nRANDFILE = .rnd [ ca ] default_ca = CA_default # The default ca section [ CA_default ] # Directory and file locations. # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 policy = policy_strict [ policy_strict ] # The root CA should only sign intermediate certificates that match. # See the POLICY FORMAT section of `man ca`. countryName = match stateOrProvinceName = match organizationName = match organizationalUnitName = optional commonName = supplied emailAddress = optional [ req ] # Options for the `req` tool (`man req`). default_bits = 2048 distinguished_name = req_distinguished_name string_mask = utf8only # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 # Extension to add when the -x509 option is used. x509_extensions = v3_ca [ req_distinguished_name ] countryName = Country Name (2 letter code) countryName_min = 2 countryName_max = 2 stateOrProvinceName = State or Province Name (full name) localityName = Locality Name (eg, city) 0.organizationName = Organization Name (eg, company) organizationalUnitName = Organizational Unit Name (eg, section) commonName = Common Name (eg, your website's domain name) commonName_max = 64 emailAddress = Email Address emailAddress_max = 40 # Optionally, specify some defaults. countryName_default = GB stateOrProvinceName_default = Hampshire localityName_default = Southampton 0.organizationName_default = Cortex Ltd organizationalUnitName_default = Cortex emailAddress_default = info@cortex.co.uk [ v3_ca ] # Extensions for a typical CA (`man x509v3_config`). subjectKeyIdentifier = hash authorityKeyIdentifier = keyid:always,issuer basicConstraints = critical, CA:true keyUsage = critical, digitalSignature, cRLSign, keyCertSign Save the file as ca.cnf in the directory created for the certificates above.\nIn the PowerShell window, run the following command:\nopenssl req -sha256 -x509 -new -nodes -key cortexCA.key -days 3650 -out cortexCA.pem -config ca.cnf Press Enter for all parameters except the Common Name. For this enter Cortex CA.\nPackage your public and private key in a pkcs12 encrypted file (to install with certmgr on windows) by running the following command:\nopenssl pkcs12 -export -inkey cortexCA.key -in cortexCA.pem -out cortexCA.pfx Enter a memorable string as the Export Password when asked, this will be needed when adding the certificate to certmgr.\nImport the Root CA Certificate Double click on the cortexCA.pfx file in the certificates folder to import the certificate into the Windows Certificate Store. Select Local Machine then click Next. Click Next. Enter the Export Password which the certificate was generated with then click Next. Select Place all certificates in the following store. Click Browse…. Select Trusted Root Certification Authorities, click OK then click Next. Click Finish. Generate the Certificate Create a private key for the SSL cert by running the following command:\nopenssl genrsa -out cortex.key 2048 Generate the SSL certificate request:\nCopy the following text into a text editor:\nRANDFILE = .rnd [ ca ] default_ca = CA_default # The default ca section [ CA_default ] # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 policy = policy_loose [ policy_loose ] # Allow the intermediate CA to sign a more diverse range of certificates. # See the POLICY FORMAT section of the `ca` man page. countryName = optional stateOrProvinceName = optional localityName = optional organizationName = optional organizationalUnitName = optional commonName = supplied emailAddress = optional [ req ] # Options for the `req` tool (`man req`). default_bits = 2048 distinguished_name = req_distinguished_name string_mask = utf8only # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 # Extension to add when the -x509 option is used. x509_extensions = v3_req req_extensions = v3_req [ req_distinguished_name ] countryName = Country Name (2 letter code) countryName_min = 2 countryName_max = 2 stateOrProvinceName = State or Province Name (full name) localityName = Locality Name (eg, city) 0.organizationName = Organization Name (eg, company) organizationalUnitName = Organizational Unit Name (eg, section) commonName = Common Name (eg, your website's domain name) commonName_max = 64 emailAddress = Email Address emailAddress_max = 40 # Optionally, specify some defaults. countryName_default = GB stateOrProvinceName_default = Hampshire localityName_default = Southampton 0.organizationName_default = Cortex Ltd organizationalUnitName_default = Cortex emailAddress_default = info@cortex.co.uk [ v3_req ] basicConstraints = CA:FALSE keyUsage = nonRepudiation, digitalSignature, keyEncipherment subjectAltName = @alt_names [ alt_names ] # Specify all DNS and/or IP addresses that clients can use to access the secured resource. DNS.1 = MACHINE-NAME DNS.2 = FULLY QUALIFIED MACHINE NAME DNS.3 = localhost IP.1 = IP ADDRESS IP.2 = 127.0.0.1 Modify the section [alt_names] to include all the required DNS names and IP addresses that clients can use to access the secured resource. Each DNS name or IP address entry must be suffixed with .N where N is the unique index of the DNS name or IP address entry; see below for examples:\nResource URL Configuration to add https://cortex.co.uk/gateway DNS.1 = cortex.co.uk https://internal.cortex.co.uk/gateway DNS.2 = internal.cortex.co.uk https://10.0.0.0/gateway IP.1 = 10.0.0.0 https://192.168.1.100/gateway IP.2 = 192.168.1.100 Save the file as san.cnf in the directory created for the certificates above.\nIn the PowerShell window, run the following command:\nopenssl req -new -sha256 -key cortex.key -out cortex.req -extensions v3_req -config san.cnf Press Enter for everything except the Common Name. For this enter Cortex.\nSign the request with a previously generated root CA by running the following command:\nopenssl x509 -req -sha256 -in cortex.req -CA cortexCA.pem -CAkey cortexCA.key -CAcreateserial -out cortex.pem -days 3650 -extensions v3_req -extfile san.cnf Package your public and private key in a pkcs12 encrypted file (to install with certmgr on windows) by running the following command:\nopenssl pkcs12 -export -inkey cortex.key -in cortex.pem -out cortex.pfx Enter a memorable string as the Export Password when asked, this will be needed when adding the certificate to certmgr.\nImport the Certificate Double click on the cortex.pfx file in the certificates folder to get the certificate imported to the Windows Certificate Store. Select Local Machine then click Next. Click Next. Enter the Export Password which the certificate was generated with then click Next. Select Place all certificates in the following store. Click Browse…. Select Personal, click OK then click Next. Click Finish. ","categories":"","description":"Information about creating and installing self-signed certificates.","excerpt":"Information about creating and installing self-signed certificates.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/self-signed-certificates/","tags":"","title":"Create Self-Signed Certificates"},{"body":"Create Self-Signed Certificates Self-signed certificates should be generated using OpenSSL which is bundled in the Cortex Web App Server Install Scripts:\nSetup OpenSSL in PowerShell Open a Windows PowerShell (x64) window as administrator.\nMake a directory in which to store the certificates by running the following command, changing the path as required:\nmkdir C:\\Certificates Navigate PowerShell to inside the certificates folder created above, using the following command, modifying the path as necessary:\ncd \"C:\\Certificates\" Temporarily add OpenSSL to the Path environment variable of your system by running the following command, modifying the path according to the location of openssl.exe in the installation scripts on the machine:\n$env:PATH += \";C:\\Cortex Innovation 2022.9 - Web App Server Install Scripts\\OpenSSL\" Generate the Root CA Certificate Create the Root CA private key by running the following command:\nopenssl genrsa -out cortexCA.key 4096 Generate the Root CA certificate signed with the private key:\nCopy the following text into a text editor:\nRANDFILE\t= .rnd [ ca ] default_ca\t= CA_default\t# The default ca section [ CA_default ] # Directory and file locations. # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 policy = policy_strict [ policy_strict ] # The root CA should only sign intermediate certificates that match. # See the POLICY FORMAT section of `man ca`. countryName = match stateOrProvinceName = match organizationName = match organizationalUnitName = optional commonName = supplied emailAddress = optional [ req ] # Options for the `req` tool (`man req`). default_bits = 2048 distinguished_name = req_distinguished_name string_mask = utf8only # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 # Extension to add when the -x509 option is used. x509_extensions = v3_ca [ req_distinguished_name ] countryName\t= Country Name (2 letter code) countryName_min\t= 2 countryName_max\t= 2 stateOrProvinceName\t= State or Province Name (full name) localityName\t= Locality Name (eg, city) 0.organizationName\t= Organization Name (eg, company) organizationalUnitName\t= Organizational Unit Name (eg, section) commonName\t= Common Name (eg, your website's domain name) commonName_max\t= 64 emailAddress\t= Email Address emailAddress_max\t= 40 # Optionally, specify some defaults. countryName_default = GB stateOrProvinceName_default = Hampshire localityName_default = Southampton 0.organizationName_default = Cortex Ltd organizationalUnitName_default\t= Cortex emailAddress_default\t= info@cortex.co.uk [ v3_ca ] # Extensions for a typical CA (`man x509v3_config`). subjectKeyIdentifier = hash authorityKeyIdentifier = keyid:always,issuer basicConstraints = critical, CA:true keyUsage = critical, digitalSignature, cRLSign, keyCertSign Save the file as ca.cnf in the directory created for the certificates above.\nIn the PowerShell window, run the following command:\nopenssl req -sha256 -x509 -new -nodes -key cortexCA.key -days 3650 -out cortexCA.pem -config ca.cnf Press Enter for all parameters except the Common Name. For this enter Cortex CA.\nPackage your public and private key in a pkcs12 encrypted file (to install with certmgr on windows) by running the following command:\nopenssl pkcs12 -export -inkey cortexCA.key -in cortexCA.pem -out cortexCA.pfx Enter a memorable string as the Export Password when asked, this will be needed when adding the certificate to certmgr.\nDouble click on the cortexCA.pfx file in the certificates folder to import the certificate into the Windows Certificate Store. Perform the following steps:\nSelect Local Machine then click Next. Click Next. Enter the Export Password which the certificate was generated with then click Next. Select Place all certificates in the following store. Click Browse…. Select Trusted Root Certification Authorities, click OK then click Next. Click Finish. Generate the Certificate Create a private key for the SSL cert by running the following command:\nopenssl genrsa -out cortex.key 2048 Generate the SSL certificate request:\nCopy the following text into a text editor:\nRANDFILE\t= .rnd [ ca ] default_ca\t= CA_default\t# The default ca section [ CA_default ] # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 policy = policy_loose [ policy_loose ] # Allow the intermediate CA to sign a more diverse range of certificates. # See the POLICY FORMAT section of the `ca` man page. countryName = optional stateOrProvinceName = optional localityName = optional organizationName = optional organizationalUnitName = optional commonName = supplied emailAddress = optional [ req ] # Options for the `req` tool (`man req`). default_bits = 2048 distinguished_name = req_distinguished_name string_mask = utf8only # SHA-1 is deprecated, so use SHA-2 instead. default_md = sha256 # Extension to add when the -x509 option is used. x509_extensions = v3_req req_extensions = v3_req [ req_distinguished_name ] countryName\t= Country Name (2 letter code) countryName_min\t= 2 countryName_max\t= 2 stateOrProvinceName\t= State or Province Name (full name) localityName\t= Locality Name (eg, city) 0.organizationName\t= Organization Name (eg, company) organizationalUnitName\t= Organizational Unit Name (eg, section) commonName\t= Common Name (eg, your website's domain name) commonName_max\t= 64 emailAddress\t= Email Address emailAddress_max\t= 40 # Optionally, specify some defaults. countryName_default = GB stateOrProvinceName_default = Hampshire localityName_default = Southampton 0.organizationName_default = Cortex Ltd organizationalUnitName_default = Cortex emailAddress_default\t= info@cortex.co.uk [ v3_req ] basicConstraints = CA:FALSE keyUsage = nonRepudiation, digitalSignature, keyEncipherment subjectAltName = @alt_names [ alt_names ] # Specify all DNS and/or IP addresses that clients can use to access the secured resource. DNS.1 = MACHINE-NAME DNS.2 = FULLY QUALIFIED MACHINE NAME DNS.3 = localhost IP.1 = IP ADDRESS IP.2 = 127.0.0.1 Modify the section [alt_names] to include all the required DNS names and IP addresses that clients can use to access the secured resource. Each DNS name or IP address entry must be suffixed with .N where N is the unique index of the DNS name or IP address entry; see below for examples:\nResource URL Configuration to add https://cortex.co.uk/gateway DNS.1 = cortex.co.uk https://internal.cortex.co.uk/gateway DNS.2 = internal.cortex.co.uk https://10.0.0.0/gateway IP.1 = 10.0.0.0 https://192.168.1.100/gateway IP.2 = 192.168.1.100 Save the file as san.cnf in the directory created for the certificates above.\nIn the PowerShell window, run the following command:\nopenssl req -new -sha256 -key cortex.key -out cortex.req -extensions v3_req -config san.cnf Press Enter for everything except the Common Name. For this enter Cortex.\nSign the request with a previously generated Root CA by running the following command:\nopenssl x509 -req -sha256 -in cortex.req -CA cortexCA.pem -CAkey cortexCA.key -CAcreateserial -out cortex.pem -days 3650 -extensions v3_req -extfile san.cnf Package your public and private key in a pkcs12 encrypted file (to install with certmgr on windows) by running the following command:\nopenssl pkcs12 -export -inkey cortex.key -in cortex.pem -out cortex.pfx Enter a memorable string as the Export Password when asked, this will be needed when adding the certificate to certmgr.\nImport the Certificate Double click on the cortex.pfx file in the certificates folder to get the certificate imported to the Windows Certificate Store. Perform the following steps: Select Local Machine then click Next. Click Next. Enter the Export Password which the certificate was generated with then click Next. Select Place all certificates in the following store. Click Browse…. Select Personal, click OK then click Next. Click Finish. ","categories":"","description":"Information about creating and installing self-signed certificates.","excerpt":"Information about creating and installing self-signed certificates.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/self-signed-certificates/","tags":"","title":"Create Self-Signed Certificates"},{"body":"","categories":"","description":"Information related to working with Culture.","excerpt":"Information related to working with Culture.","ref":"/docs/reference/concepts/working-with/culture/","tags":"","title":"Culture"},{"body":"CultureInfo (System.Globalization.CultureInfo)\nSummary Remarks Create a CultureInfo Convert CultureInfo to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation TODO:\nIf the culture identifier is empty e.g (new CultureInfo(\"\")), cultureInfo is set to InvariantCulture. If the culture does not exist, the operating system will create a custom culture using the culture identifier. As well as the default InvariantCulture you can also use the culture of the system (CultureInfo.CurrentCulture) or provide a new culture info (new CultureInfo(“en-GB”)). Note about formatProvider and CultureInfo: If an invalid CultureInfo is provided (e.g. new CultureInfo(“enaa”)), a CultureNotFoundException will be thrown. Talk about CultureInfo.InvariantCulture Talk about CultureInfo.CurrentCulture ","categories":"","description":"Used to represent information about a specific culture, including the names for the culture, the writing system, the calendar used, the sort order of strings, and formatting for dates and numbers.","excerpt":"Used to represent information about a specific culture, including the names for the culture, the writing system, the calendar used, the sort order of strings, and formatting for dates and numbers.","ref":"/docs/reference/data-types/text/cultureinfo/","tags":"","title":"CultureInfo"},{"body":"","categories":"","description":"Blocks related to working with data sources.","excerpt":"Blocks related to working with data sources.","ref":"/docs/reference/blocks/data/","tags":"","title":"Data"},{"body":"","categories":"","description":"Exceptions related to Data Sources","excerpt":"Exceptions related to Data Sources","ref":"/docs/reference/exceptions/data/","tags":"","title":"Data"},{"body":"","categories":"","description":"Information related to working with Data Sources.","excerpt":"Information related to working with Data Sources.","ref":"/docs/reference/concepts/working-with/data-sources/","tags":"","title":"Data Sources"},{"body":"DataCommand (Cortex.DataTypes.Data.DataCommand)\nSummary Any data type representing configuration for data source commands.\nCategory: Data Name: DataCommand Full Name: Cortex.DataTypes.Data.DataCommand Alias: N/A Description: Any data type representing configuration for data source commands. Default Value: null Can be used as: Object, dynamic Can be cast to: N/A Properties Command Text The Command Text is used to create the command that will be run against the data source.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value $@\"\" Parameters Parameters are used to pass information to the command that will be run against the data source.\nIt is recommended to always use parameterised commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nFor more information see Parameterised Commands\nData Type dynamic Is Advanced true Default Editor Expression Default Value dynamic with no value Remarks Most Common DataCommand Data Types Any of the following data types can be used where a DataCommand is required:\nCommand Commands QueryCommand NonQueryCommand Create a DataCommand For some of the ways that a DataCommand can be created, please see each of the DataCommand data types:\nCommand Commands QueryCommand NonQueryCommand Convert DataCommand to Text For some of the ways that a DataCommand can be converted to text, please see each of the DataCommand data types:\nCommand Commands QueryCommand NonQueryCommand Parameterised Commands It is recommended to always use parameterised commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nThe @ symbol denotes a parameter within the CommandText (e.g. \"SELECT * FROM Table WHERE Name = @Parameter\"). An example of using parameters can be found in Executing Multiple Commands (Safe), whereas, an example of inserting variables into a statement without parameters can be found in Executing Multiple Commands (Unsafe)\nFor more information see Parameterised Commands.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is DataCommand. The Literal Editor is available for Input properties where the data type is DataCommand. The Variable Editor is available for Input, InputOutput and Output properties where the data type is DataCommand. Known limitations None\nSee Also Related Data Types Command Commands QueryCommand NonQueryCommand Related Concepts Working with Data Sources External Documentation SQL Injection ","categories":"","description":"Any data type representing configuration for data source commands.","excerpt":"Any data type representing configuration for data source commands.","ref":"/docs/reference/data-types/data/datacommand/","tags":"","title":"DataCommand"},{"body":"","categories":"","description":"Blocks related to working with Date and Time.","excerpt":"Blocks related to working with Date and Time.","ref":"/docs/reference/blocks/date-and-time/","tags":"","title":"Date \u0026 Time"},{"body":"","categories":"","description":"Information related to working with Date and Time.","excerpt":"Information related to working with Date and Time.","ref":"/docs/reference/concepts/working-with/date-and-time/","tags":"","title":"Date and Time"},{"body":"Date and Time Formatting Overview TODO:\nOverview/summary Common formats ISO8601, Invariant Culture Format providers TODO:\nwhat are they ways of creating CultureInfo.InvariantCulture CultureInfo.CurrentCulture new CultureInfo(\"\") new CultureInfo(“en-GB”) or\nhttps://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#datetimeformatinfo-properties\nhttps://docs.microsoft.com/en-us/dotnet/api/system.globalization.datetimeformatinfo?view=net-5.0\nInvariant Culture TODO:\ndefault format \"MM/dd/yyyy HH:mm:ss zzz\" rules https://docs.microsoft.com/en-us/dotnet/api/system.datetimeoffset.parse?view=net-5.0 Current Culture TODO\nFormat Templates Format templates use characters called format specifiers to define the text representation of DateTimeOffset and DateTime values.\nThere are two types of format template:\nStandard Format Templates - use a single character format specifier Custom Format Templates - use multiple character format specifiers Both can be used to define how DateTimeOffset and DateTime values are converted to and from their text representation.\nTODO:\n*How do they relate to format providers Standard Format Templates A standard format template uses a single character format specifier to define the text representation of DateTimeOffset and DateTime values and can be used to define how DateTimeOffset and DateTime values are converted to and from their text representation.\nThe following table shows all of the standard format templates.\nAll examples are for a system configured with British culture (i.e. en-GB), and use a local time of 2PM 1st of July 2022 with 1 hour UTC offset, honouring British Summer Time (BST).\nPattern Format Specifier DateTimeOffset Example DateTime Example Notes Short Date Pattern d 2022-07-01T14:00:00.0000000+01:00 -\u003e 1/7/2022 TODO See short date (“d”) format specifier for further information Short Time Pattern t 2022-07-01T14:00:00.0000000+01:00 -\u003e 2:00 PM TODO See short time (“t”) format specifier for further information Long Date Pattern D 2022-07-01T14:00:00.0000000+01:00 -\u003e 5 April 2022 TODO See long date (“D”) format specifier for further information Long Time Pattern T 2022-07-01T14:00:00.0000000+01:00 -\u003e 2:00:00 PM TODO See long time (“T”) format specifier for further information Full Date/Time Pattern (Short Time) f 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See full date short time (“f”) format specifier for further information Full Date/Time Pattern (Long Time) F 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See full date long time (“F”) format specifier for further information General Date/Time Pattern (Short Time) g 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See general date short time (“g”) format specifier for further information General Date/Time Pattern (Long Time) G 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See general date long time (“G”) format specifier for further information Round-Trip Date/Time Pattern O, o 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See round-trip (“O”, “o”) format specifier for further information RFC1123 Pattern R, r 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See RFC1123 (“R”, “r”) format specifier for further information Sortable Date/Time Pattern s 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See sortable (“s”) format specifier for further information Universal Sortable Date/Time Pattern u 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See universal sortable (“u”) format specifier for further information Universal Full Date/Time Pattern U 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See universal full (“U”) format specifier for further information Month Day Pattern M, m 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See month (“M”, “m”) format specifier for further information Year Month Pattern Y, y 2022-07-01T14:00:00.0000000+01:00 -\u003e TODO TODO See year month (“Y”) format specifier for further information Unknown Pattern Any other single character N/A N/A Throws a FormatException Invariant Format Templates TODO:\nInvariant format templates - In some cases, the standard format string serves as a convenient abbreviation for a longer custom format string that is invariant. Four standard format strings fall into this category: “O” (or “o”), “R” (or “r”), “s”, and “u”. These strings correspond to custom format strings defined by the invariant culture. They produce string representations of date and time values that are intended to be identical across cultures. The following table provides information on these four standard date and time format strings. TABLE 2 Standard format string\tDefined by DateTimeFormatInfo.InvariantInfo property\tCustom format string “O” or “o”\tNone\tyyyy’-‘MM’-‘dd’T’HH’:‘mm’:‘ss’.‘fffffffK “R” or “r”\tRFC1123Pattern\tddd, dd MMM yyyy HH’:‘mm’:‘ss ‘GMT’ “s”\tSortableDateTimePattern\tyyyy’-‘MM’-‘dd’T’HH’:‘mm’:‘ss “u”\tUniversalSortableDateTimePattern\tyyyy’-‘MM’-‘dd HH’:‘mm’:‘ss’Z’ https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings ISO 8601 Standard TODO:\nround-trip “O”, “o” and sortable “s” complies with ISO yyyy-MM-ddTHH:mm:ss.fffffffK for DateTime yyyy-MM-ddTHH:mm:ss.fffffffzzz for DateTimeOffset Custom Format Templates TODO:\nWhat are they - multiple character format specifiers Some examples https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings Format specifiers TODO:\nwhat are they Table of them Some of the commonly used format specifiers are: dd: The day of the month, from 01 through 31 MM: The month, from 01 through 12 yyyy: The year as a four-digit number HH: The hour, using a 24-hour clock from 00 to 23 hh: The hour, using a 12-hour clock from 01 to 12 mm: The minute, from 00 through 59 ss: The second, from 00 through 59 fff: The number of milliseconds tttt: The AM/PM designator The full set of allowed format specifiers are as per standard Microsoft .NET Custom Date and Time Format Strings. Operating System Settings TODO:\nHow can these affect datetime formats etc. https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-date-and-time-format-strings#control-panel-settings TODO Add concepts page for string/object formatting that links to:\nhttps://docs.microsoft.com/en-us/dotnet/standard/base-types/composite-formatting https://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices-display-data TODO Add concepts page for formatting numbers that links to:\nhttps://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings TODO: https://docs.microsoft.com/en-us/dotnet/standard/base-types/parsing-datetime\nTODO: Update examples for most common en-gb os formats\n","categories":"","description":"This page describes the concept of Date and Time Formatting, including Format Providers, Format Templates and Format Specifiers.","excerpt":"This page describes the concept of Date and Time Formatting, including Format Providers, Format Templates and Format Specifiers.","ref":"/docs/reference/concepts/working-with/date-and-time/date-and-time-formatting/","tags":"","title":"Date and Time Formatting"},{"body":"DateTime (System.DateTime)\nSummary The DateTime data type is used to represent a date and time between 00:00:00.0000000 UTC, January 1, 0001 and 23:59:59.9999999 UTC, December 31, 9999, in the Gregorian calendar. It can be used wherever a DateTimeOffset is expected, and will be implicitly cast.\nCategory: Date \u0026 Time Name: DateTime Full Name: System.DateTime Alias: N/A Description: A date and time between 00:00:00.0000000 UTC, January 1, 0001 and 23:59:59.9999999 UTC, December 31, 9999, in the Gregorian calendar. It can be used wherever a DateTimeOffset is expected, and will be implicitly cast. Size: Varies, typically 8 bytes Default Value: 0001-01-01T00:00:00 (i.e. DateTime.MinValue) Can be used as: DateTimeOffset, Object, dynamic Can be cast to: N/A Remarks Create a DateTime The following table shows some of the ways that a DateTime can be created.\nAll examples are for a system configured with British culture (i.e. en-GB), and use a local time of 2PM 1st of July 2022 with 1 hour UTC offset, honouring British Summer Time (BST).\nMethod Example Result Editor Support Notes Use DateTime.Now DateTime.Now 2022-07-01T14:00:00.0000000+01:00 Expression The result shown is an example result. The actual result will show the current date and time on the current computer expressed as local time. See DateTime.Now Use DateTime.UtcNow DateTime.UtcNow 2022-07-01T13:00:00.0000000Z Expression The result shown is an example result. The actual result will show the current date and time on the current computer expressed as the Coordinated Universal Time (UTC). See DateTime.UtcNow Use DateTime.Parse DateTime.Parse(\"1/7/2022 2:00:00 PM\") 2022-07-01T14:00:00 Expression Parses a date string and converts it to a DateTime using the current culture of the system. In this example it parses \"1/7/2022 2:00:00 PM\" using en-GB culture and converts it to 2022-07-01T14:00:00. See DateTime.Parse Use a DateTime constructor new DateTime(2022, 7, 1, 14, 0, 0, 0) 2022-07-01T14:00:00 Expression 2PM 1st July 2022 with 1 hour UTC offset, honouring British Summer Time (BST). See DateTime Constructors. Use DateTimeOffset.DateTime DateTimeOffset.UtcNow.DateTime 2022-07-01T13:00:00.0000000 Expression Converts DateTimeOffset.UtcNow to a DateTime using the date and time components, but not the offset. See DateTimeOffset.DateTime Use DateTimeOffset.LocalDateTime DateTimeOffset.UtcNow.LocalDateTime 2022-07-01T14:00:00.0000000+01:00 Expression Converts DateTimeOffset.UtcNow to a DateTime relative to the local time. See DateTimeOffset.LocalDateTime Use DateTimeOffset.UtcDateTime DateTimeOffset.UtcNow.UtcDateTime 2022-07-01T13:00:00.0000000Z Expression Converts DateTimeOffset.UtcNow to a DateTime relative to Coordinated Universal Time (UTC). See DateTimeOffset.UtcDateTime Please see Initializing a DateTime object for further information.\nConvert DateTime to Text The following table shows some of the ways that a DateTime can be converted to text.\nAll examples are for a system configured with British culture (i.e. en-GB), and use a local time of 2PM 1st of July 2022 with 1 hour UTC offset, honouring British Summer Time (BST).\nMethod Example Result Editor Support Notes Use ToString DateTime.UtcNow.ToString() \"1/7/2022 1:00:00 PM\" Expression The result shown is an example result. The actual result will show the current date and time on the current computer expressed as the Coordinated Universal Time (UTC) converted to text. Both the example and actual result will use the short date pattern for the current culture and the long time pattern for the current culture with each element separated from the previous element by a space. See DateTime.ToString Use Convert.ToString Convert.ToString(DateTime.UtcNow) \"1/7/2022 1:00:00 PM\" Expression The result shown is an example result. The actual result will show the current date and time on the current computer expressed as the Coordinated Universal Time (UTC) converted to text. Both the example and actual result will use the short date pattern for the current culture and the long time pattern for the current culture, with each element separated from the previous element by a space. See Convert.ToString Use Convert DateTime To Text block where Date Time property has a value of DateTime.UtcNow \"2022-07-01T13:00:00.0000000+00:00\" Expression The result shown is an example result. The actual result will show the current date and time on the current computer expressed as the Coordinated Universal Time (UTC) converted to text. Both the example and actual result will use ISO 8601 Standard format for DateTimeOffset (i.e. yyyy-MM-ddTHH:mm:ss.fffffffzzz) as the Convert DateTime To Text block will impicitly convert a DateTime to a DateTimeOffset. See Convert DateTime To Text Use Convert Object To Text block where Object property has a value of DateTime.UtcNow \"1/7/2022 1:00:00 PM\" Expression The result shown is an example result. The actual result will show the current date and time on the current computer expressed as the Coordinated Universal Time (UTC) converted to text. Both the example and actual result will use the short date pattern for the current culture and the long time pattern for the current culture, with each element separated from the previous element by a space. See Convert Object To Text Use Convert Object To Json block where Object property has a value of DateTime.UtcNow \"\\\"2022-07-01T13:00:00.0000000Z\\\"\" Expression The result shown is an example result. The actual result will show the current date and time on the current computer expressed as the Coordinated Universal Time (UTC) converted to text. Both the example and actual result will use ISO 8601 Standard format for DateTime (i.e. yyyy-MM-ddTHH:mm:ss.fffffffK). See Convert Object To Json Please see Date and Time Formatting for further information on formatting DateTime values, including how Operating System Settings can affect the current culture.\nConvert DateTime to a DateTimeOffset DateTime values will be implicitly cast to DateTimeOffset values if used where a DateTimeOffset is expected.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is DateTime. The Literal Editor is available for Input properties where the data type is DateTime. Expression syntax is not supported within the Literal Editor for the DateTime data type. The Variable Editor is available for InputOutput and Output properties where the data type is DateTime. Known Limitations None\nSee Also Related Data Types DateTimeOffset Related Concepts Working with Date and Time Implicit Casting Culture External Documentation System.DateTime ","categories":"","description":"Used to represent a date and time between `00:00:00.0000000 UTC, January 1, 0001` and `23:59:59.9999999 UTC, December 31, 9999`, in the Gregorian calendar. It can be used wherever a `DateTimeOffset` is expected, and will be implicitly cast.","excerpt":"Used to represent a date and time between `00:00:00.0000000 UTC, January 1, 0001` and `23:59:59.9999999 UTC, December 31, 9999`, in the Gregorian calendar. It can be used wherever a `DateTimeOffset` …","ref":"/docs/reference/data-types/date-and-time/datetime/","tags":"","title":"DateTime"},{"body":"DateTimeComponentType (Cortex.DataTypes.DateAndTime.DateTimeComponentType)\nSummary Values LocalDateTime UtcDateTime Date Time Year Month Day Hour Minute Second Millisecond Offset DayOfYear DayOfWeek Remarks Create a DateTimeComponentType Convert DateTimeComponentType to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent a component of a `DateTimeOffset` (e.g. `Year`, `Month`, `Day`).","excerpt":"Used to represent a component of a `DateTimeOffset` (e.g. `Year`, `Month`, `Day`).","ref":"/docs/reference/data-types/date-and-time/datetimecomponenttype/","tags":"","title":"DateTimeComponentType"},{"body":"DateTimeOffset (System.DateTimeOffset)\nSummary The DateTimeOffset data type is used to represent a date and time between 00:00:00.0000000 UTC, January 1, 0001 and 23:59:59.9999999 UTC, December 31, 9999, in the Gregorian calendar, along with a UTC time offset.\nCategory: Date \u0026 Time Name: DateTimeOffset Full Name: System.DateTimeOffset Alias: N/A Description: A date and time between 00:00:00.0000000 UTC, January 1, 0001 and 23:59:59.9999999 UTC, December 31, 9999, in the Gregorian calendar, along with a UTC time offset. Size: Varies, typically 12 to 16 bytes Default Value: 0001-01-01T00:00:00+00:00 (i.e. DateTimeOffset.MinValue) Can be used as: Object, dynamic Can be cast to: N/A Remarks Create a DateTimeOffset The following table shows some of the ways that a DateTimeOffset can be created.\nAll examples are for a system configured with British culture (i.e. en-GB), and use a local time of 2PM 1st of July 2022 with 1 hour UTC offset, honouring British Summer Time (BST).\nMethod Example Result Editor Support Notes Use DateTimeOffset.Now DateTimeOffset.Now 2022-07-01T14:00:00.0000000+01:00 Expression The result shown is an example result. The actual result will show the current date and time on the current computer, with the offset set to the local time’s offset from Coordinated Universal Time (UTC). See DateTimeOffset.Now. Use DateTimeOffset.UtcNow DateTimeOffset.UtcNow 2022-07-01T13:00:00.0000000+00:00 Expression The result shown is an example result. The actual result will show the current Coordinated Universal Time (UTC) date and time and whose offset is Zero. See DateTimeOffset.UtcNow. Implicit Casting of DateTime DateTime.UtcNow 2022-07-01T13:00:00.0000000+00:00 Expression The result shown is an example result. The actual result will show the current Coordinated Universal Time (UTC) date and time and whose offset is Zero. Use DateTimeOffset.Parse DateTimeOffset.Parse(\"1/7/2022 2:00:00 PM +1:00\") 2022-07-01T14:00:00+01:00 Expression Parses a date string and converts it to a DateTimeOffset using the current culture of the system. In this example it parses \"1/7/2022 2:00:00 PM +1:00\" using en-GB culture and converts it to 2022-07-01T14:00:00+01:00. See DateTimeOffset.Parse Use a DateTimeOffset constructor new DateTimeOffset(2022, 7, 1, 14, 0, 0, 0, new TimeSpan(1, 0, 0)) 2022-07-01T14:00:00+01:00 Expression 2PM 1st July 2022 with 1 hour UTC offset, honouring British Summer Time (BST). See DateTimeOffset Constructors. Use Convert Text To DateTime block where Text property has a value of \"1/7/2022 2:00:00 PM +1:00\" 2022-07-01T14:00:00+01:00 Expression Parses a date string and converts it to a DateTimeOffset. See Convert Text To DateTime Please see Instantiating a DateTimeOffset object for further information.\nA DateTimeOffset can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Notes Year Int32 The year expressed as an Int32 value between 1 and 9999. Month Int32 The month expressed as an Int32 value between 1 and 12. Day Int32 The day expressed as an Int32 value between 1 and the number of days in Month. Hour Int32 The hour expressed as an Int32 value between 0 and 23. Minute Int32 The minute expressed as an Int32 value between 0 and 59. Second Int32 The second expressed as an Int32 value between 0 and 59. Millisecond Int32 The millisecond expressed as an Int32 value between 0 and 999. Offset TimeSpan The UTC Offset expressed as a TimeSpan value between -14 hours and 14 hours. This is calculated as the sum of Offset.Days + Offset.Hours + Offset.Minutes + Offset.Seconds + Offset.Milliseconds. If the value is outside -14 hours and 14 hours an InvalidPropertyValueException will be thrown. Convert DateTimeOffset to Text The following table shows some of the ways that a DateTimeOffset can be converted to text.\nAll examples are for a system configured with British culture (i.e. en-GB), and use a local time of 2PM 1st of July 2022 with 1 hour UTC offset, honouring British Summer Time (BST).\nMethod Example Result Editor Support Notes Use ToString DateTimeOffset.UtcNow.ToString() \"1/7/2022 1:00:00 PM +00:00\" Expression The result shown is an example result. The actual result will show the current Coordinated Universal Time (UTC) date and time and whose offset is Zero converted to text. Both the example and actual result will use the short date pattern for the current culture, the long time pattern for the current culture, and the zzz custom format string, with each element separated from the previous element by a space. See DateTimeOffset.ToString Use Convert.ToString Convert.ToString(DateTimeOffset.UtcNow) \"1/7/2022 1:00:00 PM +00:00\" Expression The result shown is an example result. The actual result will show the current Coordinated Universal Time (UTC) date and time and whose offset is Zero converted to text. Both the example and actual result will use the short date pattern for the current culture, the long time pattern for the current culture, and the zzz custom format string, with each element separated from the previous element by a space. See Convert.ToString Use Convert DateTime To Text block where Date Time property has a value of DateTimeOffset.UtcNow \"2022-07-01T13:00:00.0000000+00:00\" Expression The result shown is an example result. The actual result will show the current Coordinated Universal Time (UTC) date and time and whose offset is Zero converted to text. Both the example and actual result will use ISO 8601 Standard format for DateTimeOffset (i.e. yyyy-MM-ddTHH:mm:ss.fffffffzzz). See Convert DateTime To Text Use Convert Object To Text block where Object property has a value of DateTimeOffset.UtcNow \"1/7/2022 1:00:00 PM +00:00\" Expression The result shown is an example result. The actual result will show the current Coordinated Universal Time (UTC) date and time and whose offset is Zero converted to text. Both the example and actual result will use the short date pattern for the current culture, the long time pattern for the current culture, and the zzz custom format string, with each element separated from the previous element by a space. See Convert Object To Text Use Convert Object To Json block where Object property has a value of DateTimeOffset.UtcNow \"\\\"2022-07-01T13:00:00.0000000+00:00\\\"\" Expression The result shown is an example result. The actual result will show the current Coordinated Universal Time (UTC) date and time and whose offset is Zero converted to text. Both the example and actual result will use ISO 8601 Standard format for DateTimeOffset (i.e. yyyy-MM-ddTHH:mm:ss.fffffffzzz). See Convert Object To Json Please see Date and Time Formatting for further information on formatting DateTimeOffset values, including how Operating System Settings can affect the current culture.\nConvert DateTimeOffset to a DateTime The following table shows some of the ways that a DateTimeOffset can be converted to a DateTime.\nAll examples are for a system configured with British culture (i.e. en-GB), and use a local time of 2PM 1st of July 2022 with 1 hour UTC offset, honouring British Summer Time (BST).\nMethod Example Result Editor Support Notes Use DateTimeOffset.DateTime DateTimeOffset.UtcNow.DateTime 2022-07-01T13:00:00.0000000 Expression Converts DateTimeOffset.UtcNow to a DateTime using the date and time components, but not the offset. See DateTimeOffset.DateTime Use DateTimeOffset.LocalDateTime DateTimeOffset.UtcNow.LocalDateTime 2022-07-01T14:00:00.0000000+01:00 Expression Converts DateTimeOffset.UtcNow to a DateTime relative to the local time. See DateTimeOffset.LocalDateTime Use DateTimeOffset.UtcDateTime DateTimeOffset.UtcNow.UtcDateTime 2022-07-01T13:00:00.0000000Z Expression Converts DateTimeOffset.UtcNow to a DateTime relative to Coordinated Universal Time (UTC). See DateTimeOffset.UtcDateTime Property Editor Support The Expression Editor is available for Input properties where the data type is DateTimeOffset. The Literal Editor is available for Input properties where the data type is DateTimeOffset. Expression syntax is not supported within the Literal Editor for the DateTimeOffset data type. The Variable Editor is available for InputOutput and Output properties where the data type is DateTimeOffset. Known Limitations None\nSee Also Related Data Types DateTime TimeSpan Related Concepts Working with Date and Time Implicit Casting Culture External Documentation System.DateTimeOffset ","categories":"","description":"Used to represent a date and time between `00:00:00.0000000 UTC, January 1, 0001` and `23:59:59.9999999 UTC, December 31, 9999`, in the Gregorian calendar, along with a UTC time offset.","excerpt":"Used to represent a date and time between `00:00:00.0000000 UTC, January 1, 0001` and `23:59:59.9999999 UTC, December 31, 9999`, in the Gregorian calendar, along with a UTC time offset.","ref":"/docs/reference/data-types/date-and-time/datetimeoffset/","tags":"","title":"DateTimeOffset"},{"body":"DayOfWeek (System.DayOfWeek)\nSummary The DayOfWeek data type is used to represent a day of the week from Sunday (i.e. DayOfWeek.Sunday) through Saturday (i.e. DayOfWeek.Saturday).\nDayOfWeek is an enum data type, which means it has a defined set of values, where each value has an associated String name and Int32 value.\nCategory: Date \u0026 Time Name: DayOfWeek Full Name: System.DayOfWeek Alias: N/A Description: A day of the week from Sunday (i.e. DayOfWeek.Sunday) through Saturday (i.e. DayOfWeek.Saturday). Size: 4 bytes Values: DayOfWeek.Sunday where name is \"Sunday\" and value is 0 DayOfWeek.Monday where name is \"Monday\" and value is 1 DayOfWeek.Tuesday where name is \"Tuesday\" and value is 2 DayOfWeek.Wednesday where name is \"Wednesday\" and value is 3 DayOfWeek.Thursday where name is \"Thursday\" and value is 4 DayOfWeek.Friday where name is \"Friday\" and value is 5 DayOfWeek.Saturday where name is \"Saturday\" and value is 6 Default Value: DayOfWeek.Sunday Can be used as: Object, dynamic Can be cast to: Int16 (e.g. (Int16)DayOfWeek.Sunday or (System.Int16)DayOfWeek.Sunday or (short)DayOfWeek.Sunday) Int32 (e.g. (Int32)DayOfWeek.Sunday or (System.Int32)DayOfWeek.Sunday or (int)DayOfWeek.Sunday) Int64 (e.g. (Int64)DayOfWeek.Sunday or (System.Int64)DayOfWeek.Sunday or (long)DayOfWeek.Sunday) Single (e.g. (Single)DayOfWeek.Sunday or (System.Single)DayOfWeek.Sunday or (float)DayOfWeek.Sunday) Double (e.g. (Double)DayOfWeek.Sunday or (System.Double)DayOfWeek.Sunday or (double)DayOfWeek.Sunday) Remarks Create a DayOfWeek The following table shows some of the ways that a DayOfWeek can be created.\nMethod Example Result Editor Support Notes Declare a DayOfWeek literal Sunday DayOfWeek.Sunday Literal Indicates Sunday Monday DayOfWeek.Monday Literal Indicates Monday Tuesday DayOfWeek.Tuesday Literal Indicates Tuesday Wednesday DayOfWeek.Wednesday Literal Indicates Wednesday Thursday DayOfWeek.Thursday Literal Indicates Thursday Friday DayOfWeek.Friday Literal Indicates Friday Saturday DayOfWeek.Saturday Literal Indicates Saturday Use a DayOfWeek expression DayOfWeek.Sunday DayOfWeek.Sunday Expression Indicates Sunday DayOfWeek.Monday DayOfWeek.Monday Expression Indicates Monday DayOfWeek.Tuesday DayOfWeek.Tuesday Expression Indicates Tuesday DayOfWeek.Wednesday DayOfWeek.Wednesday Expression Indicates Wednesday DayOfWeek.Thursday DayOfWeek.Thursday Expression Indicates Thursday DayOfWeek.Friday DayOfWeek.Friday Expression Indicates Friday DayOfWeek.Saturday DayOfWeek.Saturday Expression Indicates Saturday Use Explicit Casting (DayOfWeek)0 DayOfWeek.Sunday Expression Casts 0 to DayOfWeek.Sunday (DayOfWeek)1 DayOfWeek.Monday Expression Casts 1 to DayOfWeek.Monday (DayOfWeek)2 DayOfWeek.Tuesday Expression Casts 2 to DayOfWeek.Tuesday (DayOfWeek)3 DayOfWeek.Wednesday Expression Casts 3 to DayOfWeek.Wednesday (DayOfWeek)4 DayOfWeek.Thursday Expression Casts 4 to DayOfWeek.Thursday (DayOfWeek)5 DayOfWeek.Friday Expression Casts 5 to DayOfWeek.Friday (DayOfWeek)6 DayOfWeek.Saturday Expression Casts 6 to DayOfWeek.Saturday Use Enum.Parse (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Sunday\") DayOfWeek.Sunday Expression Parses \"Sunday\" and converts it to DayOfWeek.Sunday. See Enum.Parse (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Monday\") DayOfWeek.Monday Expression Parses \"Monday\" and converts it to DayOfWeek.Monday. See Enum.Parse (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Tuesday\") DayOfWeek.Tuesday Expression Parses \"Tuesday\" and converts it to DayOfWeek.Tuesday. See Enum.Parse (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Wednesday\") DayOfWeek.Wednesday Expression Parses \"Wednesday\" and converts it to DayOfWeek.Wednesday. See Enum.Parse (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Thursday\") DayOfWeek.Thursday Expression Parses \"Thursday\" and converts it to DayOfWeek.Thursday. See Enum.Parse (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Friday\") DayOfWeek.Friday Expression Parses \"Friday\" and converts it to DayOfWeek.Friday. See Enum.Parse (DayOfWeek)Enum.Parse(typeof(DayOfWeek), \"Saturday\") DayOfWeek.Saturday Expression Parses \"Saturday\" and converts it to DayOfWeek.Saturday. See Enum.Parse Use Enum.ToObject (DayOfWeek)Enum.ToObject(typeof(DayOfWeek), 0) DayOfWeek.Sunday Expression Converts 0 to DayOfWeek.Sunday value. See Enum.ToObject (DayOfWeek)Enum.ToObject(typeof(DayOfWeek), 1) DayOfWeek.Monday Expression Converts 1 to DayOfWeek.Monday value. See Enum.ToObject (DayOfWeek)Enum.ToObject(typeof(DayOfWeek), 2) DayOfWeek.Tuesday Expression Converts 2 to DayOfWeek.Tuesday value. See Enum.ToObject (DayOfWeek)Enum.ToObject(typeof(DayOfWeek), 3) DayOfWeek.Wednesday Expression Converts 3 to DayOfWeek.Wednesday value. See Enum.ToObject (DayOfWeek)Enum.ToObject(typeof(DayOfWeek), 4) DayOfWeek.Thursday Expression Converts 4 to DayOfWeek.Thursday value. See Enum.ToObject (DayOfWeek)Enum.ToObject(typeof(DayOfWeek), 5) DayOfWeek.Friday Expression Converts 5 to DayOfWeek.Friday value. See Enum.ToObject (DayOfWeek)Enum.ToObject(typeof(DayOfWeek), 6) DayOfWeek.Saturday Expression Converts 6 to DayOfWeek.Saturday value. See Enum.ToObject Please see Instantiating an enumeration type for further information.\nConvert DayOfWeek to Text The following table shows some of the ways that a DayOfWeek can be converted to text.\nMethod Example Result Editor Support Notes Use ToString DayOfWeek.Sunday.ToString() \"Sunday\" Expression Converts DayOfWeek.Sunday to \"Sunday\". See Enum.ToString DayOfWeek.Monday.ToString() \"Monday\" Expression Converts DayOfWeek.Monday to \"Monday\". See Enum.ToString DayOfWeek.Tuesday.ToString() \"Tuesday\" Expression Converts DayOfWeek.Tuesday to \"Tuesday\". See Enum.ToString DayOfWeek.Wednesday.ToString() \"Wednesday\" Expression Converts DayOfWeek.Wednesday to \"Wednesday\". See Enum.ToString DayOfWeek.Thursday.ToString() \"Thursday\" Expression Converts DayOfWeek.Thursday to \"Thursday\". See Enum.ToString DayOfWeek.Friday.ToString() \"Friday\" Expression Converts DayOfWeek.Friday to \"Friday\". See Enum.ToString DayOfWeek.Saturday.ToString() \"Saturday\" Expression Converts DayOfWeek.Saturday to \"Saturday\". See Enum.ToString Use Convert.ToString Convert.ToString(DayOfWeek.Sunday) \"Sunday\" Expression Converts DayOfWeek.Sunday to \"Sunday\". See Convert.ToString Convert.ToString(DayOfWeek.Monday) \"Monday\" Expression Converts DayOfWeek.Monday to \"Monday\". See Convert.ToString Convert.ToString(DayOfWeek.Tuesday) \"Tuesday\" Expression Converts DayOfWeek.Tuesday to \"Tuesday\". See Convert.ToString Convert.ToString(DayOfWeek.Wednesday) \"Wednesday\" Expression Converts DayOfWeek.Wednesday to \"Wednesday\". See Convert.ToString Convert.ToString(DayOfWeek.Thursday) \"Thursday\" Expression Converts DayOfWeek.Thursday to \"Thursday\". See Convert.ToString Convert.ToString(DayOfWeek.Friday) \"Friday\" Expression Converts DayOfWeek.Friday to \"Friday\". See Convert.ToString Convert.ToString(DayOfWeek.Saturday) \"Saturday\" Expression Converts DayOfWeek.Saturday to \"Saturday\". See Convert.ToString Use Convert Object To Text block where Object property has a value of DayOfWeek.Sunday \"Sunday\" N/A Converts DayOfWeek.Sunday to \"Sunday\". See Convert Object To Text where Object property has a value of DayOfWeek.Monday \"Monday\" N/A Converts DayOfWeek.Monday to \"Monday\". See Convert Object To Text where Object property has a value of DayOfWeek.Tuesday \"Tuesday\" N/A Converts DayOfWeek.Tuesday to \"Tuesday\". See Convert Object To Text where Object property has a value of DayOfWeek.Wednesday \"Wednesday\" N/A Converts DayOfWeek.Wednesday to \"Wednesday\". See Convert Object To Text where Object property has a value of DayOfWeek.Thursday \"Thursday\" N/A Converts DayOfWeek.Thursday to \"Thursday\". See Convert Object To Text where Object property has a value of DayOfWeek.Friday \"Friday\" N/A Converts DayOfWeek.Friday to \"Friday\". See Convert Object To Text where Object property has a value of DayOfWeek.Saturday \"Saturday\" N/A Converts DayOfWeek.Saturday to \"Saturday\". See Convert Object To Text Use Convert Object To Json block where Object property has a value of DayOfWeek.Sunday \"0\" N/A Converts DayOfWeek.Sunday to \"0\". See Convert Object To Json where Object property has a value of DayOfWeek.Monday \"1\" N/A Converts DayOfWeek.Monday to \"1\". See Convert Object To Json where Object property has a value of DayOfWeek.Tuesday \"2\" N/A Converts DayOfWeek.Tuesday to \"2\". See Convert Object To Json where Object property has a value of DayOfWeek.Wednesday \"3\" N/A Converts DayOfWeek.Wednesday to \"3\". See Convert Object To Json where Object property has a value of DayOfWeek.Thursday \"4\" N/A Converts DayOfWeek.Thursday to \"4\". See Convert Object To Json where Object property has a value of DayOfWeek.Friday \"5\" N/A Converts DayOfWeek.Friday to \"5\". See Convert Object To Json where Object property has a value of DayOfWeek.Saturday \"6\" N/A Converts DayOfWeek.Saturday to \"6\". See Convert Object To Json Please see Formatting enumeration values for further information.\nConvert DayOfWeek to a Number The following table shows some of the ways that a DayOfWeek can be converted to a number.\nMethod Example Result Editor Support Notes Use Explicit Casting (Int32)DayOfWeek.Sunday 0 Expression Casts DayOfWeek.Sunday to 0 (Int32)DayOfWeek.Monday 1 Expression Casts DayOfWeek.Monday to 1 (Int32)DayOfWeek.Tuesday 2 Expression Casts DayOfWeek.Tuesday to 2 (Int32)DayOfWeek.Wednesday 3 Expression Casts DayOfWeek.Wednesday to 3 (Int32)DayOfWeek.Thursday 4 Expression Casts DayOfWeek.Thursday to 4 (Int32)DayOfWeek.Friday 5 Expression Casts DayOfWeek.Friday to 5 (Int32)DayOfWeek.Saturday 6 Expression Casts DayOfWeek.Saturday to 6 Use Convert.ToInt32 Convert.ToInt32(DayOfWeek.Sunday) 0 Expression Converts DayOfWeek.Sunday to 0. See Convert.ToInt32 Convert.ToInt32(DayOfWeek.Monday) 1 Expression Converts DayOfWeek.Monday to 1. See Convert.ToInt32 Convert.ToInt32(DayOfWeek.Tuesday) 2 Expression Converts DayOfWeek.Tuesday to 2. See Convert.ToInt32 Convert.ToInt32(DayOfWeek.Wednesday) 3 Expression Converts DayOfWeek.Wednesday to 3. See Convert.ToInt32 Convert.ToInt32(DayOfWeek.Thursday) 4 Expression Converts DayOfWeek.Thursday to 4. See Convert.ToInt32 Convert.ToInt32(DayOfWeek.Friday) 5 Expression Converts DayOfWeek.Friday to 5. See Convert.ToInt32 Convert.ToInt32(DayOfWeek.Saturday) 6 Expression Converts DayOfWeek.Saturday to 6. See Convert.ToInt32 Property Editor Support The Expression Editor is available for Input properties where the data type is DayOfWeek. The Literal Editor is available for Input properties where the data type is DayOfWeek. The Variable Editor is available for Input, InputOutput and Output properties where the data type is DayOfWeek. Known Limitations None\nSee Also Related Data Types Int32 String Related Concepts Working with Enums Explicit Casting External Documentation System.DayOfWeek System.Enum ","categories":"","description":"Used to represent a day of the week from Sunday (i.e. `DayOfWeek.Sunday`) through Saturday (i.e. `DayOfWeek.Saturday`).","excerpt":"Used to represent a day of the week from Sunday (i.e. `DayOfWeek.Sunday`) through Saturday (i.e. `DayOfWeek.Saturday`).","ref":"/docs/reference/data-types/date-and-time/dayofweek/","tags":"","title":"DayOfWeek"},{"body":"","categories":"","description":"Blocks related to making decisions and branching the path a flow execution takes.","excerpt":"Blocks related to making decisions and branching the path a flow execution takes.","ref":"/docs/reference/blocks/decisions/","tags":"","title":"Decisions"},{"body":"","categories":"","description":"Exceptions related to Decisions","excerpt":"Exceptions related to Decisions","ref":"/docs/reference/exceptions/decisions/","tags":"","title":"Decisions"},{"body":"\rDelete File (Cortex.Blocks.FilesAndFolders.DeleteFile.DeleteFileBlock)\nDescription Deletes a file at the specified File Path.\nExamples Delete a file This example will delete \"C:\\Source\\File.txt\".\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Result Deleting \"C:\\Source\\File.txt\" results in the file \"File.txt\" being deleted from the folder \"C:\\Source\".\nProperties File Path The File Path to delete the file from.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nIf the File Path exists it is permanently deleted; it does not go into a recycle bin.\nIf the File Path does not exist no exception is thrown.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path is invalid (for example, it is on an unmapped drive). The file at the specified File Path is read-only. The file at the specified File Path is in use by another application. The user the flow is executing as does not have the required permissions to delete the file. An unexpected error occurs when deleting the file. PropertyEmptyException Thrown when File Path is empty (i.e. \"\"). PropertyNullException Thrown when File Path is null. Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\File.txt\"). File Path does not exist If the File Path does not exist nothing is deleted, and no exception is thrown.\n","categories":"","description":"Deletes a file at the specified file path.","excerpt":"Deletes a file at the specified file path.","ref":"/docs/reference/blocks/files-and-folders/delete-file/delete-file-block/","tags":"","title":"Delete File"},{"body":"","categories":"","description":"Delete a file or multiple files.","excerpt":"Delete a file or multiple files.","ref":"/docs/reference/blocks/files-and-folders/delete-file/","tags":"","title":"Delete File(s)"},{"body":"\rDelete Files (Cortex.Blocks.FilesAndFolders.DeleteFile.DeleteFilesBlock)\nDescription Deletes files at the specified File Paths.\nExamples Delete files This example will delete files [\"C:\\Source\\File1.txt\", \"C:\\Source\\File2.txt\"].\nProperties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\File1.txt\", @\"C:\\Source\\File2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Result Deleting [\"C:\\Source\\File1.txt\", \"C:\\Source\\File2.txt\"] results in files \"File1.txt\" and \"File2.txt\" being deleted from the folder \"C:\\Source\".\nProperties File Paths The File Paths to delete the files from.\nEach file path in File Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nIf a file path in File Paths exists it is permanently deleted; it does not go into a recycle bin.\nIf a file path in File Paths does not exist no exception is recorded for that file path.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePaths with no value Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException Any file path in File Paths is null or empty (i.e. \"\"). For more information, see Null or Empty File Paths. Any file path in File Paths is duplicated. For more information, see Duplicate File Paths. Any file path in File Paths points to a folder. Any file path in File Paths contains leading spaces. Any file path in File Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. Any file path in File Paths exceeds the system-defined maximum length (typically 32,767 characters). Any file path in File Paths is invalid (for example, it is on an unmapped drive). Any file path in File Paths is read-only. Any file path in File Paths is in use by another application. The user the flow is executing as does not have the required permissions to delete a file in File Paths. An unexpected error occurs when deleting a file in File Paths. PropertyEmptyException Thrown when File Paths does not contain any items. PropertyNullException Thrown when File Paths is null. Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Paths need escaping Each file path in File Paths requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the file path (e.g. @\"C:\\Source\\File.txt\"). File Path does not exist If a file path in File Paths does not exist no exception is recorded for that file path.\nHandling of Exceptions If an exception occurs when trying to delete a file in the File Paths, it will be recorded and the block will continue processing the remaining files. Once all files are processed, recorded exceptions will be thrown within an OperationFailedException.\n","categories":"","description":"Deletes files at the specified file paths.","excerpt":"Deletes files at the specified file paths.","ref":"/docs/reference/blocks/files-and-folders/delete-file/delete-files-block/","tags":"","title":"Delete Files"},{"body":"\rDelete Folder (Cortex.Blocks.FilesAndFolders.DeleteFolder.DeleteFolderBlock)\nDescription Deletes a folder at the specified Folder Path.\nA Recursive option must be set to true to be able to delete a folder that contains files and/or other folders. This is to prevent unintentional and destructive deletion of files and folders.\nExamples Delete an empty folder This example will delete \"C:\\Source\\EmptyFolder\".\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\EmptyFolder\" ($)FolderPath is a variable of type String Recursive ($)Recursive, with value false ($)Recursive is a variable of type Boolean Result Deleting \"C:\\Source\\EmptyFolder\" results in the folder \"EmptyFolder\" being deleted from the folder \"C:\\Source\".\nDelete a folder and its content This example will delete \"C:\\Source\\Folder\" and its content.\nIn this example assume:\n\"C:\\Source\\Folder\" contains: A file named \"FileInFolder.txt\". An empty sub-folder named \"EmptySubFolder\". An sub-folder named \"SubFolder\" that contains. A file named \"FileInSubFolder.txt\". Therefore, recursive must be set to true to ensure child folders and files can be deleted.\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Recursive ($)Recursive, with value true ($)Recursive is a variable of type Boolean Result Deleting \"C:\\Source\\Folder\" and its content results in:\nFile \"FileInSubFolder.txt\" being deleted from the folder \"C:\\Source\\Folder\\SubFolder\". Folder \"SubFolder\" being deleted from the folder \"C:\\Source\\Folder\". Folder \"EmptySubFolder\" being deleted from the folder \"C:\\Source\\Folder\". File \"FileInFolder.txt\" being deleted from the folder \"C:\\Source\\Folder\". Folder \"Folder\" being deleted from the folder \"C:\\Source\". Properties Folder Path The Folder Path to delete the folder from.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value Recursive Recursive option that must be set to true to be able to delete a folder that contains files and/or other folders.\nIf Recursive is set to false, only an empty folder will be able to be deleted; for a non-empty folder an OperationFailedException will be thrown.\nBy default, this is set to false to prevent unintentional and destructive deletion of files and folders.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The folder at the Folder Path is not empty and recursive is false. The folder at the Folder Path or any sub-folders are read-only or contain read-only files and/or folders. The user the flow is executing as does not have the required permissions to delete the folder at the Folder Path or any of its content. An unexpected error occurs when deleting the folder at the Folder Path or any of its content. PropertyEmptyException Thrown when Folder Path is empty (i.e. \"\"). PropertyNullException Thrown when Folder Path is null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path needs escaping Folder Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\"). Folder Path does not exist If the Folder Path does not exist nothing is deleted, and no exception is thrown.\nHandling of Exceptions If an exception occurs when trying to delete Folder Path, an OperationFailedException will be thrown.\n","categories":"","description":"Deletes a folder at the specified folder path.","excerpt":"Deletes a folder at the specified folder path.","ref":"/docs/reference/blocks/files-and-folders/delete-folder/delete-folder-block/","tags":"","title":"Delete Folder"},{"body":"","categories":"","description":"Delete a folder or multiple folders.","excerpt":"Delete a folder or multiple folders.","ref":"/docs/reference/blocks/files-and-folders/delete-folder/","tags":"","title":"Delete Folder(s)"},{"body":"\rDelete Folders (Cortex.Blocks.FilesAndFolders.DeleteFolder.DeleteFoldersBlock)\nDescription Deletes folders at the specified Folder Paths.\nA Recursive option must be set to true to be able to delete folders that contain files and/or other folders. This is to prevent unintentional and destructive deletion of files and folders.\nExamples Delete empty folders This example will delete [\"C:\\Source\\EmptyFolder1\", \"C:\\Source\\EmptyFolder2\"].\nProperties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\EmptyFolder1\", @\"C:\\Source\\EmptyFolder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Recursive ($)Recursive, with value false ($)Recursive is a variable of type Boolean Result Deleting [\"C:\\Source\\EmptyFolder1\", \"C:\\Source\\EmptyFolder2\"] results in the folders \"EmptyFolder1\" and \"EmptyFolder2\" being deleted from the folder \"C:\\Source\".\nDelete folders and their content This example will delete [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content.\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: A file named \"FileInFolder1.txt\". An empty sub-folder named \"EmptySubFolder1\". An sub-folder named \"SubFolder1\" that contains. A file named \"FileInSubFolder1.txt\". \"C:\\Source\\Folder2\" contains: A file named \"FileInFolder2.txt\". An empty sub-folder named \"EmptySubFolder2\". An sub-folder named \"SubFolder2\" that contains. A file named \"FileInSubFolder2.txt\". Therefore, recursive must be set to true to ensure child folders and files can be deleted.\nProperties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Recursive ($)Recursive, with value true ($)Recursive is a variable of type Boolean Result Deleting [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] and their content results in:\nFile \"FileInSubFolder1.txt\" being deleted from the folder \"C:\\Source\\Folder1\\SubFolder1\". File \"FileInSubFolder2.txt\" being deleted from the folder \"C:\\Source\\Folder2\\SubFolder2\". Folder \"SubFolder1\" being deleted from the folder \"C:\\Source\\Folder1\". Folder \"SubFolder2\" being deleted from the folder \"C:\\Source\\Folder2\". Folder \"EmptySubFolder1\" being deleted from the folder \"C:\\Source\\Folder1\". Folder \"EmptySubFolder2\" being deleted from the folder \"C:\\Source\\Folder2\". File \"FileInFolder1.txt\" being deleted from the folder \"C:\\Source\\Folder1\". File \"FileInFolder2.txt\" being deleted from the folder \"C:\\Source\\Folder2\". Folder \"Folder1\" being deleted from the folder \"C:\\Source\". Folder \"Folder2\" being deleted from the folder \"C:\\Source\". Properties Folder Paths The Folder Paths to delete the folders from.\nEach folder path in Folder Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPaths with no value Recursive Recursive option that must be set to true to be able to delete folders that contain files and/or other folders.\nIf Recursive is set to false, only empty folders will be able to be deleted; for non-empty folders an OperationFailedException will be thrown.\nBy default, this is set to false to prevent unintentional and destructive deletion of files and folders.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException Any folder path in Folder Paths is null or empty (i.e. \"\"). For more information, see Null or Empty Folder Paths. Any folder path in Folder Paths is duplicated. For more information, see Duplicate Folder Paths. Any folder path in Folder Paths points to a file. Any folder path in Folder Paths contains leading spaces. Any folder path in Folder Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. Any folder path in Folder Paths exceeds the system-defined maximum length (typically 32,767 characters). Any folder path in Folder Paths is not empty and recursive is false. Any folder path in Folder Paths or any of their sub-folders are read-only or contain read-only files and/or folders. The user the flow is executing as does not have the required permissions to delete a folder in the Folder Paths or any of its content. An unexpected error occurs when deleting a folder in the Folder Paths or any of its content. PropertyEmptyException Thrown when Folder Paths does not contain any items. PropertyNullException Thrown when Folder Paths is null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Paths need escaping Each folder path in Folder Paths requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the folder path (e.g. @\"C:\\Source\"). Folder Path does not exist If a folder path in Folder Paths does not exist no exception is recorded for that folder path.\nHandling of Exceptions If an exception occurs when trying to delete a folder in Folder Paths, it will be recorded and the block will continue processing the remaining folders. Once all folders are processed, recorded exceptions will be thrown within an OperationFailedException.\n","categories":"","description":"Deletes folders at the specified folder paths.","excerpt":"Deletes folders at the specified folder paths.","ref":"/docs/reference/blocks/files-and-folders/delete-folder/delete-folders-block/","tags":"","title":"Delete Folders"},{"body":"","categories":"","description":"Blocks related to working with Dictionaries.","excerpt":"Blocks related to working with Dictionaries.","ref":"/docs/reference/blocks/dictionaries/","tags":"","title":"Dictionaries"},{"body":"","categories":"","description":"Exceptions related to Dictionaries","excerpt":"Exceptions related to Dictionaries","ref":"/docs/reference/exceptions/dictionaries/","tags":"","title":"Dictionaries"},{"body":"Dictionary\u003cTKey, TItem\u003e (System.Collections.Generic.Dictionary\u003cTKey, TItem\u003e)\nSummary The Dictionary\u003cTKey, TItem\u003e data type is used to represent a collection of key/item pairs.\nTKey indicates the data type of the keys used to access the items contained in the collection. TItem indicates the data type of the items contained in the collection. Each TItem can be individually accessed by a key.\nCategory: Collections Name: Dictionary\u003cTKey, TItem\u003e Full Name: System.Collections.Generic.Dictionary\u003cTKey, TItem\u003e Alias: N/A Description: A collection of key/item pairs. TKey indicates the data type of the keys used to access the items contained in the collection. TItem indicates the data type of the items contained in the collection. Each TItem can be individually accessed by a key. Size: Varies Default Value: null Can be used as: IDictionary\u003cTKey, TItem\u003e, IEnumerable, Object, dynamic IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e (e.g. where Dictionary\u003cTKey, TItem\u003e is Dictionary\u003cString, Int32\u003e and IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e is IEnumerable\u003cKeyValuePair\u003cString, Int32\u003e\u003e) Can be cast to: N/A Remarks Create a Dictionary\u003cTKey, TItem\u003e The following table shows some of the ways that a Dictionary\u003cTKey, TItem\u003e can be created.\nMethod Example Result Editor Support Notes Use a Dictionary\u003cTKey, TItem\u003e expression new Dictionary\u003cString, dynamic\u003e() {} Expression Dictionary\u003cString, dynamic\u003e containing zero items new Dictionary\u003cString, String\u003e() { { \"StringKey1\", \"StringValue\" } } { \"StringKey1\": \"StringValue\" } Expression Dictionary\u003cString, String\u003e containing one String item with a String key new Dictionary\u003cString, Boolean\u003e() { { \"StringKey1\", true }, { \"StringKey2\", false } } { \"StringKey1\": true, \"StringKey2\": false } Expression Dictionary\u003cString, Boolean\u003e containing two Boolean items with String keys new Dictionary\u003cString, Int32\u003e() { { \"StringKey1\", 1 }, { \"StringKey2\", 2 }, { \"StringKey3\", 3 } } { \"StringKey1\": 1, \"StringKey2\": 2, \"StringKey3\": 3 } Expression Dictionary\u003cString, Int32\u003e containing three Int32 item with String keys new Dictionary\u003cString, dynamic\u003e() { { \"StringKey1\", \"StringValue\" }, { \"StringKey2\", true }, { \"StringKey3\", 1 } } { \"StringKey1\": \"StringValue\", \"StringKey2\": true, \"StringKey3\": 1 } Expression Dictionary\u003cString, dynamic\u003e containing a String item, a Boolean item and an Int32 item with String keys Convert Dictionary\u003cTKey, TItem\u003e to Text The following table shows some of the ways that a Dictionary\u003cTKey, TItem\u003e can be converted to text.\nMethod Example Result Editor Support Notes Use Convert Object To Json block where Object property has a Dictionary\u003cString, dynamic\u003e value of { \"StringKey1\": \"StringValue\", \"StringKey2\": true, \"StringKey3\": 1 } \"{\\r\\n \\\"StringKey1\\\": \\\"StringValue\\\",\\r\\n \\\"StringKey2\\\": true,\\r\\n \\\"StringKey3\\\": 1\\r\\n}\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is Dictionary\u003cTKey, TItem\u003e. The Literal Editor is not available for Input properties where the data type is Dictionary\u003cTKey, TItem\u003e. The Variable Editor is available for InputOutput and Output properties where the data type is Dictionary\u003cTKey, TItem\u003e. Known Limitations Currently, only certain data types can be used for TKey. These include, but not limited to: String Int32 Double Boolean DateTimeOffset If the data type of TKey is anything other than a String, when viewing the Dictionary\u003cTKey, TItem\u003e in Gateway the key value will be displayed as its ToString() representation (e.g. an Int32 key value of 1 will be displayed as \"1\" instead of 1). See Also Related Data Types IEnumerable IEnumerable\u003cTItem\u003e IDictionary\u003cTKey, TItem\u003e Related Concepts Working with Collections External Documentation System.Collections.Generic.Dictionary\u003cTKey, TItem\u003e ","categories":"","description":"Used to represent a collection of key/item pairs. `TKey` indicates the data type of the keys used to access the items contained in the collection. `TItem` indicates the data type of the items contained in the collection. Each `TItem` can be individually accessed by a key.","excerpt":"Used to represent a collection of key/item pairs. `TKey` indicates the data type of the keys used to access the items contained in the collection. `TItem` indicates the data type of the items …","ref":"/docs/reference/data-types/collections/dictionary-2/","tags":"","title":"Dictionary\u003cTKey, TItem\u003e"},{"body":"Double (System.Double)\nSummary The Double data type is used to represent a fractional, or very large or small number from -1.79769313486232e+308 through 1.79769313486232e+308.\nCategory: Numbers Name: Double Full Name: System.Double Alias: double Description: A fractional, or very large or small number from -1.79769313486232e+308 through 1.79769313486232e+308 Size: 8 bytes Default Value: 0 Can be used as: Object, dynamic Can be cast to: Int16, as long as value is from -32,768 through 32,767 (e.g. (Int16)32767 or (System.Int16)32767 or (short)32767) Int32, as long as value is from -2,147,483,648 through 2,147,483,647 (e.g. (Int32)2147483647 or (System.Int32)2147483647 or (int)2147483647) Int64, as long as value is from -9,223,372,036,854,775,808 through 9,223,372,036,854,775,807 (e.g. (Int64)9223372036854775807 or (System.Int64)9223372036854775807 or (long)9223372036854775807) Single, as long as value is from -3.402823e+38 through 3.402823e+38 (e.g. (Single)3.402823e+38 or (System.Single)3.402823e+38 or (float)3.402823e+38) Remarks Create a Double The following table shows some of the ways that a Double can be created.\nMethod Example Result Editor Support Notes Declare a Double literal 0.0 0.0 Literal, Expression Zero 1.0 1.0 Literal, Expression Positive -1.0 -1.0 Literal, Expression Negative Use a Double expression 1.0 + 1.0 2.0 Expression Add 1.0 - 1.0 0.0 Expression Subtract 1.0 * 1.0 1.0 Expression Multiply 1.0 / 1.0 1.0 Expression Divide Double.MaxValue 1.79769313486232e+308 Expression Maximum value of a Double. See Double.MaxValue Double.MinValue -1.79769313486232e+308 Expression Minimum value of a Double. See Double.MinValue Double.Parse(\"1\") 1.0 Expression Attempts to parse text and convert it to a Double value. See Double.Parse Convert.ToDouble(\"1\") 1.0 Expression Attempts to convert text to a Double value. See Convert.ToDouble Convert Double to Text The following table shows some of the ways that a Double can be converted to text.\nMethod Example Result Editor Support Notes Use ToString 1.0.ToString() \"1\" Expression See Double.ToString ($)DoubleVariable.ToString() where ($)DoubleVariable has a Double value of 1.0 \"1\" Expression See Double.ToString Use Convert.ToString Convert.ToString(1.0) \"1\" Expression See Convert.ToString Convert.ToString(($)DoubleVariable) where ($)DoubleVariable has a Double value of 1.0 \"1\" Expression See Convert.ToString Use Convert Object To Text block where Object property has a Double value of 1.0 \"1\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a Double value of 1.0 \"1.0\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is Double. The Literal Editor is available for Input properties where the data type is Double. Expression syntax is not supported within the Literal Editor for the Double data type. The Variable Editor is available for InputOutput and Output properties where the data type is Double. Known Limitations None\nSee Also Related Data Types Int16 Int32 Int64 Single Related Concepts Working with Numbers External Documentation System.Double ","categories":"","description":"Used to represent a fractional, or very large or small number from `-1.79769313486232e+308` through `1.79769313486232e+308`.","excerpt":"Used to represent a fractional, or very large or small number from `-1.79769313486232e+308` through `1.79769313486232e+308`.","ref":"/docs/reference/data-types/numbers/double/","tags":"","title":"Double"},{"body":"\rDuplicate Folder (Cortex.Blocks.FilesAndFolders.CopyFolder.DuplicateFolderBlock)\nDescription Copies a folder at the specified Folder Path to the same location but with a New Name.\nExamples Duplicate a folder This example will make a copy of \"C:\\Source\\Folder\" at \"C:\\Source\\CopyOfFolder\".\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". A file named \"File.txt\". Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String New Name ($)NewName, with value \"CopyOfFolder\" ($)NewName is a variable of type String Result Making a copy of \"C:\\Source\\Folder\" with a new name of \"CopyOfFolder\" will:\nCreate a new folder at \"C:\\Source\\CopyOfFolder\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder\". Create a new folder at \"C:\\Source\\CopyOfFolder\\SubFolder\" with: The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified set to the time the copy occurred. The Folder attributes copied from \"C:\\Source\\Folder\\SubFolder\". Create a new file at \"C:\\Source\\CopyOfFolder\\File.txt\" with: The content copied from \"C:\\Source\\Folder\\File.txt\". The Date Created set to the time the copy occurred. The Date Accessed set to the time the copy occurred. The Date Modified copied from \"C:\\Source\\Folder\\File.txt\". The File attributes copied from \"C:\\Source\\Folder\\File.txt\". Other Copy Operations If any other folder copying operation is required, the Copy Folder or Copy Folders blocks must be used instead.\nProperties Folder Path The Folder Path to copy the folder and its content from.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value New Name The New Name to use for the copy of the folder.\nThe New Name is case-insensitive and any trailing spaces will be automatically removed.\nThe New Name must be a valid folder name, otherwise an InvalidFolderNameException will be thrown.\nAll child folders and files copied will have the same names as the folders and files copied.\nFor information about valid folder names, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidFolderNameException A folder or file with the New Name already exists. The New Name contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /). The New Name exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException The Folder Path does not exist. The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The Folder Path is a win32 device path (i.e starts with a \"\\\\.\\\"). The Folder Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to copy the folder or any of its content (e.g. not having read access to the Folder Path or its content, or write access to the parent of Folder Path. An unexpected error occurs when copying the folder or any of its content. PropertyEmptyException Thrown when Folder Path or New Name are empty (i.e. \"\"). PropertyNullException Thrown when Folder Path or New Name are null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path needs escaping Folder Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\"). Folder Attributes When copying the folder at or any folder under the specified Folder Path all of the folder’s attributes are also copied.\nFor information about the folder attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nFile Attributes When copying a file under Folder Path all of the file’s attributes are also copied.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nHandling of Exceptions If an exception occurs when trying to copy Folder Path, an OperationFailedException will be thrown.\n","categories":"","description":"Copies a folder at the specified folder path to the same location but with a new name.","excerpt":"Copies a folder at the specified folder path to the same location but with a new name.","ref":"/docs/reference/blocks/files-and-folders/copy-folder/duplicate-folder-block/","tags":"","title":"Duplicate Folder"},{"body":"DuplicateValueException (Cortex.Exceptions.Lists.DuplicateValueException)\nTODO: The exception thrown when…\nThe format of the exception message is as follows:\nTODO: Format How to fix TODO: How to fix…\n","categories":"","description":"The exception thrown when a list contains duplicate values and shouldn't.","excerpt":"The exception thrown when a list contains duplicate values and shouldn't.","ref":"/docs/reference/exceptions/lists/duplicatevalueexception/","tags":"","title":"DuplicateValueException"},{"body":"dynamic Summary Any data type can be used where a dynamic data type is required.\ndynamic data type is identical to the Object data type, except for one difference; dynamic data types do not need to be explicitly cast to other data types to be used, whereas Object data types do.\nCategory: All Name: dynamic Full Name: N/A Alias: N/A Description: Any data type can be used where a dynamic data type is required. dynamic data type is identical to the Object data type, except for one difference; dynamic data types do not need to be explicitly cast to other data types to be used, whereas Object data types do. Size: Varies Default Value: null Can be used as: Object, dynamic Can be cast to: N/A Remarks When is the dynamic Data Type Used? The dynamic data type is only likely to be encountered in the following circumstances:\nAn Input or InputOutput property of a Block can accept any data type An Output property of a Block can return any data type A Collection that contains different data types (e.g. [1, \"Text\", true]) is saved to a Variable Also note, in these circumstances it is more likely to encounter the dynamic data type, rather than Object. See Object vs dynamic for more information.\nObject vs dynamic Object and dynamic data types are identical, except for one difference:\nOnce a variable contains an Object data type, if it needs to be used as its original data type it must be cast back to that data type (e.g. (Int32)($)ObjectVariableContainingAnInteger); a dynamic data type does not. Property Editor Support The Expression Editor is available for Input properties where the data type is dynamic. The Literal Editor is not available for Input properties where the data type is dynamic. The Variable Editor is available for InputOutput and Output properties where the data type is dynamic. Known Limitations None\nSee Also Related Data Types Object Related Concepts None\nExternal Documentation Using dynamic ","categories":"","description":"Any data type can be used where a `dynamic` data type is required. `dynamic` data type is identical to the `Object` data type, except for one difference; `dynamic` data types do not need to be explicitly cast to other data types to be used, whereas `Object` data types do.","excerpt":"Any data type can be used where a `dynamic` data type is required. `dynamic` data type is identical to the `Object` data type, except for one difference; `dynamic` data types do not need to be …","ref":"/docs/reference/data-types/all/dynamic/","tags":"","title":"dynamic"},{"body":"","categories":"","description":"Blocks related to working with Emails.","excerpt":"Blocks related to working with Emails.","ref":"/docs/reference/blocks/email/","tags":"","title":"Email"},{"body":"","categories":"","description":"Information related to working with email.","excerpt":"Information related to working with email.","ref":"/docs/reference/concepts/working-with/email/","tags":"","title":"Email"},{"body":"","categories":"","description":"Exceptions related to Email","excerpt":"Exceptions related to Email","ref":"/docs/reference/exceptions/email/","tags":"","title":"Email"},{"body":"EmailAddress (Cortex.DataTypes.Email.EmailAddress)\nSummary The EmailAddress data type is used to represent an email address.\nCategory: Email Name: EmailAddress Full Name: Cortex.DataTypes.Email.EmailAddress Alias: N/A Description: An email address. Default Value: null Can be used as: EmailAddress, Object, dynamic Can be cast to: N/A Properties Name Name is used to define the display name associated with the email address.\nThis property is not required.\nData Type String Is Advanced true Default Editor Literal Default Value String with value \"\" Address Address is used to define the email address. This must be a valid email address as outlined in RFC 5321.\nData Type String Is Advanced false Default Editor Literal Default Value String with value \"\" Remarks Create an EmailAddress The following table shows some of the ways that an EmailAddress can be created.\nMethod Example Result Editor Support Notes Use an EmailAddress constructor new EmailAddress(name: \"Sender\", address: \"sender@outlook.com\") {\"Name\": \"Sender\", \"Address\": \"sender@outlook.com\"} Expression Name specified new EmailAddress(address: \"sender@outlook.com\") {\"Name\": null, \"Address\": \"sender@outlook.com\"} Expression Name not specified An EmailAddress can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes Name String \"Sender\" Name defines the display name associated with the email address. Address String \"sender@outlook.com\" Address defines the email address. Convert EmailAddress to Text Method Example Result Editor Support Notes Use Convert Object To Json block where Object property has a value of {\"Name\": \"Sender\", \"Address\": \"sender@outlook.com\"} \"{\\r\\n \\\"Name\\\": \\\"Sender\\\",\\r\\n \\\"Address\\\": \\\"sender@outlook.com\\\"\\r\\n}\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is EmailAddress. The Literal Editor is available for Input properties where the data type is EmailAddress. The Variable Editor is available for Input, InputOutput and Output properties where the data type is EmailAddress. Known Limitations None\nSee Also Related Data Types EmailMessage String Related Concepts Working with Email External Documentation RFC 5321 ","categories":"","description":"Used to represent an email address.","excerpt":"Used to represent an email address.","ref":"/docs/reference/data-types/email/emailaddress/","tags":"","title":"EmailAddress"},{"body":"EmailMessage (Cortex.DataTypes.Email.EmailMessage)\nSummary The EmailMessage data type is used to represent an email message.\nCategory: Email Name: EmailMessage Full Name: Cortex.DataTypes.Email.EmailMessage Alias: N/A Description: An email message. Default Value: null Can be used as: EmailMessage, Object, dynamic Can be cast to: N/A Properties To To is used to define the list of recipients for the email message.\nData Type IList\u003cEmailAddress\u003e Is Advanced false Default Editor Expression Default Value IList\u003cEmailAddress\u003e with value new List\u003cEmailAddress\u003e(){ new EmailAddress(\"\") } From From is used to define the sender of the email message.\nData Type EmailAddress Is Advanced false Default Editor Literal Default Value EmailAddress with value shown below: { \"Name\": \"\", \"Address\": \"\" } Cc Cc is used to define the list of CC recipients for the email message.\nData Type IList\u003cEmailAddress\u003e Is Advanced true Default Editor Expression Default Value IList\u003cEmailAddress\u003e with value null Bcc Bcc is used to define the list of BCC recipients for the email message.\nData Type IList\u003cEmailAddress\u003e Is Advanced true Default Editor Expression Default Value IList\u003cEmailAddress\u003e with value null Priority Priority is used to define the priority of the email message, for more information on the range of values this can take, see EmailMessagePriority.\nData Type EmailMessagePriority Is Advanced true Default Editor Literal Default Value EmailMessagePriority with value EmailMessagePriority.Normal Subject Subject is used to define the subject of the email message.\nData Type String Is Advanced false Default Editor Literal Default Value String with value \"\" BodyFormat BodyFormat is used to define the format of the email body, for more information on the range of values this can take, see EmailMessageBodyFormat.\nData Type EmailMessageBodyFormat Is Advanced true Default Editor Literal Default Value EmailMessageBodyFormat with value EmailMessageBodyFormat.Text Body The Body is used to define the body of the email message.\nData Type String Is Advanced false Default Editor Expression Default Value String with value $@\"\" Attachments The Attachments is used to define the list of attachments for the email message, where each item in the list is a path pointing to the attachment.\nThe supported file path formats are dependent on the block being used:\nSend Email Using SMTP Server Block Data Type IList\u003cString\u003e Is Advanced true Default Editor Expression Default Value IList\u003cString\u003e with value null Remarks Create an EmailMessage The following table shows some of the ways that an EmailMessage can be created.\nMethod Example Result Editor Support Notes Use an EmailMessage constructor new EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@outlook.com\"), cc: null, bcc: null, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: null) {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@outlook.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": []} Expression No Advanced Properties properties configured new EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@outlook.com\"), cc: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"cc@outlook.com\") }, bcc: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"bcc@outlook.com\") }, priority: EmailMessagePriority.Urgent, subject: \"Example email subject\", bodyFormat: EmailMessageBodyFormat.Text, body: \"Example email body\", attachments: new List\u003cstring\u003e(){ @\"C:\\attachment.txt\" }) {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@outlook.com\"}, \"Cc\": [{\"Name\": null, \"Address\": \"cc@outlook.com\"}], \"Bcc\": [{\"Name\": null, \"Address\": \"bcc@outlook.com\"}], \"Priority\": \"EmailMessagePriority.Urgent\", \"Subject\": \"Example email subject\", \"BodyFormat\": \"EmailMessageBodyFormat.Text\", \"Body\": \"Example email body\", \"Attachments\": [\"C:\\\\attachment.txt\"]} Expression All Advanced Properties properties configured An EmailMessage can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes To IList\u003cEmailAddress\u003e new List\u003cEmailAddress\u003e(){ \"recipient@outlook.com\" } To defines a list of recipients for the email message. From EmailAddress Name: Sender\nAddress: sender@outlook.com From defines the sender of the email message. Cc IList\u003cEmailAddress\u003e new List\u003cEmailAddress\u003e(){ \"cc@outlook.com\" } Cc defines a list of CC recipients for the email message. Bcc IList\u003cEmailAddress\u003e new List\u003cEmailAddress\u003e(){ \"bcc@outlook.com\" } Bcc defines a list of BCC recipients for the email message. Priority EmailMessagePriority Normal Priority defines the priority of the email message. Subject String Example subject Subject defines the subject of the email message. BodyFormat EmailMessageBodyFormat Text BodyFormat defines the format of the email message body. Body String $@\"Example body\" Body defines the body of the email message. Attachments IList\u003cString\u003e new List\u003cstring\u003e(){ @\"C:\\attachment.txt\" } Attachments defines the list of attachments for the email message. Convert EmailMessage to Text Method Example Result Editor Support Notes Use Convert Object To Json block where Object property has a value of {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@outlook.com\"}, \"Cc\": [{\"Name\": null, \"Address\": \"cc@outlook.com\"}], \"Bcc\": [{\"Name\": null, \"Address\": \"bcc@outlook.com\"}], \"Priority\": \"EmailMessagePriority.Urgent\", \"Subject\": \"Example email subject\", \"BodyFormat\": \"EmailMessageBodyFormat.Text\", \"Body\": \"Example email body\", \"Attachments\": [\"C:\\\\attachment.txt\"]} \"{\\r\\n \\\"To\\\": [\\r\\n {\\r\\n \\\"Name\\\": null,\\r\\n \\\"Address\\\": \\\"recipient@outlook.com\\\"\\r\\n }\\r\\n ],\\r\\n \\\"From\\\": {\\r\\n \\\"Name\\\": null,\\r\\n \\\"Address\\\": \\\"sender@outlook.com\\\"\\r\\n },\\r\\n \\\"Cc\\\": [\\r\\n {\\r\\n \\\"Name\\\": null,\\r\\n \\\"Address\\\": \\\"cc@outlook.com\\\"\\r\\n }\\r\\n ],\\r\\n \\\"Bcc\\\": [\\r\\n {\\r\\n \\\"Name\\\": null,\\r\\n \\\"Address\\\": \\\"bcc@outlook.com\\\"\\r\\n }\\r\\n ],\\r\\n \\\"Priority\\\": 2,\\r\\n \\\"Subject\\\": \\\"Example email subject\\\",\\r\\n \\\"BodyFormat\\\": 0,\\r\\n \\\"Body\\\": \\\"Example email body\\\",\\r\\n \\\"Attachments\\\": [\\r\\n \\\"C:\\\\attachment.txt\\\"\\r\\n ]\\r\\n}\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is EmailMessage. The Literal Editor is available for Input properties where the data type is EmailMessage. The Variable Editor is available for Input, InputOutput and Output properties where the data type is EmailMessage. Known Limitations None\nSee Also Related Data Types EmailAddress EmailMessageBodyFormat EmailMessagePriority IList\u003cTItem\u003e String Related Concepts Working with Email External Documentation None\n","categories":"","description":"Used to represent an email message.","excerpt":"Used to represent an email message.","ref":"/docs/reference/data-types/email/emailmessage/","tags":"","title":"EmailMessage"},{"body":"EmailMessageBodyFormat (Cortex.DataTypes.Email.EmailMessageBodyFormat)\nSummary The EmailMessageBodyFormat data type is used to represent the format of an email message body.\nEmailMessageBodyFormat is an enum data type, which means it has a defined set of values, where each value has an associated String name and Int32 value.\nCategory: Email Name: EmailMessageBodyFormat Full Name: Cortex.DataTypes.Email.EmailMessageBodyFormat Alias: N/A Description: Format of an email message body. Size: 4 bytes Default Value: EmailMessageBodyFormat.Text Can be used as: EmailMessageBodyFormat, Object, dynamic Can be cast to: Int16 (e.g. (Int16)EmailMessageBodyFormat.Text or (System.Int16)EmailMessageBodyFormat.Text or (short)EmailMessageBodyFormat.Text) Int32 (e.g. (Int32)EmailMessageBodyFormat.Text or (System.Int32)EmailMessageBodyFormat.Text or (int)EmailMessageBodyFormat.Text) Int64 (e.g. (Int64)EmailMessageBodyFormat.Text or (System.Int64)EmailMessageBodyFormat.Text or (long)EmailMessageBodyFormat.Text) Single (e.g. (Single)EmailMessageBodyFormat.Text or (System.Single)EmailMessageBodyFormat.Text or (float)EmailMessageBodyFormat.Text) Double (e.g. (Double)EmailMessageBodyFormat.Text or (System.Double)EmailMessageBodyFormat.Text or (double)EmailMessageBodyFormat.Text) Values Text Name: Text Value: Int32 with value 0 Notes: Used when an email message body format is plain text. Html Name: Html Value: Int32 with value 1 Notes: Used when an email message body format is HTML. Remarks Create an EmailMessageBodyFormat The following table shows some of the ways that EmailMessageBodyFormat can be created.\nMethod Example Result Editor Support Notes Declare an EmailMessageBodyFormat literal Text EmailMessageBodyFormat.Text Literal Indicates Text Html EmailMessageBodyFormat.Html Literal Indicates Html Use an EmailMessageBodyFormat expression EmailMessageBodyFormat.Text EmailMessageBodyFormat.Text Expression Indicates Text EmailMessageBodyFormat.Html EmailMessageBodyFormat.Html Expression Indicates Html Use Explicit Casting (EmailMessageBodyFormat)0 EmailMessageBodyFormat.Text Expression Indicates Text (EmailMessageBodyFormat)1 EmailMessageBodyFormat.Html Expression Indicates Html Use Enum.Parse (EmailMessageBodyFormat)Enum.Parse(typeof(EmailMessageBodyFormat), \"Text\") EmailMessageBodyFormat.Text Expression Parses \"Text\" and converts it to EmailMessageBodyFormat.Text. See Enum.Parse (EmailMessageBodyFormat)Enum.Parse(typeof(EmailMessageBodyFormat), \"Html\") EmailMessageBodyFormat.Html Expression Parses \"Html\" and converts it to EmailMessageBodyFormat.Html. See Enum.Parse Use Enum.ToObject (EmailMessageBodyFormat)Enum.ToObject(typeof(EmailMessageBodyFormat), 0) EmailMessageBodyFormat.Text Expression Converts 0 to EmailMessageBodyFormat.Text value. See Enum.ToObject (EmailMessageBodyFormat)Enum.ToObject(typeof(EmailMessageBodyFormat), 1) EmailMessageBodyFormat.Html Expression Converts 1 to EmailMessageBodyFormat.Html value. See Enum.ToObject Please see Instantiating an enumeration type for further information.\nConvert EmailMessageBodyFormat to Text The following table shows some of the ways that a EmailMessageBodyFormat can be converted to text.\nMethod Example Result Editor Support Notes Use ToString EmailMessageBodyFormat.Text.ToString() \"Text\" Expression Converts EmailMessageBodyFormat.Text to \"Text\". See Enum.ToString EmailMessageBodyFormat.Html.ToString() \"Html\" Expression Converts EmailMessageBodyFormat.Html to \"Html\". See Enum.ToString Use Convert.ToString Convert.ToString(EmailMessageBodyFormat.Text) \"Text\" Expression Converts EmailMessageBodyFormat.Text to \"Text\". See Convert.ToString Convert.ToString(EmailMessageBodyFormat.Html) \"Html\" Expression Converts EmailMessageBodyFormat.Html to \"Html\". See Convert.ToString Use Convert Object To Text block where Object property has a value of EmailMessageBodyFormat.Text \"Text\" N/A Converts EmailMessageBodyFormat.Text to \"Text\". See Convert Object To Text where Object property has a value of EmailMessageBodyFormat.Html \"Html\" N/A Converts EmailMessageBodyFormat.Html to \"Html\". See Convert Object To Text Use Convert Object To Json block where Object property has a value of EmailMessageBodyFormat.Text \"0\" N/A Converts EmailMessageBodyFormat.Text to \"0\". See Convert Object To Json where Object property has a value of EmailMessageBodyFormat.Html \"1\" N/A Converts EmailMessageBodyFormat.Html to \"1\". See Convert Object To Json Please see Formatting enumeration values for further information.\nConvert EmailMessageBodyFormat to a Number The following table shows some of the ways that a EmailMessageBodyFormat can be converted to a number.\nMethod Example Result Editor Support Notes Use Explicit Casting (Int32)EmailMessageBodyFormat.Text 0 Expression Casts EmailMessageBodyFormat.Text to 0 (Int32)EmailMessageBodyFormat.Html 1 Expression Casts EmailMessageBodyFormat.Html to 1 Use Convert.ToInt32 Convert.ToInt32(EmailMessageBodyFormat.Text) 0 Expression Converts EmailMessageBodyFormat.Text to 0. See Convert.ToInt32 Convert.ToInt32(EmailMessageBodyFormat.Html) 1 Expression Converts EmailMessageBodyFormat.Html to 1. See Convert.ToInt32 Property Editor Support The Expression Editor is available for Input properties where the data type is EmailMessageBodyFormat. The Literal Editor is available for Input properties where the data type is EmailMessageBodyFormat. The Variable Editor is available for Input, InputOutput and Output properties where the data type is EmailMessageBodyFormat. Known Limitations None\nSee Also Related Data Types EmailMessage Int32 String Related Concepts Explicit Casting Working with Email Working with Enums External Documentation System.Enum ","categories":"","description":"Used to represent the format of an email message body.","excerpt":"Used to represent the format of an email message body.","ref":"/docs/reference/data-types/email/emailmessagebodyformat/","tags":"","title":"EmailMessageBodyFormat"},{"body":"EmailMessagePriority (Cortex.DataTypes.Email.EmailMessagePriority)\nSummary The EmailMessagePriority data type is used to represent the priority of an email message.\nEmailMessagePriority is an enum data type, which means it has a defined set of values, where each value has an associated String name and Int32 value.\nCategory: Email Name: EmailMessagePriority Full Name: Cortex.DataTypes.Email.EmailMessagePriority Alias: N/A Description: Priority of an email message. Size: 4 bytes Default Value: EmailMessagePriority.Normal Can be used as: EmailMessagePriority, Object, dynamic Can be cast to: Int16 (e.g. (Int16)EmailMessagePriority.Normal or (System.Int16)EmailMessagePriority.Normal or (short)EmailMessagePriority.Normal) Int32 (e.g. (Int32)EmailMessagePriority.Normal or (System.Int32)EmailMessagePriority.Normal or (int)EmailMessagePriority.Normal) Int64 (e.g. (Int64)EmailMessagePriority.Normal or (System.Int64)EmailMessagePriority.Normal or (long)EmailMessagePriority.Normal) Single (e.g. (Single)EmailMessagePriority.Normal or (System.Single)EmailMessagePriority.Normal or (float)EmailMessagePriority.Normal) Double (e.g. (Double)EmailMessagePriority.Normal or (System.Double)EmailMessagePriority.Normal or (double)EmailMessagePriority.Normal) Values Normal Name: Normal Value: Int32 with value 0 Notes: Used when an email is marked with normal priority. NonUrgent Name: NonUrgent Value: Int32 with value 1 Notes: Used when an email is marked with non-urgent priority. Urgent Name: Urgent Value: Int32 with value 2 Notes: Used when an email is marked with urgent priority. Remarks Create an EmailMessagePriority The following table shows some of the ways that EmailMessagePriority can be created.\nMethod Example Result Editor Support Notes Declare an EmailMessagePriority literal Normal EmailMessagePriority.Normal Literal Indicates Normal NonUrgent EmailMessagePriority.NonUrgent Literal Indicates NonUrgent Urgent EmailMessagePriority.Urgent Literal Indicates Urgent Use an EmailMessagePriority expression EmailMessagePriority.Normal EmailMessagePriority.Normal Expression Indicates Normal EmailMessagePriority.NonUrgent EmailMessagePriority.NonUrgent Expression Indicates NonUrgent EmailMessagePriority.Urgent EmailMessagePriority.Urgent Expression Indicates Urgent Use Explicit Casting (EmailMessagePriority)0 EmailMessagePriority.Normal Expression Indicates Normal (EmailMessagePriority)1 EmailMessagePriority.NonUrgent Expression Indicates NonUrgent (EmailMessagePriority)2 EmailMessagePriority.Urgent Expression Indicates Urgent Use Enum.Parse (EmailMessagePriority)Enum.Parse(typeof(EmailMessagePriority), \"Normal\") EmailMessagePriority.Normal Expression Parses \"Normal\" and converts it to EmailMessagePriority.Normal. See Enum.Parse (EmailMessagePriority)Enum.Parse(typeof(EmailMessagePriority), \"NonUrgent\") EmailMessagePriority.NonUrgent Expression Parses \"NonUrgent\" and converts it to EmailMessagePriority.NonUrgent. See Enum.Parse (EmailMessagePriority)Enum.Parse(typeof(EmailMessagePriority), \"Urgent\") EmailMessagePriority.Urgent Expression Parses \"Urgent\" and converts it to EmailMessagePriority.Urgent. See Enum.Parse Use Enum.ToObject (EmailMessagePriority)Enum.ToObject(typeof(EmailMessagePriority), 0) EmailMessagePriority.Normal Expression Converts 0 to EmailMessagePriority.Normal value. See Enum.ToObject (EmailMessagePriority)Enum.ToObject(typeof(EmailMessagePriority), 1) EmailMessagePriority.NonUrgent Expression Converts 1 to EmailMessagePriority.NonUrgent value. See Enum.ToObject (EmailMessagePriority)Enum.ToObject(typeof(EmailMessagePriority), 2) EmailMessagePriority.Urgent Expression Converts 2 to EmailMessagePriority.Urgent value. See Enum.ToObject Please see Instantiating an enumeration type for further information.\nConvert EmailMessagePriority to Text The following table shows some of the ways that a EmailMessagePriority can be converted to text.\nMethod Example Result Editor Support Notes Use ToString EmailMessagePriority.Normal.ToString() \"Normal\" Expression Converts EmailMessagePriority.Normal to \"Normal\". See Enum.ToString EmailMessagePriority.NonUrgent.ToString() \"NonUrgent\" Expression Converts EmailMessagePriority.NonUrgent to \"NonUrgent\". See Enum.ToString EmailMessagePriority.Urgent.ToString() \"Urgent\" Expression Converts EmailMessagePriority.Urgent to \"Urgent\". See Enum.ToString Use Convert.ToString Convert.ToString(EmailMessagePriority.Normal) \"Normal\" Expression Converts EmailMessagePriority.Normal to \"Normal\". See Convert.ToString Convert.ToString(EmailMessagePriority.NonUrgent) \"NonUrgent\" Expression Converts EmailMessagePriority.NonUrgent to \"NonUrgent\". See Convert.ToString Convert.ToString(EmailMessagePriority.Urgent) \"Urgent\" Expression Converts EmailMessagePriority.Urgent to \"Urgent\". See Convert.ToString Use Convert Object To Text block where Object property has a value of EmailMessagePriority.Normal \"Normal\" N/A Converts EmailMessagePriority.Normal to \"Normal\". See Convert Object To Text where Object property has a value of EmailMessagePriority.NonUrgent \"NonUrgent\" N/A Converts EmailMessagePriority.NonUrgent to \"NonUrgent\". See Convert Object To Text where Object property has a value of EmailMessagePriority.Urgent \"Urgent\" N/A Converts EmailMessagePriority.Urgent to \"Urgent\". See Convert Object To Text Use Convert Object To Json block where Object property has a value of EmailMessagePriority.Normal \"0\" N/A Converts EmailMessagePriority.Normal to \"0\". See Convert Object To Json where Object property has a value of EmailMessagePriority.NonUrgent \"1\" N/A Converts EmailMessagePriority.NonUrgent to \"1\". See Convert Object To Json where Object property has a value of EmailMessagePriority.Urgent \"2\" N/A Converts EmailMessagePriority.Urgent to \"2\". See Convert Object To Json Please see Formatting enumeration values for further information.\nConvert EmailMessagePriority to a Number The following table shows some of the ways that a EmailMessagePriority can be converted to a number.\nMethod Example Result Editor Support Notes Use Explicit Casting (Int32)EmailMessagePriority.Normal 0 Expression Casts EmailMessagePriority.Normal to 0 (Int32)EmailMessagePriority.NonUrgent 1 Expression Casts EmailMessagePriority.NonUrgent to 1 (Int32)EmailMessagePriority.Urgent 2 Expression Casts EmailMessagePriority.Urgent to 2 Use Convert.ToInt32 Convert.ToInt32(EmailMessagePriority.Normal) 0 Expression Converts EmailMessagePriority.Normal to 0. See Convert.ToInt32 Convert.ToInt32(EmailMessagePriority.NonUrgent) 1 Expression Converts EmailMessagePriority.NonUrgent to 1. See Convert.ToInt32 Convert.ToInt32(EmailMessagePriority.Urgent) 2 Expression Converts EmailMessagePriority.Urgent to 2. See Convert.ToInt32 Property Editor Support The Expression Editor is available for Input properties where the data type is EmailMessagePriority. The Literal Editor is available for Input properties where the data type is EmailMessagePriority. The Variable Editor is available for Input, InputOutput and Output properties where the data type is EmailMessagePriority. Known Limitations None\nSee Also Related Data Types EmailMessage Int32 String Related Concepts Explicit Casting Working with Email Working with Enums External Documentation System.Enum ","categories":"","description":"Used to represent the priority of an email message.","excerpt":"Used to represent the priority of an email message.","ref":"/docs/reference/data-types/email/emailmessagepriority/","tags":"","title":"EmailMessagePriority"},{"body":"EmailSessionErrorCode (Cortex.DataTypes.Email.EmailSessionErrorCode)\nSummary The EmailSessionErrorCode data type is used to represent an error code explaining the reason an EmailSessionException occurred. For more information on the exception itself, see EmailSessionException.\nEmailSessionErrorCode is an enum data type, which means it has a defined set of values, where each value has an associated String name and Int32 value.\nCategory: Email Name: EmailSessionErrorCode Full Name: Cortex.DataTypes.Email.EmailSessionErrorCode Alias: N/A Description: Error code explaining the reason an EmailSessionException occurred. Size: 4 bytes Default Value: (EmailSessionErrorCode)0 Can be used as: EmailSessionErrorCode, Object, dynamic Can be cast to: Int16 (e.g. (Int16)EmailSessionErrorCode.InvalidPort or (System.Int16)EmailSessionErrorCode.InvalidPort or (short)EmailSessionErrorCode.InvalidPort) Int32 (e.g. (Int32)EmailSessionErrorCode.InvalidPort or (System.Int32)EmailSessionErrorCode.InvalidPort or (int)EmailSessionErrorCode.InvalidPort) Int64 (e.g. (Int64)EmailSessionErrorCode.InvalidPort or (System.Int64)EmailSessionErrorCode.InvalidPort or (long)EmailSessionErrorCode.InvalidPort) Single (e.g. (Single)EmailSessionErrorCode.InvalidPort or (System.Single)EmailSessionErrorCode.InvalidPort or (float)EmailSessionErrorCode.InvalidPort) Double (e.g. (Double)EmailSessionErrorCode.InvalidPort or (System.Double)EmailSessionErrorCode.InvalidPort or (double)EmailSessionErrorCode.InvalidPort) Values InvalidPort Name: InvalidPort Value: Int32 with value 100 Notes: Used when an EmailSessionException occured due to an invalid Port being provided in ServerDetails. See Invalid Port. InvalidHost Name: InvalidHost Value: Int32 with value 101 Notes: Used when an EmailSessionException occured due to an invalid Host being provided in ServerDetails. See Invalid Host. SslRequired Name: SslRequired Value: Int32 with value 200 Notes: Used when an EmailSessionException occured due to UseSsl being set to false in ServerDetails when trying to establish a connection on a Port which requires SSL. See SSL Required. SslUnsupported Name: SslUnsupported Value: Int32 with value 201 Notes: Used when an EmailSessionException occured due to UseSsl being set to true in ServerDetails when trying to establish a connection on a Port which does not support SSL. See SSL Unsupported. InvalidUserCredentials Name: InvalidUserCredentials Value: Int32 with value 300 Notes: Used when an EmailSessionException occured due to an invalid Username and Password combination being provided in UserCredentials. See Invalid User Credentials. InvalidCertificate Name: InvalidCertificate Value: Int32 with value 400 Notes: Used when an EmailSessionException occured due to an invalid CertificatePath and CertificatePassword combination being provided in GmailOAuthCertificateCredentials. See Invalid SSL Certificate. InvalidGmailClientCredentials Name: InvalidGmailClientCredentials Value: Int32 with value 401 Notes: Used when an EmailSessionException occured due to an invalid FromAddress and ClientId combination being provided in GmailOAuthCertificateCredentials. See Invalid Gmail Client Credentials. Remarks Create an EmailSessionErrorCode The following table shows some of the ways that EmailSessionErrorCode can be created.\nMethod Example Result Editor Support Notes Use an EmailSessionErrorCode expression EmailSessionErrorCode.InvalidPort EmailSessionErrorCode.InvalidPort Expression Indicates an EmailSessionException occured due to an invalid Port being provided in ServerDetails EmailSessionErrorCode.InvalidHost EmailSessionErrorCode.InvalidHost Expression Indicates an EmailSessionException occured due to an invalid Host being provided in ServerDetails EmailSessionErrorCode.SslRequired EmailSessionErrorCode.SslRequired Expression Indicates an EmailSessionException occured due to UseSsl being set to false in ServerDetails when trying to establish a connection on a Port which requires SSL EmailSessionErrorCode.SslUnsupported EmailSessionErrorCode.SslUnsupported Expression Indicates an EmailSessionException occured due to UseSsl being set to true in ServerDetails when trying to establish a connection on a Port which does not support SSL EmailSessionErrorCode.InvalidUserCredentials EmailSessionErrorCode.InvalidUserCredentials Expression Indicates an EmailSessionException occured due to an invalid Username and Password combination being provided in UserCredentials EmailSessionErrorCode.InvalidCertificate EmailSessionErrorCode.InvalidCertificate Expression Indicates an EmailSessionException occured due to an invalid CertificatePath and CertificatePassword combination being provided in GmailOAuthCertificateCredentials EmailSessionErrorCode.InvalidGmailClientCredentials EmailSessionErrorCode.InvalidGmailClientCredentials Expression Indicates an EmailSessionException occured due to an invalid FromAddress and ClientId combination being provided in GmailOAuthCertificateCredentials Use Explicit Casting (EmailSessionErrorCode)100 EmailSessionErrorCode.InvalidPort Expression Indicates an EmailSessionException occured due to an invalid Port being provided in ServerDetails (EmailSessionErrorCode)101 EmailSessionErrorCode.InvalidHost Expression Indicates an EmailSessionException occured due to an invalid Host being provided in ServerDetails (EmailSessionErrorCode)200 EmailSessionErrorCode.SslRequired Expression Indicates an EmailSessionException occured due to UseSsl being set to false in ServerDetails when trying to establish a connection on a Port which requires SSL (EmailSessionErrorCode)201 EmailSessionErrorCode.SslUnsupported Expression Indicates an EmailSessionException occured due to UseSsl being set to true in ServerDetails when trying to establish a connection on a Port which does not support SSL (EmailSessionErrorCode)300 EmailSessionErrorCode.InvalidUserCredentials Expression Indicates an EmailSessionException occured due to an invalid Username and Password combination being provided in UserCredentials (EmailSessionErrorCode)400 EmailSessionErrorCode.InvalidCertificate Expression Indicates an EmailSessionException occured due to an invalid CertificatePath and CertificatePassword combination being provided in GmailOAuthCertificateCredentials (EmailSessionErrorCode)401 EmailSessionErrorCode.InvalidGmailClientCredentials Expression Indicates an EmailSessionException occured due to an invalid FromAddress and ClientId combination being provided in GmailOAuthCertificateCredentials Use Enum.Parse (EmailSessionErrorCode)Enum.Parse(typeof(EmailSessionErrorCode), \"InvalidPort\") EmailSessionErrorCode.InvalidPort Expression Parses \"InvalidPort\" and converts it to EmailSessionErrorCode.InvalidPort. See Enum.Parse (EmailSessionErrorCode)Enum.Parse(typeof(EmailSessionErrorCode), \"InvalidHost\") EmailSessionErrorCode.InvalidHost Expression Parses \"InvalidHost\" and converts it to EmailSessionErrorCode.InvalidHost. See Enum.Parse (EmailSessionErrorCode)Enum.Parse(typeof(EmailSessionErrorCode), \"SslRequired\") EmailSessionErrorCode.SslRequired Expression Parses \"SslRequired\" and converts it to EmailSessionErrorCode.SslRequired. See Enum.Parse (EmailSessionErrorCode)Enum.Parse(typeof(EmailSessionErrorCode), \"SslUnsupported\") EmailSessionErrorCode.SslUnsupported Expression Parses \"SslUnsupported\" and converts it to EmailSessionErrorCode.SslUnsupported. See Enum.Parse (EmailSessionErrorCode)Enum.Parse(typeof(EmailSessionErrorCode), \"InvalidUserCredentials\") EmailSessionErrorCode.InvalidUserCredentials Expression Parses \"InvalidUserCredentials\" and converts it to EmailSessionErrorCode.InvalidUserCredentials. See Enum.Parse (EmailSessionErrorCode)Enum.Parse(typeof(EmailSessionErrorCode), \"InvalidCertificate\") EmailSessionErrorCode.InvalidCertificate Expression Parses \"InvalidCertificate\" and converts it to EmailSessionErrorCode.InvalidCertificate. See Enum.Parse (EmailSessionErrorCode)Enum.Parse(typeof(EmailSessionErrorCode), \"InvalidGmailClientCredentials\") EmailSessionErrorCode.InvalidGmailClientCredentials Expression Parses \"InvalidGmailClientCredentials\" and converts it to EmailSessionErrorCode.InvalidGmailClientCredentials. See Enum.Parse Use Enum.ToObject (EmailSessionErrorCode)Enum.ToObject(typeof(EmailSessionErrorCode), 100) EmailSessionErrorCode.InvalidPort Expression Converts 100 to EmailSessionErrorCode.InvalidPort value. See Enum.ToObject (EmailSessionErrorCode)Enum.ToObject(typeof(EmailSessionErrorCode), 101) EmailSessionErrorCode.InvalidHost Expression Converts 101 to EmailSessionErrorCode.InvalidHost value. See Enum.ToObject (EmailSessionErrorCode)Enum.ToObject(typeof(EmailSessionErrorCode), 200) EmailSessionErrorCode.SslRequired Expression Converts 200 to EmailSessionErrorCode.SslRequired value. See Enum.ToObject (EmailSessionErrorCode)Enum.ToObject(typeof(EmailSessionErrorCode), 201) EmailSessionErrorCode.SslUnsupported Expression Converts 201 to EmailSessionErrorCode.SslUnsupported value. See Enum.ToObject (EmailSessionErrorCode)Enum.ToObject(typeof(EmailSessionErrorCode), 300) EmailSessionErrorCode.InvalidUserCredentials Expression Converts 300 to EmailSessionErrorCode.InvalidUserCredentials value. See Enum.ToObject (EmailSessionErrorCode)Enum.ToObject(typeof(EmailSessionErrorCode), 400) EmailSessionErrorCode.InvalidCertificate Expression Converts 400 to EmailSessionErrorCode.InvalidCertificate value. See Enum.ToObject (EmailSessionErrorCode)Enum.ToObject(typeof(EmailSessionErrorCode), 401) EmailSessionErrorCode.InvalidGmailClientCredentials Expression Converts 401 to EmailSessionErrorCode.InvalidGmailClientCredentials value. See Enum.ToObject Please see Instantiating an enumeration type for further information.\nConvert EmailSessionErrorCode to Text The following table shows some of the ways that an EmailSessionErrorCode can be converted to text.\nMethod Example Result Editor Support Notes Use ToString EmailSessionErrorCode.InvalidPort.ToString() \"InvalidPort\" Expression Converts EmailSessionErrorCode.InvalidPort to \"InvalidPort\". See Enum.ToString EmailSessionErrorCode.InvalidHost.ToString() \"InvalidHost\" Expression Converts EmailSessionErrorCode.InvalidHost to \"InvalidHost\". See Enum.ToString EmailSessionErrorCode.SslRequired.ToString() \"SslRequired\" Expression Converts EmailSessionErrorCode.SslRequired to \"SslRequired\". See Enum.ToString EmailSessionErrorCode.SslUnsupported.ToString() \"SslUnsupported\" Expression Converts EmailSessionErrorCode.SslUnsupported to \"SslUnsupported\". See Enum.ToString EmailSessionErrorCode.InvalidUserCredentials.ToString() \"InvalidUserCredentials\" Expression Converts EmailSessionErrorCode.InvalidUserCredentials to \"InvalidUserCredentials\". See Enum.ToString EmailSessionErrorCode.InvalidCertificate.ToString() \"InvalidCertificate\" Expression Converts EmailSessionErrorCode.InvalidCertificate to \"InvalidCertificate\". See Enum.ToString EmailSessionErrorCode.InvalidGmailClientCredentials.ToString() \"InvalidGmailClientCredentials\" Expression Converts EmailSessionErrorCode.InvalidGmailClientCredentials to \"InvalidGmailClientCredentials\". See Enum.ToString Use Convert.ToString Convert.ToString(EmailSessionErrorCode.InvalidPort) \"InvalidPort\" Expression Converts EmailSessionErrorCode.InvalidPort to \"InvalidPort\". See Convert.ToString Convert.ToString(EmailSessionErrorCode.InvalidHost) \"InvalidHost\" Expression Converts EmailSessionErrorCode.InvalidHost to \"InvalidHost\". See Convert.ToString Convert.ToString(EmailSessionErrorCode.SslRequired) \"SslRequired\" Expression Converts EmailSessionErrorCode.SslRequired to \"SslRequired\". See Convert.ToString Convert.ToString(EmailSessionErrorCode.SslUnsupported) \"SslUnsupported\" Expression Converts EmailSessionErrorCode.SslUnsupported to \"SslUnsupported\". See Convert.ToString Convert.ToString(EmailSessionErrorCode.InvalidUserCredentials) \"InvalidUserCredentials\" Expression Converts EmailSessionErrorCode.InvalidUserCredentials to \"InvalidUserCredentials\". See Convert.ToString Convert.ToString(EmailSessionErrorCode.InvalidCertificate) \"InvalidCertificate\" Expression Converts EmailSessionErrorCode.InvalidCertificate to \"InvalidCertificate\". See Convert.ToString Convert.ToString(EmailSessionErrorCode.InvalidGmailClientCredentials) \"InvalidGmailClientCredentials\" Expression Converts EmailSessionErrorCode.InvalidGmailClientCredentials to \"InvalidGmailClientCredentials\". See Convert.ToString Use Convert Object To Text block where Object property has a value of EmailSessionErrorCode.InvalidPort \"InvalidPort\" N/A Converts EmailSessionErrorCode.InvalidPort to \"InvalidPort\". See Convert Object To Text where Object property has a value of EmailSessionErrorCode.InvalidHost \"InvalidHost\" N/A Converts EmailSessionErrorCode.InvalidHost to \"InvalidHost\". See Convert Object To Text where Object property has a value of EmailSessionErrorCode.SslRequired \"SslRequired\" N/A Converts EmailSessionErrorCode.SslRequired to \"SslRequired\". See Convert Object To Text where Object property has a value of EmailSessionErrorCode.SslUnsupported \"SslUnsupported\" N/A Converts EmailSessionErrorCode.SslUnsupported to \"SslUnsupported\". See Convert Object To Text where Object property has a value of EmailSessionErrorCode.InvalidUserCredentials \"InvalidUserCredentials\" N/A Converts EmailSessionErrorCode.InvalidUserCredentials to \"InvalidUserCredentials\". See Convert Object To Text where Object property has a value of EmailSessionErrorCode.InvalidCertificate \"InvalidCertificate\" N/A Converts EmailSessionErrorCode.InvalidCertificate to \"InvalidCertificate\". See Convert Object To Text where Object property has a value of EmailSessionErrorCode.InvalidGmailClientCredentials \"InvalidGmailClientCredentials\" N/A Converts EmailSessionErrorCode.InvalidGmailClientCredentials to \"InvalidGmailClientCredentials\". See Convert Object To Text Use Convert Object To Json block where Object property has a value of EmailSessionErrorCode.InvalidPort \"100\" N/A Converts EmailSessionErrorCode.InvalidPort to \"100\". See Convert Object To Json where Object property has a value of EmailSessionErrorCode.InvalidHost \"101\" N/A Converts EmailSessionErrorCode.InvalidHost to \"101\". See Convert Object To Json where Object property has a value of EmailSessionErrorCode.SslRequired \"200\" N/A Converts EmailSessionErrorCode.SslRequired to \"200\". See Convert Object To Json where Object property has a value of EmailSessionErrorCode.SslUnsupported \"201\" N/A Converts EmailSessionErrorCode.SslUnsupported to \"201\". See Convert Object To Json where Object property has a value of EmailSessionErrorCode.InvalidUserCredentials \"300\" N/A Converts EmailSessionErrorCode.InvalidUserCredentials to \"300\". See Convert Object To Json where Object property has a value of EmailSessionErrorCode.InvalidCertificate \"400\" N/A Converts EmailSessionErrorCode.InvalidCertificate to \"400\". See Convert Object To Json where Object property has a value of EmailSessionErrorCode.InvalidGmailClientCredentials \"401\" N/A Converts EmailSessionErrorCode.InvalidGmailClientCredentials to \"401\". See Convert Object To Json Please see Formatting enumeration values for further information.\nConvert EmailSessionErrorCode to a Number The following table shows some of the ways that an EmailSessionErrorCode can be converted to a number.\nMethod Example Result Editor Support Notes Use Explicit Casting (Int32)EmailSessionErrorCode.InvalidPort 100 Expression Casts EmailSessionErrorCode.InvalidPort to 100 (Int32)EmailSessionErrorCode.InvalidHost 101 Expression Casts EmailSessionErrorCode.InvalidHost to 101 (Int32)EmailSessionErrorCode.SslRequired 200 Expression Casts EmailSessionErrorCode.SslRequired to 200 (Int32)EmailSessionErrorCode.SslUnsupported 201 Expression Casts EmailSessionErrorCode.SslUnsupported to 201 (Int32)EmailSessionErrorCode.InvalidUserCredentials 300 Expression Casts EmailSessionErrorCode.InvalidUserCredentials to 300 (Int32)EmailSessionErrorCode.InvalidCertificate 400 Expression Casts EmailSessionErrorCode.InvalidCertificate to 400 (Int32)EmailSessionErrorCode.InvalidGmailClientCredentials 401 Expression Casts EmailSessionErrorCode.InvalidGmailClientCredentials to 401 Use Convert.ToInt32 Convert.ToInt32(EmailSessionErrorCode.InvalidPort) 100 Expression Converts EmailSessionErrorCode.InvalidPort to 100. See Convert.ToInt32 Convert.ToInt32(EmailSessionErrorCode.InvalidHost) 101 Expression Converts EmailSessionErrorCode.InvalidHost to 101. See Convert.ToInt32 Convert.ToInt32(EmailSessionErrorCode.SslRequired) 200 Expression Converts EmailSessionErrorCode.SslRequired to 200. See Convert.ToInt32 Convert.ToInt32(EmailSessionErrorCode.SslUnsupported) 201 Expression Converts EmailSessionErrorCode.SslUnsupported to 201. See Convert.ToInt32 Convert.ToInt32(EmailSessionErrorCode.InvalidUserCredentials) 300 Expression Converts EmailSessionErrorCode.InvalidUserCredentials to 300. See Convert.ToInt32 Convert.ToInt32(EmailSessionErrorCode.InvalidCertificate) 400 Expression Converts EmailSessionErrorCode.InvalidCertificate to 400. See Convert.ToInt32 Convert.ToInt32(EmailSessionErrorCode.InvalidGmailClientCredentials) 401 Expression Converts EmailSessionErrorCode.InvalidGmailClientCredentials to 401. See Convert.ToInt32 Property Editor Support The Expression Editor is available for Input properties where the data type is EmailSessionErrorCode. The Literal Editor is available for Input properties where the data type is EmailSessionErrorCode. The Variable Editor is available for Input, InputOutput and Output properties where the data type is EmailSessionErrorCode. Known Limitations Currently for the SslUnsupported error code, there are numerous reasons for why the exception may have occurred. For more information, see SSL Unsupported.\nIn the future this may change.\nSee Also Related Data Types EmailSessionException Int32 String Related Concepts Explicit Casting Working with Email Working with Enums External Documentation System.Enum ","categories":"","description":"Used to represent an error code explaining the reason an `EmailSessionException` occurred.","excerpt":"Used to represent an error code explaining the reason an `EmailSessionException` occurred.","ref":"/docs/reference/data-types/email/emailsessionerrorcode/","tags":"","title":"EmailSessionErrorCode"},{"body":"EmailSessionException (Cortex.Exceptions.Email.EmailSessionException)\nDescription The exception thrown when an issue occurs while opening a session with a mail server.\nThere are multiple reasons that this exception can be thrown:\nInvalid Port Invalid Host SSL Required SSL Unsupported Invalid User Credentials Invalid SSL Certificate Invalid Gmail Client Credentials Reasons Invalid Port A Category of Socket and an Error Code of 100 indicates that the Port provided in the ServerDetails is invalid.\nMessage Format The format of the Message is as follows:\n\"The connection attempt to 'Host' ('\u003chost\u003e') on 'Port' (\u003cport\u003e) failed. The 'Server Details' in 'Email Session Details' has been provided a port that does not exist or the connection timed out. Please click the HelpLink for more information on how to fix this.\" where:\n\u003chost\u003e is the address of the mail server that a session is being opened with \u003cport\u003e is the port on the mail server that a session is being opened with How to Fix Provide a valid Port between the Int32 values 1 and 65535 in the ServerDetails and ensure that the mail server is up and running without issues.\nInvalid Host A Category of Socket and an Error Code of 101 indicates that the Host provided in the ServerDetails is invalid.\nMessage Format \"Invalid 'Host' ('\u003chost\u003e') provided. The 'Server Details' in 'Email Session Details' has been provided a host that does not exist. Please click the HelpLink for more information on how to fix this.\" where:\n\u003chost\u003e is the address of the mail server that a session is being opened with How to Fix Provide a valid Host in the ServerDetails.\nSSL Required A Category of SSL and an Error Code of 200 indicates that SSL is required. More specifically, the mail server is expecting that SSL is used as soon as the connection is established.\nMessage Format \"The connection could not be established or disconnected unexpectedly. Check if the 'Port' (\u003cport\u003e) provided requires that 'Use SSL' be set to true. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cport\u003e is the port on the mail server that a session is being opened with How to Fix Change UseSsl in the ServerDetails to true, or make a connection on a Port which does not require SSL.\nSSL Unsupported A Category of SSL and an Error Code of 201 indicates that one of the following issues occurred:\nAn SSL connection is not supported. More specifically, the mail server either does not support SSL connections or only supports SSL connections via the STARTTLS command. Certificate on the Host is expired, untrusted or invalid Certificate replaced by anti-virus software in order to scan web traffic resulting in failed certificate validation CRL server is down Message Format \"The connection could not be established or disconnected unexpectedly. Check if the 'Port' (\u003cport\u003e) provided requires that 'Use SSL' be set to false. If this is not the case, check the inner exception. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cport\u003e is the port on the mail server that a session is being opened with How to Fix Change UseSsl in the ServerDetails to false, or make a connection on a port which supports SSL.\nIf the above suggestion does not fix the problem, check if the anti-virus software on the server executing the flow is replacing the SSL certificate in order to scan the web traffic, and change the settings appropriately if needed.\nIf the issue persists, please check the inner exception as instructed by the Message.\nInvalid User Credentials A Category of UserCredentials and an Error Code of 300 indicates that the Username and Password combination provided in the UserCredentials is invalid.\nMessage Format \"The provided 'Username' and 'Password' is incorrect. The 'User Credentials' in 'Email Session Details' has been provided an incorrect username and password combination. Please click the HelpLink for more information on how to fix this.\" How to Fix Provide a valid Username and Password combination in the UserCredentials.\nInvalid SSL Certificate A Category of OAuthCredentials and an Error Code of 400 indicates that one of the following issues occurred:\nAn invalid CertificatePath and CertificatePassword combination has been provided in the GmailOAuthCertificateCredentials The CertificatePath in the GmailOAuthCertificateCredentials points to an invalid SSL certificate Message Format \"The 'Certificate Path' ('\u003ccertificate-path\u003e') or 'Certificate Password' is invalid. The 'Gmail OAuth Certificate Credentials' in 'Email Session Details' has been provided an incorrect certificate path or certificate password. Please click the HelpLink for more information on how to fix this.\" where:\n\u003ccertificate-path\u003e is the path pointing to the SSL certificate How to Fix Provide a CertificatePath pointing to a valid SSL certificate and ensure that the CertificatePassword is correct in the GmailOAuthCertificateCredentials.\nInvalid Gmail Client Credentials A Category of OAuthCredentials and an Error Code of 401 indicates that an invalid FromAddress and ClientId combination has been provided in the GmailOAuthCertificateCredentials.\nMessage Format \"The 'From Address' ('\u003cfrom-address\u003e}') or 'Client Id' ('\u003cclient-id\u003e') is invalid. The 'Gmail OAuth Certificate Credentials' in 'Email Session Details' has been provided an incorrect email address or Client ID. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cfrom-address\u003e is the email address to send the email from \u003cclient-id\u003e is the client ID for the client application How to Fix Provide a valid FromAddress and ensure that the ClientId is correct in the GmailOAuthCertificateCredentials.\nProperties Exception Type The type of the exception (i.e. EmailSessionException)\nData Type String Message The exception message, providing information about the exception that occurred.\nData Type String Category The category of the exception, which is used to categorise an exception if there are multiple reasons that the exception can occur.\nFor EmailSessionException there are the following categories:\nSocket SSL UserCredentials OAuthCredentials Data Type String Error Code The error code for the exception, which is used to indicate the reason that the exception occurred, if there are multiple reasons that the exception can occur.\nFor EmailSessionException there are the following error codes:\n100 - indicates that the Port provided in the ServerDetails is invalid 101 - indicates that the Host provided in the ServerDetails is invalid 200 - indicates that SSL is required 201 - indicates that an SSL connection is not supported 300 - indicates that the Username and Password combination provided in in the UserCredentials is invalid 400 - indicates that the CertificatePath or CertificatePassword provided in the GmailOAuthCertificateCredentials is invalid 401 - indicates that the FromAddress or ClientId provided in the GmailOAuthCertificateCredentials is invalid Data Type EmailSessionErrorCode Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations None\nSee Also Related Data Types BasicEmailSessionDetails EmailSessionErrorCode GmailOAuthCertificateCredentials GmailSessionDetails Int32 ServerDetails String UserCredentials Related Concepts Exceptions Working with Email Related Blocks Send Email Using SMTP Server Block Send Email Using Gmail Block Send Email Using Microsoft 365 Block External Documentation None\n","categories":"","description":"The exception thrown when an issue occurs while opening a session with a mail server.","excerpt":"The exception thrown when an issue occurs while opening a session with a mail server.","ref":"/docs/reference/exceptions/email/email-session-exception/","tags":"","title":"EmailSessionException"},{"body":"Empty Text and Whitespace Summary TODO:\nWhat is an Empty Text? What is Whitespace? Difference between empty text and whitespace Empty Text TODO:\nHow to create an empty text - \"\" or String.Empty Whitespace https://docs.microsoft.com/en-us/dotnet/api/system.char.iswhitespace?view=net-5.0#System_Char_IsWhiteSpace_System_Char_ and textual representation \\t \\r \\n etc.\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding empty text and whitespace.","excerpt":"Information regarding empty text and whitespace.","ref":"/docs/reference/concepts/working-with/text/empty-text-and-whitespace/","tags":"","title":"Empty Text and Whitespace"},{"body":"Encoding Summary TODO:\nAvailable encodings How to define them/use them Different ways to specify encoding: Encoding encoding = Encoding.GetEncoding(20127); Encoding encoding = new ASCIIEncoding(); Encoding encoding = Encoding.ASCII; Links:\nhttps://docs.microsoft.com/en-us/dotnet/standard/base-types/character-encoding-introduction Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding text encoding.","excerpt":"Information regarding text encoding.","ref":"/docs/reference/concepts/working-with/text/encoding/","tags":"","title":"Encoding"},{"body":"Encoding (System.Text.Encoding)\nSummary Remarks Create an Encoding Convert Encoding to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"The data type that all encodings inherit from. An encoding is used to represent a specific character encoding (e.g. ASCII, UTF8, Unicode).","excerpt":"The data type that all encodings inherit from. An encoding is used to represent a specific character encoding (e.g. ASCII, UTF8, Unicode).","ref":"/docs/reference/data-types/text/encoding/","tags":"","title":"Encoding"},{"body":"Encrypt Text To encrypt text using the Cortex Encryptor PowerShell module:\nExtract the Cortex Innovation 2022.9 - Encryptor.zip file to a folder with the same name.\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - Encryptor folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - Encryptor\" In the Windows PowerShell (x64) window, run the following command to import the module:\nImport-Module .\\Cortex.Encryptor.psd1 In the Windows PowerShell (x64) window, run the following command to encrypt text, replacing text to encrypt with the text that you want to encrypt:\nConvertTo-EncryptedText -Text \"text to encrypt\" The command will return the encrypted text, beginning with #_. This step can be repeated for any texts that need to be encrypted.\nNote:\rThe Import-Module command will need to be repeated every time a new PowerShell window is used. To install the PowerShell module so that it is always available, follow the instructions laid out here.\r","categories":"","description":"Information about encrypting text using the Cortex Encryptor.","excerpt":"Information about encrypting text using the Cortex Encryptor.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/encrypt-text/","tags":"","title":"Encrypt Text"},{"body":"EncryptableText (Cortex.DataTypes.Text.EncryptableText)\nSummary Remarks Create an EncryptableText Convert EncryptableText to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent text that can be, but does not need to be encrypted.","excerpt":"Used to represent text that can be, but does not need to be encrypted.","ref":"/docs/reference/data-types/text/encryptabletext/","tags":"","title":"EncryptableText"},{"body":"EncryptedText (Cortex.DataTypes.Text.EncryptedText)\nSummary Remarks Create an EncryptedText Convert EncryptedText to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent text that must be encrypted.","excerpt":"Used to represent text that must be encrypted.","ref":"/docs/reference/data-types/text/encryptedtext/","tags":"","title":"EncryptedText"},{"body":"","categories":"","description":"Blocks that indicate the end of a flow.","excerpt":"Blocks that indicate the end of a flow.","ref":"/docs/reference/blocks/flows/end-flow/","tags":"","title":"End Flow"},{"body":"\rEnd Flow (Cortex.Blocks.Flows.EndFlow.EndFlowBlock)\nDescription Indicates the end of a flow; when a flow execution reaches this block, the execution is ended.\nA flow can contain any number of these blocks, and they can be placed anywhere in a flow.\nThe block has no block specific properties, but it does have the Description property that is common to all blocks. This allows users to give each block a description; typically this will be left blank for this block.\nA breakpoint can be added to this block when debugging.\nExamples No examples for the block.\nProperties No properties for the block, other than the Description property that is common to all blocks.\nExceptions No exceptions are thrown by the block.\nRemarks No remarks for the block.\n","categories":"","description":"Indicates the end of a flow.","excerpt":"Indicates the end of a flow.","ref":"/docs/reference/blocks/flows/end-flow/end-flow-block/","tags":"","title":"End Flow"},{"body":"","categories":"","description":"Blocks that indicate the end of a workspace.","excerpt":"Blocks that indicate the end of a workspace.","ref":"/docs/reference/blocks/workspaces/end-workspace/","tags":"","title":"End Workspace"},{"body":"\rEnd Workspace (Cortex.Blocks.Workspaces.EndWorkspace.EndWorkspaceBlock)\nDescription Indicates the end of a workspace; when a flow execution reaches this block it will exit the workspace, and all variables declared in the scope of the workspace are deleted.\nA workspace can contain any number of these blocks, and they can be placed anywhere in the workspace.\nThe block has no block specific properties, but it does have the Description property that is common to all blocks. This allows users to give each block a description; typically this will be left blank for this block.\nA breakpoint can be added to this block when debugging.\nExamples No examples for the block.\nProperties No properties for the block, other than the Description property that is common to all blocks.\nExceptions No exceptions are thrown by the block.\nRemarks Workspace Scope Each workspace has its own scope; as a result, variables can be defined that only exist and are accessible in this workspace and any of its sub-workspaces. On exiting a workspace any variables defined for the workspace’s scope are deleted.\nFor information about variables and scope, please see Variables.\n","categories":"","description":"Indicates the end of a workspace.","excerpt":"Indicates the end of a workspace.","ref":"/docs/reference/blocks/workspaces/end-workspace/end-workspace-block/","tags":"","title":"End Workspace"},{"body":"","categories":"","description":"Information related to working with enum data types such as DayOfWeek, DateTimeComponentType and SearchOptions.","excerpt":"Information related to working with enum data types such as DayOfWeek, DateTimeComponentType and SearchOptions.","ref":"/docs/reference/concepts/working-with/enums/","tags":"","title":"Enums"},{"body":"Equality Summary TODO:\nBest Practices Use Ordinal to remove ambiguity and increase performance Comparing strings - do not lower or upper pick a relevant culture or ignore case Links:\nhttps://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices-strings https://docs.microsoft.com/en-us/dotnet/standard/base-types/changing-case#compare-strings-of-mixed-case Comparison Types Comparison Types specify the rules used to determine whether two pieces of text match.\nThe table below lists the supported comparison types:\nName Text Value Numeric Value Description Ordinal StringComparison.Ordinal 4 Used to compare text using ordinal sort rules. Case of the texts is considered when comparing. Ordinal Ignore Case StringComparison.OrdinalIgnoreCase 5 Used to compare text using ordinal sort rules. Case of the texts is ignored when comparing. Invariant Culture StringComparison.InvariantCulture 2 Used to compare text using culture-sensitive sort rules and the invariant culture. Case of the texts is considered when comparing. Invariant Culture Ignore Case StringComparison.InvariantCultureIgnoreCase 3 Used to compare text using culture-sensitive sort rules and the invariant culture. Case of the texts is ignored when comparing. Current Culture StringComparison.CurrentCulture 0 Used to compare text using culture-sensitive sort rules and the current culture. Case of the texts is considered when comparing. Current Culture Ignore Case StringComparison.CurrentCultureIgnoreCase 1 Used to compare text using culture-sensitive sort rules and the current culture. Case of the texts is ignored when comparing. For more information about comparison types, please see StringComparison.\nTODO: Consider moving sections below into the StringComparison Data Type documentation and removed from this page\nOrdinal TODO:\nWhen to use? If not sure what to choose? Ordinal sort rules notes about ordinal and a worked through example Ordinal Ignore Case TODO:\nWhen to use? If not sure what to choose? Link to Ordinal sort rules, only difference is that it doesn’t consider casing when comparing characters notes about ordinal ignore case and a worked through example Invariant Culture TODO:\nWhen to use? If not sure what to choose? Link to Culture -\u003e Invariant Culture Invariant Culture rules notes about invariant culture and a worked through example Invariant Culture Ignore Case TODO:\nWhen to use? If not sure what to choose? Link to Culture -\u003e Invariant Culture Link to Invariant Culture sort rules, only difference is that it doesn’t consider casing when comparing characters notes about invariant culture ignore case and a worked through example Current Culture TODO:\nWhen to use? If not sure what to choose? Link to Culture -\u003e Current Culture Current Culture rules notes about current culture and a worked through example Current Culture Ignore Case TODO:\nWhen to use? If not sure what to choose? Link to Culture -\u003e Current Culture Link to Current Culture sort rules, only difference is that it doesn’t consider casing when comparing characters notes about current culture ignore case and a worked through example Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding text equality.","excerpt":"Information regarding text equality.","ref":"/docs/reference/concepts/working-with/text/equality/","tags":"","title":"Equality"},{"body":"EventSeverity (Cortex.DataTypes.Logs.EventSeverity)\nSummary Values Verbose Debug Information Warning Error Fatal Remarks Create an EventSeverity Convert EventSeverity to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent the severity of an event when it is logged.","excerpt":"Used to represent the severity of an event when it is logged.","ref":"/docs/reference/data-types/logs/eventseverity/","tags":"","title":"EventSeverity"},{"body":"Exception (System.Exception)\nSummary Remarks Create an Exception Convert Exception to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"The data type that all exceptions inherit from.","excerpt":"The data type that all exceptions inherit from.","ref":"/docs/reference/data-types/exceptions/exception/","tags":"","title":"Exception"},{"body":"","categories":"","description":"Blocks related to handling and throwing Exceptions.","excerpt":"Blocks related to handling and throwing Exceptions.","ref":"/docs/reference/blocks/exceptions/","tags":"","title":"Exceptions"},{"body":"","categories":"","description":"Blocks related to executing commands against data sources.","excerpt":"Blocks related to executing commands against data sources.","ref":"/docs/reference/blocks/data/execute-data-command/","tags":"","title":"Execute Data Command"},{"body":"\nExecute Data Command (Cortex.Blocks.Data.ExecuteDataCommand.ExecuteDataCommandBlock`1)\nDescription Connects to a data source (e.g. SQL Server) using the specified Connection Details, and executes a Command (e.g. SELECT * FROM Table), returning the Result.\nClose Connection can be specified to choose whether the connection to the data source is closed or is kept open for use on subsequent Execute Command blocks.\nExamples Selecting Rows This example will select all rows and columns from a connected SQL Server data source which have an Id less than 3, saving the rows to the Result.\nA QueryCommand is used throughout this example to select data from the data source, however, both an Command or Commands could also be used to the same effect.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", \"Parameters\": {\"SelectParameter\": 3}}\nIn this example ($)Command has been set using the following Expression:\nnew QueryCommand(\"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", new {SelectParameter = 3}) ($)Command is a variable of type QueryCommand Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Selecting all rows and columns that have an Id less than 3 from Table using a QueryCommand results in the variable ($)Result being updated to the following:\n[ { \"Id\": 1, \"FirstColumn\": \"FirstColumn1\", \"SecondColumn\": \"SecondColumn1\" }, { \"Id\": 2, \"FirstColumn\": \"FirstColumn2\", \"SecondColumn\": \"SecondColumn2\" } ] Note that using a Parameterised Command helps prevent against SQL Injection, for more information please see Parameterised Commands. For an example of a non parameterised command please see Executing Multiple Commands (Unsafe)\nInserting Rows This example will insert a new row into a connected SQL Server data source, saving the number of rows inserted to the Result.\nA NonQueryCommand is used throughout this example to insert data into the data source, however, both an Command or Commands could also be used to the same effect.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2)\", \"Parameters\": { \"InsertParameter1\": \\\"FirstColumn4\\\", \"InsertParameter2\": \\\"SecondColumn4\\\" } }\nIn this example ($)Command has been set using the following Expression:\nnew NonQueryCommand(\"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2)\", new { InsertParameter1 = \"FirstColumn4\", InsertParameter2 = \"SecondColumn4\" }) ($)Command is a variable of type NonQueryCommand Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Inserting a new row into Table using a parameterised NonQueryCommand results in the variable ($)Result being updated to the following:\n1 This indicates that 1 row has been inserted into Table, with Table being updated to:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" 4 \"FirstColumn4\" \"SecondColumn4\" Note that using a Parameterised Command helps prevent against SQL Injection, for more information please see Parameterised Commands. For an example of a non parameterised command please see Executing Multiple Commands (Unsafe)\nUpdating Rows This example will update all rows on a connected SQL Server data source which have an Id less than 3, saving the number of rows updated to the Result.\nA NonQueryCommand is used throughout this example to update data in the data source, however, both an Command or Commands could also be used to the same effect.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c @UpdateParameter\", \"Parameters\": { \"UpdateParameter\": 3 } }\nIn this example ($)Command has been set using the following Expression:\nnew NonQueryCommand(\"UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c @UpdateParameter\", new {UpdateParameter = 3}) ($)Command is a variable of type NonQueryCommand Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Updating all rows that have an Id less than 3 in Table using a NonQueryCommand results in the variable ($)Result being updated to the following:\n2 This indicates that 2 rows have been updated in Table, with Table being updated to:\nId FirstColumn SecondColumn 1 \"Updated\" \"SecondColumn1\" 2 \"Updated\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Note that using a Parameterised Command helps prevent against SQL Injection, for more information please see Parameterised Commands. For an example of a non parameterised command please see Executing Multiple Commands (Unsafe)\nDeleting Rows This example will delete all rows on a connected SQL Server data source which have an Id less than 3, saving the number of rows deleted to the Result.\nA NonQueryCommand is used throughout this example to delete data in the data source, however, both an Command or Commands could also be used to the same effect.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"DELETE FROM Table WHERE Id \u003c @DeleteParameter\", \"Parameters\": { \"DeleteParameter\": 3 } }\nIn this example ($)Command has been set using the following Expression:\nnew NonQueryCommand(\"DELETE FROM Table WHERE Id \u003c @DeleteParameter\", new {DeleteParameter = 3}) ($)Command is a variable of type NonQueryCommand Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Deleting all rows that have an Id less than 3 in Table using a NonQueryCommand results in the variable ($)Result being updated to the following:\n2 This indicates that 2 rows have been deleted in Table, with Table being updated to:\nId FirstColumn SecondColumn 3 \"FirstColumn3\" \"SecondColumn3\" Note that using a Parameterised Command helps prevent against SQL Injection, for more information please see Parameterised Commands. For an example of a non parameterised command please see Executing Multiple Commands (Unsafe)\nUsing Functions This example will select the maximum Id value from a connected SQL Server data source, saving the value of the function to the Result.\nA QueryCommand is used throughout this example to select the maximum Id value from the data source, however, both an Command or Commands could also be used to the same effect.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"SELECT Max(Id) FROM Table\", \"Parameters\": null}\nIn this example ($)Command has been set using the following Expression:\nnew QueryCommand(\"SELECT Max(Id) FROM Table\", null) ($)Command is a variable of type QueryCommand Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Selecting the maximum Id value from Table using a QueryCommand results in the variable ($)Result being updated to the following:\n[ { \"\": 3 } ] Note that the AS keyword can be used to give aliases to results, for example the CommandText \"SELECT Max(Id) AS MaxId FROM Table;\" would have resulted in the variable ($)Result being updated to [ { \"MaxId\": 3 } ]; the AS keyword also allows for Using Multiple Functions.\nUsing Multiple Functions This example will select the maximum Id value as MaxId and the minimum Id value as MinId from a connected SQL Server data source, saving the values of the functions to the Result.\nA QueryCommand is used throughout this example to select the maximum Id value as MaxId and the minimum Id value as MinId from the data source, however, both an Command or Commands could also be used to the same effect.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"SELECT Max(Id) AS MaxId, Min(Id) AS MinId FROM Table\", \"Parameters\": null}\nIn this example ($)Command has been set using the following Expression:\nnew QueryCommand(\"SELECT Max(Id) AS MaxId, Min(Id) AS MinId FROM Table\", null) ($)Command is a variable of type QueryCommand Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Selecting the maximum Id value as MaxId and the minimum Id value as MinId from Table using a QueryCommand results in the variable ($)Result being updated to the following:\n[ { \"MaxId\": 3, \"MinId\": 1 } ] Executing Multiple Commands (Safe) This example will select, insert, update and delete from a connected SQL Server data source, using a parameterised command. The result of each command will be saved to the result.\nAn Commands is used throughout this example, as it is the only type of Command that allows you to execute and return the results of multiple commands.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"SELECT * FROM Table WHERE Id \u003c @SelectParameter; INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2); UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c @UpdateParameter; DELETE FROM Table WHERE Id \u003c @DeleteParameter; SELECT * FROM Table\", \"Parameters\": { \"SelectParameter\": 3, InsertParameter1 = \\\"FirstColumn4\\\", InsertParameter2 = \\\"SecondColumn4\\\", \"UpdateParameter\": 3, \"DeleteParameter\": 3 }}\nIn this example ($)Command has been set using the following Expression:\nnew Commands(\"SELECT * FROM Table WHERE Id \u003c @SelectParameter; INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2); UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c @UpdateParameter; DELETE FROM Table WHERE Id \u003c @DeleteParameter; SELECT * FROM Table\", new {SelectParameter = 3, InsertParameter1 = \"FirstColumn4\", InsertParameter2 = \"SecondColumn4\", UpdateParameter = 3, DeleteParameter = 3}) ($)Command is a variable of type Commands Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Running the Commands results in the variable ($)Result being updated to the following:\n[ [ { \"Id\": 1, \"FirstColumn\": \"FirstColumn1\", \"SecondColumn\": \"SecondColumn1\" }, { \"Id\": 2, \"FirstColumn\": \"FirstColumn2\", \"SecondColumn\": \"SecondColumn2\" } ], 1, 2, 2, [ { \"Id\": 3, \"FirstColumn\": \"FirstColumn3\", \"SecondColumn\": \"SecondColumn3\" }, { \"Id\": 4, \"FirstColumn\": \"FirstColumn4\", \"SecondColumn\": \"SecondColumn4\" } ] ] The first item of ($)Result represents the rows selected by the first select statement (SELECT * FROM Table WHERE Id \u003c @SelectParameter). The second item of ($)Result indicates that 1 row has been inserted into Table (INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2)). The third item of ($)Result indicates that 2 rows have been updated in Table (UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c @UpdateParameter). The fourth item of ($)Result indicates that 2 rows have been deleted in Table (DELETE FROM Table WHERE Id \u003c @DeleteParameter). The fifth item of ($)Result represents the rows selected by the second select statement (SELECT * FROM Table). Table has been updated to:\nId FirstColumn SecondColumn 3 \"FirstColumn3\" \"SecondColumn3\" 4 \"FirstColumn4\" \"SecondColumn4\" Note that using a Parameterised Command helps prevent against SQL Injection, for more information please see Parameterised Commands. For an example of a non parameterised command please see Executing Multiple Commands (Unsafe)\nExecuting Multiple Commands (Unsafe) This example will select, insert, update and delete from a connected SQL Server data source, using String Interpolation instead of parameters. The result of each command will be saved to the result.\nWarning\rThis example inserts data directly into the Command instead of using parameters. This means the SQL in this example is susceptible to SQL Injection and it is advised to use parameters to insert data into a command instead.\nPlease see Executing Multiple Commands (Safe) for an example of a Parameterised Command.\nAn Commands is used throughout this example, as it is the only type of Command that allows you to execute and return the results of multiple commands.\nThe data source contains a Table with the following rows and columns before the command is executed:\nId FirstColumn SecondColumn 1 \"FirstColumn1\" \"SecondColumn1\" 2 \"FirstColumn2\" \"SecondColumn2\" 3 \"FirstColumn3\" \"SecondColumn3\" In this example assume the following variables have been set before the command has been executed:\n($)SelectParameter with the value 3 ($)InsertParameter1 with the value \"FirstColumn4\" ($)InsertParameter2 with the value \"SecondColumn4\" ($)UpdateParameter with the value 3 ($)DeleteParameter with the value 3 Properties Property Value Notes Command ($)Command, with value {\"CommandText\": \"SELECT * FROM Table WHERE Id \u003c 3; INSERT INTO Table (FirstColumn, SecondColumn) VALUES (\\\"FirstColumn1\\\", \\\"SecondColumn2\\\"); UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c 3; DELETE FROM Table WHERE Id \u003c 3; SELECT * FROM Table\", \"Parameters\": null}\nIn this example ($)Command has been set using the following Expression:\nnew Commands($\"SELECT * FROM Table WHERE Id \u003c {($)SelectParameter}; INSERT INTO Table (FirstColumn, SecondColumn) VALUES ({($)InsertParameter1}, {($)InsertParameter2}); UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c {($)UpdateParameter}; DELETE FROM Table WHERE Id \u003c {($)DeleteParameter}; SELECT * FROM Table\", null) ($)Command is a variable of type Commands Connection Details ($)ConnectionDetails, with value {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} ($)ConnectionDetails is a variable of type SqlServerConnectionDetails Close Connection ($)CloseConnection, with value true ($)CloseConnection is a variable of type Boolean Result ($)Result, with no value ($)Result will be set to the type dynamic Result Running the Commands results in the variable ($)Result being updated to the following:\n[ [ { \"Id\": 1, \"FirstColumn\": \"FirstColumn1\", \"SecondColumn\": \"SecondColumn1\" }, { \"Id\": 2, \"FirstColumn\": \"FirstColumn2\", \"SecondColumn\": \"SecondColumn2\" } ], 1, 2, 2, [ { \"Id\": 3, \"FirstColumn\": \"FirstColumn3\", \"SecondColumn\": \"SecondColumn3\" }, { \"Id\": 4, \"FirstColumn\": \"FirstColumn4\", \"SecondColumn\": \"SecondColumn4\" } ] ] The first item of ($)Result represents the rows selected by the first select statement (SELECT * FROM Table WHERE Id \u003c @SelectParameter). The second item of ($)Result indicates that 1 row has been inserted into Table (INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2)). The third item of ($)Result indicates that 2 rows have been updated in Table (UPDATE Table SET FirstColumn = \\\"Updated\\\" WHERE Id \u003c @UpdateParameter). The fourth item of ($)Result indicates that 2 rows have been deleted in Table (DELETE FROM Table WHERE Id \u003c @DeleteParameter). The fifth item of ($)Result represents the rows selected by the second select statement (SELECT * FROM Table). Table has been updated to:\nId FirstColumn SecondColumn 3 \"FirstColumn3\" \"SecondColumn3\" 4 \"FirstColumn4\" \"SecondColumn4\" Note that using a Parameterised Command helps prevent against SQL Injection, for more information please see Parameterised Commands.\nProperties Command The Command executed on the connected data source. There are multiple Command Types that can be used, each with a different purpose:\nCommand: Parses a single statement provided in the commandText, determining how the statement should be executed against the data source. If the commandText is a Query Statement the rows retrieved from the data source will be returned, otherwise if the commandText is a Non Query Statement the number of rows affected will be returned. Commands: Parses single or multiple statements provided in the commandText, determining how each statement should be executed against the data source. If a Query Statement is executed rows retrieved from the data source are added as an entry of the result, If a Non Query Statement is executed the number of rows affected is added as an entry of the result. QueryCommand: Executes the given commandText as a Query Statement, returning the rows retrieved from the data source. NonQueryCommand: Executes the given commandText as a Non Query Statement, returning the number of rows affected from the data source. Data Type DataCommand Property Type Input Is Advanced false Default Editor Literal Default Value Command with value {\"CommandText\": \"\", \"Parameters\": null} Connection Details The Connection Details object that includes all of the information required to connect to a data source, including:\nConnection String - must be provided in order to connect to a data source. The Connection String is formatted differently depending on the type of data source that is being connected to, please see Working with Data Sources for more information. For a list of currently supported connection details, please see ConnectionDetails\nNote it is recommended to use a Variable for Connection Details when it will be used across multiple Execute Command blocks, as using a variable will allow for reuse of the same connection. Using a Literal to set the Connection Details will cause the connection to only be used once.\nData Type ConnectionDetails Property Type Input Is Advanced false Default Editor Literal Default Value SqlServerConnectionDetails with value {\"ConnectionString\": \"Server=localhost;Database=YourDatabase;Trusted_Connection=true;\"} Close Connection Close Connection can be specified to choose whether the connection to the data source is closed or is kept open for use on subsequent Execute Command blocks, this defaults to false if left blank, please see Closing Connections for more information.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value Boolean with value true Result The object returned from the data source.\nDepending on the type of Command, the data returned within the Result will vary. Please see Command Types for more information on what data will be returned by each type.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)Result with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when the Command is null. Thrown when the commandText within the Command is null. Thrown when the Connection Details is null. Thrown when the connectionString within the Connection Details is null. PropertyEmptyException Thrown when the commandText within the Command is empty. Thrown when the connectionString within the Connection Details is empty. InvalidConnectionStringException Thrown when an invalid connection string has been supplied (e.g. The connection string contains an invalid argument \"NotAnArgument = False\"). Thrown when a required connection string argument has not been supplied (e.g. The server requires encryption and the connection string contains \"Encrypt=False\"). CommandException Thrown when the data source was not found or was not accessible. Thrown when an error occurs whilst trying to open a new connection. Thrown when a connection is successfully established but an error occurred during the login process. Thrown when the Command contains syntax errors. The error will contain a nested SqlException with a corresponding SqlException Error Code. Thrown when the Command is invalid for the table specified. Thrown when the Command references a non-existent stored procedure. Thrown when parameters derives from Array or IEnumerable when a Query Statement is executed. Thrown when an Command contains multiple statements. Remarks Command Types There are multiple types of Command that can be used, each with a different purpose:\nCommand A Command parses a single statement provided in the commandText, determining how the statement should be executed against the data source. If the commandText is a Query Statement the rows retrieved from the data source will be returned, otherwise if the commandText is a Non Query Statement the number of rows affected will be returned.\nFor a Query Statement (e.g. select and execute):\nResult will be set to when List\u003cStructure\u003e with a single item Single item is returned List\u003cStructure\u003e with many items Many items are returned List\u003cStructure\u003e with no items No items are returned For a Non Query Statement (e.g. insert, update, delete, etc)\nResult will be set to when Int32 with a value of 1 Single row is affected Int32 with a value greater than 1 Many rows are affected Int32 with a value of 0 No rows are affected If multiple statements are provided in CommandText, the block will throw a CommandException as this type can only run single statements.\nIf performance is a key consideration it is recommended to use a QueryCommand or NonQueryCommand instead of Command as they do not parse the commandText.\nCommands A Commands parses single or multiple statements provided in the commandText, determining how each statement should be executed against the data source. If a Query Statement is executed rows retrieved from the data source are added as an entry of the result, If a Non Query Statement is executed the number of rows affected is added as an entry of the result.\nFor each Query Statement (e.g. select and execute):\nResult will have the following entry added when List\u003cStructure\u003e with a single item Single item is returned List\u003cStructure\u003e with many items Many items are returned List\u003cStructure\u003e with no items No items are returned For each Non Query Statement (e.g. insert, update, delete, etc)\nResult will have the following entry added when Int32 with a value of 1 Single row is affected Int32 with a value greater than 1 Many rows are affected Int32 with a value of 0 No rows are affected If performance is a key consideration it is recommended to use a QueryCommand or NonQueryCommand instead of Commands as they do not parse the commandText.\nNote that the Commands should not be used for commands that have dependency between their statements (e.g. Cursors and Variables). Please see Complex Commands for more information on how to deal with these.\nQueryCommand A QueryCommand executes the given commandText as a Query Statement, returning the rows retrieved from the data source. If the commandText contains multiple select statements, only the results of the first Query Statement will be returned.\nFor a Query Statement (e.g. select):\nResult will be set to when List\u003cStructure\u003e with a single item Single item is returned List\u003cStructure\u003e with many items Many items are returned List\u003cStructure\u003e with no items No items are returned For a Non Query Statement (e.g. insert, update, delete, etc)\nResult will be set to when null always, as Non Query Statements do not return data Note use a QueryCommand for commands that have dependency between their statements (e.g. Cursors and Variables) and return data from the data source. Please see Complex Commands for more information.\nNonQueryCommand A NonQueryCommand executes the given commandText as a Non Query Statement, returning the number of rows affected from the data source. If the command contains multiple statements, the sum of all the results will be returned.\nFor a Query Statement (e.g. select):\nResult will be set to when Int32 with a value of -1 always, as Query Statements do not return data For a Non Query Statement (e.g. insert, update, delete, etc)\nResult will be set to when Int32 with a value of 1 Single row is affected Int32 with a value greater than 1 Many rows are affected Int32 with a value of 0 No rows are affected Note use a NonQueryCommand for commands that have dependency between their statements (e.g. Cursors and Variables) and return the number of rows affected. Please see Complex Commands for more information.\nStatement Types There are two categories of statements Query and Non Query.\nQuery Statements Query Statements are used to retrieve data from a data source, for example selecting all rows from a table in a database, Query Statements return the data selected by the Statement as a List\u003cStructure\u003e when used in an Command, an Commands, or a QueryCommand. If a Query Statement is used in a NonQueryCommand -1 will be returned as Query Statements do not affect rows.\nExamples of Query Statements can be found here:\nSelecting Rows Using Functions Using Multiple Functions Executing Multiple Commands (Safe) Executing Multiple Commands (Unsafe) A Query Statement can use any object as a parameter. Objects that derive from Array or IEnumerable can only be used for clauses that accept list values (e.g. IN, ANY, ALL), if they are used in other clauses the block will throw a CommandException.\nNon Query Statements Non Query Statements are used to manipulate the data within a data source, for example deleting all rows from a table in a database, Non Query Statements return the number of rows affected by the Statement as an Int32 value when used in an Command, an Commands, or a NonQueryCommand. If a Non Query Statement is used in a QueryCommand null will be returned as Non Query Statements do not return data.\nExamples of Non Query Statements can be found here:\nInserting Rows Updating Rows Deleting Rows Executing Multiple Commands (Safe) Executing Multiple Commands (Unsafe) A Non Query Statement can use any object as a parameter. If an object that derives from Array or IEnumerable is used, the Non Query Statement will be executed for each item in the Array or IEnumerable and the sum of all the results will be returned.\nParameterised Commands It is recommended to always use parameterised commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the Command is executed.\nThe @ symbol denotes a parameter within the CommandText (e.g. \"SELECT * FROM Table WHERE Name = @Parameter\"). An example of using parameters can be found in Executing Multiple Commands (Safe), whereas, an example of inserting variables into a statement without parameters can be found in Executing Multiple Commands (Unsafe)\nQuery Statements can use any object as a parameter. Objects that derive from Array or IEnumerable can only be used for clauses that accept list values (e.g. IN, ANY, ALL), if they are used in other clauses the block will throw a CommandException.\nNon Query Statements can use any object as a parameter. If an object that derives from Array or IEnumerable is used, the Non Query Statement will be executed for each item in the Array or IEnumerable and the sum of all the results will be returned.\nFor both Query Statements and Non Query Statements, an SqlException is thrown if a parameter is missing from the Command and the CommandText contains a parameter (e.g. {\"CommandText\": \"SELECT * FROM Table WHERE Name = @Parameter\", \"Parameters\": {\"IncorrectParameter\": 0}}).\nComplex Commands Complex commands (e.g. Cursors and Variables) that contain dependency between their statements cannot be used with Commands, as the parsing performed by the block will cause each statement of CommandText to be run individually instead of running the CommandText as a whole.\nFor statements with this type of dependency use either QueryCommand or NonQueryCommand, depending on whether data from the data source or the number of rows affected is returned.\nConnection Strings A connection string must be provided within the Connection Details in order to connect to a data source. The connection string is formatted differently depending on the type of data source, please see Working with Data Sources for more information.\nPlease see Working with Data Sources for a list of supported data sources and how to construct valid connection strings for them.\nOpening Connections The Execute Command block automatically handles creating and opening connections for the specified Connection Details using the following rules:\nIf a connection does not exist, a new connection will be created, opened and used when the block runs. If a connection already exists but is closed, the connection will be opened and used when the block runs. If a connection already exists and is open, the connection will used the block runs. If a Variable is used to pass in the Connection Details it can be used to keep the connection alive across multiple Execute Command blocks as long as Close Connection is set to false. Keeping the connection open helps increase the performance of the block due to the subsequent blocks not having to spend resources creating and opening connections for each execution.\nIf a Literal or an Expression is used to create the Connection Details a new connection will always be made when the Execute Command block runs and if Close Connection is set to false the connection will be closed automatically at some point after the block finishes and before the flow ends.\nFor information on how to explicitly close a connection, please see Closing Connections.\nClosing Connections Connections can be explicitly closed by setting Close Connection to true. This causes the connection to be closed after the Command has been executed.\nIf a Variable is used to pass in the Connection Details and Close Connection is set to false the connection will be closed when the Variable goes out of scope or the flow ends, whichever happens first. For more information about variables and scope, please see Variables.\nIf a Literal or an Expression is used to create the Connection Details and Close Connection is set to false the connection will be closed automatically at some point after the Execute Command block finishes and before the flow ends.\nFor information on how to open a connection, please see Opening Connections.\nWhy does the Result property return a dynamic data type? The decision for the Result to return a dynamic data type rather than a specific type, was to avoid users having to cast the Result to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Result (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the Result to its correct type.\nKnown Limitations When using a Parameterised Command to execute a stored procedure, it is not possible to write back to output parameters.\n","categories":"","description":"Connects to a specific data source and executes a Command, returning any object from the Command's result.","excerpt":"Connects to a specific data source and executes a Command, returning any object from the Command's result.","ref":"/docs/reference/blocks/data/execute-data-command/execute-data-command-block-1/","tags":"","title":"Execute Data Command"},{"body":"","categories":"","description":"Blocks related to executing HTTP requests.","excerpt":"Blocks related to executing HTTP requests.","ref":"/docs/reference/blocks/http/execute-http-request/","tags":"","title":"Execute Http Request"},{"body":"\rExecute Http Request (Cortex.Blocks.Http.ExecuteHttpRequest.ExecuteHttpRequestBlock`1)\nDescription Executes an HTTP request and returns a response.\nExamples Calling Another Flow TODO\nShow example of passing input variables to a flow Show returned Output variables from a flow Properties Exceptions Remarks Known Limitations ","categories":"","description":"Executes an HTTP request and returns a response.","excerpt":"Executes an HTTP request and returns a response.","ref":"/docs/reference/blocks/http/execute-http-request/execute-http-request-block-1/","tags":"","title":"Execute Http Request"},{"body":"","categories":"","description":"Blocks related to executing PowerShell scripts with Windows PowerShell and PowerShell Core.","excerpt":"Blocks related to executing PowerShell scripts with Windows PowerShell and PowerShell Core.","ref":"/docs/reference/blocks/powershell/execute-powershell-script/","tags":"","title":"Execute PowerShell Script"},{"body":"\rExecute PowerShell Script (Cortex.Blocks.PowerShell.ExecutePowerShellScript.ExecutePowerShellScriptBlock`1)\nDescription Executes a PowerShell script on the specified host.\nExamples Properties Exceptions Remarks Known Limitations ","categories":"","description":"Executes a PowerShell script on the specified host.","excerpt":"Executes a PowerShell script on the specified host.","ref":"/docs/reference/blocks/powershell/execute-powershell-script/execute-powershell-script-block-1/","tags":"","title":"Execute PowerShell Script"},{"body":"","categories":"","description":"Blocks related to executing SOAP requests.","excerpt":"Blocks related to executing SOAP requests.","ref":"/docs/reference/blocks/http/execute-soap-request/","tags":"","title":"Execute Soap Request"},{"body":"\rExecute Soap Request (Cortex.Blocks.Http.ExecuteSoapRequest.ExecuteSoapRequestBlock`1)\nDescription Executes a SOAP request and returns a response.\nExamples Properties Exceptions Remarks Known Limitations ","categories":"","description":"Executes a SOAP request and returns a response.","excerpt":"Executes a SOAP request and returns a response.","ref":"/docs/reference/blocks/http/execute-soap-request/execute-soap-request-block-1/","tags":"","title":"Execute Soap Request"},{"body":"","categories":"","description":"Blocks related to executing SSH commands.","excerpt":"Blocks related to executing SSH commands.","ref":"/docs/reference/blocks/ssh/execute-ssh-command/","tags":"","title":"Execute Ssh Command"},{"body":"\rExecute Ssh Command (Cortex.Blocks.Ssh.ExecuteSshCommand.ExecuteSshCommandBlock)\nDescription Executes an SSH command on the specified host.\nExamples Properties Exceptions Remarks Known Limitations ","categories":"","description":"Executes an SSH command on the specified host.","excerpt":"Executes an SSH command on the specified host.","ref":"/docs/reference/blocks/ssh/execute-ssh-command/execute-ssh-command-block/","tags":"","title":"Execute Ssh Command"},{"body":"","categories":"","description":"Exceptions related to the Execution of Flows","excerpt":"Exceptions related to the Execution of Flows","ref":"/docs/reference/exceptions/flows/execution/","tags":"","title":"Execution"},{"body":"FileInformation (Cortex.DataTypes.FilesAndFolders.FileInformation)\nSummary Properties Extension Path Name ParentRoot ParentPath SizeInBytes IsArchive IsCompressed IsEncrypted IsHidden IsNormal IsTemporary IsReadOnly IsSystem CreationTimeLocal CreationTimeUtc LastAccessTimeLocal LastAccessTimeUtc LastWriteTimeLocal LastWriteTimeUtc Remarks Create a FileInformation Convert FileInformation to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent information about a file.","excerpt":"Used to represent information about a file.","ref":"/docs/reference/data-types/files-and-folders/fileinformation/","tags":"","title":"FileInformation"},{"body":"FileMatch (Cortex.DataTypes.FilesAndFolders.FileMatch)\nSummary Properties FilePath Line Remarks Create a FileMatch Convert FileMatch to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent a file matching a file search performed by the Search File and Search Files blocks.","excerpt":"Used to represent a file matching a file search performed by the Search File and Search Files blocks.","ref":"/docs/reference/data-types/files-and-folders/filematch/","tags":"","title":"FileMatch"},{"body":"","categories":"","description":"Blocks related to working with Files and Folders.","excerpt":"Blocks related to working with Files and Folders.","ref":"/docs/reference/blocks/files-and-folders/","tags":"","title":"Files \u0026 Folders"},{"body":"","categories":"","description":"Exceptions related to Files and Folders","excerpt":"Exceptions related to Files and Folders","ref":"/docs/reference/exceptions/files-and-folders/","tags":"","title":"Files \u0026 Folders"},{"body":"","categories":"","description":"Information related to working with Files and Folders.","excerpt":"Information related to working with Files and Folders.","ref":"/docs/reference/concepts/working-with/files-and-folders/","tags":"","title":"Files and Folders"},{"body":"\rFind And Remove All Text (Cortex.Blocks.Text.FindAndRemoveText.FindAndRemoveAllTextBlock)\nDescription Finds and removes all occurrences of Text To Remove from a given Text.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to find the Text To Remove.\nExamples Remove all occurrences of Text To Remove (Ordinal) This example will find and remove all occurrences of \"The\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"The\" ($)TextToRemove is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result As this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" only contains the text \"The\" once; \"the\" has a different case so does not match. Therefore, the variable ($)Text will be updated to the following:\n\" quick brown fox jumps over the lazy dog\" Remove all occurrences of Text To Remove (Ordinal Ignore Case) This example will find and remove all occurrences of \"The\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-insensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"The\" ($)TextToRemove is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Result As this example is performing a case-insensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" contains the text \"The\" twice; the first occurrence is \"The\" and the second occurrence is \"the\". Therefore, the variable ($)Text will be updated to the following:\n\" quick brown fox jumps over lazy dog\" Remove all occurrences that match the pattern in Text To Remove This example will find and remove all occurrences of text that match the pattern \"?he\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"?he\" ($)TextToRemove is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result \"The quick brown fox jumps over the lazy dog\" contains \"The\" and \"the\" that matches the pattern \"?he\". Therefore, the variable ($)Text will be updated to the following:\n\" quick brown fox jumps over lazy dog\" Remove all occurrences that match the regex in Text To Remove This example will find and remove all occurrences of text that match the regex \"^The\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"^The\" ($)TextToRemove is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result \"The quick brown fox jumps over the lazy dog\" contains \"The\" at the start of the sentence that matches the regex \"^The\". Therefore, the variable ($)Text will be updated to the following:\n\" quick brown fox jumps over the lazy dog\" Properties Text The Text to find and remove all occurrences of Text To Remove from.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Remove The Text To Remove all occurrences of, from Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Search Options Search Options can be specified to choose whether Text To Remove should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Text To Remove it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to match occurrences of Text To Remove in Text.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and Text To Remove is not a valid regex (e.g. (). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\") there is nothing to remove from, so no operation is performed.\nNull or empty Text To Remove If Text To Remove is null or empty (i.e. \"\") there is nothing to remove, so no operation is performed.\nText To Remove is not present If Text To Remove is not present there is nothing to remove, so no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String with all occurrences of Text To Remove removed and re-assigns it to the variable specified in the Text property.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Finds and removes all occurrences of text from a given text.","excerpt":"Finds and removes all occurrences of text from a given text.","ref":"/docs/reference/blocks/text/find-and-remove-text/find-and-remove-all-text-block/","tags":"","title":"Find And Remove All Text"},{"body":"","categories":"","description":"Find text in another text, and remove it.","excerpt":"Find text in another text, and remove it.","ref":"/docs/reference/blocks/text/find-and-remove-text/","tags":"","title":"Find And Remove Text"},{"body":"\rFind And Remove Text (Cortex.Blocks.Text.FindAndRemoveText.FindAndRemoveTextBlock)\nDescription Finds and removes the specified Occurrence of Text To Remove from a given Text.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to find the Text To Remove.\nExamples Remove the first Occurrence of Text To Remove (Ordinal) This example will find and remove the first occurrence of \"The\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"The\" ($)TextToRemove is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result An Occurrence of 1 means find and remove the first occurrence; 2 means second etc.\nAs this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" only contains the text \"The\" once; \"the\" has a different case so does not match. Therefore, the variable ($)Text will be updated to the following:\n\" quick brown fox jumps over the lazy dog\" Remove the last Occurrence of Text To Remove (Ordinal Ignore Case) This example will find and remove the last occurrence of \"The\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-insensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"The\" ($)TextToRemove is a variable of type String Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Result An Occurrence of -1, means find and remove the last occurrence; -2 means second last etc.\nAs this example is performing a case-insensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" contains the text \"The\" twice; the first occurrence is \"The\" and the second and last occurrence is \"the\". Therefore, the variable ($)Text will be updated to the following:\n\"The quick brown fox jumps over lazy dog\" Remove the first Occurrence matching the pattern in Text To Remove This example will find and remove the first occurrence of text matching the pattern \"?he\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"?he\" ($)TextToRemove is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result An Occurrence of 1 means find and remove the first occurrence; 2 means second etc.\n\"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the pattern \"?he\"; the first occurrence is \"The\" and the second occurrence is \"the\". Therefore, the variable ($)Text will be updated to the following:\n\" quick brown fox jumps over the lazy dog\" Remove the last Occurrence matching the regex in Text To Remove This example will find and remove the last occurrence of text matching the regex \"(fox|dog)\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Remove ($)TextToRemove, with value \"(fox|dog)\" ($)TextToRemove is a variable of type String Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result An Occurrence of -1, means find and remove the last occurrence; -2 means second last etc.\n\"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the regex \"(fox|dog)\"; the first occurrence is \"fox\" and the second and last occurrence is \"dog\". Therefore, the variable ($)Text will be updated to the following:\n\"The quick brown fox jumps over the lazy \" Properties Text The Text to find and remove the specified Occurrence of Text To Remove from.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Remove The Text To Remove the specified Occurrence of, from Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Occurrence The Occurrence of Text To Remove from Text.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Search Options Search Options can be specified to choose whether Text To Remove should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Text To Remove it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to match occurrences of Text To Remove in Text.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and Text To Remove is not a valid regex (e.g. (). Remarks Occurrences For information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nComparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\") there is nothing to remove from, so no operation is performed.\nNull or empty Text To Remove If Text To Remove is null or empty (i.e. \"\") there is nothing to remove, so no operation is performed.\nText To Remove or Occurrence is not present If Text To Remove or the specified Occurrence is not present, there is nothing to remove, so no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String with the specified Occurrence of Text To Remove removed and re-assigns it to the variable specified in the Text property.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Finds and removes the specified occurrence of text from a given text.","excerpt":"Finds and removes the specified occurrence of text from a given text.","ref":"/docs/reference/blocks/text/find-and-remove-text/find-and-remove-text-block/","tags":"","title":"Find And Remove Text"},{"body":"\rFind And Replace All Text (Cortex.Blocks.Text.FindAndReplaceText.FindAndReplaceAllTextBlock)\nDescription Finds and replaces all occurrences of Text To Replace with the specified Replacement Text in a given Text.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to find the Text To Replace.\nExamples Replace all occurrences of Text To Replace (Ordinal) This example will find and replace all occurrences of \"The\" in \"The quick brown fox jumps over the lazy dog\" with \"a\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"The\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"a\" ($)ReplacementText is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result As this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" only contains the text \"The\" once; \"the\" has a different case so does not match. Therefore, the variable ($)Text will be updated to the following:\n\"a quick brown fox jumps over the lazy dog\" Replace all occurrences of Text To Replace (Ordinal Ignore Case) This example will find and replace all occurrences of \"The\" in \"The quick brown fox jumps over the lazy dog\" with \"a\".\nIt performs a case-insensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"The\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"a\" ($)ReplacementText is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Result As this example is performing a case-insensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" contains the text \"The\" twice; the first occurrence is \"The\" and the second occurrence is \"the\". Therefore, the variable ($)Text will be updated to the following:\n\"a quick brown fox jumps over a lazy dog\" Replace all occurrences that match the pattern in Text To Replace This example will find and replace all occurrences of text that match the pattern \"?he\" from \"The quick brown fox jumps over the lazy dog\" with \"a\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"?he\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"a\" ($)ReplacementText is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result \"The quick brown fox jumps over the lazy dog\" contains \"The\" and \"the\" that matches the pattern \"?he\". Therefore, the variable ($)Text will be updated to the following:\n\"a quick brown fox jumps over a lazy dog\" Replace all occurrences that match the regex in Text To Replace This example will find and replace all occurrences of text that match the regex \"^The\" from \"The quick brown fox jumps over the lazy dog\" with \"a\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"^The\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"a\" ($)ReplacementText is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result \"The quick brown fox jumps over the lazy dog\" contains \"The\" at the start of the sentence that matches the regex \"^The\". Therefore, the variable ($)Text will be updated to the following:\n\"a quick brown fox jumps over the lazy dog\" Properties Text The Text to find and replace all occurrences of Text To Replace in.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Replace The Text To Replace all occurrences with Replacement Text in Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Replacement Text The Replacement Text used to replace all occurrences of Text To Replace in Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Search Options Search Options can be specified to choose whether Text To Replace should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Text To Replace it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to match occurrences of Text To Replace in Text.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and Text To Replace is not a valid regex (e.g. (). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\") there is nothing to replace in, so no operation is performed.\nNull or empty Text To Replace If Text To Replace is null or empty (i.e. \"\") there is nothing to replace, so no operation is performed.\nNull or empty Replacement Text If Replacement Text is null or empty (i.e. \"\") all occurrences of Text To Replace are replaced with an empty text (i.e. \"\").\nText To Replace is not present If Text To Replace is not present there is nothing to replace, so no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String with all occurrences of Text To Replace replaced and re-assigns it to the variable specified in the Text property.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Finds and replaces all occurrences of text in a given text.","excerpt":"Finds and replaces all occurrences of text in a given text.","ref":"/docs/reference/blocks/text/find-and-replace-text/find-and-replace-all-text-block/","tags":"","title":"Find And Replace All Text"},{"body":"","categories":"","description":"Find text in another text, and replace it.","excerpt":"Find text in another text, and replace it.","ref":"/docs/reference/blocks/text/find-and-replace-text/","tags":"","title":"Find And Replace Text"},{"body":"\rFind And Replace Text (Cortex.Blocks.Text.FindAndReplaceText.FindAndReplaceTextBlock)\nDescription Finds and replaces the specified Occurrence of Text To Replace with the specified Replacement Text in a given Text.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to find the Text To Replace.\nExamples Replace the first Occurrence of Text To Replace (Ordinal) This example will find and replace the first occurrence of \"The\" in \"The quick brown fox jumps over the lazy dog\" with \"a\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"The\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"a\" ($)ReplacementText is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result An Occurrence of 1 means find and replace the first occurrence; 2 means second etc.\nAs this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" only contains the text \"The\" once; \"the\" has a different case so does not match. Therefore, the variable ($)Text will be updated to the following:\n\"a quick brown fox jumps over the lazy dog\" Replace the last occurrence of Text To Replace (Ordinal Ignore Case) This example will find and replace the last occurrence of \"The\" in \"The quick brown fox jumps over the lazy dog\" with \"a\".\nIt performs a case-insensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"The\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"a\" ($)ReplacementText is a variable of type String Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Result An Occurrence of -1, means find and replace the last occurrence; -2 means second last etc.\nAs this example is performing a case-insensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" contains the text \"The\" twice; the first occurrence is \"The\" and the second and last occurrence is \"the\". Therefore, the variable ($)Text will be updated to the following:\n\"The quick brown fox jumps over a lazy dog\" Replace the first Occurrence matching the pattern in Text To Replace This example will find and replace the first occurrence of text matching the pattern \"?he\" from \"The quick brown fox jumps over the lazy dog\" with \"a\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"?he\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"a\" ($)ReplacementText is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result An Occurrence of 1 means find and replace the first occurrence; 2 means second etc.\n\"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the pattern \"?he\"; the first occurrence is \"The\" and the second occurrence is \"the\". Therefore, the variable ($)Text will be updated to the following:\n\"a quick brown fox jumps over the lazy dog\" Replace the last Occurrence matching the regex in Text To Replace This example will find and replace the last occurrence of text matching the regex \"(fox|dog)\" from \"The quick brown fox jumps over the lazy dog\" with \"cat\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Replace ($)TextToReplace, with value \"(fox|dog)\" ($)TextToReplace is a variable of type String Replacement Text ($)ReplacementText, with value \"cat\" ($)ReplacementText is a variable of type String Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Result An Occurrence of -1, means find and replace the last occurrence; -2 means second last etc.\n\"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the regex \"(fox|dog)\"; the first occurrence is \"fox\" and the second and last occurrence is \"dog\". Therefore, the variable ($)Text will be updated to the following:\n\"The quick brown fox jumps over the lazy cat\" Properties Text The Text to find and replace the specified Occurrence of Text To Replace in.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Replace The Text To Replace the specified Occurrence with Replacement Text in Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Replacement Text The Replacement Text used to replace the specified Occurrence of Text To Replace in Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Occurrence The Occurrence of Text To Replace in Text.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Search Options Search Options can be specified to choose whether Text To Replace should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Text To Replace it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to match occurrences of Text To Replace in Text.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and Text To Replace is not a valid regex (e.g. (). Remarks Occurrences For information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nComparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\") there is nothing to replace in, so no operation is performed.\nNull or empty Text To Replace If Text To Replace is null or empty (i.e. \"\") there is nothing to replace, so no operation is performed.\nNull or empty Replacement Text If Replacement Text is null or empty (i.e. \"\") the specified Occurrence of Text To Replace is replaced with an empty text (i.e. \"\").\nText To Replace or Occurrence is not present If Text To Replace or the specified Occurrence is not present there is nothing to replace, so no operation is performed.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String with the specified Occurrence of Text To Replace replaced and re-assigns it to the variable specified in the Text property.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Finds and replaces the specified occurrence of text in a given text.","excerpt":"Finds and replaces the specified occurrence of text in a given text.","ref":"/docs/reference/blocks/text/find-and-replace-text/find-and-replace-text-block/","tags":"","title":"Find And Replace Text"},{"body":"FlowException (Cortex.Exceptions.FlowException)\nThe exception thrown by the ThrowNewFlowException block.\nTODO:\nHow to fix TODO:\n","categories":"","description":"The exception thrown by the ThrowNewFlowException block.","excerpt":"The exception thrown by the ThrowNewFlowException block.","ref":"/docs/reference/exceptions/flowexception/","tags":"","title":"FlowException"},{"body":"FlowReference (Cortex.DataTypes.Flows.FlowReference)\nSummary A FlowReference is used to reference a flow that will be called using the Run Flow block.\nCategory: Flows Name: FlowReference Full Name: Cortex.DataTypes.Flows.FlowReference Alias: N/A Description: Used to reference a Flow using its Id. Default Value: null Can be used as: Object, dynamic Can be cast to: N/A Properties Id The unique Id of the flow that is referenced.\nData Type Guid Is Advanced false Default Editor Literal Default Value No value (defaults to 00000000-0000-0000-0000-000000000000) Remarks Create a FlowReference Currently a FlowReference can only created by using the Flow Property of the Run Flow block. Using the editor to select a flow (by its Name or Id) will create a flow reference for the block to use.\nProperty Editor Support The Expression Editor is not available for Input, InputOutput and Output properties where the data type is FlowReference. The Literal Editor is available for Input properties where the data type is FlowReference. The Variable Editor is available for Output properties where the data type is FlowReference. Known limitations None\nSee Also Related Data Types Guid Related Concepts Flows External Documentation None\n","categories":"","description":"Used to reference a Flow using its Id.","excerpt":"Used to reference a Flow using its Id.","ref":"/docs/reference/data-types/flows/flowreference/","tags":"","title":"FlowReference"},{"body":"","categories":"","description":"Blocks related to executing Flows.","excerpt":"Blocks related to executing Flows.","ref":"/docs/reference/blocks/flows/","tags":"","title":"Flows"},{"body":"","categories":"","description":"Exceptions related to Flows","excerpt":"Exceptions related to Flows","ref":"/docs/reference/exceptions/flows/","tags":"","title":"Flows"},{"body":"FolderInformation (Cortex.DataTypes.FilesAndFolders.FolderInformation)\nSummary Properties FileCount FolderCount TotalItemCount Path Name ParentRoot ParentPath SizeInBytes IsArchive IsCompressed IsEncrypted IsHidden IsNormal IsTemporary IsReadOnly IsSystem CreationTimeLocal CreationTimeUtc LastAccessTimeLocal LastAccessTimeUtc LastWriteTimeLocal LastWriteTimeUtc Remarks Create a FolderInformation Convert FolderInformation to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent information about a folder.","excerpt":"Used to represent information about a folder.","ref":"/docs/reference/data-types/files-and-folders/folderinformation/","tags":"","title":"FolderInformation"},{"body":"","categories":"","description":"Blocks used to loop through the items in a collection (i.e. Lists, Dictionaries and Structures).","excerpt":"Blocks used to loop through the items in a collection (i.e. Lists, Dictionaries and Structures).","ref":"/docs/reference/blocks/loops/for-each/","tags":"","title":"For Each Loop"},{"body":"\rFor Each Loop (Cortex.Blocks.Loops.ForEach.ForEachLoopBlock)\nDescription Loops through all items in the specified Collection (i.e. Lists, Dictionaries and Structures).\nThe \"Index\" and \"Value\" of the current item are returned as properties of a Structure, which is saved to the Current Iteration.\nExamples Loop through all items in a list This example will loop through all items in [\"Item1\", \"Item2\", \"Item3\"].\nProperties Property Value Notes Collection ($)Collection, with value [\"Item1\", \"Item2\", \"Item3\"] ($)Collection is a variable of type IList\u003cString\u003e Current Iteration ($)CurrentIteration, with no value ($)CurrentIteration is a variable of type Structure Result Looping through all items in [\"Item1\", \"Item2\", \"Item3\"] will result in 3 loops with ($)CurrentIteration being updated to the following:\n1st loop\n{ \"Index\": 0, \"Value\": \"Item1\" } 2nd loop\n{ \"Index\": 1, \"Value\": \"Item2\" } 3rd loop\n{ \"Index\": 2, \"Value\": \"Item3\" } Loop through all items in a dictionary or structure This example will loop through all items in {\"Key1\": \"Value1\", \"Key2\": \"Value2\", \"Key3\": \"Value3\"}.\nProperties Property Value Notes Collection ($)Collection, with value {\"Key1\": \"Value1\", \"Key2\": \"Value2\", \"Key3\": \"Value3\"} ($)Collection is a variable of type IDictionary\u003cString, String\u003e or Structure Current Iteration ($)CurrentIteration, with no value ($)CurrentIteration is a variable of type Structure Result Looping through all items in {\"Key1\": \"Value1\", \"Key2\": \"Value2\", \"Key3\": \"Value3\"} will result in 3 loops with ($)CurrentIteration being updated to the following:\n1st loop\n{ \"Index\": 0, \"Value\": { \"Key\": \"Key1\", \"Value\": \"Value1\" } } 2nd loop\n{ \"Index\": 1, \"Value\": { \"Key\": \"Key2\", \"Value\": \"Value2\" } } 3rd loop\n{ \"Index\": 2, \"Value\": { \"Key\": \"Key3\", \"Value\": \"Value3\" } } Properties Collection The Collection to loop through.\nIf Collection is empty (i.e. contains no items), no looping will occur.\nData Type IEnumerable Property Type Input Is Advanced false Default Editor Variable Default Value ($)Collection with no value Current Iteration The Current Iteration the looping is at.\nCurrent Iteration is set to a Structure on each loop, containing the current item’s \"Index\" and \"Value\". \"Index\" is set to 0 on the first loop, and on each subsequent loop is incremented by 1.\nLooping will continue whilst \"Index\" is less than the number of items in Collection, with the flow execution exiting via the block’s right port (blue loop icon).\nOnce \"Index\" equals the number of items in Collection, looping stops, the flow execution exits via the block’s bottom port (green tick) and Current Iteration is reset to an empty Structure.\nIf Current Iteration \"Index\" is modified during a loop, it will automatically be set back to its original value immediately before the next loop begins.\nData Type Structure Property Type Output Is Advanced false Default Editor Variable Default Value ($)CurrentIteration with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Collection is null. Remarks Empty Collection If Collection is empty (i.e. contains no items), no looping will occur.\n","categories":"","description":"Loops through all items in the specified collection (i.e. Lists, Dictionaries and Structures).","excerpt":"Loops through all items in the specified collection (i.e. Lists, Dictionaries and Structures).","ref":"/docs/reference/blocks/loops/for-each/for-each-loop-block/","tags":"","title":"For Each Loop"},{"body":"","categories":"","description":"Blocks used to loop a specified number of times.","excerpt":"Blocks used to loop a specified number of times.","ref":"/docs/reference/blocks/loops/for/","tags":"","title":"For Loop"},{"body":"\rFor Loop (Cortex.Blocks.Loops.For.ForLoopBlock)\nDescription Loops a specified number of times based on a given Start Index, End Index and Increment.\nExamples Loop between 0 and 2 incrementing by 1 This example will loop between 0 and 2 incrementing by 1 each loop.\nProperties Property Value Notes Start Index ($)StartIndex, with value 0 ($)StartIndex is a variable of type Int32 End Index ($)EndIndex, with value 2 ($)EndIndex is a variable of type Int32 Increment ($)Increment, with value 1 ($)Increment is a variable of type Int32 Current Index ($)CurrentIndex, with value 0 ($)CurrentIndex is a variable of type Int32 that will be incremented by ($)Increment each loop Result Looping between 0 and 2 incrementing by 1 each loop will result in 3 loops with ($)CurrentIndex being updated to the following:\n1st loop\n0 2nd loop\n1 3rd loop\n2 Loop between 10 and 20 incrementing by 5 This example will loop between 10 and 20 incrementing by 5 each loop.\nProperties Property Value Notes Start Index ($)StartIndex, with value 10 ($)StartIndex is a variable of type Int32 End Index ($)EndIndex, with value 20 ($)EndIndex is a variable of type Int32 Increment ($)Increment, with value 5 ($)Increment is a variable of type Int32 Current Index ($)CurrentIndex, with value 0 ($)CurrentIndex is a variable of type Int32 that will be incremented by ($)Increment each loop Result Looping between 10 and 20 incrementing by 5 each loop will result in 3 loops with ($)CurrentIndex being updated to the following:\n1st loop\n10 2nd loop\n15 3rd loop\n20 Loop between 20 and 10 incrementing by -5 This example will loop between 20 and 10 incrementing by -5 each loop.\nProperties Property Value Notes Start Index ($)StartIndex, with value 20 ($)StartIndex is a variable of type Int32 End Index ($)EndIndex, with value 10 ($)EndIndex is a variable of type Int32 Increment ($)Increment, with value -5 ($)Increment is a variable of type Int32 Current Index ($)CurrentIndex, with value 0 ($)CurrentIndex is a variable of type Int32 that will be incremented by ($)Increment each loop Result Looping between 20 and 10 incrementing by -5 each loop will result in 3 loops with ($)CurrentIndex being updated to the following:\n1st loop\n20 2nd loop\n15 3rd loop\n10 Properties Start Index The Start Index the looping will start at. This is an inclusive index, which means the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 End Index The End Index the looping will end at. This is an inclusive index, which means the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Increment The Increment to be added to Current Index every time the block loops.\nIncrement can be:\nA positive value if Start Index is less than End Index. A negative value if Start Index is greater than End Index. A positive or negative value if Start Index is equal to End Index. If any of the above are not true or Increment is 0 then an InfiniteLoopException will be thrown the first time a flow execution executes this block.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Current Index The Current Index the looping is at.\nCurrent Index initially gets set to the value of Start Index on the first loop, and on each subsequent loop is incremented by the value of Increment.\nIf Increment is a positive value, the block will continue looping whilst Current Index is less than End Index; with the flow execution exiting via the block’s right port (blue loop icon).\nIf Increment is a negative value, the block will continue looping whilst Current Index is greater than Start Index; with the flow execution exiting via the block’s right port (blue loop icon).\nWhen either of the above are not true the block stops looping, the flow execution exits via the block’s bottom port (green tick) and Current Index is reset to 0\nAt this moment, there is a known limitation with Current Index, which requires the variable used must have an Int32 value assigned to it before the block executes. If it does not then an InvalidPropertyValueException will be thrown the first time a flow execution executes this block.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)CurrentIndex with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InfiniteLoopException Thrown when Increment is 0. See Increment Is Zero. Thrown when Increment has a positive value and Start Index is greater than End Index. See Increment Is Positive. Thrown when Increment has a negative value and Start Index is less than End Index. See Increment Is Negative. InvalidPropertyValueException Thrown when Current Index does not have an Int32 value assigned to it before the block executes. See Value Is Invalid. Remarks Start Index and End Index are inclusive The Start Index and End Index properties are both inclusive indexes, which means those indexes will be included in the looping range (e.g. if Start Index is 0 and End Index is 1, the block will loop 2 times).\nStart Index greater than End Index Start Index can be greater than End Index. If this is the case, Increment must be a negative value. See Example above.\nKnown Limitations The variable used for Current Index must have an Int32 value assigned to it before the block executes. If it does not then an InvalidPropertyValueException will be thrown the first time a flow execution executes this block.\n","categories":"","description":"Loops a specified number of times based on a given start index, end index and increment.","excerpt":"Loops a specified number of times based on a given start index, end index and increment.","ref":"/docs/reference/blocks/loops/for/for-loop-block/","tags":"","title":"For Loop"},{"body":"","categories":"","description":"Format text containing format parameters (i.e. {0}) by replacing them with other values.","excerpt":"Format text containing format parameters (i.e. {0}) by replacing them with other values.","ref":"/docs/reference/blocks/text/format-text/","tags":"","title":"Format Text"},{"body":"\rFormat Text With Value (Cortex.Blocks.Text.FormatText.FormatTextWithValueBlock`1)\nDescription Replaces all {0} format parameters in the specified Format Template with the given Value, saving the result as Text.\nAn additional Format Provider option can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting).\nExamples Text Value This example will format \"Hello {0}\" with \"world!\".\nProperties Property Value Notes Format Template ($)FormatTemplate, with value \"Hello {0}\" ($)FormatTemplate is a variable of type String Value ($)Value, with value \"world!\" ($)Value is a variable of type String Format Provider ($)FormatProvider, with value null ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Formatting \"Hello {0}\" with \"world!\" results in the variable ($)Text being updated to the following:\n\"Hello world!\" Double Value using American English (“en-US”) This example will format \"Your final bill is {0:C2}\" with 99.99.\nThe format parameter {0:C2} will display the double value as U.S currency to two decimal places (i.e. $99.99):\n0 - is replaced by the double value. C - indicates to include the currency symbol for the specified culture (i.e. $). 2 - indicates the number of decimal places to format the double value to. For information about format templates and parameters, please see Text Formatting.\nProperties Property Value Notes Format Template ($)FormatTemplate, with value \"Your final bill is {0:C2}\" ($)FormatTemplate is a variable of type String Value ($)Value, with value 99.99 ($)Value is a variable of type Double Format Provider ($)FormatProvider, with value new CultureInfo(\"en-US\") ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Formatting \"Your final bill is {0:C2}\" with 99.99 results in the variable ($)Text being updated to the following:\n\"Your final bill is $99.99\" Properties Format Template Format Template can be specified to define the format of the resultant Text.\nAll {0} format parameters in Format Template will be replaced with Value.\nIf Format Template is not specified, null or empty (i.e. \"\"), or does not contain any {0} format parameters, nothing is replaced; Text will be set to the value of Format Template.\nFor information about format templates and parameters, please see Text Formatting.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value @\"{0}\" Value The Value to replace all {0} format parameters with.\nValue does not have to be text, it can be any data type. Any non-text value will be converted to its text representation when it is replaced.\nFor information about how types are converted to their text representation please see Converting Objects To Text.\nData Type TValue Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Format Provider Format Provider can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting.).\nIf Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\nData Type IFormatProvider Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Text The formatted Text that results from replacing all {0} format parameters in Format Template with Value.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Text with no value Exceptions The exceptions thrown by the block can be found below:\nName Description FormatException Thrown when Format Template contains a format parameter not equal to zero (e.g. \"Hello {1}\"). Thrown when Format Template contains a format parameter that is invalid or not well-formed (e.g. \"Cost is {0:Q2}, as \"Q\" is not a valid format parameter). Remarks Text Formatting Please note that changes to operating system settings, could result in some of the examples above displaying different results.\nFor information about format templates and parameters, please see Text Formatting.\nNull or Empty Format Template If Format Template is not specified, null or empty (i.e. \"\"), or does not contain any {0} format parameters, nothing is replaced; Text will be set to the value of Format Template.\nNull Format Provider If Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\n","categories":"","description":"Formats text by replacing all `{0}` format parameters in a specified format template with a given value.","excerpt":"Formats text by replacing all `{0}` format parameters in a specified format template with a given value.","ref":"/docs/reference/blocks/text/format-text/format-text-with-value-block-1/","tags":"","title":"Format Text With Value"},{"body":"\rFormat Text With Values (Cortex.Blocks.Text.FormatText.FormatTextWithValuesBlock`1)\nDescription Replaces all format parameters (e.g. {0} or {1} or {2}) in the given Format Template with the specified Values, saving the result as Text.\nAn additional Format Provider option can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting).\nExamples Text Values This example will format \"Hello {0} {1}\" with [\"Mr\", \"Smith\"].\nProperties Property Value Notes Format Template ($)FormatTemplate, with value \"Hello {0} {1}\" ($)FormatTemplate is a variable of type String Values ($)Values, with value [\"Mr\", \"Smith\"] ($)Values is a variable of type IEnumerable\u003cString\u003e Format Provider ($)FormatProvider, with value null ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result Formatting \"Hello {0} {1}\" with [\"Mr\", \"Smith\"] results in the variable ($)Text being updated to the following:\n\"Hello Mr Smith\" Multiple non-text values using American English (“en-US”) This example will format \"Your latest payment of {0:C2} has been received. You have paid {1:P0} of your total and have {2:C2} outstanding.\" with [99.99, 0.8, 40].\nThe format parameter {0:C2} will display the 99.99 as U.S currency to two decimal places (i.e. $99.99):\n0 - is replaced by the double value 99.99. C - indicates to include the currency symbol for the specified culture (i.e. $). 2 - indicates to format the double value to two decimal places. The format parameter {1:P0} will display the 0.8 as a percentage to zero decimal places (i.e. 80 %):\n1 - is replaced by the double value 0.8. P - indicates the value should be formatted as a percentage. 0 - indicates to format the percentage value to zero decimal places. The format parameter {2:C2} will display the 40 as U.S currency to two decimal places (i.e. $40.00):\n2 - is replaced by the double value 40. C - indicates to include the currency symbol for the specified culture (i.e. $). 2 - indicates to format the double value to two decimal places. For information about format templates and parameters, please see Text Formatting.\nProperties Property Value Notes Format Template ($)FormatTemplate, with value \"Your latest payment of {0:C2} has been received. You have paid {1:P0} of your total and have {2:C2} outstanding.\" ($)FormatTemplate is a variable of type String Values ($)Values, with value [99.99, 0.8, 40] ($)Values is a variable of type IEnumerable\u003cDouble\u003e Format Provider ($)FormatProvider, with value new CultureInfo(\"en-US\") ($)FormatProvider is a variable of type IFormatProvider Text ($)Text, with no value ($)Text is a variable that will be set to a String value Result \"Your latest payment of {0:C2} has been received. You have paid {1:P0} of your total and have {2:C2} outstanding.\" with [99.99, 0.8, 40] results in the variable ($)Text being updated to the following:\n\"Your latest payment of $99.99 has been received. You have paid 80 % of your total and have $40.00 outstanding.\" Properties Format Template Format Template can be specified to define the format of the resultant Text.\nAll format parameters (e.g. {0} or {1} or {2}) in Format Template will be replaced with the corresponding value in Values. Format parameter {0} will be replaced with the first value in Values; {1} will be replaced with the second value in Values etc.\nThe number of unique format parameters must be equal to or less than the number of items in Values.\nThe index of each format parameter must be equal to or less than the number of items in Values - 1.\nIf Format Template is not specified, null or empty (i.e. \"\"), or does not contain any format parameters, nothing is replaced; Text will be set to the value of Format Template.\nFor information about format templates and parameters, please see Text Formatting.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value @\"{0} {1}\" Values The Values to replace all format parameters with.\nIf a value does not have a corresponding format parameter, it is ignored.\nValues does not have to contain all text values, it can contain any data types. Any non-text values will be converted to their text representation when they are replaced.\nIf any value is null or empty (i.e. \"\"), an empty text (i.e. \"\") will replace the corresponding format parameter.\nFor information about how types are converted to their text representation please see Converting Objects To Text.\nData Type IEnumerable\u003cTValue\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cdynamic\u003e() {0, \"1\"} Format Provider Format Provider can be specified to define the cultural rules used to control the formatting (e.g. new CultureInfo(\"en-US\") will apply American English rules to the formatting.).\nIf Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\nData Type IFormatProvider Property Type Input Is Advanced true Default Editor Expression Default Value CultureInfo.InvariantCulture Text The formatted Text that results from replacing all format parameters in Format Template with corresponding Values.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Text with no value Exceptions The exceptions thrown by the block can be found below:\nName Description FormatException Thrown when Format Template contains a format parameter less than zero (e.g. \"Hello {-1}\") or greater than the count of Values - 1. Thrown when Format Template contains a format parameter that is invalid or not well-formed (e.g. \"Cost is {0:Q2}, as \"Q\" is not a valid format parameter). PropertyNullException Thrown when Values is null. Remarks Text Formatting Please note that changes to operating system settings, could result in some of the examples above displaying different results.\nFor information about format templates and parameters, please see Text Formatting.\nNull or Empty Format Template If Format Template is not specified, null or empty (i.e. \"\"), or does not contain any format parameters, nothing is replaced; Text will be set to the value of Format Template.\nNull Format Provider If Format Provider is not specified or null, CultureInfo.InvariantCulture will be used; CultureInfo.InvariantCulture is associated with the English language but not with any country/region. For more information, please see Invariant Culture rules.\n","categories":"","description":"Formats text by replacing all format parameters (e.g. `{0}` or `{1}` or `{2}`) in a specified format template with given values.","excerpt":"Formats text by replacing all format parameters (e.g. `{0}` or `{1}` or `{2}`) in a specified format template with given values.","ref":"/docs/reference/blocks/text/format-text/format-text-with-values-block-1/","tags":"","title":"Format Text With Values"},{"body":"Formatting Summary TODO:\nWhat formatting is How to format text Blocks Expression How does text formatting use DateTime Formatting and Number Formatting? Link to Working With -\u003e Date and Time -\u003e Date and Time Formatting Link to Working With -\u003e Number -\u003e Number Formatting Using Blocks TODO:\nExplain that blocks can be used - maybe with examples or link to examples within the block documentation Convert Object to Text Format Text with Value Format Text with Values Using Expressions TODO: How to format using an expression\nString Interpolation TODO:\nmention that convert object to text is close to behaviour of string interpolation, but not everything is covered - e.g. no expression support or indexing - recommendation is to use string.interpolation inline as more powerful and saves block licensing Format Providers TODO:\nwhat are they ways of creating CultureInfo.InvariantCulture CultureInfo.CurrentCulture new CultureInfo(\"\") new CultureInfo(“en-GB”) Format Templates TODO:\nFind C# link Talk about what a template is and how format parameters are used (e.g. \"{0}\") curly brackets need to be escaped when using the $ and $@ prefixes Format Specifiers TODO:\nAdd table of format specifiers\nhttps://docs.microsoft.com/en-us/dotnet/api/system.string.format?view=net-6.0#Starting\nTODO: Control formatting\nhttps://docs.microsoft.com/en-us/dotnet/api/system.string.format?view=net-6.0#control-formatting TODO: Control spacing\nhttps://docs.microsoft.com/en-us/dotnet/api/system.string.format?view=net-6.0#control-spacing TODO: Control alignment\nhttps://docs.microsoft.com/en-us/dotnet/api/system.string.format?view=net-6.0#control-alignment TODO: Composite formatting\nhttps://docs.microsoft.com/en-us/dotnet/api/system.string.format?view=net-6.0#the-format-method-in-brief TODO: Format Item\nhttps://docs.microsoft.com/en-us/dotnet/api/system.string.format?view=net-6.0#the-format-item TODO: Anything else relevant on formatting links above\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding text formatting.","excerpt":"Information regarding text formatting.","ref":"/docs/reference/concepts/working-with/text/formatting/","tags":"","title":"Formatting"},{"body":"\rGet All Items (Cortex.Blocks.Dictionaries.GetItem.GetAllItemsBlock`3)\nDescription Get all Items from a Dictionary.\nExamples Get all items from a Dictionary This example will get all items in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Items ($)Items, with no value ($)Items is a variable that will be set to an IList\u003cInt32\u003e Result Getting all items from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Items being updated to the following:\n[1, 2, 3, 3, 2, 1] Properties Dictionary The Dictionary to get all Items from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Items The Items in the Dictionary.\nData Type IList\u003cTItem\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Items with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Dictionary is null. Remarks Empty Dictionary If Dictionary is empty (i.e. {}) the variable specified in the Items property is set to an empty IList\u003cTItem\u003e (i.e. []).\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Gets all items from a Dictionary.","excerpt":"Gets all items from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/get-item/get-all-items-block-3/","tags":"","title":"Get All Items"},{"body":"\rGet All Keys (Cortex.Blocks.Dictionaries.GetKey.GetAllKeysBlock`3)\nDescription Get all Keys from a Dictionary.\nExamples Get all keys from a Dictionary This example will get all keys in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Keys ($)Keys, with no value ($)Keys is a variable that will be set to an IList\u003cString\u003e Result Getting all keys from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Keys being updated to the following:\n[\"Key1\", \"Key2\", \"Key3\", \"Key4\", \"Key5\", \"Key6\"] Properties Dictionary The Dictionary to get all Keys from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Keys The Keys in the Dictionary.\nData Type IList\u003cTKey\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Keys with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Dictionary is null. Remarks Empty Dictionary If Dictionary is empty (i.e. {}) the variable specified in the Keys property is set to an empty IList\u003cTKey\u003e (i.e. []).\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Gets all keys from a Dictionary.","excerpt":"Gets all keys from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/get-key/get-all-keys-block-3/","tags":"","title":"Get All Keys"},{"body":"\rGet Count Of All Items (Cortex.Blocks.Dictionaries.GetCount.GetCountOfAllItemsBlock`3)\nDescription Gets the Count of all items in a Dictionary.\nExamples Get Count of all items in a Dictionary This example will get the count of all items in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Count ($)Count, with no value ($)Count is a variable that will be set to an Int32 value Result Getting the count of all items in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Count being updated to the following:\n6 Properties Dictionary The Dictionary to get the Count of all items for.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Count The Count of all items in Dictionary.\nData Type Int32 Property Type Output Is Advanced false Default Editor Variable Default Value ($)Count with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Dictionary is null. Remarks Empty Dictionary If Dictionary is empty (i.e. {}), the variable specified in the Count property is set to 0.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Gets the count of all items in a Dictionary.","excerpt":"Gets the count of all items in a Dictionary.","ref":"/docs/reference/blocks/dictionaries/get-count/get-count-of-all-items-block-3/","tags":"","title":"Get Count Of All Items"},{"body":"\rGet Count Of All Items (Cortex.Blocks.Lists.GetCount.GetCountOfAllItemsBlock`2)\nDescription Gets the Count of all items in a List.\nExamples Get Count of all items in a List This example will get the count of all items in [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Count ($)Count, with no value ($)Count is a variable that will be set to an Int32 value Result Getting the count of all items in [\"Some Text\", 1] results in the variable ($)Count being updated to the following:\n2 Properties List The List to get the Count of all items for.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Count The Count of all items in List.\nData Type Int32 Property Type Output Is Advanced false Default Editor Variable Default Value ($)Count with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when List is null. Remarks Empty List If List is empty (i.e. []), the variable specified in the Count property is set to 0.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the count of all items in a List.","excerpt":"Gets the count of all items in a List.","ref":"/docs/reference/blocks/lists/get-count/get-count-of-all-items-block-2/","tags":"","title":"Get Count Of All Items"},{"body":"\rGet Count Of Items With Value (Cortex.Blocks.Dictionaries.GetCount.GetCountOfItemsWithValueBlock`3)\nDescription Gets the Count of items in a Dictionary with the specified Value.\nExamples Get Count of items in a Dictionary with a Value This example will get the count of items in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} with the value 1.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Count ($)Count, with no value ($)Count is a variable that will be set to an Int32 value Result Getting the count of items in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} with the value 1 results in the variable ($)Count being updated to the following:\n2 Properties Dictionary The Dictionary to get the Count of items with the specified Value for.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Value The Value items must match to be included in the Count.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Count The Count of items in Dictionary with the specified Value.\nData Type Int32 Property Type Output Is Advanced false Default Editor Variable Default Value ($)Count with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}), the variable specified in the Count property is set to 0.\nNo items matching Value If Dictionary does not contain items matching the specified Value, the variable specified in the Count property is set to 0.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Gets the count of items in a Dictionary with the specified value.","excerpt":"Gets the count of items in a Dictionary with the specified value.","ref":"/docs/reference/blocks/dictionaries/get-count/get-count-of-items-with-value-block-3/","tags":"","title":"Get Count Of Items With Value"},{"body":"\rGet Count Of Items With Value (Cortex.Blocks.Lists.GetCount.GetCountOfItemsWithValueBlock`2)\nDescription Gets the Count of items in a List with the specified Value.\nExamples Get Count of items in a List with a Value This example will get the count of items in [\"Some Text\", 1] with the value 1.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Count ($)Count, with no value ($)Count is a variable that will be set to an Int32 value Result Getting the count of items in [\"Some Text\", 1] with the value 1 results in the variable ($)Count being updated to the following:\n1 Properties List The List to get the Count of items with the specified Value for.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value items must match to be included in the Count.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Count The Count of items in List with the specified Value.\nData Type Int32 Property Type Output Is Advanced false Default Editor Variable Default Value ($)Count with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []), the variable specified in the Count property is set to 0.\nNo items matching Value If List does not contain items matching the specified Value, the variable specified in the Count property is set to 0.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the count of items in a List with the specified value.","excerpt":"Gets the count of items in a List with the specified value.","ref":"/docs/reference/blocks/lists/get-count/get-count-of-items-with-value-block-2/","tags":"","title":"Get Count Of Items With Value"},{"body":"","categories":"","description":"Get the count(s) of items in a dictionary.","excerpt":"Get the count(s) of items in a dictionary.","ref":"/docs/reference/blocks/dictionaries/get-count/","tags":"","title":"Get Count(s) of Items"},{"body":"","categories":"","description":"Get the count(s) of items in a list.","excerpt":"Get the count(s) of items in a list.","ref":"/docs/reference/blocks/lists/get-count/","tags":"","title":"Get Count(s) of Items"},{"body":"\rGet Counts Of Items With Values (Cortex.Blocks.Dictionaries.GetCount.GetCountsOfItemsWithValuesBlock`3)\nDescription Gets the Counts of items in a Dictionary matching each of the specified Values.\nExamples Get Counts of items in a Dictionary matching each of the Values This example will get the counts of items in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} matching each of the values [1, 2, 3].\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Values ($)Values, with value [1, 2, 3] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Counts ($)Counts, with no value ($)Counts is a variable that will be set to an IList\u003cInt32\u003e value Result Getting the counts of items in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} matching each of the values [1, 2, 3] results in the variable ($)Counts being updated to the following:\n[2, 2, 2] The counts of items matching each value are added to ($)Counts at the same index the value is in ($)Values. In this example, there are two items matching the first value 1, two items matching the second value 2 and two items matching the third value 3, resulting in ($)Counts being set to [2, 2, 2].\nProperties Dictionary The Dictionary to get the Counts of items matching each of the specified Values for.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Values The Values items must match to be included in the Counts.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Counts The Counts of items in Dictionary matching each of the specified Values.\nFor each value in Values, Counts will have a corresponding item whose value is the count of items in Dictionary matching the value.\nI.e. The count of items matching the first value in Values will be saved as the first item in Counts; the count of items matching the second value in Values will be saved as the second item in Counts etc.\nData Type IList\u003cInt32\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Counts with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Dictionary or Values are null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Values If Values is empty (i.e. []), the variable specified in the Counts property is set to empty (i.e. []).\nNo items matching a specified value in Values If Dictionary does not contain items matching one of the specified Values, 0 is written to the corresponding item in Counts for that value.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Gets the counts of items in a Dictionary matching each of the specified values.","excerpt":"Gets the counts of items in a Dictionary matching each of the specified values.","ref":"/docs/reference/blocks/dictionaries/get-count/get-counts-of-items-with-values-block-3/","tags":"","title":"Get Counts Of Items With Values"},{"body":"\rGet Counts Of Items With Values (Cortex.Blocks.Lists.GetCount.GetCountsOfItemsWithValuesBlock`2)\nDescription Gets the Counts of items in a List matching each of the specified Values.\nExamples Get Counts of items in a List matching each of the Values This example will get the counts of items in [\"Some Text\", 1] matching each of the values [1, 2, 3].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Values ($)Values, with value [1, 2, 3] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Counts ($)Counts, with no value ($)Counts is a variable that will be set to an IList\u003cInt32\u003e value Result Getting the counts of items in [\"Some Text\", 1] matching each of the values [1, 2, 3] results in the variable ($)Counts being updated to the following:\n[1, 0, 0] The counts of items matching each value are added to ($)Counts at the same index the value is in ($)Values. In this example, there is one item matching the first value 1, zero items matching the second value 2 and zero items matching the third value 3, resulting in ($)Counts being set to [1, 0, 0].\nProperties List The List to get the Counts of items matching each of the specified Values for.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Values The Values items must match to be included in the Counts.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Counts The Counts of items in List matching each of the specified Values.\nFor each value in Values, Counts will have a corresponding item whose value is the count of items in List matching the value.\nI.e. The count of items matching the first value in Values will be saved as the first item in Counts; the count of items matching the second value in Values will be saved as the second item in Counts etc.\nData Type IList\u003cInt32\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Counts with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when List or Values are null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Values If Values is empty (i.e. []), the variable specified in the Counts property is set to empty (i.e. []).\nNo items matching a specified value in Values If List does not contain items matching one of the specified Values, 0 is written to the corresponding item in Counts for that value.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the counts of items in a List matching each of the specified values.","excerpt":"Gets the counts of items in a List matching each of the specified values.","ref":"/docs/reference/blocks/lists/get-count/get-count-of-items-with-values-block-2/","tags":"","title":"Get Counts Of Items With Values"},{"body":"\rGet Current Date Time (Cortex.Blocks.DateAndTime.GetDateTime.GetCurrentDateTimeBlock)\nDescription Gets the current Date Time.\nExamples Get the current Date Time This example will get the current Date Time.\nProperties Property Value Notes Date Time ($)DateTime, with no value ($)DateTime is a variable that will be set to a DateTimeOffset value Result Getting the current Date Time will result in the variable ($)DateTime being set to a DateTimeOffset representing the current Date Time (including a UTC time offset). Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-11-05T08:48:08.0307614+00:00\" Properties Date Time The current Date Time including a UTC time offset.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Output Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Exceptions No exceptions are thrown by the block.\nRemarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\n","categories":"","description":"Gets the current Date Time.","excerpt":"Gets the current Date Time.","ref":"/docs/reference/blocks/date-and-time/get-date-time/get-current-date-time-block/","tags":"","title":"Get Current Date Time"},{"body":"","categories":"","description":"Get the current date time or parts of a date time (i.e. Year, Month, Day).","excerpt":"Get the current date time or parts of a date time (i.e. Year, Month, Day).","ref":"/docs/reference/blocks/date-and-time/get-date-time/","tags":"","title":"Get Date Time"},{"body":"\rGet Date Time Component (Cortex.Blocks.DateAndTime.GetDateTime.GetDateTimeComponentBlock)\nDescription Gets a Component (e.g. Year, Month, Day) of the specified Date Time.\nComponent Type is used to specify which type of component to get.\nFor more information about values that can be specified for Component Type, please see DateTimeComponentType or the examples below.\nExamples LocalDateTime This example will get the LocalDateTime of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nIn this example assume that the local date and time is in the GMT time zone.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T00:05:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.LocalDateTime ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the LocalDateTime (GMT) of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to a DateTime value. Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T10:00:00+00:00\" UtcDateTime This example will get the UTCDateTime of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.UtcDateTime ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the UTCDateTime of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to a DateTime value. Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T10:00:00Z\" Date This example will get the Date component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Date ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Date component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to a DateTime value. Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-12-31T00:00:00\" Time This example will get the Time component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Time ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Time component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following TimePeriod value:\n{ \"Years\": 0, \"Months\": 0, \"Days\": 0, \"Hours\": 5, \"Minutes\": 0, \"Seconds\": 0, \"Milliseconds\": 0 } Year This example will get the Year component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Year ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Year component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n2021 Month This example will get the Month component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Month ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Month component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n12 Day This example will get the Day component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Day ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Day component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n31 Hour This example will get the Hour component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Hour ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Hour component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n5 Minute This example will get the Minute component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Minute ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Minute component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n0 Second This example will get the Second component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Second ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Second component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n0 Millisecond This example will get the Millisecond component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Millisecond ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Millisecond component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n0 Offset This example will get the Offset component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.Offset ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the Offset component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following TimeSpan value with the following text representation:\n\"-5:00:00\" DayOfYear This example will get the DayOfYear component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.DayOfYear ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the DayOfYear component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following Int32 value:\n365 DayOfWeek This example will get the DayOfWeek component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset).\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-12-31T05:00:00-05:00 ($)DateTime is a variable of type DateTimeOffset Component Type ($)ComponentType, with value of DateTimeComponentType.DayOfWeek ($)DateTime is a variable of type DateTimeComponentType Component ($)Component, with no value ($)Component is a variable that will be set to a dynamic value Result Getting the DayOfWeek component of a Date Time representing 5am on 31st December 2021 (with -5 UTC time offset), will result in the variable ($)Component being updated to the following DayOfWeek value:\nDayOfWeek.Friday Properties Date Time The Date Time to get the specified Component Type from.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Component Type The Component Type to get from the Date Time.\nFor more information about values that can be specified for Component Type, please see DateTimeComponentType or the examples above.\nData Type DateTimeComponentType Property Type Input Is Advanced false Default Editor Literal Default Value LocalDateTime Component The Component from the Date Time.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)Component with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Component Type is not one of the specified DateTimeComponentType types (e.g. (DateTimeComponentType)100). Remarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\nWhy does the Component property return a dynamic data type? The decision for Component to return a dynamic data type rather than an Object, was to avoid users having to cast the component to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Component (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the variable specified for Component to its correct type when using it (e.g. for UtcDateTime component it could be case as follows: (DateTime)($)Component).\n","categories":"","description":"Gets a component (e.g. Year, Month, Day) of a specified Date Time.","excerpt":"Gets a component (e.g. Year, Month, Day) of a specified Date Time.","ref":"/docs/reference/blocks/date-and-time/get-date-time/get-date-time-component-block/","tags":"","title":"Get Date Time Component"},{"body":"","categories":"","description":"Get information about a file (i.e. file attributes, created, accessed and modified dates etc.).","excerpt":"Get information about a file (i.e. file attributes, created, accessed and modified dates etc.).","ref":"/docs/reference/blocks/files-and-folders/get-file-information/","tags":"","title":"Get File Information"},{"body":"\rGet File Information (Cortex.Blocks.FilesAndFolders.GetFileInformation.GetFileInformationBlock)\nDescription Gets File Information about a file (e.g. file attributes, created, accessed, modified dates etc.) at the specified File Path.\nExamples Get file information This example will get information about \"C:\\Source\\File.txt\".\nIn this example assume \"C:\\Source\\File.txt\":\nIs on a server where local time and UTC time are the same (e.g. in UK). Was created at 10.00am on the 1st January 2021. Was last modified at 10.00am on the 1st January 2021. Was last accessed at 1.00pm on the 10th January 2021. Is 100 bytes in size. Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String File Information ($)FileInformation, with no value ($)FilePath is a variable that will be set to a FileInformation value Result Getting file information for \"C:\\Source\\File.txt\" results in the variable ($)FileInformation being updated to the following:\n{ \"Extension\": \".exe\", \"Path\": \"C:\\\\Source\\\\File.txt\", \"Name\": \"File.txt\", \"ParentRoot\": \"C:\\\\\", \"ParentPath\": \"C:\\\\Source\", \"SizeInBytes\": 100, \"IsArchive\": false, \"IsCompressed\": false, \"IsEncrypted\": false, \"IsHidden\": false, \"IsNormal\": false, \"IsTemporary\": false, \"IsReadOnly\": false, \"IsSystem\": false, \"CreationTimeLocal\": \"2021-01-01T10:00:00+00:00\", \"CreationTimeUtc\": \"2021-01-01T10:00:00Z\", \"LastAccessTimeLocal\": \"2021-01-10T13:00:00+00:00\", \"LastAccessTimeUtc\": \"2021-01-10T13:00:00Z\", \"LastWriteTimeLocal\": \"2021-01-01T10:00:00+00:00\", \"LastWriteTimeUtc\": \"2021-01-01T10:00:00Z\" } Properties File Path The File Path to get the File Information of.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value File Information The File Information retrieved from the file at the specified File Path.\nFile Information includes file attributes, create, access and write dates and path details.\nFor more information see the example above, or the FileInformation data type.\nData Type FileInformation Property Type Output Is Advanced false Default Editor Variable Default Value ($)FileInformation with no value Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder or file names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to get information about the file at the File Path. An unexpected error occurs when getting information for the file at the File Path. PropertyEmptyException Thrown when File Path is empty (i.e. \"\"). PropertyNullException Thrown when File Path is null. Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\File.txt\"). ","categories":"","description":"Gets information about a file (e.g. file attributes, created, accessed, modified dates etc.) at the specified file path.","excerpt":"Gets information about a file (e.g. file attributes, created, accessed, modified dates etc.) at the specified file path.","ref":"/docs/reference/blocks/files-and-folders/get-file-information/get-file-information-block/","tags":"","title":"Get File Information"},{"body":"","categories":"","description":"Get the paths of files or folders in another folder.","excerpt":"Get the paths of files or folders in another folder.","ref":"/docs/reference/blocks/files-and-folders/get-folder-content/","tags":"","title":"Get Folder Content"},{"body":"\rGet Folder Content (Cortex.Blocks.FilesAndFolders.GetFolderContent.GetFolderContentBlock)\nDescription Gets the Paths of files or folders under the specified Folder Path whose name matches the given Search Pattern.\nThe returned Paths can then be used in other file and folder blocks that require paths.\nAdditional options can be specified:\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search. Content Options can be specified to choose whether to search for files or folders. A Recursive option can specified to choose whether to search only in the specified Folder Path, or include all subfolders. A Comparison Type option can specified to choose how it is determined whether the file or folder name matches the Search Pattern (e.g. whether the search is case-sensitive or case-insensitive). Examples Get paths of files in a folder whose names contain a given text This example will get the paths of all files in \"C:\\Source\\Folder\" that contain \"file\" in their name.\nIt will perform a case-insensitive search, and will not get any paths of folders or any paths of files that reside in subfolders of \"C:\\Source\\Folder\".\nIn this example assume \"C:\\Source\\Folder\" contains:\nA file named \"FileInFolder1.txt\". A file named \"FileInFolder2.txt\". A folder named \"SubFolder\" which contains: A file named \"FileInSubFolder1.txt\". A file named \"FileInSubFolder2.txt\". Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Search Pattern ($)SearchPattern, with value \"file\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Content Options ($)ContentOptions, with value ContentOptions.Files ($)ContentOptions is a variable of type ContentOptions Recursive ($)Recursive, with value false ($)Recursive is a variable of type Boolean Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Paths ($)Paths, with no value ($)Paths is a variable that will be set to an IList\u003cString\u003e value Result Getting all file paths that contain \"file\" (case-insensitive) in \"C:\\Source\\Folder\" excluding any of its subfolders, results in the variable ($)Paths being updated to the following:\n[ \"C:\\\\Source\\\\Folder\\\\FileInFolder1.txt\", \"C:\\\\Source\\\\Folder\\\\FileInFolder2.txt\" ] Get paths of files in a folder (and its subfolders) whose names contain a given text This example will get the paths of all files in \"C:\\Source\\Folder\" or any of its subfolders, that contain \"File\" in their name.\nIt will perform a case-sensitive search and will not get any paths of folders.\nIn this example assume \"C:\\Source\\Folder\" contains:\nA file named \"FileInFolder1.txt\". A file named \"FileInFolder2.txt\". A folder named \"SubFolder\" which contains: A file named \"FileInSubFolder1.txt\". A file named \"FileInSubFolder2.txt\". Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Search Pattern ($)SearchPattern, with value \"File\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Content Options ($)ContentOptions, with value ContentOptions.Files ($)ContentOptions is a variable of type ContentOptions Recursive ($)Recursive, with value true ($)Recursive is a variable of type Boolean Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Paths ($)Paths, with no value ($)Paths is a variable that will be set to an IList\u003cString\u003e value Result Getting all file paths that contain \"File\" (case-sensitive) in \"C:\\Source\\Folder\" or any of its subfolders, results in the variable ($)Paths being updated to the following:\n[ \"C:\\\\Source\\\\Folder\\\\FileInFolder1.txt\", \"C:\\\\Source\\\\Folder\\\\FileInFolder2.txt\", \"C:\\\\Source\\\\Folder\\\\SubFolder\\\\FileInSubFolder1.txt\", \"C:\\\\Source\\\\Folder\\\\SubFolder\\\\FileInSubFolder2.txt\" ] Get paths of folders in a folder whose names match a given pattern This example will get the paths of all folders that are in \"C:\\Source\\Folder\", and match the pattern \"*\" in their name.\nIt will perform a case-insensitive search, will not get any paths of files, and will match any folder in \"C:\\Source\\Folder\". It will not match any child folders of folders in \"C:\\Source\\Folder\".\nIn this example assume \"C:\\Source\\Folder\" contains:\nA file named \"FileInFolder1.txt\". A file named \"FileInFolder2.txt\". A folder named \"SubFolder\" which contains: A file named \"FileInSubFolder1.txt\". A file named \"FileInSubFolder2.txt\". An empty folder named \"NestedSubFolder\". Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Search Pattern ($)SearchPattern, with value \"*\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Content Options ($)ContentOptions, with value ContentOptions.Folders ($)ContentOptions is a variable of type ContentOptions Recursive ($)Recursive, with value false ($)Recursive is a variable of type Boolean Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Paths ($)Paths, with no value ($)Paths is a variable that will be set to an IList\u003cString\u003e value Result Getting all folder paths that match the pattern \"*\" (case-insensitive) in \"C:\\Source\\Folder\" excluding any of its subfolders, results in the variable ($)Paths being updated to the following:\n[ \"C:\\\\Source\\\\Folder\\\\SubFolder\" ] Get paths of folders in a folder (and its subfolders) whose names match a given regex This example will get the paths of all folders that are in \"C:\\Source\\Folder\" or any of its subfolders, and match the regex \"Folder$\" in their name.\nIt will perform a case-sensitive search, will not get any paths of files, and will match folders whose name ends with \"Folder\".\nIn this example assume \"C:\\Source\\Folder\" contains:\nA file named \"FileInFolder1.txt\". A file named \"FileInFolder2.txt\". A folder named \"SubFolder\" which contains: A file named \"FileInSubFolder1.txt\". A file named \"FileInSubFolder2.txt\". An empty folder named \"NestedSubFolder\". Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Search Pattern ($)SearchPattern, with value \"Folder$\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Content Options ($)ContentOptions, with value ContentOptions.Folders ($)ContentOptions is a variable of type ContentOptions Recursive ($)Recursive, with value true ($)Recursive is a variable of type Boolean Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Paths ($)Paths, with no value ($)Paths is a variable that will be set to an IList\u003cString\u003e value Result Getting all folder paths that match the regex \"Folder$\" (case-sensitive) in \"C:\\Source\\Folder\" or any of its subfolders, results in the variable ($)Paths being updated to the following:\n[ \"C:\\\\Source\\\\Folder\\\\SubFolder\", \"C:\\\\Source\\\\Folder\\\\SubFolder\\\\NestedSubFolder\" ] Properties Folder Path The Folder Path to get the Paths of files or folders whose name matches the given Search Pattern.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value Search Pattern The Search Pattern file or folder names must match to be included in the returned Paths.\nOnly file or folder names are matched, not the whole path.\nA Search Pattern of null or empty (i.e. \"\") means match any name; all additional block options such as Content Options etc. still take effect.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Search Options Search Options can be specified to choose whether Search Pattern should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the file or folder name contains the text specified in Search Pattern it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Content Options Content Options can be specified to choose whether Search Pattern should be match file or folder names.\nContentOptions.Files restricts the search to match only files. ContentOptions.Folders restricts the search to match only folders. Data Type ContentOptions Property Type Input Is Advanced false Default Editor Literal Default Value Files Recursive Recursive option can specified to choose whether to search only in the specified Folder Path, or include all subfolders.\nTo search only in the specified Folder Path set Recursive to false, or to include all subfolders set Recursive to true.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Comparison Type The Comparison Type specifying the rules used to match file or folder names against the given Search Pattern.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Paths All Paths that match the specified Search Pattern based on the other specified options.\nThe Paths returned will be absolute paths, and based on the Folder Path provided (i.e. if a UNC path is specified, all returned paths will be UNC paths).\nData Type IList\u003cString\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Paths with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). Thrown when Content Options is not one of the specified ContentOptions types (e.g. (ContentOptions)10). Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). OperationFailedException The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The Folder Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to get the paths of files or folders in the Folder Path, or any of its subfolders if Recursive is true. An unexpected error occurs when getting the paths of files or folders in the Folder Path, or any of its subfolders if Recursive is true. PropertyEmptyException Thrown when Folder Path is empty (i.e. \"\"). PropertyNullException Thrown when Folder Path is null. RegexMatchTimeoutException Thrown when using Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and the Search Pattern is not a valid regex (e.g. (). Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path needs escaping Folder Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\"). Null or empty Search Pattern A null or empty (i.e. \"\") Search Pattern means match any name; all additional block options such as Content Options etc. still take effect.\nComparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nHandling of Exceptions If an exception occurs when trying to match a file or folder name, it will be recorded and the block will continue processing the remaining files or folders. Once all files or folders are processed, recorded exceptions will be thrown within an OperationFailedException.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Gets the paths of files or folders under the specified folder path.","excerpt":"Gets the paths of files or folders under the specified folder path.","ref":"/docs/reference/blocks/files-and-folders/get-folder-content/get-folder-content-block/","tags":"","title":"Get Folder Content"},{"body":"","categories":"","description":"Get information about a folder (i.e. folder attributes, created, accessed and modified dates etc.).","excerpt":"Get information about a folder (i.e. folder attributes, created, accessed and modified dates etc.).","ref":"/docs/reference/blocks/files-and-folders/get-folder-information/","tags":"","title":"Get Folder Information"},{"body":"\rGet Folder Information (Cortex.Blocks.FilesAndFolders.GetFolderInformation.GetFolderInformationBlock)\nDescription Gets Folder Information about a folder (e.g. folder attributes, created, accessed, modified dates etc.) at the specified Folder Path.\nExamples Get folder information This example will get information about \"C:\\Source\\Folder\".\nIn this example assume \"C:\\Source\\Folder\":\nIs on a server where local time and UTC time are the same (e.g. in UK). Was created at 10.00am on the 1st January 2021. Was last modified at 10.00am on the 1st January 2021. Was last accessed at 1.00pm on the 10th January 2021. Contains a single file named \"File.txt\" which is 100 bytes in size. Contains a single empty folder named \"SubFolder\". Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Folder Information ($)FolderInformation, with no value ($)FolderPath is a variable that will be set to a FolderInformation value Result Getting folder information for \"C:\\Source\\Folder\" results in the variable ($)FolderInformation being updated to the following:\n{ \"FileCount\": 1, \"FolderCount\": 1, \"TotalItemCount\": 2, \"Path\": \"C:\\\\Source\\\\Folder\", \"Name\": \"Test\", \"ParentRoot\": \"C:\\\\\", \"ParentPath\": \"C:\\\\Source\", \"SizeInBytes\": 100, \"IsArchive\": false, \"IsCompressed\": false, \"IsEncrypted\": false, \"IsHidden\": false, \"IsNormal\": false, \"IsTemporary\": false, \"IsReadOnly\": false, \"IsSystem\": false, \"CreationTimeLocal\": \"2021-01-01T10:00:00+00:00\", \"CreationTimeUtc\": \"2021-01-01T10:00:00Z\", \"LastAccessTimeLocal\": \"2021-01-10T13:00:00+00:00\", \"LastAccessTimeUtc\": \"2021-01-10T13:00:00Z\", \"LastWriteTimeLocal\": \"2021-01-01T10:00:00+00:00\", \"LastWriteTimeUtc\": \"2021-01-01T10:00:00Z\" } Properties Folder Path The Folder Path to get the Folder Information of.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value Folder Information The Folder Information retrieved from the folder at the specified Folder Path.\nFolder Information includes folder attributes, create, access and write dates, path details and folder and file counts.\nFor more information see the example above, or the FolderInformation data type.\nData Type FolderInformation Property Type Output Is Advanced false Default Editor Variable Default Value ($)FolderInformation with no value Exceptions The exceptions thrown by the block can be found below:\nName Description OperationFailedException The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The Folder Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to get information about the folder at the Folder Path. An unexpected error occurs when getting information for the folder at the Folder Path or any of its content. PropertyEmptyException Thrown when Folder Path is empty (i.e. \"\"). PropertyNullException Thrown when Folder Path is null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path needs escaping Folder Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\"). ","categories":"","description":"Gets information about a folder (e.g. folder attributes, created, accessed, modified dates etc.) at the specified folder path.","excerpt":"Gets information about a folder (e.g. folder attributes, created, accessed, modified dates etc.) at the specified folder path.","ref":"/docs/reference/blocks/files-and-folders/get-folder-information/get-folder-information-block/","tags":"","title":"Get Folder Information"},{"body":"\rGet Index Of Item With Value (Cortex.Blocks.Lists.GetIndex.GetIndexOfItemWithValueBlock`2)\nDescription Gets the Index of the specified Occurrence of an item in a List matching a Value.\nExamples Get the Index of the first Occurrence of an item in a List matching a Value This example will attempt to get the index of the first occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Index ($)Index, with no value ($)Index is a variable that will be set to an Int32 value Result An Occurrence of 1 means the first occurrence; 2 means second etc.\nAttempting to get the index of the first occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1] results in the variable ($)Index being updated to the following:\n0 Get the Index of the last Occurrence of an item in a List matching a Value This example will attempt to get the index of the last occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Index ($)Index, with no value ($)Index is a variable that will be set to an Int32 value Result An Occurrence of -1, means the last occurrence; -2 means second last etc.\nAttempting to get the index of the last occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1] results in the variable ($)List being updated to the following:\n5 Properties List The List to get the Index of the specified Occurrence of matching item from.\nItems are considered matching if they have the specified Value.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value the item to get the Index of the specified Occurrence must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of matching item to get the Index of.\nItems are considered matching if they have the specified Value.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Index Int32 indicating the Index of the specified Occurrence of item matching Value in List.\nIf there is no specified Occurrence of item matching Value in List, the specified variable will be set to -1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Output Is Advanced false Default Editor Variable Default Value ($)Index with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nOccurrences For information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nEmpty List If List is empty (i.e. []), the variable specified in the Index property is set to -1.\nNo items matching Value, or Occurrence is not present If List does not contain items matching the specified Value or the specified Occurrence is not present, the variable specified in the Index property is set to -1.\nOccurrence is zero If the Occurrence is set to 0, the variable specified in the Index property is set to -1.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the index of the specified occurrence of an item in a List matching a value.","excerpt":"Gets the index of the specified occurrence of an item in a List matching a value.","ref":"/docs/reference/blocks/lists/get-index/get-index-of-item-with-value-block-2/","tags":"","title":"Get Index Of Item With Value"},{"body":"\rGet Index Of Text (Cortex.Blocks.Text.GetIndex.GetIndexOfTextBlock)\nDescription Gets the Index of the specified Occurrence of Text To Find in Text.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to find the Text To Find.\nExamples Get the Index of the first Occurrence of Text To Find (Ordinal) This example will get the index of the first occurrence of \"The\" in \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"The\" ($)TextToFind is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Index ($)Index, with no value ($)Index is a variable that will be set to an Int32 value Result An Occurrence of 1 means get the index of the first occurrence; 2 means second etc.\nAs this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" only contains the text \"The\" once; \"the\" has a different case so does not match. Therefore, the variable ($)Index will be updated to the following:\n0 where 0 indicates the index of the first character of the first and only occurrence matching \"The\".\nGet the Index of the last Occurrence of Text To Find (Ordinal Ignore Case) This example will get the index of the last occurrence of \"The\" in \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-insensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"The\" ($)TextToFind is a variable of type String Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Index ($)Index, with no value ($)Index is a variable that will be set to an Int32 value Result An Occurrence of -1 means get the index of the last occurrence; 2 means second last etc.\nAs this example is performing a case-insensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" contains the text \"The\" twice; the first occurrence is \"The\" and the second and last occurrence is \"the\". Therefore, the variable ($)Index will be updated to the following:\n31 where 31 indicates the index of the first character of the last matching occurrence, \"the\".\nText does not contain Text To Find This example will attempt to get the index of the first occurrence of \"slow\" in \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"slow\" ($)TextToFind is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Index ($)Index, with no value ($)Index is a variable that will be set to an Int32 value Result \"The quick brown fox jumps over the lazy dog\" does not contain the text \"slow\", so the index cannot be found. Therefore, the variable ($)Index will be updated to the following:\n-1 where -1 indicates that there are no matching occurrences.\nGet the Index of the first Occurrence matching the pattern in Text To Find This example will get the index of the first occurrence of text matching the pattern \"?he\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"?he\" ($)TextToFind is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Index ($)Index, with no value ($)Index is a variable that will be set to an Int32 value Result An Occurrence of 1 means get the index of the first occurrence; 2 means second etc.\n\"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the pattern \"?he\"; the first occurrence is \"The\" and the second occurrence is \"the\". Therefore, the variable ($)Index will be updated to the following:\n0 where 0 indicates the index of the first character of the first occurrence matching the pattern \"?he\".\nGet the Index of the last Occurrence matching the regex in Text To Remove This example will get the index of the last occurrence of text matching the regex \"(fox|dog)\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"(fox|dog)\" ($)TextToFind is a variable of type String Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Index ($)Index, with no value ($)Index is a variable that will be set to an Int32 value Result An Occurrence of -1 means get the index of the last occurrence; 2 means second last etc.\n\"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the regex \"(fox|dog)\"; the first occurrence is \"fox\" and the second and last occurrence is \"dog\". Therefore, the variable ($)Index will be updated to the following:\n40 where 0 indicates the index of the first character of the last occurrence matching the regex \"(fox|dog)\".\nProperties Text The Text to get the Index of the specified Occurrence of Text To Find from.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Find The Text To Find the Index of the specified Occurrence of, in Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Occurrence The specified Occurrence of Text To Find in Text.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Search Options Search Options can be specified to choose whether Text To Find should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Text To Find it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to match Text To Find in Text.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Index Int32 indicating the Index of the first character of the specified Occurrence of Text To Find in Text.\nIf there is no specified Occurrence of Text To Find in Text, the specified variable will be set to -1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Output Is Advanced false Default Editor Variable Default Value ($)Index with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and Text To Find is not a valid regex (e.g. (). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\"), the variable specified in the Index property is set to -1.\nNull or empty Text To Find If Text To Find is null or empty (i.e. \"\"), the variable specified in the Index property is set to -1.\nOccurrence is zero If the Occurrence is set to 0, the variable specified in the Index property is set to -1.\nOccurrence of Text To Find not found If the specified Occurrence of Text To Find is not found in Text, the variable specified in the Index property is set to -1.\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Gets the index of the specified occurrence of a text in another text.","excerpt":"Gets the index of the specified occurrence of a text in another text.","ref":"/docs/reference/blocks/text/get-index/get-index-of-text-block/","tags":"","title":"Get Index Of Text"},{"body":"","categories":"","description":"Get the index of an item or indexes of multiple items contained in a list.","excerpt":"Get the index of an item or indexes of multiple items contained in a list.","ref":"/docs/reference/blocks/lists/get-index/","tags":"","title":"Get Index(es) of Items"},{"body":"","categories":"","description":"Get the index for the specified occurrence of text, or the indexes of all occurrences of text contained in another text.","excerpt":"Get the index for the specified occurrence of text, or the indexes of all occurrences of text contained in another text.","ref":"/docs/reference/blocks/text/get-index/","tags":"","title":"Get Index(es) of Text"},{"body":"\rGet Indexes Of Items With Value (Cortex.Blocks.Lists.GetIndex.GetIndexesOfItemsWithValueBlock`2)\nDescription Gets the Indexes of all items in a List matching a Value.\nExamples Get the Indexes of all items in a List matching a Value This example will attempt to get the indexes of all items matching the value 1 from [1, 2, 3, 3, 2, 1].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Indexes ($)Indexes, with no value ($)Indexes is a variable that will be set to an IList\u003cInt32\u003e value Result Attempting to get the indexes of all items matching the value 1 from [1, 2, 3, 3, 2, 1] results in the variable ($)Indexes being updated to the following:\n[0, 5] Properties List The List to get the Indexes of matching items from.\nItems are considered matching if they have the specified Value.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value the items to get the Indexes of must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Indexes IList\u003cInt32\u003e containing the Indexes of items matching Value in List.\nIf there are no items matching Value in List, the specified variable will be set to [-1].\nFor information about what an index is, please see Indexes.\nData Type IList\u003cInt32\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Indexes with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []), the variable specified in the Indexes property is set to [-1].\nNo items matching Value If List does not contain items matching the specified Value, the variable specified in the Indexes property is set to [-1].\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the indexes of all items in a List matching a value.","excerpt":"Gets the indexes of all items in a List matching a value.","ref":"/docs/reference/blocks/lists/get-index/get-indexes-of-items-with-value-block-2/","tags":"","title":"Get Indexes Of Items With Value"},{"body":"\rGet Indexes Of Text (Cortex.Blocks.Text.GetIndex.GetIndexesOfTextBlock)\nDescription Gets the Indexes of all occurrences of Text To Find in Text.\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search to find the Text To Find.\nExamples Get Indexes of all occurrences of Text To Find (Ordinal) This example will get the indexes of all occurrences of \"The\" in \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"The\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Indexes ($)Indexes, with no value ($)Indexes is a variable that will be set to an IList\u003cInt32\u003e value Result As this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" only contains the text \"The\" once; \"the\" has a different case so does not match. Therefore, the variable ($)Indexes will be updated to the following:\n[0] where 0 indicates the index of the first character of the matching \"The\" occurrence.\nGet Indexes of all occurrences of Text To Find (Ordinal Ignore Case) This example will get the indexes of all occurrences of \"The\" in \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-insensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"The\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Indexes ($)Indexes, with no value ($)Indexes is a variable that will be set to an IList\u003cInt32\u003e value Result As this example is performing a case-insensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" contains the text \"The\" twice; the first occurrence is \"The\" and the second occurrence is \"the\". Therefore, the variable ($)Indexes will be updated to the following:\n[0, 31] where 0 indicates the index of the first character of the matching \"The\" occurrence, and 31 indicates the index of the first character of the matching \"the\" occurrence.\nText does not contain Text To Find This example will attempt to get the indexes of all occurrences of \"slow\" in \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"slow\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Indexes ($)Indexes, with no value ($)Indexes is a variable that will be set to an IList\u003cInt32\u003e value Result \"The quick brown fox jumps over the lazy dog\" does not contain the text \"slow\", so the index cannot be found. Therefore, the variable ($)Indexes will be updated to the following:\n[-1] where -1 indicates that there are no matching occurrences.\nGet Indexes of all occurrences matching the pattern in Text To Find This example will get the indexes of all occurrences of text matching the pattern \"?he\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"?he\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Indexes ($)Indexes, with no value ($)Indexes is a variable that will be set to an IList\u003cInt32\u003e value Result \"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the pattern \"?he\"; the first occurrence is \"The\" and the second occurrence is \"the\". Therefore, the variable ($)Indexes will be updated to the following:\n[0, 31] where 0 indicates the index of the first character of the matching \"The\" occurrence, and 31 indicates the index of the first character of the matching \"the\" occurrence.\nGet Indexes of all occurrences matching the regex in Text To Remove This example will get the indexes of all occurrences of text matching the regex \"(fox|dog)\" from \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Find ($)TextToFind, with value \"(fox|dog)\" ($)TextToFind is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Indexes ($)Indexes, with no value ($)Indexes is a variable that will be set to an IList\u003cInt32\u003e value Result \"The quick brown fox jumps over the lazy dog\" contains two occurrences that match the regex \"(fox|dog)\"; the first occurrence is \"fox\" and the second and last occurrence is \"dog\". Therefore, the variable ($)Indexes will be updated to the following:\n[16, 40] where 16 indicates the index of the first character of the matching \"fox\" occurrence, and 40 indicates the index of the first character of the matching \"dog\" occurrence.\nProperties Text The Text to get the Indexes of all occurrences of Text To Find from.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Find The Text To Find the Indexes of all occurrences of, in Text.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Search Options Search Options can be specified to choose whether Text To Find should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly; as long as the Text contains the text specified in Text To Find it will be considered a match. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Comparison Type The Comparison Type specifying the rules used to match Text To Find in Text.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Indexes IList\u003cInt32\u003e containing the Indexes of the first character of each occurrence of Text To Find in Text.\nIf there are no occurrences of Text To Find in Text, the specified variable will be set to [-1].\nFor information about what an index is, please see Indexes.\nData Type IList\u003cInt32\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Indexes with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). RegexMatchTimeoutException Thrown when Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and Text To Find is not a valid regex (e.g. (). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Text If Text is null or empty (i.e. \"\"), the variable specified in the Indexes property is set to [-1].\nNull or empty Text To Find If Text To Find is null or empty (i.e. \"\"), the variable specified in the Indexes property is set to [-1].\nText To Find not found If Text To Find is not found in Text, the variable specified in the Indexes property is set to [-1].\nKnown Limitations If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal.\n","categories":"","description":"Gets the indexes of all occurrences of a text in another text.","excerpt":"Gets the indexes of all occurrences of a text in another text.","ref":"/docs/reference/blocks/text/get-index/get-indexes-of-text-block/","tags":"","title":"Get Indexes Of Text"},{"body":"\rGet Item At Beginning (Cortex.Blocks.Lists.GetItem.GetItemAtBeginningBlock`2)\nDescription Gets the Item at the beginning of a List.\nExamples Get the Item at the beginning of a List This example will get the item at the beginning of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with no value ($)Item is a variable that will be set to the type of the item (i.e. String) Result Getting the item at the beginning of [\"Some Text\", 1] results in the variable ($)Item being updated to the following:\n\"Some Text\" Properties List The List to get the item from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Item The Item at the beginning of List.\nData Type TItem Property Type Output Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyEmptyException Thrown when List contains no items. PropertyNullException Thrown when List is null. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the item at the beginning of a List.","excerpt":"Gets the item at the beginning of a List.","ref":"/docs/reference/blocks/lists/get-item/get-item-at-beginning-block-2/","tags":"","title":"Get Item At Beginning"},{"body":"\rGet Item At End (Cortex.Blocks.Lists.GetItem.GetItemAtEndBlock`2)\nDescription Gets the Item at the end of a List.\nExamples Get the Item at the end of a List This example will get the item at the end of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Item ($)Item, with no value ($)Item is a variable that will be set to the type of the item (i.e. Int32) Result Getting the item at the end of [\"Some Text\", 1] results in the variable ($)Item being updated to the following:\n1 Properties List The List to get the item from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Item The Item at the end of List.\nData Type TItem Property Type Output Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyEmptyException Thrown when List contains no items. PropertyNullException Thrown when List is null. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the item at the end of a List.","excerpt":"Gets the item at the end of a List.","ref":"/docs/reference/blocks/lists/get-item/get-item-at-end-block-2/","tags":"","title":"Get Item At End"},{"body":"\rGet Item At Index (Cortex.Blocks.Lists.GetItem.GetItemAtIndexBlock`2)\nDescription Gets the Item at the specified Index of a List.\nExamples Get the Item at the first Index (i.e. 0) of a List This example will get the item at index 0 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Item ($)Item, with no value ($)Item is a variable that will be set to the type of the item (i.e. String) Result Getting the item at index 0 of [\"Some Text\", 1] results in the variable ($)Item being updated to the following:\n\"Some Text\" Get the Item at the last Index (i.e. Index equals count of items - 1) of a List This example will get the item at index 1 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Index ($)Index, with value 1 ($)Index is a variable of type Int32 Item ($)Item, with no value ($)Item is a variable that will be set to the type of the item (i.e. Int32) Result Getting the item at index 1 of [\"Some Text\", 1] results in the variable ($)Item being updated to the following:\n1 Properties List The List to get the item from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Index The Index to get the item at.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Item The Item at the specified Index of List.\nData Type TItem Property Type Output Is Advanced false Default Editor Variable Default Value ($)Item with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when List contains no items. Thrown when Index is out of the range of the list indexes. Valid indexes are between and including 0 and the count of items in the List - 1. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the item at the specified index of a List.","excerpt":"Gets the item at the specified index of a List.","ref":"/docs/reference/blocks/lists/get-item/get-item-at-index-block-2/","tags":"","title":"Get Item At Index"},{"body":"\rGet Item With Key (Cortex.Blocks.Dictionaries.GetItem.GetItemWithKeyBlock`3)\nDescription Gets the specified Occurrence of an Item with the given Key from a Dictionary.\nExamples Get the first Occurrence of an Item with a Key from a Dictionary This example will attempt to get the first occurrence of an item with the key \"Key1\" from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Item ($)Item, with no value ($)Item is a variable that will be set to the type of the item (i.e. Int32) Result An Occurrence of 1 means get the first occurrence; 2 means second etc.\nAttempting to get the first occurrence of an item with the key \"Key1\" from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Item being updated to the following:\n1 Get the last Occurrence of an Item with a Key from a Dictionary Typically keys are simple data types such as String, Int32, Boolean, and for these a dictionary cannot the same key value more than once. This is due to how the data type’s object equality is implemented (two items are considered equal if they have the same value rather than being the same object reference).\nHowever, other data types such as IList\u003cInt32\u003e can also be used as keys. For these data types, object equality only considers two items equal if they are the same reference; it does not care about whether they have the same value. Therefore, it is possible to have the same key value more than once, and as a result you should be able to get an occurrence of item with that key.\nThis example will illustrate this, by attempting to get the last occurrence of an item with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10} ($)Dictionary is a variable of type IDictionary\u003cIList\u003cInt32\u003e, Int32\u003e Key ($)Key, with value [1] ($)Key is a variable of type IList\u003cInt32\u003e Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Item ($)Item, with no value ($)Item is a variable that will be set to the type of the item (i.e. Int32) Result An Occurrence of -1 means get the last occurrence; -2 means second last etc.\nAttempting to get the last occurrence of an item with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10} results in the variable ($)Item being updated to the following:\n10 Properties Dictionary The Dictionary to get the specified Occurrence of Item with the given Key from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key the Item to get must have.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of matching Item to get from the Dictionary.\nItems are considered matching if they have the specified Key.\nUnlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Item The specified Occurrence of Item with the given Key from Dictionary.\nData Type TItem Property Type Output Is Advanced false Default Editor Variable Default Value ($)Item with no value Exceptions The exceptions thrown by the block can be found below:\nName Description KeyNotPresentException Thrown when the Key is not present in the Dictionary. OccurrenceNotPresentException Thrown when the specified Occurrence of Item with the given Key is not present in the Dictionary. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nOccurrences Unlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Gets the specified occurrence of an item with the given key from a Dictionary.","excerpt":"Gets the specified occurrence of an item with the given key from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/get-item/get-item-with-key-block-3/","tags":"","title":"Get Item With Key"},{"body":"","categories":"","description":"Get an item or multiple items from a dictionary.","excerpt":"Get an item or multiple items from a dictionary.","ref":"/docs/reference/blocks/dictionaries/get-item/","tags":"","title":"Get Item(s)"},{"body":"","categories":"","description":"Get an item or multiple items from a list.","excerpt":"Get an item or multiple items from a list.","ref":"/docs/reference/blocks/lists/get-item/","tags":"","title":"Get Item(s)"},{"body":"\rGet Items At Beginning (Cortex.Blocks.Lists.GetItem.GetItemsAtBeginningBlock`2)\nDescription Gets the specified Count of Items at the beginning of a List.\nExamples Get Count of Items at the beginning of a List This example will get 2 items at the beginning of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Count ($)Count, with value 2 ($)Count is a variable of type Int32 Items ($)Items, with no value ($)Items is a variable that will be set to an IList\u003cdynamic\u003e value Result Getting 2 items from the beginning of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)Items being updated to the following:\n[\"Some Text\", 1] Properties List The List to get the Items from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Count The Count of Items to get.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Items The Items at the beginning of List.\nItems will be in the same order they are defined in List.\nData Type IList\u003cTItem\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Items with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Count is greater than the count of items in the List - 1. Remarks Negative Count If Count is negative, Items contains all items in the List.\nZero Count If Count is 0, Items is set to an empty list (i.e. []).\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets a count of items at the beginning of a List.","excerpt":"Gets a count of items at the beginning of a List.","ref":"/docs/reference/blocks/lists/get-item/get-items-at-beginning-block-2/","tags":"","title":"Get Items At Beginning"},{"body":"\rGet Items At End (Cortex.Blocks.Lists.GetItem.GetItemsAtEndBlock`2)\nDescription Gets the specified Count of Items at the end of a List.\nExamples Get Count of Items at the end of a List This example will get 2 items at the end of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Count ($)Count, with value 2 ($)Count is a variable of type Int32 Items ($)Items, with no value ($)Items is a variable that will be set to an IList\u003cdynamic\u003e value Result Getting 2 items from the end of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)Items being updated to the following:\n[\"Some More Text\", 2] Properties List The List to get the Items from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Count The Count of Items to get.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Items The Items at the end of List.\nItems will be in the same order they are defined in List.\nData Type IList\u003cTItem\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Items with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Count is greater than the count of items in the List - 1. Remarks Negative Count If Count is negative, Items contains all items in the List.\nZero Count If Count is 0, Items is set to an empty list (i.e. []).\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets a count of items at the end of a List.","excerpt":"Gets a count of items at the end of a List.","ref":"/docs/reference/blocks/lists/get-item/get-items-at-end-block-2/","tags":"","title":"Get Items At End"},{"body":"\rGet Items At Index (Cortex.Blocks.Lists.GetItem.GetItemsAtIndexBlock`2)\nDescription Gets the specified Count of Items starting at the given Index of a List.\nExamples Get Count of Items at the first Index (i.e. 0) of a List This example will get 2 items at index 0 of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Count ($)Count, with value 2 ($)Count is a variable of type Int32 Items ($)Items, with no value ($)Items is a variable that will be set to an IList\u003cdynamic\u003e value Result Getting 2 items at index 0 of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)Items being updated to the following:\n[\"Some More\", 1] Properties List The List to get the Items from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Index The Index to get the Count of Items at. This is an inclusive index, which means the item at the specified index will be included.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Count The Count of Items to get.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Items The Items at the specified Index of List.\nItems will be in the same order they are defined in List.\nData Type IList\u003cTItem\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Items with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Index is less than 0 or greater than the count of items in List - 1. Thrown when Index + Count is greater than the count of items in the List - 1. Remarks Index is inclusive The Index is an inclusive index, which means the item at the index will be included in Items.\nNegative Count If Count is negative, Items contains all items after and including the item at the specified Index in the List.\nZero Count If Count is 0, Items is set to an empty list (i.e. []).\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets a count of items starting at the specified index of a List.","excerpt":"Gets a count of items starting at the specified index of a List.","ref":"/docs/reference/blocks/lists/get-item/get-items-at-index-block-2/","tags":"","title":"Get Items At Index"},{"body":"\rGet Items At Indexes (Cortex.Blocks.Lists.GetItem.GetItemsAtIndexesBlock`2)\nDescription Gets the Items at each of the specified Indexes of a List.\nExamples Get Items at the first and third Indexes (i.e. [0, 2]) of a List This example will get items at indexes 0 and 2 of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Indexes ($)Indexes, with value [0, 2] ($)Indexes is a variable of type IEnumerable\u003cInt32\u003e Items ($)Items, with no value ($)Items is a variable that will be set to an IList\u003cdynamic\u003e value Result Getting items at indexes 0 and 2 of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)Items being updated to the following:\n[\"Some Text\", \"Some More Text\"] Properties List The List to get the Items from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)List with no value Indexes The Indexes of the Items to get.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type IEnumerable\u003cInt32\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cint\u003e() {} Items The Items at the specified Indexes of List.\nItems will be in the order they are defined in Indexes.\nData Type IList\u003cTItem\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Items with no value Exceptions The exceptions thrown by the block can be found below:\nName Description DuplicateValueException Thrown when Indexes contains duplicate values. PropertyNullException Thrown when List or Indexes is null. PropertyValueOutOfRangeException Thrown when Indexes contains no values. Thrown when any index in Indexes is less than 0 or greater than the count of items in List - 1. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Gets the items at each of the specified indexes of a List.","excerpt":"Gets the items at each of the specified indexes of a List.","ref":"/docs/reference/blocks/lists/get-item/get-items-at-indexes-block-2/","tags":"","title":"Get Items At Indexes"},{"body":"\rGet Items With Key (Cortex.Blocks.Dictionaries.GetItem.GetItemsWithKeyBlock`3)\nDescription Gets all Items with the given Key from a Dictionary.\nExamples Get all Items with a Key from a Dictionary Typically keys are simple data types such as String, Int32, Boolean, and for these a dictionary cannot the same key value more than once. This is due to how the data type’s object equality is implemented (two items are considered equal if they have the same value rather than being the same object reference).\nHowever, other data types such as IList\u003cInt32\u003e can also be used as keys. For these data types, object equality only considers two items equal if they are the same reference; it does not care about whether they have the same value. Therefore, it is possible to have the same key value more than once, and as a result you should be able to get all items with that key.\nThis example will illustrate this, by attempting to get all items with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10} ($)Dictionary is a variable of type IDictionary\u003cIList\u003cInt32\u003e, Int32\u003e Key ($)Key, with value [1] ($)Key is a variable of type IList\u003cInt32\u003e Items ($)Items, with no value ($)Items is a variable that will be set to an IList\u003cInt32\u003e Result Attempting to get all items with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10} results in the variable ($)Items being updated to the following:\n[1, 10] Properties Dictionary The Dictionary to get all Items with the given Key from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key the Items to get must have.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Items All Items with the given Key in Dictionary.\nData Type IList\u003cTItem\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Items with no value Exceptions The exceptions thrown by the block can be found below:\nName Description KeyNotPresentException Thrown when the Key is not present in the Dictionary. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Gets all items with the given key from a Dictionary.","excerpt":"Gets all items with the given key from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/get-item/get-items-with-key-block-3/","tags":"","title":"Get Items With Key"},{"body":"","categories":"","description":"Get a key or multiple keys from a dictionary.","excerpt":"Get a key or multiple keys from a dictionary.","ref":"/docs/reference/blocks/dictionaries/get-key/","tags":"","title":"Get Key(s)"},{"body":"","categories":"","description":"Get the length of a text.","excerpt":"Get the length of a text.","ref":"/docs/reference/blocks/text/get-length/","tags":"","title":"Get Length"},{"body":"\rGet Length (Cortex.Blocks.Text.GetLength.GetLengthBlock)\nDescription Gets the Length of a given Text.\nExamples Get the Length of a given Text This example will get the length of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Length ($)Length, with no value ($)Length is a variable that will be set to an Int32 Result Getting the length of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" results in the variable ($)Length being updated to the following:\n26 Properties Text The Text to get the Length of.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Length The Length of the Text (i.e. the number of characters it contains).\nData Type Int32 Property Type Output Is Advanced false Default Editor Variable Default Value ($)Length with no value Exceptions No exceptions are thrown by the block.\nRemarks Null or empty Text If Text is null or empty (i.e. \"\") the variable specified in the Length property will be set to 0.\n","categories":"","description":"Gets the length of a given text.","excerpt":"Gets the length of a given text.","ref":"/docs/reference/blocks/text/get-length/get-length-block/","tags":"","title":"Get Length"},{"body":"","categories":"","description":"Get text from a given text.","excerpt":"Get text from a given text.","ref":"/docs/reference/blocks/text/get-text/","tags":"","title":"Get Text"},{"body":"\rGet Text At Beginning (Cortex.Blocks.Text.GetText.GetTextAtBeginningBlock)\nDescription Gets a Length of text from the beginning of a given Text.\nExamples Get a Length of text from the beginning of a given Text This example will get the first 3 characters from the beginning of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Length ($)Length, with value 3 ($)Length is a variable of type Int32 Text At Beginning ($)TextAtBeginning, with no value ($)TextAtBeginning is a variable that will be set to a String Result Getting the first 3 characters from the beginning of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" results in the variable ($)TextAtBeginning being updated to the following:\n\"ABC\" Properties Text The Text to get the Text At Beginning from.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Length The Length of text to get.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Text At Beginning The Length of text at the beginning of Text.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextAtBeginning with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Length is greater than the length of Text. Remarks Negative Length If Length is negative, the variable specified in the Text At Beginning property will be set to the value of Text.\nZero Length If Length is 0, the variable specified in the Text At Beginning property will be set to empty (i.e. \"\").\n","categories":"","description":"Gets a length of text from the beginning of a given text.","excerpt":"Gets a length of text from the beginning of a given text.","ref":"/docs/reference/blocks/text/get-text/get-text-at-beginning-block/","tags":"","title":"Get Text At Beginning"},{"body":"\rGet Text At End (Cortex.Blocks.Text.GetText.GetTextAtEndBlock)\nDescription Gets a Length of text from the end of a given Text.\nExamples Get a Length of text from the end of a given Text This example will get the last 3 characters from the end of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Length ($)Length, with value 3 ($)Length is a variable of type Int32 Text At End ($)TextAtEnd, with no value ($)TextAtEnd is a variable that will be set to a String Result Getting the last 3 characters from the end of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" results in the variable ($)TextAtEnd being updated to the following:\n\"XYZ\" Properties Text The Text to get the Text At End from.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Length The Length of text to get.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Text At End The Length of text at the end of Text.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextAtEnd with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Length is greater than the length of Text. Remarks Negative Length If Length is negative, the variable specified in the Text At End property will be set to the value of Text.\nZero Length If Length is 0, the variable specified in the Text At End property will be set to empty (i.e. \"\").\n","categories":"","description":"Gets a length of text from the end of a given text.","excerpt":"Gets a length of text from the end of a given text.","ref":"/docs/reference/blocks/text/get-text/get-text-at-end-block/","tags":"","title":"Get Text At End"},{"body":"\rGet Text At Index (Cortex.Blocks.Text.GetText.GetTextAtIndexBlock)\nDescription Gets a Length of text at the specified Index of a given Text.\nExamples Get a Length of text at the specified Index of a given Text This example will get 3 characters at index 3 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Index ($)Index, with value 3 ($)Index is a variable of type Int32 Length ($)Length, with value 3 ($)Length is a variable of type Int32 Text At Index ($)TextAtIndex, with no value ($)TextAtIndex is a variable that will be set to a String Result \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, getting 3 characters at (and including) index 3 results in the variable ($)TextAtIndex being updated to the following:\n\"DEF\" Properties Text The Text to get the Text At Index from.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Index The Index to get the text from. This is an inclusive index, which means the character at the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Length The Length of text to get.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Text At Index The Length of text at the Index of Text.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextAtIndex with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Textis null or empty (i.e. \"\"). Thrown when Index is less than zero or greater than the length of Text - 1. Thrown when Index + a positive Length is greater than the length of Text - 1. Remarks Negative Length A negative Length can be used to get all text at and after the Index of Text.\nZero Length If Length is 0, the variable specified in the Text At Index property will be set to empty (i.e. \"\").\nIndex is inclusive The Index property is an inclusive index, which means the character at the index will be included in the retrieved text.\n","categories":"","description":"Gets a length of text at the specified index of a given text.","excerpt":"Gets a length of text at the specified index of a given text.","ref":"/docs/reference/blocks/text/get-text/get-text-at-index-block/","tags":"","title":"Get Text At Index"},{"body":"\rGet Text Before Index (Cortex.Blocks.Text.GetText.GetTextBeforeIndexBlock)\nDescription Gets a Length of text before the specified Index of a given Text.\nExamples Get a Length of text before the specified Index of a given Text This example will get 3 characters before index 3 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Index ($)Index, with value 3 ($)Index is a variable of type Int32 Length ($)Length, with value 3 ($)Length is a variable of type Int32 Text Before Index ($)TextBeforeIndex, with no value ($)TextBeforeIndex is a variable that will be set to a String Result \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, getting 3 characters before index 3 results in the variable ($)TextBeforeIndex being updated to the following:\n\"ABC\" Properties Text The Text to get the Text Before Index from.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Index The Index to get the text before. This is an exclusive index, which means the character at the specified index won’t be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Length The Length of text to get.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Text Before Index The Length of text before the Index of Text.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextBeforeIndex with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Index is less than 1 or greater than the length of Text - 1. Thrown when Index - a positive Length is less than 1. Remarks Negative Length A negative Length can be used to get all text before the Index of Text.\nZero Length If Length is 0, the variable specified in the Text Before Index property will be set to empty (i.e. \"\").\nIndex is exclusive The Index property is an exclusive index, which means the character at the index will not be included in the retrieved text.\n","categories":"","description":"Gets a length of text before the specified index of a given text.","excerpt":"Gets a length of text before the specified index of a given text.","ref":"/docs/reference/blocks/text/get-text/get-text-before-index-block/","tags":"","title":"Get Text Before Index"},{"body":"\rGet Text Between Indexes (Cortex.Blocks.Text.GetText.GetTextBetweenIndexesBlock)\nDescription Gets text between the specified Start Index and End Index of a given Text.\nExamples Get text between the specified Start Index and End Index of a given Text This example will get all characters between start index 0 and end index 3 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Start Index ($)StartIndex, with value 0 ($)StartIndex is a variable of type Int32 End Index ($)EndIndex, with value 3 ($)EndIndex is a variable of type Int32 Text Between Indexes ($)TextBetweenIndexes, with no value ($)TextBetweenIndexes is a variable that will be set to a String Result \"A\" is at index 0 and \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, getting all characters between (and including) start index 0 and end index 3 results in the variable ($)TextBetweenIndexes being updated to the following:\n\"ABCD\" Get text where Start Index is greater than End Index This example will get all characters between start index 3 and end index 0 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Start Index ($)StartIndex, with value 3 ($)StartIndex is a variable of type Int32 End Index ($)EndIndex, with value 0 ($)EndIndex is a variable of type Int32 Text Between Indexes ($)TextBetweenIndexes, with no value ($)TextBetweenIndexes is a variable that will be set to a String Result In this example the start index 3 is greater than the end index 0. When this occurs, the block simply swaps the indexes before it processes the text.\nTherefore, having start index 3 and end index 0 is the same as having start index 0 and end index 3.\n\"A\" is at index 0 and \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nTherefore, getting all characters between (and including) start index 3 and end index 0, or start index 0 and end index 3, results in the variable ($)TextBetweenIndexes being updated to the following:\n\"ABCD\" Properties Text The Text to get the Text Between Indexes from.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Start Index The Start Index used to get the text. This is an inclusive index, which means the character at the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 End Index The End Index used to get the text. This is an inclusive index, which means the character at the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Text Between Indexes The text between (and including) the Start Index and End Index of Text.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextBetweenIndexes with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Start Index or End Index is less than zero or greater than the length of Text - 1. Remarks Start Index and End Index are inclusive The Start Index and End Index properties are both inclusive indexes, which means the characters at those indexes will be included in the retrieved text.\nStart Index greater than End Index Start Index can be greater than End Index. If this is the case, the values of the indexes will be swapped. See Example above.\n","categories":"","description":"Gets text between the specified start index and end index of a given text.","excerpt":"Gets text between the specified start index and end index of a given text.","ref":"/docs/reference/blocks/text/get-text/get-text-between-indexes-block/","tags":"","title":"Get Text Between Indexes"},{"body":"","categories":"","description":"Get the time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds) between two date times.","excerpt":"Get the time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds) between two date times.","ref":"/docs/reference/blocks/date-and-time/get-time-period/","tags":"","title":"Get Time Period"},{"body":"\rGet Time Period Between Date Times (Cortex.Blocks.DateAndTime.GetTimePeriod.GetTimePeriodBetweenDateTimesBlock)\nDescription Get the Time Period between the specified Start Date Time and End Date Time.\nExamples Get Time Period between Start Date Time and End Date Time This example will get the Time Period between 2021-01-01T00:00:00+00:00 and 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Start Date Time ($)StartDateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)StartDateTime is a variable of type DateTimeOffset End Date Time ($)EndDateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)EndDateTime is a variable of type DateTimeOffset Time Period ($)TimePeriod, with no value ($)TimePeriod is a variable that will be set to a TimePeriod value Result Getting the Time Period between 2021-01-01T00:00:00+00:00 and 2022-01-01T00:00:00+00:00 will result in the variable ($)TimePeriod being updated to the following:\n{ \"Years\": 0, \"Months\": 0, \"Days\": 365, \"Hours\": 0, \"Minutes\": 0, \"Seconds\": 0, \"Milliseconds\": 0 } Properties Start Date Time The Start Date Time to get the Time Period between.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)StartDateTime with no value End Date Time The End Date Time to get the Time Period between.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)EndDateTime with no value Time Period The Time Period between the Start Date Time and End Date Time.\nTime Period can have positive and negative components where components are:\nYears Months Days Hours Minutes Seconds Milliseconds In this block, the Year and Month components are not used as they aren’t constant (i.e. Years can have different numbers of days depending upon whether it is a leap year or not, and months can have different numbers of days); instead Days will be used.\nTime Period is calculated by subtracting Start Date Time from End Date Time; therefore if Start Date Time is less than End Date Time, the Time Period components will be positive, if it is equal they will be 0 and finally if it is greater than they will be negative.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type TimePeriod Property Type Output Is Advanced false Default Editor Variable Default Value ($)TimePeriod with no value Exceptions No exceptions are thrown by the block.\nRemarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\nYears and Months components not used In this block, the Year and Month components are not used as they aren’t constant (i.e. Years can have different numbers of days depending upon whether it is a leap year or not, and months can have different numbers of days); instead Days will be used.\nStart Date Time greater than End Date Time Start Date Time can be greater than End Date Time; if this is the case the components of the Time Period will be negative.\n","categories":"","description":"Gets the Time Period between two Date Times.","excerpt":"Gets the Time Period between two Date Times.","ref":"/docs/reference/blocks/date-and-time/get-time-period/get-time-period-between-date-times-block/","tags":"","title":"Get Time Period Between Date Times"},{"body":"","categories":"","description":"Blocks related to working with Gmail.","excerpt":"Blocks related to working with Gmail.","ref":"/docs/reference/blocks/google-workspace/gmail/","tags":"","title":"Gmail"},{"body":"GmailSessionDetails (Cortex.DataTypes.GoogleWorkspace.Gmail.GmailSessionDetails)\n","categories":"","description":"Used to represent configuration for opening and maintaining a session with a mail server.","excerpt":"Used to represent configuration for opening and maintaining a session with a mail server.","ref":"/docs/reference/data-types/google-workspace/gmail/gmailsessiondetails/","tags":"","title":"GmailSessionDetails"},{"body":"","categories":"","description":"Blocks related to working with Google Workspace.","excerpt":"Blocks related to working with Google Workspace.","ref":"/docs/reference/blocks/google-workspace/","tags":"","title":"Google Workspace"},{"body":"Guid (System.Guid)\nSummary Remarks Create a Guid Convert Guid to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent a globally unique identifier (GUID).","excerpt":"Used to represent a globally unique identifier (GUID).","ref":"/docs/reference/data-types/other/guid/","tags":"","title":"Guid"},{"body":"\rHandle Block Exception (Cortex.Blocks.Exceptions.HandleBlockException.HandleBlockExceptionBlock)\nDescription Handles any Exception thrown by the block it is connected to.\nExamples Handle and save the Exception This example will handle any exception thrown by the block it is connected to; saving the exception to a variable, so the flow execution can use it to make decisions or take further action.\nProperties Property Value Notes Exception ($)Exception, with no value ($)Exception is a variable that will be set to a dynamic value Result The block will handle any exception and save the exception to the ($)Exception variable for use later in the flow execution.\nHandle and discard the Exception from being saved This example will handle any exception thrown by the block it is connected to; not saving the exception to a variable, as the flow execution does not need it to make decisions or take further action.\nProperties Property Value Notes Exception ($)_, with no value ($)_ is a built-in variable that indicates the flow execution does not need to save the exception, so it can be discarded Result The block will handle any exception, but will not save the exception as the ($)_ variable indicates it is not needed and can be discarded.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nProperties Exception The Exception that is handled.\nException can be any Exception data type.\nIf the flow execution does not need the exception, it can be discarded by assigning the built-in ($)_ variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)_ to discard Exceptions No exceptions are thrown by the block.\nRemarks Chaining Exception handling blocks Blocks that handle block exceptions can be chained together so different exceptions can be handled separately. The blocks are listed below:\nHandle Block Exception Matching Message Handle Block Exception Matching Messages Handle Block Exception Matching Type Name Handle Block Exception Matching Type Names Handle Block Exception Each block has an input port on its left-hand side and, with the exception of this block, also have an output port on their right-hand side; this is so they can pass any exception they do not handle to the next block.\nAs this block handles any exception, it does not require the output port.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWhy does the Exception property return a dynamic data type? The decision for the Exception to return a dynamic data type rather than an Exception data type, was to avoid users having to cast the exception to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Exception data type (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the exception to its correct type.\nUsing the built-in ($)_ variable to discard the Exception from being saved Sometimes when an exception occurs the flow execution wants to use the exception to make decisions or take further action. However, there are occasions when the exception is not needed, and being forced to create another variable to save the exception is extra work for no benefit. In these circumstances it is possible to use the built-in ($)_ variable to indicate the exception does not need to be saved.\nFor more information about using the built-in ($)_ variable, please see Discarding Output Properties.\n","categories":"","description":"Handles any exception thrown by the block it is connected to.","excerpt":"Handles any exception thrown by the block it is connected to.","ref":"/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-block/","tags":"","title":"Handle Block Exception"},{"body":"\rHandle Block Exception Matching Message (Cortex.Blocks.Exceptions.HandleBlockException.HandleBlockExceptionMatchingMessageBlock)\nDescription Handles any Exception thrown by the block it is connected to that matches a specified Message.\nExamples Handle Exception containing Message and save the Exception This example will handle any exception thrown by the block it is connected to that contains \"'List' is null\" in its Message property; saving the exception to a variable, so the flow execution can use it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Message ($)Message, with value \"'List' is null\" ($)Message is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that will be set to a dynamic value Result The block will handle any exception containing \"'List' is null\" in its Message property and save the exception to the ($)Exception variable for use later in the flow execution.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s Message property would be \"'List' is null; it must be provided with a non-null value.\\r\\nPlease click the HelpLink for more information on how to fix this.\"; therefore as we are checking for exceptions containing \"'List' is null\" in their Message, this exception would be handled and saved to the ($)Exception variable.\nHandle Exception containing Message and discard the Exception This example is the same as the example above, except it does not save the exception to a variable, as the flow execution does not need it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Message ($)Message, with value \"'List' is null\" ($)Message is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)_, with no value ($)_ is a built-in variable that indicates the flow execution does not need to save the exception, so it can be discarded Result The block will handle any exception containing \"'List' is null\" in its Message property, but will not save the exception as the ($)_ variable indicates it is not needed and can be discarded.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s Message property would be \"'List' is null; it must be provided with a non-null value.\\r\\nPlease click the HelpLink for more information on how to fix this.\"; therefore as we are checking for exceptions containing \"'List' is null\" in their Message, this exception would be handled, but because the ($)_ variable is used it will not be saved to the ($)Exception variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nException does not contain Message This example will not handle an exception thrown by the block it is connected to that does not contain \"'List' is null\" in its Message property; the exception will be passed to the next exception handling block.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Message ($)Message, with value \"'List' is null\" ($)Message is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that won’t be set Result The block will not handle any exception that does not contain \"'List' is null\" in its Message property; instead the exception will be passed to the next exception handling block.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to a read-only List, it would throw a CannotModifyReadOnlyListException when executed.\nThis exception’s Message property would be \"'List' cannot be modified because it's read-only.\\r\\nPlease click the HelpLink for more information on how to fix this.\"; therefore as we are checking for exceptions containing \"'List' is null\" in their Message, this exception would not be handled.\nProperties Message The Message the Exception’s Message property must contain for this block to handle the Exception.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Comparison Type The Comparison Type specifying the rules used to determine whether Message is contained in the Exception’s Message property.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exception The Exception if it is handled by the block.\nException can be any Exception data type.\nIf the flow execution does not need the exception, it can be discarded by assigning the built-in ($)_ variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)_ to discard Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Message If Message is null or empty (i.e. \"\"), and the thrown exception’s Message property is also null or empty (i.e. \"\"), the exception will be handled and saved to the variable specified in the Exception property.\nChaining Exception handling blocks Blocks that handle block exceptions can be chained together so different exceptions can be handled separately. The blocks are listed below:\nHandle Block Exception Matching Message Handle Block Exception Matching Messages Handle Block Exception Matching Type Name Handle Block Exception Matching Type Names Handle Block Exception Each block has an input port on its left-hand side and, with the exception of the Handle Block Exception block, also have an output port on their right-hand side; this is so they can pass any exception they do not handle to the next block.\nAs the Handle Block Exception block handles any exception, it does not require the output port.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWhy does the Exception property return a dynamic data type? The decision for the Exception to return a dynamic data type rather than an Exception data type, was to avoid users having to cast the exception to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Exception data type (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the exception to its correct type.\nUsing the built-in ($)_ variable to discard the Exception from being saved Sometimes when an exception occurs the flow execution wants to use the exception to make decisions or take further action. However, there are occasions when the exception is not needed, and being forced to create another variable to save the exception is extra work for no benefit. In these circumstances it is possible to use the built-in ($)_ variable to indicate the exception does not need to be saved.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\n","categories":"","description":"Handles any exception thrown by the block it is connected to that matches a specified message.","excerpt":"Handles any exception thrown by the block it is connected to that matches a specified message.","ref":"/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-message-block/","tags":"","title":"Handle Block Exception Matching Message"},{"body":"\rHandle Block Exception Matching Messages (Cortex.Blocks.Exceptions.HandleBlockException.HandleBlockExceptionMatchingMessagesBlock)\nDescription Handles any Exception thrown by the block it is connected to that matches any message in a given set of Messages.\nExamples Handle Exception containing any of the Messages and save the Exception This example will handle any exception thrown by the block it is connected to that contains any of the messages in [\"'List' is null\", \"'List' is empty\"] in its Message property; saving the exception to a variable, so the flow execution can use it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Messages ($)Messages, with value [\"'List' is null\", \"'List' is empty\"] ($)Messages is a variable of type IEnumerable\u003cString\u003e Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that will be set to a dynamic value Result The block will handle any exception containing any of the messages in [\"'List' is null\", \"'List' is empty\"] in its Message property and save the exception to the ($)Exception variable for use later in the flow execution.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s Message property would be \"'List' is null; it must be provided with a non-null value.\\r\\nPlease click the HelpLink for more information on how to fix this.\"; therefore as we are checking for exceptions containing any of [\"'List' is null\", \"'List' is empty\"] in their Message, this exception would be handled and saved to the ($)Exception variable.\nHandle Exception containing any of the Messages and discard the Exception This example is the same as the example above, except it does not save the exception to a variable, as the flow execution does not need it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Messages ($)Messages, with value [\"'List' is null\", \"'List' is empty\"] ($)Messages is a variable of type IEnumerable\u003cString\u003e Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)_, with no value ($)_ is a built-in variable that indicates the flow execution does not need to save the exception, so it can be discarded Result The block will handle any exception containing any of the messages in [\"'List' is null\", \"'List' is empty\"] in its Message property, but will not save the exception as the ($)_ variable indicates it is not needed and can be discarded.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s Message property would be \"'List' is null; it must be provided with a non-null value.\\r\\nPlease click the HelpLink for more information on how to fix this.\"; therefore as we are checking for exceptions containing any of [\"'List' is null\", \"'List' is empty\"] in their Message, this exception would be handled, but because the ($)_ variable is used it will not be saved to the ($)Exception variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nException does not contain any of the Messages This example will not handle an exception thrown by the block it is connected to that does not contain any of [\"'List' is null\", \"'List' is empty\"] in its Message property; the exception will be passed to the next exception handling block.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Messages ($)Messages, with value [\"'List' is null\", \"'List' is empty\"] ($)Messages is a variable of type IEnumerable\u003cString\u003e Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that won’t be set Result The block will not handle any exception that does not contain any of [\"'List' is null\", \"'List' is empty\"] in its Message property; instead the exception will be passed to the next exception handling block.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to a read-only List, it would throw a CannotModifyReadOnlyListException when executed.\nThis exception’s Message property would be \"'List' cannot be modified because it's read-only.\\r\\nPlease click the HelpLink for more information on how to fix this.\"; therefore as we are checking for exceptions containing any of [\"'List' is null\", \"'List' is empty\"] in their Message, this exception would not be handled.\nProperties Messages The Messages the Exception’s Message property must contain any of for this block to handle the Exception.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cstring\u003e() {} Comparison Type The Comparison Type specifying the rules used to determine whether any of the Messages are contained in the Exception’s Message property.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exception The Exception if it is handled by the block.\nException can be any Exception data type.\nIf the flow execution does not need the exception, it can be discarded by assigning the built-in ($)_ variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)_ to discard Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). PropertyEmptyException Thrown when Messages contains no items. PropertyNullException Thrown when Messages is null. Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull or empty Message in Messages If any message in Messages is null or empty (i.e. \"\"), and the thrown exception’s Message property is also null or empty (i.e. \"\"), the exception will be handled and saved to the variable specified in the Exception property.\nChaining Exception handling blocks Blocks that handle block exceptions can be chained together so different exceptions can be handled separately. The blocks are listed below:\nHandle Block Exception Matching Message Handle Block Exception Matching Messages Handle Block Exception Matching Type Name Handle Block Exception Matching Type Names Handle Block Exception Each block has an input port on its left-hand side and, with the exception of the Handle Block Exception block, also have an output port on their right-hand side; this is so they can pass any exception they do not handle to the next block.\nAs the Handle Block Exception block handles any exception, it does not require the output port.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWhy does the Exception property return a dynamic data type? The decision for the Exception to return a dynamic data type rather than an Exception data type, was to avoid users having to cast the exception to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Exception data type (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the exception to its correct type.\nUsing the built-in ($)_ variable to discard the Exception from being saved Sometimes when an exception occurs the flow execution wants to use the exception to make decisions or take further action. However, there are occasions when the exception is not needed, and being forced to create another variable to save the exception is extra work for no benefit. In these circumstances it is possible to use the built-in ($)_ variable to indicate the exception does not need to be saved.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\n","categories":"","description":"Handles any exception thrown by the block it is connected to that matches any message in a given set of messages.","excerpt":"Handles any exception thrown by the block it is connected to that matches any message in a given set of messages.","ref":"/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-messages-block/","tags":"","title":"Handle Block Exception Matching Messages"},{"body":"\rHandle Block Exception Matching Type Name (Cortex.Blocks.Exceptions.HandleBlockException.HandleBlockExceptionMatchingTypeNameBlock)\nDescription Handles any Exception thrown by the block it is connected to that matches a specified Type Name.\nExamples Handle Exception matching Type Name and save the Exception This example will handle any exception thrown by the block it is connected to that contains \"PropertyNull\" in its fully qualified TypeName; saving the exception to a variable, so the flow execution can use it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of type names.\nProperties Property Value Notes Type Name ($)TypeName, with value \"PropertyNull\" ($)TypeName is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that will be set to a dynamic value Result The block will handle any exception containing \"PropertyNull\" in its fully qualified TypeName and save the exception to the ($)Exception variable for use later in the flow execution.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s fully qualified TypeName is \"Cortex.Exceptions.Common.Property.PropertyNullException\"; therefore as we are checking for exceptions containing \"PropertyNull\" in their TypeName, this exception would be handled and saved to the ($)Exception variable.\nHandle Exception matching Type Name and discard the Exception This example is the same as the example above, except it does not save the exception to a variable, as the flow execution does not need it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of type names.\nProperties Property Value Notes Type Name ($)TypeName, with value \"PropertyNull\" ($)TypeName is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)_, with no value ($)_ is a built-in variable that indicates the flow execution does not need to save the exception, so it can be discarded Result The block will handle any exception containing \"PropertyNull\" in its fully qualified TypeName, but will not save the exception as the ($)_ variable indicates it is not needed and can be discarded.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s fully qualified TypeName is \"Cortex.Exceptions.Common.Property.PropertyNullException\"; therefore as we are checking for exceptions containing \"PropertyNull\" in their TypeName, this exception would be handled, but because the ($)_ variable is used it will not be saved to the ($)Exception variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nException does not match Type Name This example will not handle an exception thrown by the block it is connected to that does not contain \"PropertyNull\" in its fully qualified TypeName; the exception will be passed to the next exception handling block.\nIt performs a case-sensitive, culture-insensitive comparison of type names.\nProperties Property Value Notes Type Name ($)TypeName, with value \"PropertyNull\" ($)TypeName is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that won’t be set Result The block will not handle any exception that does not contain \"PropertyNull\" in its fully qualified TypeName; instead the exception will be passed to the next exception handling block.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to a read-only List, it would throw a CannotModifyReadOnlyListException when executed.\nThis exception’s fully qualified TypeName is \"Cortex.Exceptions.Lists.CannotModifyReadOnlyListException\"; therefore as we are checking for exceptions containing \"PropertyNull\" in their TypeName, this exception would not be handled.\nProperties Type Name The Type Name the Exception’s fully qualified TypeName must contain for this block to handle the Exception.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to null) Comparison Type The Comparison Type specifying the rules used to determine whether Type Name is contained in the Exception’s fully qualified TypeName.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exception The Exception if it is handled by the block.\nException can be any Exception data type.\nIf the flow execution does not need the exception, it can be discarded by assigning the built-in ($)_ variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)_ to discard Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). PropertyEmptyException Thrown when Type Name is empty (i.e. \"\"). PropertyNullException Thrown when Type Name is null. Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nChaining Exception handling blocks Blocks that handle block exceptions can be chained together so different exceptions can be handled separately. The blocks are listed below:\nHandle Block Exception Matching Message Handle Block Exception Matching Messages Handle Block Exception Matching Type Name Handle Block Exception Matching Type Names Handle Block Exception Each block has an input port on its left-hand side and, with the exception of the Handle Block Exception block, also have an output port on their right-hand side; this is so they can pass any exception they do not handle to the next block.\nAs the Handle Block Exception block handles any exception, it does not require the output port.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWhy does the Exception property return a dynamic data type? The decision for the Exception to return a dynamic data type rather than an Exception data type, was to avoid users having to cast the exception to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Exception data type (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the exception to its correct type.\nUsing the built-in ($)_ variable to discard the Exception from being saved Sometimes when an exception occurs the flow execution wants to use the exception to make decisions or take further action. However, there are occasions when the exception is not needed, and being forced to create another variable to save the exception is extra work for no benefit. In these circumstances it is possible to use the built-in ($)_ variable to indicate the exception does not need to be saved.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\n","categories":"","description":"Handles any exception thrown by the block it is connected to that matches a specified type name.","excerpt":"Handles any exception thrown by the block it is connected to that matches a specified type name.","ref":"/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-type-name-block/","tags":"","title":"Handle Block Exception Matching Type Name"},{"body":"\rHandle Block Exception Matching Type Names (Cortex.Blocks.Exceptions.HandleBlockException.HandleBlockExceptionMatchingTypeNamesBlock)\nDescription Handles any Exception thrown by the block it is connected to that matches any type name in a given set of Type Names.\nExamples Handle Exception matching any of the Type Names and save the Exception This example will handle any exception thrown by the block it is connected to that contains any of the type names in [\"PropertyNull\", \"PropertyEmpty\"] in its fully qualified TypeName; saving the exception to a variable, so the flow execution can use it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Type Names ($)TypeNames, with value [\"PropertyNull\", \"PropertyEmpty\"] ($)TypeNames is a variable of type IEnumerable\u003cString\u003e Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that will be set to a dynamic value Result The block will handle any exception containing any of the type names in [\"PropertyNull\", \"PropertyEmpty\"] in its fully qualified TypeName and save the exception to the ($)Exception variable for use later in the flow execution.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s fully qualified TypeName is \"Cortex.Exceptions.Common.Property.PropertyNullException\"; therefore as we are checking for exceptions containing any of [\"PropertyNull\", \"PropertyEmpty\"] in their TypeName, this exception would be handled and saved to the ($)Exception variable.\nHandle Exception containing any of the Type Names and discard the Exception This example is the same as the example above, except it does not save the exception to a variable, as the flow execution does not need it to make decisions or take further action.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Type Names ($)TypeNames, with value [\"PropertyNull\", \"PropertyEmpty\"] ($)TypeNames is a variable of type IEnumerable\u003cString\u003e Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)_, with no value ($)_ is a built-in variable that indicates the flow execution does not need to save the exception, so it can be discarded Result The block will handle any exception containing any of the type names in [\"PropertyNull\", \"PropertyEmpty\"] in its fully qualified TypeName, but will not save the exception as the ($)_ variable indicates it is not needed and can be discarded.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to null, it would throw a PropertyNullException when executed.\nThis exception’s fully qualified TypeName is \"Cortex.Exceptions.Common.Property.PropertyNullException\"; therefore as we are checking for exceptions containing any of [\"PropertyNull\", \"PropertyEmpty\"] in their TypeName, this exception would be handled, but because the ($)_ variable is used it will not be saved to the ($)Exception variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nException does not contain any of the Type Names This example will not handle an exception thrown by the block it is connected to that does not contain any of [\"PropertyNull\", \"PropertyEmpty\"] in its fully qualified TypeName; the exception will be passed to the next exception handling block.\nIt performs a case-sensitive, culture-insensitive comparison of messages.\nProperties Property Value Notes Type Names ($)TypeNames, with value [\"PropertyNull\", \"PropertyEmpty\"] ($)TypeNames is a variable of type IEnumerable\u003cString\u003e Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Exception ($)Exception, with no value ($)Exception is a variable that won’t be set Result The block will not handle any exception that does not contain any of [\"PropertyNull\", \"PropertyEmpty\"] in its fully qualified TypeName; instead the exception will be passed to the next exception handling block.\nE.g.\nIf the List property of the Add Item At Beginning list block was set to a read-only List, it would throw a CannotModifyReadOnlyListException when executed.\nThis exception’s fully qualified TypeName is \"Cortex.Exceptions.Lists.CannotModifyReadOnlyListException\"; therefore as we are checking for exceptions containing any of [\"PropertyNull\", \"PropertyEmpty\"] in their TypeName, this exception would not be handled.\nProperties Type Names The Type Names the Exception’s fully qualified TypeName must contain any of for this block to handle the Exception.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cstring\u003e() {} Comparison Type The Comparison Type specifying the rules used to determine whether any of the Type Names are contained in the Exception’s fully qualified TypeName.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Exception The Exception if it is handled by the block.\nException can be any Exception data type.\nIf the flow execution does not need the exception, it can be discarded by assigning the built-in ($)_ variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)_ to discard Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). PropertyContainsNullOrEmptyItemException Thrown when any Type Name in Type Names is null or empty (i.e. \"\"). PropertyEmptyException Thrown when Type Names contains no items. PropertyNullException Thrown when Type Names is null. Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nChaining Exception handling blocks Blocks that handle block exceptions can be chained together so different exceptions can be handled separately. The blocks are listed below:\nHandle Block Exception Matching Message Handle Block Exception Matching Messages Handle Block Exception Matching Type Name Handle Block Exception Matching Type Names Handle Block Exception Each block has an input port on its left-hand side and, with the exception of the Handle Block Exception block, also have an output port on their right-hand side; this is so they can pass any exception they do not handle to the next block.\nAs the Handle Block Exception block handles any exception, it does not require the output port.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWhy does the Exception property return a dynamic data type? The decision for the Exception to return a dynamic data type rather than an Exception data type, was to avoid users having to cast the exception to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Exception data type (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the exception to its correct type.\nUsing the built-in ($)_ variable to discard the Exception from being saved Sometimes when an exception occurs the flow execution wants to use the exception to make decisions or take further action. However, there are occasions when the exception is not needed, and being forced to create another variable to save the exception is extra work for no benefit. In these circumstances it is possible to use the built-in ($)_ variable to indicate the exception does not need to be saved.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\n","categories":"","description":"Handles any exception thrown by the block it is connected to that matches any type name in a given set of type names.","excerpt":"Handles any exception thrown by the block it is connected to that matches any type name in a given set of type names.","ref":"/docs/reference/blocks/exceptions/handle-block-exception/handle-block-exception-matching-type-names-block/","tags":"","title":"Handle Block Exception Matching Type Names"},{"body":"","categories":"","description":"Handle exceptions that occur during block execution.","excerpt":"Handle exceptions that occur during block execution.","ref":"/docs/reference/blocks/exceptions/handle-block-exception/","tags":"","title":"Handle Block Exception(s)"},{"body":"\rHandle Flow Exception (Cortex.Blocks.Exceptions.HandleFlowException.HandleFlowExceptionWorkspaceBlock)\nDescription Handles any unhandled Exception within the Flow.\nFor more information, please see Unhandled Exceptions.\nExamples Handle and save the Exception This example will handle any unhandled exception within the Flow; saving the exception to a variable, so the flow execution can use it to make decisions or take further action.\nProperties Property Value Notes Exception ($)Exception, with no value ($)Exception is a variable that will be set to a dynamic value Result The block will handle any unhandled exception within the Flow and save the exception to the ($)Exception variable for use later in the flow execution.\nHandle and discard the Exception from being saved This example will handle any unhandled exception within the Flow; not saving the exception to a variable, as the flow execution does not need it to make decisions or take further action.\nProperties Property Value Notes Exception ($)_, with no value ($)_ is a built-in variable that indicates the flow execution does not need to save the exception, so it can be discarded Result The block will handle any unhandled exception within the Flow, but will not save the exception as the ($)_ variable indicates it is not needed and can be discarded.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nProperties Exception The Exception that is handled.\nException can be any Exception data type.\nBy default, this property is assigned the built-in ($)_ variable, so the exception will be discarded. If the flow execution does need the exception, a variable can be assigned to save it in.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)_ to discard Exceptions No exceptions are thrown by the block.\nRemarks Block Restrictions The following restrictions apply to this block:\nA flow cannot contain more than one Handle Flow Exception block. The Handle Flow Exception block is not available on any palette. The Handle Flow Exception block cannot be copied. The Handle Flow Exception block cannot be deleted. Unhandled Exceptions If an exception thrown by a block is not handled by any connected Handle Block Exception blocks, it will be passed to the Handle Workspace Exception block on the same workspace.\nIf the workspace does not contain a Handle Workspace Exception block it will be rethrown by the Workspace block the workspace belongs to.\nThis process repeats until:\nThe exception is handled, or The exception reaches the flow’s top-level workspace, is not handled by any Handle Block Exception blocks and the top-level workspace does not contain a Handle Workspace Exception block. At this stage, the exception is handled by the flow’s Handle Flow Exception block. If an exception occurs within the workspace of the Handle Flow Exception block and is not handled, the flow will end with a status of Error.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWhy does the Exception property return a dynamic data type? The decision for the Exception to return a dynamic data type rather than an Exception data type, was to avoid users having to cast the exception to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Exception data type (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the exception to its correct type.\nUsing the built-in ($)_ variable to discard the Exception from being saved Sometimes when an exception occurs the flow execution wants to use the exception to make decisions or take further action. However, there are occasions when the exception is not needed, and being forced to create another variable to save the exception is extra work for no benefit. In these circumstances it is possible to use the built-in ($)_ variable to indicate the exception does not need to be saved.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\n","categories":"","description":"Handles any unhandled exception within the Flow.","excerpt":"Handles any unhandled exception within the Flow.","ref":"/docs/reference/blocks/exceptions/handle-flow-exception/handle-flow-exception-block/","tags":"","title":"Handle Flow Exception"},{"body":"","categories":"","description":"Handle exceptions not handled by any Handle Block Exception or Handle Workspace Exception blocks.","excerpt":"Handle exceptions not handled by any Handle Block Exception or Handle Workspace Exception blocks.","ref":"/docs/reference/blocks/exceptions/handle-flow-exception/","tags":"","title":"Handle Flow Exception(s)"},{"body":"\rHandle Workspace Exception (Cortex.Blocks.Exceptions.HandleWorkspaceException.HandleWorkspaceExceptionBlock)\nDescription Handles any unhandled Exception within its workspace.\nFor more information, please see Unhandled Exceptions.\nExamples Handle and save the Exception This example will handle any unhandled exception within the block’s workspace; saving the exception to a variable, so the flow execution can use it to make decisions or take further action.\nProperties Property Value Notes Exception ($)Exception, with no value ($)Exception is a variable that will be set to a dynamic value Result The block will handle any unhandled exception within the block’s workspace and save the exception to the ($)Exception variable for use later in the flow execution.\nHandle and discard the Exception from being saved This example will handle any unhandled exception within the block’s workspace; not saving the exception to a variable, as the flow execution does not need it to make decisions or take further action.\nProperties Property Value Notes Exception ($)_, with no value ($)_ is a built-in variable that indicates the flow execution does not need to save the exception, so it can be discarded Result The block will handle any unhandled exception within the block’s workspace, but will not save the exception as the ($)_ variable indicates it is not needed and can be discarded.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nProperties Exception The Exception that is handled.\nException can be any Exception data type.\nIf the flow execution does not need the exception, it can be discarded by assigning the built-in ($)_ variable.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\nData Type dynamic Property Type Output Is Advanced false Default Editor Variable Default Value ($)_ to discard Exceptions No exceptions are thrown by the block.\nRemarks Block Restrictions The following restrictions apply to this block:\nA workspace cannot contain more than one Handle Workspace Exception block. If more than one is added, it will be reported as a message when trying to debug the flow. The Handle Workspace Exception block will only handle the first unhandled exception within its workspace. This is to prevent infinite recursion within the flow. Subsequent unhandled exceptions are passed to the next relevant exception handling block. For more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling. A flow’s Top-Level Workspace cannot contain a Handle Workspace Exception block. If one is added, it will be reported as a message when trying to debug the flow. Unhandled Exceptions If an exception thrown by a block is not handled by any connected Handle Block Exception blocks, it will be passed to the Handle Workspace Exception block on the same workspace.\nIf the workspace does not contain a Handle Workspace Exception block it will be rethrown by the Workspace block the workspace belongs to.\nThis process repeats until:\nThe exception is handled, or The exception reaches the flow’s top-level workspace, is not handled by any Handle Block Exception blocks and the top-level workspace does not contain a Handle Workspace Exception block. At this stage, the exception is handled by the flow’s Handle Flow Exception block. If an exception occurs within the workspace of the Handle Flow Exception block and is not handled, the flow will end with a status of Error.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWhy does the Exception property return a dynamic data type? The decision for the Exception to return a dynamic data type rather than an Exception data type, was to avoid users having to cast the exception to its correct type to be able to use all of its properties.\nAs a result, any issues with using the Exception data type (i.e. trying to access a property it does not have) will not be reported as messages when trying to debug the flow; they will only be discovered when the flow execution reaches the part of the flow with the issue.\nIf it is desirable to have any issues reported as messages when trying to debug the flow, the user can cast the exception to its correct type.\nUsing the built-in ($)_ variable to discard the Exception from being saved Sometimes when an exception occurs the flow execution wants to use the exception to make decisions or take further action. However, there are occasions when the exception is not needed, and being forced to create another variable to save the exception is extra work for no benefit. In these circumstances it is possible to use the built-in ($)_ variable to indicate the exception does not need to be saved.\nFor more infomation about using the built-in ($)_ variable, please see Discarding Output Properties.\n","categories":"","description":"Handles any unhandled exception within its workspace.","excerpt":"Handles any unhandled exception within its workspace.","ref":"/docs/reference/blocks/exceptions/handle-workspace-exception/handle-workspace-exception-block/","tags":"","title":"Handle Workspace Exception"},{"body":"","categories":"","description":"Handle exceptions not handled by any Handle Block Exception blocks.","excerpt":"Handle exceptions not handled by any Handle Block Exception blocks.","ref":"/docs/reference/blocks/exceptions/handle-workspace-exception/","tags":"","title":"Handle Workspace Exception(s)"},{"body":"\r","categories":"","description":"System level help","excerpt":"System level help","ref":"/docs/guides/cortex-gateway/help/","tags":"","title":"Help"},{"body":"","categories":"","description":"Blocks related to working with HTTP.","excerpt":"Blocks related to working with HTTP.","ref":"/docs/reference/blocks/http/","tags":"","title":"Http"},{"body":"IDictionary\u003cTKey, TItem\u003e (System.Collections.Generic.IDictionary\u003cTKey, TItem\u003e)\nSummary Any data type representing a collection of key/item pairs.\nTKey indicates the data type of the keys used to access the items contained in the collection. TItem indicates the data type of the items contained in the collection. Each TItem can be individually accessed by a key.\nDictionary\u003cTKey, TItem\u003e is the most common example.\nCategory: Collections Name: IDictionary\u003cTKey, TItem\u003e Full Name: System.Collections.Generic.IDictionary\u003cTKey, TItem\u003e Alias: N/A Description: Any data type representing a collection of key/item pairs. TKey indicates the data type of the keys used to access the items contained in the collection. TItem indicates the data type of the items contained in the collection. Each TItem can be individually accessed by a key. Size: Varies Default Value: null Can be used as: IEnumerable, Object, dynamic IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e (e.g. where IDictionary\u003cTKey, TItem\u003e is IDictionary\u003cString, Int32\u003e and IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e is IEnumerable\u003cKeyValuePair\u003cString, Int32\u003e\u003e) Can be cast to: N/A Remarks Most Common IDictionary\u003cTKey, TItem\u003e Data Types Any of the following data types can be used where an IDictionary\u003cTKey, TItem\u003e is required:\nDictionary\u003cTKey, TItem\u003e Structure Create an IDictionary\u003cTKey, TItem\u003e For some of the ways that an IDictionary\u003cTKey, TItem\u003e can be created, please see each of the IDictionary\u003cTKey, TItem\u003e data types:\nDictionary\u003cTKey, TItem\u003e Structure Convert IDictionary\u003cTKey, TItem\u003e to Text For some of the ways that an IDictionary\u003cTKey, TItem\u003e can be converted to text, please see each of the IDictionary\u003cTKey, TItem\u003e data types:\nDictionary\u003cTKey, TItem\u003e Structure Property Editor Support The Expression Editor is available for Input properties where the data type is IDictionary\u003cTKey, TItem\u003e. The Literal Editor is not available for Input properties where the data type is IDictionary\u003cTKey, TItem\u003e. The Variable Editor is available for InputOutput and Output properties where the data type is IDictionary\u003cTKey, TItem\u003e. Known Limitations Currently, only certain data types can be used for TKey. These include, but not limited to: String Int32 Double Boolean DateTimeOffset If the data type of TKey is anything other than a String, when viewing the IDictionary\u003cTKey, TItem\u003e in Gateway the key value will be displayed as its ToString() representation (e.g. an Int32 key value of 1 will be displayed as \"1\" instead of 1). See Also Related Data Types IEnumerable IEnumerable\u003cTItem\u003e Dictionary\u003cTKey, TItem\u003e Structure Related Concepts Working with Collections External Documentation System.Collections.Generic.IDictionary\u003cTKey, TItem\u003e ","categories":"","description":"Any data type representing a collection of key/item pairs. `TKey` indicates the data type of the keys used to access the items contained in the collection. `TItem` indicates the data type of the items contained in the collection. Each `TItem` can be individually accessed by a key. `Dictionary\u003cTKey, TItem\u003e` is the most common example.","excerpt":"Any data type representing a collection of key/item pairs. `TKey` indicates the data type of the keys used to access the items contained in the collection. `TItem` indicates the data type of the items …","ref":"/docs/reference/data-types/collections/idictionary-2/","tags":"","title":"IDictionary\u003cTKey, TItem\u003e"},{"body":"IEnumerable (System.Collections.IEnumerable)\nSummary Any data type representing a collection of items that can iterated or looped over.\nThe items contained in the collection can be any data type.\nList\u003cTItem\u003e is the most common example; for more see Most Common IEnumerable Data Types.\nCategory: Collections Name: IEnumerable Full Name: System.Collections.IEnumerable Alias: N/A Description: Any data type representing a collection of items that can iterated or looped over. The items contained in the collection can be any data type. Size: Varies Default Value: null Can be used as: Object, dynamic Can be cast to: N/A Remarks Most Common IEnumerable Data Types Any of the following data types can be used where an IEnumerable is required:\nIList\u003cTItem\u003e List\u003cTItem\u003e IDictionary\u003cTKey, TItem\u003e Dictionary\u003cTKey, TItem\u003e Structure String Create an IEnumerable For some of the ways that an IEnumerable can be created, please see each of the IEnumerable data types:\nList\u003cTItem\u003e Dictionary\u003cTKey, TItem\u003e Structure String Convert IEnumerable to Text For some of the ways that an IEnumerable can be converted to text, please see each of the IEnumerable data types:\nList\u003cTItem\u003e Dictionary\u003cTKey, TItem\u003e Structure Property Editor Support The Expression Editor is available for Input properties where the data type is IEnumerable. The Literal Editor is not available for Input properties where the data type is IEnumerable. The Variable Editor is available for InputOutput and Output properties where the data type is IEnumerable. Known Limitations None\nSee Also Related Data Types IEnumerable\u003cTItem\u003e IList\u003cTItem\u003e List\u003cTItem\u003e IDictionary\u003cTKey, TItem\u003e Dictionary\u003cTKey, TItem\u003e Structure String Related Concepts Working with Collections External Documentation System.Collections.IEnumerable ","categories":"","description":"Any data type representing a collection of items that can iterated or looped over. The items contained in the collection can be any data type. `List\u003cTItem\u003e` is the most common example.","excerpt":"Any data type representing a collection of items that can iterated or looped over. The items contained in the collection can be any data type. `List\u003cTItem\u003e` is the most common example.","ref":"/docs/reference/data-types/collections/ienumerable/","tags":"","title":"IEnumerable"},{"body":"IEnumerable\u003cTItem\u003e (System.Collections.Generic.IEnumerable\u003cTItem\u003e)\nSummary Any data type representing a collection of items that can iterated or looped over.\nTItem indicates the data type of the items contained in the collection.\nList\u003cTItem\u003e is the most common example; for more see Most Common IEnumerable\u003cTItem\u003e Data Types.\nCategory: Collections Name: IEnumerable\u003cTItem\u003e Full Name: System.Collections.Generic.IEnumerable\u003cTItem\u003e Alias: N/A Description: Any data type representing a collection of items that can iterated or looped over. TItem indicates the data type of the items contained in the collection. Size: Varies Default Value: null Can be used as: IEnumerable, Object, dynamic IEnumerable\u003cTItemBaseType\u003e (e.g. where IEnumerable\u003cTItem\u003e is IEnumerable\u003cInt32\u003e and IEnumerable\u003cTItemBaseType\u003e is IEnumerable\u003cObject\u003e as Object is a base type of Int32; this is called covariance) Can be cast to: N/A Remarks Most Common IEnumerable\u003cTItem\u003e Data Types Any of the following data types can be used where an IEnumerable\u003cTItem\u003e is required:\nIList\u003cTItem\u003e List\u003cTItem\u003e IDictionary\u003cTKey, TItem\u003e Dictionary\u003cTKey, TItem\u003e Structure String Create an IEnumerable\u003cTItem\u003e For some of the ways that an IEnumerable\u003cTItem\u003e can be created, please see each of the IEnumerable\u003cTItem\u003e data types:\nList\u003cTItem\u003e Dictionary\u003cTKey, TItem\u003e Structure String Convert IEnumerable\u003cTItem\u003e to Text For some of the ways that an IEnumerable\u003cTItem\u003e can be converted to text, please see each of the IEnumerable\u003cTItem\u003e data types:\nList\u003cTItem\u003e Dictionary\u003cTKey, TItem\u003e Structure Property Editor Support The Expression Editor is available for Input properties where the data type is IEnumerable\u003cTItem\u003e. The Literal Editor is not available for Input properties where the data type is IEnumerable\u003cTItem\u003e. The Variable Editor is available for InputOutput and Output properties where the data type is IEnumerable\u003cTItem\u003e. Known Limitations None\nSee Also Related Data Types IEnumerable IList\u003cTItem\u003e List\u003cTItem\u003e IDictionary\u003cTKey, TItem\u003e Dictionary\u003cTKey, TItem\u003e Structure String Related Concepts Working with Collections External Documentation System.Collections.Generic.IEnumerable\u003cTItem\u003e ","categories":"","description":"Any data type representing a collection of items that can iterated or looped over. `TItem` indicates the data type of the items contained in the collection. `List\u003cTItem\u003e` is the most common example.","excerpt":"Any data type representing a collection of items that can iterated or looped over. `TItem` indicates the data type of the items contained in the collection. `List\u003cTItem\u003e` is the most common example.","ref":"/docs/reference/data-types/collections/ienumerable-1/","tags":"","title":"IEnumerable\u003cTItem\u003e"},{"body":"","categories":"","description":"Perform if-else like conditional decision making.","excerpt":"Perform if-else like conditional decision making.","ref":"/docs/reference/blocks/decisions/if/","tags":"","title":"If Else"},{"body":"\rIf Null Exit Bottom (Cortex.Blocks.Decisions.If.IfNullExitBottomBlock`1)\nDescription Checks if a given Value is null; if so the flow execution exits via the block’s bottom port (green tick), otherwise it exits via the right port (red cross).\nFor information about null, please see Null and Nullable Types.\nExamples Value is null This example will check if null is null.\nProperties Property Value Notes Value ($)Value, with value null ($)Value is a variable of type String Result null is null, so the flow execution exits via the block’s bottom port (green tick).\nValue is not null This example will check if \"The quick brown fox jumps over the lazy dog\" is null.\nProperties Property Value Notes Value ($)Value, with value \"The quick brown fox jumps over the lazy dog\" ($)Value is a variable of type String Result \"The quick brown fox jumps over the lazy dog\" is not null, so the flow execution exits via the block’s right port (red cross).\nProperties Value The Value to check is null.\nFor information about null, please see Null and Nullable Types.\nData Type TValue Property Type Input Is Advanced false Default Editor Variable Default Value No value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNotNullableException Thrown when Value is given a non-nullable value type. Remarks Null and Nullable Types For information about null, please see Null and Nullable Types.\n","categories":"","description":"Checks if a given value is `null`; if so the flow execution exits via the block's bottom port, otherwise it exits via the right port.","excerpt":"Checks if a given value is `null`; if so the flow execution exits via the block's bottom port, otherwise it exits via the right port.","ref":"/docs/reference/blocks/decisions/if/if-null-exit-bottom-block-1/","tags":"","title":"If Null Exit Bottom"},{"body":"\rIf Null Exit Right (Cortex.Blocks.Decisions.If.IfNullExitRightBlock`1)\nDescription Checks if a given Value is null; if so the flow execution exits via the block’s right port (green tick), otherwise it exits via the bottom port (red cross).\nFor information about null, please see Null and Nullable Types.\nExamples Value is null This example will check if null is null.\nProperties Property Value Notes Value ($)Value, with value null ($)Value is a variable of type String Result null is null, so the flow execution exits via the block’s right port (green tick).\nValue is not null This example will check if \"The quick brown fox jumps over the lazy dog\" is null.\nProperties Property Value Notes Value ($)Value, with value \"The quick brown fox jumps over the lazy dog\" ($)Value is a variable of type String Result \"The quick brown fox jumps over the lazy dog\" is not null, so the flow execution exits via the block’s bottom port (red cross).\nProperties Value The Value to check is null.\nFor information about null, please see Null and Nullable Types.\nData Type TValue Property Type Input Is Advanced false Default Editor Variable Default Value No value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNotNullableException Thrown when Value is given a non-nullable value type. Remarks Null and Nullable Types For information about null, please see Null and Nullable Types.\n","categories":"","description":"Checks if a given value is `null`; if so the flow execution exits via the block's right port, otherwise it exits via the bottom port.","excerpt":"Checks if a given value is `null`; if so the flow execution exits via the block's right port, otherwise it exits via the bottom port.","ref":"/docs/reference/blocks/decisions/if/if-null-exit-right-block-1/","tags":"","title":"If Null Exit Right"},{"body":"\rIf True Exit Bottom (Cortex.Blocks.Decisions.If.IfTrueExitBottomBlock)\nDescription Checks if a given Value evaluates to true; if so the flow execution exits via the block’s bottom port (green tick), otherwise it exits via the right port (red cross).\nExamples Value is true This example will check if 1 + 1 == 2 evaluates to true or false.\nProperties Property Value Notes Value ($)Value, with value 1 + 1 == 2 ($)Value is a variable whose value evaluates to type Boolean Result 1 + 1 == 2 is true, so the flow execution exits via the block’s bottom port (green tick).\nValue is false This example will check if 1 + 1 == 1 evaluates to true or false.\nProperties Property Value Notes Value ($)Value, with value 1 + 1 == 1 ($)Value is a variable whose value evaluates to type Boolean Result 1 + 1 == 1 is false, so the flow execution exits via the block’s right port (red cross).\nProperties Value The Value to check evaluates to true or false.\nData Type Boolean Property Type Input Is Advanced false Default Editor Variable Default Value No value Exceptions No exceptions are thrown by the block.\nRemarks No remarks for the block.\n","categories":"","description":"Checks if a given value evaluates to `true`; if so the flow execution exits via the block's bottom port, otherwise it exits via the right port.","excerpt":"Checks if a given value evaluates to `true`; if so the flow execution exits via the block's bottom port, otherwise it exits via the right port.","ref":"/docs/reference/blocks/decisions/if/if-true-exit-bottom-block/","tags":"","title":"If True Exit Bottom"},{"body":"\rIf True Exit Right (Cortex.Blocks.Decisions.If.IfTrueExitRightBlock)\nDescription Checks if a given Value evaluates to true; if so the flow execution exits via the block’s right port (green tick), otherwise it exits via the bottom port (red cross).\nExamples Value is true This example will check if 1 + 1 == 2 evaluates to true or false.\nProperties Property Value Notes Value ($)Value, with value 1 + 1 == 2 ($)Value is a variable whose value evaluates to type Boolean Result 1 + 1 == 2 is true, so the flow execution exits via the block’s right port (green tick).\nValue is false This example will check if 1 + 1 == 1 evaluates to true or false.\nProperties Property Value Notes Value ($)Value, with value 1 + 1 == 1 ($)Value is a variable whose value evaluates to type Boolean Result 1 + 1 == 1 is false, so the flow execution exits via the block’s bottom port (red cross).\nProperties Value The Value to check evaluates to true or false.\nData Type Boolean Property Type Input Is Advanced false Default Editor Variable Default Value No value Exceptions No exceptions are thrown by the block.\nRemarks No remarks for the block.\n","categories":"","description":"Checks if a given value evaluates to `true`; if so the flow execution exits via the block's right port, otherwise it exits via the bottom port.","excerpt":"Checks if a given value evaluates to `true`; if so the flow execution exits via the block's right port, otherwise it exits via the bottom port.","ref":"/docs/reference/blocks/decisions/if/if-true-exit-right-block/","tags":"","title":"If True Exit Right"},{"body":"IFormatProvider (System.IFormatProvider)\nSummary Remarks Create a data type that implements IFormatProvider Convert IFormatProvider to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"The data type providing the contract that all data types that control formatting must implement.","excerpt":"The data type providing the contract that all data types that control formatting must implement.","ref":"/docs/reference/data-types/text/iformatprovider/","tags":"","title":"IFormatProvider"},{"body":"IList\u003cTItem\u003e (System.Collections.Generic.IList\u003cTItem\u003e)\nSummary Any data type representing a list of items that can iterated or looped over.\nTItem indicates the data type of the items contained in the list. Each TItem can be individually accessed by an index.\nList\u003cTItem\u003e is the most common example.\nCategory: Collections Name: IList\u003cTItem\u003e Full Name: System.Collections.Generic.IList\u003cTItem\u003e Alias: N/A Description: Any data type representing a list of items that can iterated or looped over. TItem indicates the data type of the items contained in the list. Each TItem can be individually accessed by an index. Size: Varies Default Value: null Can be used as: IEnumerable\u003cTItem\u003e, IEnumerable, Object, dynamic IEnumerable\u003cTItemBaseType\u003e (e.g. where IList\u003cTItem\u003e is IList\u003cInt32\u003e and IEnumerable\u003cTItemBaseType\u003e is IEnumerable\u003cObject\u003e as Object is a base type of Int32; this is called covariance) Can be cast to: N/A Remarks Most Common IList\u003cTItem\u003e Data Types Any of the following data types can be used where an IList\u003cTItem\u003e is required:\nList\u003cTItem\u003e Create an IList\u003cTItem\u003e For some of the ways that an IList\u003cTItem\u003e can be created, please see each of the IList\u003cTItem\u003e data types:\nList\u003cTItem\u003e Convert IList\u003cTItem\u003e to Text For some of the ways that an IList\u003cTItem\u003e can be converted to text, please see each of the IList\u003cTItem\u003e data types:\nList\u003cTItem\u003e Property Editor Support The Expression Editor is available for Input properties where the data type is IList\u003cTItem\u003e. The Literal Editor is not available for Input properties where the data type is IList\u003cTItem\u003e. The Variable Editor is available for InputOutput and Output properties where the data type is IList\u003cTItem\u003e. Known Limitations None\nSee Also Related Data Types IEnumerable IEnumerable\u003cTItem\u003e List\u003cTItem\u003e Related Concepts Working with Collections External Documentation System.Collections.Generic.IList\u003cTItem\u003e ","categories":"","description":"Any data type representing a list of items that can iterated or looped over. `TItem` indicates the data type of the items contained in the list. Each `TItem` can be individually accessed by an index. `List\u003cTItem\u003e` is the most common example.","excerpt":"Any data type representing a list of items that can iterated or looped over. `TItem` indicates the data type of the items contained in the list. Each `TItem` can be individually accessed by an index. …","ref":"/docs/reference/data-types/collections/ilist-1/","tags":"","title":"IList\u003cTItem\u003e"},{"body":"Indexes Summary TODO:\nOverview/summary What is an Index? How are they accessed? Indexes are zero based Difference between occurrence and indexes Accessing an item using Indexes Indexes can be used in the Expression Editor to access items in a Collection.\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with Indexes.","excerpt":"Information related to working with Indexes.","ref":"/docs/reference/concepts/working-with/collections/indexes/","tags":"","title":"Indexes"},{"body":"InfiniteLoopErrorCode (Cortex.DataTypes.Loops.InfiniteLoopErrorCode)\nSummary Values IncrementIsZero IncrementIsNegative IncrementIsPositive Remarks Create an InfiniteLoopErrorCode Convert InfiniteLoopErrorCode to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent an error code explaining the reason an `InfiniteLoopException` occurred.","excerpt":"Used to represent an error code explaining the reason an `InfiniteLoopException` occurred.","ref":"/docs/reference/data-types/loops/infinitelooperrorcode/","tags":"","title":"InfiniteLoopErrorCode"},{"body":"InfiniteLoopException (Cortex.Exceptions.Loops.InfiniteLoopException)\nDescription The exception thrown when an infinite loop can occur.\nThere are multiple reasons that this exception can be thrown:\nIncrement Is Zero Increment Is Negative Increment Is Positive Reasons Increment Is Zero A Category of \"Increment\"and an Error Code of 100 indicates that a zero increment value was provided.\nMessage Format The format of the Message can be one of the following:\nIf a zero value was provided and a negative value was expected \"The 'Increment' provided (0) causes an infinite loop. It must be a negative value. Please click the HelpLink for more information on how to fix this.\" If a zero value was provided and a positive value was expected \"The 'Increment' provided (0) causes an infinite loop. It must be a positive value. Please click the HelpLink for more information on how to fix this.\" How to fix Provide a negative or positive value for the increment as instructed by the Message.\nIncrement Is Negative A Category of \"Increment\"and an Error Code of 101 indicates that a negative increment value was provided when a positive value was required.\nMessage Format The format of the Message is as follows:\n\"The 'Increment' provided ({NegativeIncrement}) causes an infinite loop. It must be a positive value. Please click the HelpLink for more information on how to fix this.\" How to fix Provide a positive value for the increment as instructed by the Message.\nIncrement Is Positive A Category of \"Increment\"and an Error Code of 102 indicates that a positive increment value was provided when a negative value was required.\nMessage Format The format of the Message is as follows:\n\"The 'Increment' provided ({PositiveIncrement}) causes an infinite loop. It must be a negative value. Please click the HelpLink for more information on how to fix this.\" How to fix Provide a negative value for the increment as instructed by the Message.\nProperties Exception Type The type of the exception (i.e. InfiniteLoopException).\nData Type String Message The exception message, providing information about the exception that occurred.\nData Type String Category The category of the exception, which is used to categorise an exception if there are multiple reasons that the exception can occur.\nFor InfiniteLoopException the only category is Increment.\nData Type String Error Code The error code for the exception, which is used to indicate the reason that the exception occurred, if there are multiple reasons that the exception can occur.\nFor InfiniteLoopException there are three error codes:\n100 - indicates the increment is zero, but should be either negative or positive 101 - indicates the increment is negative, but should be positive 102 - indicates the increment is positive, but should be negative Data Type InfiniteLoopErrorCode Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations None\nSee Also Related Data Types String InfiniteLoopErrorCode Related Concepts Exceptions Working with Loops Related Blocks For Loop External Documentation None\n","categories":"","description":"The exception thrown when an infinite loop can occur.","excerpt":"The exception thrown when an infinite loop can occur.","ref":"/docs/reference/exceptions/loops/infinite-loop-exception/","tags":"","title":"InfiniteLoopException"},{"body":"InputVariables (Cortex.DataTypes.Flows.InputVariables)\nSummary InputVariables are used to pass data into a called flow when using the Run Flow block.\nCategory: Flows Name: InputVariables Full Name: Cortex.DataTypes.Flows.InputVariables Alias: N/A Description: A collection of flow Input Variables. Default Value: null Can be used as: Structure, IDictionary\u003cTKey, TItem\u003e, IEnumerable, Object, dynamic IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e (e.g. where InputVariables is IDictionary\u003cString, Object\u003e and IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e is IEnumerable\u003cKeyValuePair\u003cString, Object\u003e\u003e) Can be cast to: N/A Remarks Create an InputVariables The following table shows some of the ways that an InputVariables can be created.\nMethod Example Result Editor Support Notes Use an InputVariables expression new InputVariables() {} Expression InputVariables containing zero items new InputVariables() { { \"Variable1\", true } } { \"Variable1\": true } Expression InputVariables containing one Boolean item with a String key new InputVariables() { { \"Variable1\", true }, { \"Variable2\", 100 } } { \"Variable1\": true, \"Variable2\": 100 } Expression InputVariables containing Boolean and Int32 items with String keys An InputVariables can also be created using the Literal Editor when using the Run Flow block. For more information see the Inputs Property of the Run Flow block.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is InputVariables. The Literal Editor is available for Input properties where the data type is InputVariables. The Variable Editor is available for Input, InputOutput and Output properties where the data type is InputVariables. Known limitations None\nSee Also Related Data Types IEnumerable IEnumerable\u003cTItem\u003e IDictionary\u003cTKey, TItem\u003e Structure Related Concepts Flows Variables Input Variables External Documentation None\n","categories":"","description":"A collection of flow Input Variables.","excerpt":"A collection of flow Input Variables.","ref":"/docs/reference/data-types/flows/inputvariables/","tags":"","title":"InputVariables"},{"body":"\rCortex Innovation can be deployed on-premise on its own or added to an existing 7.2 installation.\n","categories":"","description":"Information about installing Cortex Innovation to virtual machines or physical servers on-premise.","excerpt":"Information about installing Cortex Innovation to virtual machines or physical servers on-premise.","ref":"/docs/getting-started/on-premise/","tags":"","title":"Install On-Premise"},{"body":"Installation Troubleshooting issues during installation Root certificate verification failed as no root certificate has been specified If the installation fails with Root certificate verification failed as no root certificate has been specified. it means that Windows has not got the trusted root installed for the provided X.509 certificate. This can be rectified by providing the path to a .pem file containing the root certificate in the pemRootCertificatePath property for each certificate in the serverCertificates and/or adminCertificates section of the configuration file. After adding this, the installation script can be re-run. The following steps can be taken to create a .pem file and re-run the installation (these instructions may differ slightly depending on the Certificate Authority):\nIn order to find out the issuer of the certificate, if not already known, the following script can be used, replacing the password for the pfx file and certificate path as necessary:\n$p = ConvertTo-SecureString -String \"pfxPassword\" -AsPlainText -Force $c = Get-PfxData -Password $p -FilePath \"C:\\Certificates\\serverCert.pfx\" $c | Format-List This will give a list of Other Certificates and End Certificates contained in the .pfx file. The issuer can be found in the Issuer property of one of the Other Certificates. If there are more than one, it will be the one that does not appear as a Subject in any of the other items.\nE.g. For a “Let’s Encrypt” certificate this will give the following results:\nOtherCertificates : {[Subject] CN=Let's Encrypt Authority X3, O=Let's Encrypt, C=US [Issuer] CN=DST Root CA X3, O=Digital Signature Trust Co. [Serial Number] 0A0141420000015385736A0B85ECA708 [Not Before] 17/03/2016 16:40:46 [Not After] 17/03/2021 16:40:46 [Thumbprint] E6A3B45B062D509B3382282D196EFE97D5956CCB } EndEntityCertificates : {[Subject] CN=*.domain.com [Issuer] CN=Let's Encrypt Authority X3, O=Let's Encrypt, C=US [Serial Number] 03D3B2E5E7D75175C25B250305650ABE849A [Not Before] 20/12/2019 16:27:36 [Not After] 19/03/2020 16:27:36 [Thumbprint] D61356405B8D4AA11C29AF3D20F2D834C1A3039F } In this case, the root certificate is DST Root CA X3.\nIn a search engine, search for the CN of the issuer and one of the results should lead to a download of a .pem file or to a page with the certificate on it, which can then be copied and saved into a file with a .pem extension. Often, searching the issuer of the EndEntityCertificate, in the above case Let’s Encrypt, will also work.\nE.g. for Let’s Encrypt, the results of the search for DST Root CA X3 leads to https://www.identrust.com/dst-root-ca-x3 which provides the following text to be saved as a .pem file:\n-----BEGIN CERTIFICATE----- MIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/ MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT DkRTVCBSb290IENBIFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVow PzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD Ew5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB AN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmTrE4O rz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEq OLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9b xiqKqy69cK3FCxolkHRyxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw 7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaD aeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNV HQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQMA0GCSqG SIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69 ikugdB/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXr AvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZz R8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5 JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06XyxV3bqxbYo Ob8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ -----END CERTIFICATE----- After saving the .pem file, transfer it to the same directory as other installation certificates.\nModify the installation configuration file to include the .pem file as the pemRootCertificatePath in the serverCertificates like so:\n\"serverCertificates\": { \"serverCert\": { \"pfxCertificatePath\": \"C:\\\\Certificates\\\\wildCardCert.pfx\", \"pfxCertificatePassword\": \"pfxPassword\", \"pemRootCertificatePath\": \"C:\\\\Certificates\\\\rootCert.pem\" } } If a load balancer is being used (not single server), modify the installation configuration file to include the .pem file as the pemRootCertificatePath in the adminCertificates like so:\n\"adminCertificates\": { \"loadBalancerCert\": { \"pfxCertificatePath\": \"C:\\\\Certificates\\\\lbCert.pfx\", \"pfxCertificatePassword\": \"pfxPassword\", \"pemRootCertificatePath\": \"C:\\\\Certificates\\\\lbRootCert.pem\" } } Run the installation script again.\nRabbitMQ commands not succeeding When running the installation, if you get errors similar to the following:\nRetry rabbitmqctl start_app --erlang-cookie $ErlangCookie --longnames . Attempt 1 Retry rabbitmqctl start_app --erlang-cookie $ErlangCookie --longnames . Attempt 2 Retry rabbitmqctl start_app --erlang-cookie $ErlangCookie --longnames . Attempt ... Retry rabbitmqctl start_app --erlang-cookie $ErlangCookie --longnames . Attempt 20 It means there is probably something wrong with the certificate verification with RabbitMQ. Please report issues like this to Cortex Service Portal.\nTo work around this error, either uninstall the platform and reinstall it using a different certificate, otherwise disable peer-to-peer verification in RabbitMQ by carrying out the following steps:\nUninstall the platform by taking the following steps:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Uninstall the platform by running the following command for your architecture:\nMultiple Servers With HA\rSingle Server Without HA\r.\\Cortex.Innovation.Uninstall.ps1 .\\Cortex.Innovation.Uninstall.ps1 -SkipLoadBalancer A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK. Wait for the command to finish. In the Cortex Innovation 2022.9 - App Server Install Scripts folder, navigate to Resources.\nBackup the file RabbitMqInterNodePublicTemplate.config and then open it with a text editor.\nReplace both instances of the text verify_peer with the text verify_none.\nChange the value of both occurrences of fail_if_no_peer_cert to false so that they resemble the following:\n{fail_if_no_peer_cert, false}, Save and close RabbitMqInterNodePublicTemplate.config.\nRe-run the installation script.\nTroubleshooting issues after installation Cortex Innovation features not visible in Cortex Gateway Check that the Feature Flags Guid in the CortexGateway.SetParameters.xml file used for installing Cortex Gateway is correct. If it is not, update it and reinstall Cortex Gateway or update the value in the web.config file and restart the website. If the value is correct, please contact Cortex Service Portal for assistance.\nCortex Innovation blocks not visible in Cortex Studio Check that the Dot NET flow debugger Endpoint URL in the CortexGateway.SetParameters.xml file used for installing Cortex Gateway is correct pay particular attention to the protocol - it should usually be https. If it is not, update it and reinstall Cortex Gateway or update the value in the web.config file and restart the website.\nEnsure that the Flow Debugger Service is running. Open IIS, click on Application Poolsand ensure there is a debugger application pool which is showing that it is associated with 1 application. If not, go back to the Cortex Flow Debugger Service installation steps and ensure that all steps were followed correctly.\nIf no misconfiguration can be found, the service log files may contain more information. These can be found on the Web Application Server at:\n%ProgramData%\\Cortex\\Cortex Flow Debugger C:\\temp\\Cortex.Gateway.log Restart the Cortex website. Open IIS, In the Connection pane, browse to Sites. Select the Cortex website and click Restart in the Manage Website pane.\nIf the issues cannot be resolved, please contact Cortex Service Portal for assistance.\nCannot publish a package Check that the Service Fabric Api Gateway Endpoint, Service Fabric Using Self Signed Certificates, Service Fabric ApiGateway Basic Auth Username and Service Fabric ApiGateway Basic Auth Password in the CortexGateway.SetParameters.xml file used for installing Cortex Gateway are correct. If any of them are not, update them and reinstall Cortex Gateway or update the value in the “web.config” file and restart the website. If the value is correct, please contact Cortex Service Portal for assistance.\nEnsure that the Application Services are healthy by following these steps:\nLog on to one of the Application Servers and open a web browser.\nNavigate to https://app-server.domain.com:9080/Explorer, where app-server.domain.com is the fully qualified domain name of any Application Server. Replace 9080 with new httpGatewayEndpointPort value if it was changed during configuration.\nIf page access is denied it may be necessary to import the server certificate used in installation to the Current User certificate store (usually achieved by double clicking on it and following the wizard). If using self-signed certificates, the certificate can be retrieved by using the Manage Computer Certificates tool in Windows to export the CortexServerCertificate from the Personal store and then importing it to the Current User store by double-clicking on it and following the wizard. The browser may need to be restarted before the site can be accessed\nThe screen should resemble that in the following figure, all services should have Health State = OK and Status = Active. All instances below the service should have Health State = OK and Status = Ready.\nHealthy Service Fabric Explorer\rIf any warning triangles appear, wait for 5 minutes or so as the cluster may still be starting up. If the cluster looks OK, ignore the rest of this step. If the warnings persist or anything on the screen goes red, use the filter buttons to find the individual elements which have errors or warnings. Warnings should not be ignored as they can indicate that the service can’t start but is still in the retry phase. If no useful message can be seen here, the service log files may contain more information.\nIf no solution can be found, please contact Cortex Service Portal for assistance.\nManaging RabbitMQ There may be times when the logs provided by the Cortex Services and the errors displayed in Service Fabric Explorer are not enough to debug an issue that is occurring on the system. This can be due to RabbitMQ being a state where it can’t send messages between services.\nTo check that RabbitMQ is working as expected, remote desktop to an Application Server and navigate to https://app-server1.domain.com:15671, replacing app-server1.domain.com with the FQDN of one of the Application Servers. Sign in with username ‘administrator’ and the RabbitMQ password provided during the Application Server installation. The following should be displayed in the overview tab for a healthy cluster:\nHealthy RabbitMQ status.\rNote\rThe username and password are not secure, but the RabbitMQ manager will only allow you to connect from localhost so it is not accessible to anyone who does not have remote desktop access.\rIf there are any unhealthy nodes (red) you may need to restart the RabbitMQ Windows service on each of the nodes that is erroring. These can be restarted in any order, but they must be restarted one at a time; wait for the node in the RabbitMQ explorer to be green before restarting the next one (you may need to refresh the browser).\nService Fabric Explorer displays errored services with RabbitMQ Broker Unreachable Exceptions If, when checking Service Fabric Explorer, all services are showing as erroring and the details are displaying a message similar to the following:\nRabbitMQ.Client.Exceptions.BrokerUnreachableException (-2146232800) None of the specified endpoints were reachable There may be due to an incompatibility between the version of OpenSSL used and your processor. From Intel’s website: “OpenSSL 1.0.2 beta (Jun 2014) to OpenSSL 1.0.2k (Jan 2017) contain bugs that either cause a crash or bad SHA (Secure Hash Algorithm) values on processors with the SHA extensions. Both bugs were fixed years ago; however, any application that uses the old version directly, or as one of its dependencies, will fail”*\nTo verify that this is the problem, open Event Viewer and look in Windows -\u003e Application. If this problem has occurred there will be some errors in the event viewer which contain the following:\nFaulting application name: erl.exe, version: 0.0.0.0, time stamp: 0x5d80b978 Faulting module name: crypto.dll, version: 0.0.0.0, time stamp: 0x5d80baab A workaround for this is provided by Intel.\nUninstall the platform by taking the following steps:\nOpen a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Uninstall the platform by running the following command for your architecture:\nMultiple Servers With HA\rSingle Server Without HA\r.\\Cortex.Innovation.Uninstall.ps1 .\\Cortex.Innovation.Uninstall.ps1 -SkipLoadBalancer A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on all servers (Application and Load Balancer) and press OK. Wait for the command to finish. Add a system environment variable, provided by Intel, to each Application Server by taking the following steps:\nRemote desktop to one of the Application Servers. Right-click on the Start Menu and select System. Click Advanced system settings to open the System Properties dialog. Click Environment Variables.... Under System variables, click New... to open the New System Variable dialog. Set the Variable name to OPENSSL_ia32cap and the Variable value to :~0x20000000. Make sure to include the colon at the start. Click OK. Repeat these steps for any other Application Servers. Run the Application Servers installation script again.\nService Fabric Explorer displays certificate is about to expire warning If Service Fabric certificates are going to expire in fewer than 30 days, a warning is displayed as follows:\nService Fabric Explorer Certificate Expiring\rCertificate expiration: thumbprint = {thumbprint}, expiration {date} remaining lifetime is {time} please refresh ahead of time to avoid catastrophic failure.\nIf this occurs on your server it is important to update your certificates as soon as possible using Rollover Certificates.\n","categories":"","description":"Information on troubleshooting Cortex Innovation installations.\n","excerpt":"Information on troubleshooting Cortex Innovation installations.\n","ref":"/docs/reference/troubleshooting/installation/","tags":"","title":"Installation"},{"body":"Int16 (System.Int16)\nSummary The Int16 data type is used to represent a whole number from -32,768 through 32,767.\nCategory: Numbers Name: Int16 Full Name: System.Int16 Alias: short Description: A whole number from -32,768 through 32,767 Size: 2 bytes Default Value: 0 Can be used as: Int16, Int32, Int64, Single, Double, Object, dynamic Can be cast to: N/A Remarks Create an Int16 The following table shows some of the ways that an Int16 can be created.\nMethod Example Result Editor Support Notes Use an Int16 expression (Int16)(1 + 1) 2 Expression Add (System.Int16)(1 - 1) 0 Expression Subtract (short)(1 * 1) 1 Expression Multiply (short)(1 / 1) 1 Expression Divide Int16.MaxValue 32767 Expression Maximum value of an Int16. See Int16.MaxValue Int16.MinValue -32768 Expression Minimum value of an Int16. See Int16.MinValue Int16.Parse(\"1\") 1 Expression Attempts to parse text and convert it to an Int16 value. See Int16.Parse Convert.ToInt16(\"1\") 1 Expression Attempts to convert text to an Int16 value. See Convert.ToInt16 Convert Int16 to Text The following table shows some of the ways that an Int16 can be converted to text.\nMethod Example Result Editor Support Notes Use ToString ((Int16)1).ToString() \"1\" Expression See Int16.ToString ($)Int16Variable.ToString() where ($)Int16Variable has an Int16 value of 1 \"1\" Expression See Int16.ToString Use Convert.ToString Convert.ToString((Int16)1) \"1\" Expression See Convert.ToString Convert.ToString(($)Int16Variable) where ($)Int16Variable has an Int16 value of 1 \"1\" Expression See Convert.ToString Use Convert Object To Text block where Object property has an Int16 value of 1 \"1\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has an Int16 value of 1 \"1\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is Int16. The Literal Editor is available for Input properties where the data type is Int16. Expression syntax is not supported within the Literal Editor for the Int16 data type. The Variable Editor is available for InputOutput and Output properties where the data type is Int16. Known Limitations None\nSee Also Related Data Types Int32 Int64 Single Double Related Concepts Working with Numbers External Documentation System.Int16 ","categories":"","description":"Used to represent a whole number from `-32,768` through `32767`.","excerpt":"Used to represent a whole number from `-32,768` through `32767`.","ref":"/docs/reference/data-types/numbers/int16/","tags":"","title":"Int16"},{"body":"Int32 (System.Int32)\nSummary The Int32 data type is used to represent a whole number from -2,147,483,648 through 2,147,483,647.\nCategory: Numbers Name: Int32 Full Name: System.Int32 Alias: int Description: A whole number from -2,147,483,648 through 2,147,483,647 Size: 4 bytes Default Value: 0 Can be used as: Int32, Int64, Single, Double, Object, dynamic Can be cast to: Int16, as long as value is from -32,768 through 32,767 (e.g. (Int16)32767 or (System.Int16)32767 or (short)32767) Remarks Create an Int32 The following table shows some of the ways that an Int32 can be created.\nMethod Example Result Editor Support Notes Declare an Int32 literal 0 0 Literal, Expression Zero 1 1 Literal, Expression Positive -1 -1 Literal, Expression Negative Use an Int32 expression 1 + 1 2 Expression Add 1 - 1 0 Expression Subtract 1 * 1 1 Expression Multiply 1 / 1 1 Expression Divide Int32.MaxValue 2147483647 Expression Maximum value of an Int32. See Int32.MaxValue Int32.MinValue -2147483648 Expression Minimum value of an Int32. See Int32.MinValue Int32.Parse(\"1\") 1 Expression Attempts to parse text and convert it to an Int32 value. See Int32.Parse Convert.ToInt32(\"1\") 1 Expression Attempts to convert text to an Int32 value. See Convert.ToInt32 Please see Instantiating an Int32 Value for further information.\nConvert Int32 to Text The following table shows some of the ways that an Int32 can be converted to text.\nMethod Example Result Editor Support Notes Use ToString 1.ToString() \"1\" Expression See Int32.ToString ($)Int32Variable.ToString() where ($)Int32Variable has a value of 1 \"1\" Expression See Int32.ToString Use Convert.ToString Convert.ToString(1) \"1\" Expression See Convert.ToString Convert.ToString(($)Int32Variable) where ($)Int32Variable has a value of 1 \"1\" Expression See Convert.ToString Use Convert Object To Text block where Object property has a value of 1 \"1\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a value of 1 \"1\" N/A See Convert Object To Json Please see Representing an Int32 as a String for further information.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is Int32. The Literal Editor is available for Input properties where the data type is Int32. Expression syntax is not supported within the Literal Editor for the Int32 data type. The Variable Editor is available for InputOutput and Output properties where the data type is Int32. Known Limitations None\nSee Also Related Data Types Int16 Int64 Single Double Related Concepts Working with Numbers External Documentation System.Int32 ","categories":"","description":"Used to represent a whole number from `-2,147,483,648` through `2,147,483,647`.","excerpt":"Used to represent a whole number from `-2,147,483,648` through `2,147,483,647`.","ref":"/docs/reference/data-types/numbers/int32/","tags":"","title":"Int32"},{"body":"Int64 (System.Int64)\nSummary The Int64 data type is used to represent a whole number from -9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.\nCategory: Numbers Name: Int64 Full Name: System.Int64 Alias: long Description: A whole number from -9,223,372,036,854,775,808 through 9,223,372,036,854,775,807 Size: 8 bytes Default Value: 0 Can be used as: Int64, Single, Double, Object, dynamic Can be cast to: Int16, as long as value is from -32,768 through 32,767 (e.g. (Int16)32767 or (System.Int16)32767 or (short)32767) Int32, as long as value is from -2,147,483,648 through 2,147,483,647 (e.g. (Int32)2147483647 or (System.Int32)2147483647 or (int)2147483647) Remarks Create an Int64 The following table shows some of the ways that an Int64 can be created.\nMethod Example Result Editor Support Notes Declare an Int64 literal 9223372036854775807 9223372036854775807 Literal, Expression Positive, where value is greater than 2,147,483,647. If it is between 0 and 2,147,483,647 it will only be an Int64 if the property’s data type is also Int64, otherwise it will be an Int32. -9223372036854775808 -9223372036854775808 Literal, Expression Negative, where value is less than -2,147,483,648. If it is between -2,147,483,648 and 0 it will only be an Int64 if the property’s data type is also Int64, otherwise it will be an Int32. Use an Int64 expression (Int64)(1 + 1) 2 Expression Add (System.Int64)(1 - 1) 0 Expression Subtract (long)(1 * 1) 1 Expression Multiply (long)(1 / 1) 1 Expression Divide Int64.MaxValue 9223372036854775807 Expression Maximum value of an Int64. See Int64.MaxValue Int64.MinValue -9223372036854775808 Expression Minimum value of an Int64. See Int64.MinValue Int64.Parse(\"1\") 1 Expression Attempts to parse text and convert it to an Int64 value. See Int64.Parse Convert.ToInt64(\"1\") 1 Expression Attempts to convert text to an Int64 value. See Convert.ToInt64 Please see Instantiating an Int64 Value for further information.\nConvert Int64 to Text The following table shows some of the ways that an Int64 can be converted to text.\nMethod Example Result Editor Support Notes Use ToString ((Int64)1).ToString() \"1\" Expression See Int64.ToString ($)Int64Variable.ToString() where ($)Int64Variable has an Int64 value of 1 \"1\" Expression See Int64.ToString Use Convert.ToString Convert.ToString((Int64)1) \"1\" Expression See Convert.ToString Convert.ToString(($)Int64Variable) where ($)Int64Variable has an Int64 value of 1 \"1\" Expression See Convert.ToString Use Convert Object To Text block where Object property has an Int64 value of 1 \"1\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has an Int64 value of 1 \"1\" N/A See Convert Object To Json Please see Representing an Int64 as a String for further information.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is Int64. The Literal Editor is available for Input properties where the data type is Int64. Expression syntax is not supported within the Literal Editor for the Int64 data type. The Variable Editor is available for InputOutput and Output properties where the data type is Int64. Known Limitations None\nSee Also Related Data Types Int16 Int32 Single Double Related Concepts Working with Numbers External Documentation System.Int64 ","categories":"","description":"Used to represent a whole number from `-9,223,372,036,854,775,808` through `9,223,372,036,854,775,807`.","excerpt":"Used to represent a whole number from `-9,223,372,036,854,775,808` through `9,223,372,036,854,775,807`.","ref":"/docs/reference/data-types/numbers/int64/","tags":"","title":"Int64"},{"body":"InvalidBlockTimeoutException (Cortex.Exceptions.Flows.Blocks.InvalidBlockTimeoutException)\nDescription TODO\nReasons Block Timeout Reached TODO\nMessage Format TODO\nThe format of the Message is as follows:\n\"TODO: \\r\\nPlease click the HelpLink for more information on how to fix this.\" How to fix TODO\nEnsure the action that the block is taking is likely to complete within the given TimePeriod.\nProperties TODO\nException Type The type of the exception (i.e. InvalidBlockTimeoutException).\nData Type String Message TODO\nThe exception message, providing information about the exception that occurred.\nData Type String Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations TODO\nIf a block is at a point that cannot cancel, then it will cancel at the next available opportunity.\nSee Also TODO\nRelated Data Types TODO\nString TimePeriod Related Concepts TODO\nBlocks Block Properties Exceptions Related Blocks TODO: Update list\nAll Blocks except:\nFlows Start Flow End Flow Schedules Wait For Duration Workspaces Start Workspace End Workspace External Documentation TODO\n","categories":"","description":"The exception thrown when a block timeout is invalid.","excerpt":"The exception thrown when a block timeout is invalid.","ref":"/docs/reference/exceptions/flows/blocks/invalid-block-timeout-exception/","tags":"","title":"InvalidBlockTimeoutException"},{"body":"InvalidConnectionStringException (Cortex.Exceptions.Data.InvalidConnectionStringException)\nException thrown when an invalid connection string is used.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" TODO: This is an example of how we can do exceptions with categories and error codes\nCategory Error Code Notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials.AccessTokenUri 300 How to fix TODO:\n301 How to fix TODO:\n302 How to fix TODO:\n","categories":"","description":"Exception thrown when an invalid connection string is used.","excerpt":"Exception thrown when an invalid connection string is used.","ref":"/docs/reference/exceptions/data/invalidconnectionstringexception/","tags":"","title":"InvalidConnectionStringException"},{"body":"InvalidFolderNameException (Cortex.Exceptions.FilesAndFolders.InvalidFolderNameException)\nThe exception thrown when specifying an invalid folder name.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\n","categories":"","description":"The exception thrown when a folder name is invalid.","excerpt":"The exception thrown when a folder name is invalid.","ref":"/docs/reference/exceptions/files-and-folders/invalidfoldernameexception/","tags":"","title":"InvalidFolderNameException"},{"body":"InvalidInputVariablesException (Cortex.Exceptions.Flows.Execution.InvalidInputVariablesException)\nDescription The exception thrown when trying to run a flow with invalid Input Variables.\nReasons Missing Input Variables This exception is thrown when a flow is run and there are missing Input Variables; any missing variables will be shown in the InvalidVariableErrors property.\nMessage Format The format of the Message is as follows:\n\"Couldn't initialize variable store because of invalid input variables.\" How to fix Add the variables referenced in InvalidVariableErrors.\nExtra Input Variables This exception is thrown when a flow is run and extra Input Variables have been provided; any extra variables will be shown in the InvalidVariableErrors property.\nMessage Format The format of the Message is as follows:\n\"Couldn't initialize variable store because of invalid input variables.\" How to fix Remove the variables referenced in InvalidVariableErrors.\nInput Variables of an Invalid Type This exception is thrown when a flow is run and there are Input Variables that are of an invalid type; any variables with an invalid type will be shown in the InvalidVariableErrors property.\nMessage Format The format of the Message is as follows:\n\"Couldn't initialize variable store because of invalid input variables.\" How to fix Ensure the value provided for the variables referenced in InvalidVariableErrors is either the same type as, or can be implicitly cast to the type defined in the default value for that Input Variable.\nProperties Exception Type The type of the exception (i.e. InvalidInputVariablesException).\nData Type String Message The exception message, providing information about the exception that occurred.\nData Type String InvalidVariableErrors A List\u003cInputVariableError\u003e containing each invalid variable passed into the flow.\nData Type List\u003cInputVariableError\u003e Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations None\nSee Also Related Data Types None\nRelated Concepts Flows Variables Exceptions Related Blocks Flows Run Flow External Documentation None\n","categories":"","description":"The exception thrown when trying to run a flow with invalid input variables.","excerpt":"The exception thrown when trying to run a flow with invalid input variables.","ref":"/docs/reference/exceptions/flows/execution/invalidinputvariablesexception/","tags":"","title":"InvalidInputVariablesException"},{"body":"InvalidPathException (Cortex.Exceptions.FilesAndFolders.InvalidPathException)\nThe exception thrown when specifying an invalid file or folder path.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\n","categories":"","description":"The exception thrown when a file or folder path is invalid.","excerpt":"The exception thrown when a file or folder path is invalid.","ref":"/docs/reference/exceptions/files-and-folders/invalidpathexception/","tags":"","title":"InvalidPathException"},{"body":"InvalidPropertyValueException (Cortex.Exceptions.Flows.Blocks.InvalidPropertyValueException)\nDescription The exception thrown when a property is provided with an invalid value.\nThis exception wraps the InnerException that occurred when the value provided for the property was used.\nReasons Value Is Invalid An invalid value was provided for the property with the specified PropertyId.\nMessage Format The format of the Message is as follows:\n\"The value of the property could not be evaluated.\" How to fix Provide a valid value for the property with the specified PropertyId, as instructed by the Message.\nMore information on why the value is invalid, or instruction on how to provide a valid value, may be present in the message of the InnerException.\nProperties Exception Type The type of the exception (i.e. InvalidPropertyValueException).\nData Type String Message The exception message, providing information about the exception that occurred.\nFor this exception, the message will always be the same. More information on why the value is invalid, or instruction on how to provide a valid value, may be present in the message of the InnerException.\nData Type String PropertyId The Id of the property that has been provided an invalid value.\nData Type Guid InnerException The exception that occurred when the value provided for the property was used.\nThis may contain more information on why the value is invalid, or instruction on how to provide a valid value in its message.\nData Type Exception Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations Currently, only the PropertyId has been included in the exception. In future, we will look to include the name and Id of the block, the name and value of the property, as well as allowing the exception to contain a link to take you directly to the offending value.\nSee Also Related Data Types String Guid Exception Related Concepts Blocks Block Properties Exceptions Related Blocks Dictionaries Add Item With Key Contains Item With Key And Value Contains Item With Value Get Count Of Items With Value Remove Item With Value Remove Items With Value Set All Items Set Item With Key Set Item With Value Set Items With Key Set Items With Value Files \u0026 Folders Read All Lines Read All Text Search File Search Files Write All Lines Write All Text Lists Add Item At Beginning Add Item At End Add Item At Index Contains Item With Value Get Count Of Items With Value Get Index Of Item With Value Get Indexes Of Items With Value Remove Item With Value Remove Items With Value Set Item At Beginning Set Item At End Set Item At Index Set Item With Value Set Items With Value Loops For Loop Text Convert To Camel Case Convert To Lower Case Convert To Pascal Case Convert To Title Case Convert To Upper Case External Documentation None\n","categories":"","description":"The exception thrown when a property is provided with an invalid value.","excerpt":"The exception thrown when a property is provided with an invalid value.","ref":"/docs/reference/exceptions/flows/blocks/invalid-property-value-exception/","tags":"","title":"InvalidPropertyValueException"},{"body":"","categories":"","description":"Check if a date time is equal to another date time, before it, after it, or between two date times.","excerpt":"Check if a date time is equal to another date time, before it, after it, or between two date times.","ref":"/docs/reference/blocks/date-and-time/is-date-time/","tags":"","title":"Is Date Time"},{"body":"\rIs Date Time After (Cortex.Blocks.DateAndTime.IsDateTime.IsDateTimeAfterBlock)\nDescription Checks if a Date Time is after a given Date Time To Compare.\nExamples Date Time is after Date Time To Compare This example will check if 2022-01-01T00:00:00+00:00 is after 2021-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is After ($)DateTimeIsAfter, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2022-01-01T00:00:00+00:00 is after 2021-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsAfter being updated to the following:\ntrue Date Time is before Date Time To Compare This example will check if 2021-01-01T00:00:00+00:00 is after 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is After ($)DateTimeIsAfter, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2021-01-01T00:00:00+00:00 is after 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsAfter being updated to the following:\nfalse Date Time is equal to Date Time To Compare This example will check if 2022-01-01T00:00:00+00:00 is after 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is After ($)DateTimeIsAfter, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2022-01-01T00:00:00+00:00 is after 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsAfter being updated to the following:\nfalse Properties Date Time The Date Time to check is after Date Time To Compare.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Date Time To Compare The Date Time to check if Date Time is after.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTimeToCompare with no value Date Time Is After The result of the is after check.\nIf Date Time is after Date Time To Compare, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)DateTimeIsAfter with no value Exceptions No exceptions are thrown by the block.\nRemarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\n","categories":"","description":"Checks if a Date Time is after another Date Time.","excerpt":"Checks if a Date Time is after another Date Time.","ref":"/docs/reference/blocks/date-and-time/is-date-time/is-date-time-after-block/","tags":"","title":"Is Date Time After"},{"body":"\rIs Date Time Before (Cortex.Blocks.DateAndTime.IsDateTime.IsDateTimeBeforeBlock)\nDescription Checks if a Date Time is before a given Date Time To Compare.\nExamples Date Time is before Date Time To Compare This example will check if 2021-01-01T00:00:00+00:00 is before 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is Before ($)DateTimeIsBefore, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2021-01-01T00:00:00+00:00 is before 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsBefore being updated to the following:\ntrue Date Time is after Date Time To Compare This example will check if 2022-01-01T00:00:00+00:00 is before 2021-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is Before ($)DateTimeIsBefore, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2022-01-01T00:00:00+00:00 is before 2021-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsBefore being updated to the following:\nfalse Date Time is equal to Date Time To Compare This example will check if 2022-01-01T00:00:00+00:00 is before 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is Before ($)DateTimeIsBefore, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2022-01-01T00:00:00+00:00 is before 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsBefore being updated to the following:\nfalse Properties Date Time The Date Time to check is before Date Time To Compare.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Date Time To Compare The Date Time to check if Date Time is before.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTimeToCompare with no value Date Time Is Before The result of the is before check.\nIf Date Time is before Date Time To Compare, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)DateTimeIsBefore with no value Exceptions No exceptions are thrown by the block.\nRemarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\n","categories":"","description":"Checks if a Date Time is before another Date Time.","excerpt":"Checks if a Date Time is before another Date Time.","ref":"/docs/reference/blocks/date-and-time/is-date-time/is-date-time-before-block/","tags":"","title":"Is Date Time Before"},{"body":"\rIs Date Time Between (Cortex.Blocks.DateAndTime.IsDateTime.IsDateTimeBetweenBlock)\nDescription Checks if a Date Time is between the specified Start Date Time and End Date Time.\nExamples Date Time is between Start Date Time and End Date Time This example will check if 2021-06-01T00:00:00+00:00 is between 2021-01-01T00:00:00+00:00 and 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-06-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Start Date Time ($)StartDateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)StartDateTime is a variable of type DateTimeOffset End Date Time ($)EndDateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)EndDateTime is a variable of type DateTimeOffset Date Time Is Between ($)DateTimeIsBetween, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2021-06-01T00:00:00+00:00 is between 2021-01-01T00:00:00+00:00 and 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsBetween being updated to the following:\ntrue Date Time is not between Start Date Time and End Date Time This example will check if 2020-01-01T00:00:00+00:00 is between 2021-01-01T00:00:00+00:00 and 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2020-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Start Date Time ($)StartDateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)StartDateTime is a variable of type DateTimeOffset End Date Time ($)EndDateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)EndDateTime is a variable of type DateTimeOffset Date Time Is Between ($)DateTimeIsBetween, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2020-01-01T00:00:00+00:00 is between 2021-01-01T00:00:00+00:00 and 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsBetween being updated to the following:\nfalse Properties Date Time The Date Time to check is between Start Date Time and End Date Time.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Start Date Time The Start Date Time to check against. This is inclusive, which means if Date Time is equal to it, it will be considered between.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)StartDateTime no value End Date Time The End Date Time to check against. This is inclusive, which means if Date Time is equal to it, it will be considered between.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)EndDateTime with no value Date Time Is Between The result of the is between check.\nIf Date Time is between (and including) the Start Date Time and End Date Time, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)DateTimeIsBetween with no value Exceptions No exceptions are thrown by the block.\nRemarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\nStart Date Time and End Date Time are inclusive The Start Date Time and End Date Time properties are both inclusive, which means if Date Time is equal to either of them, it will be considered between.\nStart Date Time greater than End Date Time Start Date Time can be greater than End Date Time; as long as Date Time is between or equal to either of them the variable specified for Date Time Is Between will be set to true, otherwise it will be set to false.\n","categories":"","description":"Checks if a Date Time is between two Date Times.","excerpt":"Checks if a Date Time is between two Date Times.","ref":"/docs/reference/blocks/date-and-time/is-date-time/is-date-time-between-block/","tags":"","title":"Is Date Time Between"},{"body":"\rIs Date Time Equal (Cortex.Blocks.DateAndTime.IsDateTime.IsDateTimeEqualBlock)\nDescription Checks if a Date Time is equal to a given Date Time To Compare.\nExamples Date Time is equal to Date Time To Compare This example will check if 2022-01-01T00:00:00+00:00 is equal to 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is Equal ($)DateTimeIsEqual, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2022-01-01T00:00:00+00:00 is equal 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsEqual being updated to the following:\ntrue Date Time is after Date Time To Compare This example will check if 2022-01-01T00:00:00+00:00 is equal to 2021-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is Equal ($)DateTimeIsEqual, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2022-01-01T00:00:00+00:00 is equal to 2021-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsEqual being updated to the following:\nfalse Date Time is before Date Time To Compare This example will check if 2021-01-01T00:00:00+00:00 is equal to 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Date Time To Compare ($)DateTimeToCompare, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTimeToCompare is a variable of type DateTimeOffset Date Time Is Equal ($)DateTimeIsEqual, with no value ($)DateTime is a variable that will be set to a Boolean value Result Checking if 2021-01-01T00:00:00+00:00 is equal to 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTimeIsEqual being updated to the following:\nfalse Properties Date Time The Date Time to check is equal to Date Time To Compare.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Date Time To Compare The Date Time to check if Date Time is equal to.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type Input Is Advanced false Default Editor Variable Default Value ($)DateTimeToCompare with no value Date Time Is Equal The result of the is equal check.\nIf Date Time is equal to Date Time To Compare, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)DateTimeIsEqual with no value Exceptions No exceptions are thrown by the block.\nRemarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\n","categories":"","description":"Checks if a Date Time is equal to another Date Time.","excerpt":"Checks if a Date Time is equal to another Date Time.","ref":"/docs/reference/blocks/date-and-time/is-date-time/is-date-time-equal-block/","tags":"","title":"Is Date Time Equal"},{"body":"","categories":"","description":"Check if text is equal to another text, `null`, empty (i.e. `\"\"`), or whitespace (e.g. `\"     \"`).","excerpt":"Check if text is equal to another text, `null`, empty (i.e. `\"\"`), or whitespace (e.g. `\"     \"`).","ref":"/docs/reference/blocks/text/is-text/","tags":"","title":"Is Text"},{"body":"\rIs Text Empty (Cortex.Blocks.Text.IsText.IsTextEmptyBlock)\nDescription Checks if Text is empty (i.e. \"\") .\nFor information about empty, please see Empty Text and Whitespace.\nExamples Text is empty This example will check if \"\" is empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \"\" ($)Text is a variable of type String Text Is Empty ($)TextIsEmpty, with no value ($)TextIsEmpty is a variable that will be set to a Boolean value Result \"\" is empty (i.e. \"\"), resulting in the variable ($)TextIsEmpty being updated to the following:\ntrue Text is null This example will check if null is empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value null ($)Text is a variable of type String Text Is Empty ($)TextIsEmpty, with no value ($)TextIsEmpty is a variable that will be set to a Boolean value Result null is not empty (i.e. \"\"), resulting in the variable ($)TextIsEmpty being updated to the following:\nfalse Text is whitespace This example will check if \" \" is empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \" \" ($)Text is a variable of type String Text Is Empty ($)TextIsEmpty, with no value ($)TextIsEmpty is a variable that will be set to a Boolean value Result \" \" is not empty (i.e. \"\"), resulting in the variable ($)TextIsEmpty being updated to the following:\nfalse Text is not empty This example will check if \"The quick brown fox jumps over the lazy dog\" is empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text Is Empty ($)TextIsEmpty, with no value ($)TextIsEmpty is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" is not empty (i.e. \"\"), resulting in the variable ($)TextIsEmpty being updated to the following:\nfalse Properties Text The Text to check is empty (i.e. \"\").\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text Is Empty The result of the is empty check.\nIf the Text is empty (i.e. \"\"), the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextIsEmpty with no value Exceptions No exceptions are thrown by the block.\nRemarks Null Text If Text is null the variable specified in the Text Is Empty property will be set to false. See Example above.\nWhitespace Text If Text is whitespace (e.g. \" \") the variable specified in the Text Is Empty property will be set to false. See Example above.\n","categories":"","description":"Checks if text is empty (i.e. `\"\"`).","excerpt":"Checks if text is empty (i.e. `\"\"`).","ref":"/docs/reference/blocks/text/is-text/is-text-empty-block/","tags":"","title":"Is Text Empty"},{"body":"\rIs Text Empty Or Whitespace (Cortex.Blocks.Text.IsText.IsTextEmptyOrWhitespaceBlock)\nDescription Checks if Text is empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nFor information about empty and whitespace, please see Empty Text and Whitespace.\nExamples Text is empty This example will check if \"\" is empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value \"\" ($)Text is a variable of type String Text Is Empty Or Whitespace ($)TextIsEmptyOrWhitespace, with no value ($)TextIsEmptyOrWhitespace is a variable that will be set to a Boolean value Result \"\" is empty (i.e. \"\"), resulting in the variable ($)TextIsEmptyOrWhitespace being updated to the following:\ntrue Text is whitespace This example will check if \" \" is empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value \" \" ($)Text is a variable of type String Text Is Empty Or Whitespace ($)TextIsEmptyOrWhitespace, with no value ($)TextIsEmptyOrWhitespace is a variable that will be set to a Boolean value Result \" \" is whitespace, resulting in the variable ($)TextIsEmptyOrWhitespace being updated to the following:\ntrue Text is null This example will check if null is empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value null ($)Text is a variable of type String Text Is Empty Or Whitespace ($)TextIsEmptyOrWhitespace, with no value ($)TextIsEmptyOrWhitespace is a variable that will be set to a Boolean value Result null is not empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters), resulting in the variable ($)TextIsEmptyOrWhitespace being updated to the following:\nfalse Text is not empty or whitespace This example will check if \"The quick brown fox jumps over the lazy dog\" is empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text Is Empty Or Whitespace ($)TextIsEmptyOrWhitespace, with no value ($)TextIsEmptyOrWhitespace is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" is not empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters), resulting in the variable ($)TextIsEmptyOrWhitespace being updated to the following:\nfalse Properties Text The Text to check is empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text Is Empty Or Whitespace The result of the is empty or whitespace check.\nIf the Text is empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters), the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextIsEmptyOrWhitespace with no value Exceptions No exceptions are thrown by the block.\nRemarks Null Text If Text is null the variable specified in the Text Is Empty Or Whitespace property will be set to false. See Example above.\n","categories":"","description":"Checks if text is empty (i.e. `\"\"`) or whitespace (i.e. `space`, `tab`, `carriage return`, `line feed` characters).","excerpt":"Checks if text is empty (i.e. `\"\"`) or whitespace (i.e. `space`, `tab`, `carriage return`, `line feed` characters).","ref":"/docs/reference/blocks/text/is-text/is-text-empty-or-whitespace-block/","tags":"","title":"Is Text Empty Or Whitespace"},{"body":"\rIs Text Equal (Cortex.Blocks.Text.IsText.IsTextEqualBlock)\nDescription Checks if Text is equal to Text To Compare.\nExamples Text is equal to Text To Compare (Ordinal) This example will check if \"The quick brown fox jumps over the lazy dog\" is equal to \"The quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Compare ($)TextToCompare, with value \"The quick brown fox jumps over the lazy dog\" ($)TextToCompare is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Text Is Equal ($)TextIsEqual, with no value ($)TextIsEqual is a variable that will be set to a Boolean value Result As this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" is equal to \"The quick brown fox jumps over the lazy dog\", as they match exactly, including casing. Therefore, the variable ($)TextIsEqual will be updated to the following:\ntrue Text is not equal to Text To Compare (Ordinal) This example will check if \"The quick brown fox jumps over the lazy dog\" is equal to \"the quick brown fox jumps over the lazy dog\".\nIt performs a case-sensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Compare ($)TextToCompare, with value \"the quick brown fox jumps over the lazy dog\" ($)TextToCompare is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Text Is Equal ($)TextIsEqual, with no value ($)TextIsEqual is a variable that will be set to a Boolean value Result As this example is performing a case-sensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" is not equal to \"the quick brown fox jumps over the lazy dog\", as whilst the characters match exactly, the casing of the first \"T\" differs. Therefore, the variable ($)TextIsEqual will be updated to the following:\nfalse Text is equal to Text To Compare (Ordinal Ignore Case) This example will check if \"The quick brown fox jumps over the lazy dog\" is equal to \"the quick brown fox jumps over the lazy dog\".\nIt performs a case-insensitive, culture-insensitive comparison of text.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text To Compare ($)TextToCompare, with value \"the quick brown fox jumps over the lazy dog\" ($)TextToCompare is a variable of type String Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Text Is Equal ($)TextIsEqual, with no value ($)TextIsEqual is a variable that will be set to a Boolean value Result As this example is performing a case-insensitive, culture-insensitive comparison of text, \"The quick brown fox jumps over the lazy dog\" is equal to \"the quick brown fox jumps over the lazy dog\", as the characters match exactly, and casing is not considered. Therefore, the variable ($)TextIsEqual will be updated to the following:\ntrue Properties Text The Text to check is equal to Text To Compare.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text To Compare The Text To Compare if Text is equal to.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Comparison Type The Comparison Type specifying the rules used to compare if Text is equal to Text To Compare.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Text Is Equal Boolean indicating whether Text is equal to Text To Compare.\nIf they are equal the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextIsEqual with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). Remarks Comparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nNull vs empty If Text is null and Text To Compare is empty (i.e. \"\"), or vice versa, the variable specified in the Text Is Equal property is set to false, as null and \"\" are not equal.\n","categories":"","description":"Checks if a text is equal to another text.","excerpt":"Checks if a text is equal to another text.","ref":"/docs/reference/blocks/text/is-text/is-text-equal-block/","tags":"","title":"Is Text Equal"},{"body":"\rIs Text Null (Cortex.Blocks.Text.IsText.IsTextNullBlock)\nDescription Checks if Text is null.\nFor information about null, please see Null and Nullable Types.\nExamples Text is null This example will check if null is null.\nProperties Property Value Notes Text ($)Text, with value null ($)Text is a variable of type String Text Is Null ($)TextIsNull, with no value ($)TextIsNull is a variable that will be set to a Boolean value Result null is null, resulting in the variable ($)TextIsNull being updated to the following:\ntrue Text is empty This example will check if empty (i.e. \"\") is null.\nProperties Property Value Notes Text ($)Text, with value \"\" ($)Text is a variable of type String Text Is Null ($)TextIsNull, with no value ($)TextIsNull is a variable that will be set to a Boolean value Result Empty (i.e. \"\") is not null, resulting in the variable ($)TextIsNull being updated to the following:\nfalse Text is whitespace This example will check if \" \" is null.\nProperties Property Value Notes Text ($)Text, with value \" \" ($)Text is a variable of type String Text Is Null ($)TextIsNull, with no value ($)TextIsNull is a variable that will be set to a Boolean value Result \" \" is not null, resulting in the variable ($)TextIsNull being updated to the following:\nfalse Text is not null This example will check if \"The quick brown fox jumps over the lazy dog\" is null.\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text Is Null ($)TextIsNull, with no value ($)TextIsNull is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" is not null, resulting in the variable ($)TextIsNull being updated to the following:\nfalse Properties Text The Text to check is null.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text Is Null The result of the is null check.\nIf the Text is null, the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextIsNull with no value Exceptions No exceptions are thrown by the block.\nRemarks Empty Text If Text is empty (i.e.. \"\") the variable specified in the Text Is Null property will be set to false. See Example above.\nWhitespace Text If Text is whitespace (e.g. \" \") the variable specified in the Text Is Null property will be set to false. See Example above.\n","categories":"","description":"Checks if text is `null`.","excerpt":"Checks if text is `null`.","ref":"/docs/reference/blocks/text/is-text/is-text-null-block/","tags":"","title":"Is Text Null"},{"body":"\rIs Text Null Or Empty (Cortex.Blocks.Text.IsText.IsTextNullOrEmptyBlock)\nDescription Checks if Text is null or empty (i.e. \"\").\nFor information about null, please see Null and Nullable Types.\nFor information about empty, please see Empty Text and Whitespace.\nExamples Text is null This example will check if null is null or empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value null ($)Text is a variable of type String Text Is Null Or Empty ($)TextIsNullOrEmpty, with no value ($)TextIsNullOrEmpty is a variable that will be set to a Boolean value Result null is null, resulting in the variable ($)TextIsNullOrEmpty being updated to the following:\ntrue Text is empty This example will check if \"\" is null or empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \"\" ($)Text is a variable of type String Text Is Null Or Empty ($)TextIsNullOrEmpty, with no value ($)TextIsNullOrEmpty is a variable that will be set to a Boolean value Result \"\" is empty (i.e. \"\"), resulting in the variable ($)TextIsNullOrEmpty being updated to the following:\ntrue Text is whitespace This example will check if \" \" is null or empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \" \" ($)Text is a variable of type String Text Is Null Or Empty ($)TextIsNullOrEmpty, with no value ($)TextIsNullOrEmpty is a variable that will be set to a Boolean value Result \" \" is not null or empty (i.e. \"\"), resulting in the variable ($)TextIsNullOrEmpty being updated to the following:\nfalse Text is not null or empty This example will check if \"The quick brown fox jumps over the lazy dog\" is null or empty (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text Is Null Or Empty ($)TextIsNullOrEmpty, with no value ($)TextIsNullOrEmpty is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" is not null or empty (i.e. \"\"), resulting in the variable ($)TextIsNullOrEmpty being updated to the following:\nfalse Properties Text The Text to check is null or empty (i.e. \"\").\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text Is Null Or Empty The result of the is null or empty check.\nIf the Text is null or empty (i.e. \"\"), the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextIsNullOrEmpty with no value Exceptions No exceptions are thrown by the block.\nRemarks Whitespace Text If Text is whitespace (e.g. \" \") the variable specified in the Text Is Null Or Empty property will be set to false. See Example above.\n","categories":"","description":"Checks if text is `null` or empty (i.e. `\"\"`).","excerpt":"Checks if text is `null` or empty (i.e. `\"\"`).","ref":"/docs/reference/blocks/text/is-text/is-text-null-or-empty-block/","tags":"","title":"Is Text Null Or Empty"},{"body":"\rIs Text Null, Empty Or Whitespace (Cortex.Blocks.Text.IsText.IsTextNullEmptyOrWhitespaceBlock)\nDescription Checks if Text is null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nFor information about null, please see Null and Nullable Types.\nFor information about empty and whitespace, please see Empty Text and Whitespace.\nExamples Text is null This example will check if null is null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value null ($)Text is a variable of type String Text Is Null Empty Or Whitespace ($)TextIsNullEmptyOrWhitespace, with no value ($)TextIsNullEmptyOrWhitespace is a variable that will be set to a Boolean value Result null is null, resulting in the variable ($)TextIsNullEmptyOrWhitespace being updated to the following:\ntrue Text is empty This example will check if \"\" is null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value \"\" ($)Text is a variable of type String Text Is Null Empty Or Whitespace ($)TextIsNullEmptyOrWhitespace, with no value ($)TextIsNullEmptyOrWhitespace is a variable that will be set to a Boolean value Result \"\" is empty (i.e. \"\"), resulting in the variable ($)TextIsNullEmptyOrWhitespace being updated to the following:\ntrue Text is whitespace This example will check if \" \" is null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value \" \" ($)Text is a variable of type String Text Is Null Empty Or Whitespace ($)TextIsNullEmptyOrWhitespace, with no value ($)TextIsNullEmptyOrWhitespace is a variable that will be set to a Boolean value Result \" \" is whitespace (i.e. space, tab, carriage return, line feed characters), resulting in the variable ($)TextIsNullEmptyOrWhitespace being updated to the following:\ntrue Text is not null, empty or whitespace This example will check if \"The quick brown fox jumps over the lazy dog\" is null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nProperties Property Value Notes Text ($)Text, with value \"The quick brown fox jumps over the lazy dog\" ($)Text is a variable of type String Text Is Null Empty Or Whitespace ($)TextIsNullEmptyOrWhitespace, with no value ($)TextIsNullEmptyOrWhitespace is a variable that will be set to a Boolean value Result \"The quick brown fox jumps over the lazy dog\" is not null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters), resulting in the variable ($)TextIsNullEmptyOrWhitespace being updated to the following:\nfalse Properties Text The Text to check is null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters).\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Text Is Null Empty Or Whitespace The result of the is null, empty or whitespace check.\nIf the Text is null, empty (i.e. \"\") or whitespace (i.e. space, tab, carriage return, line feed characters), the specified variable will be set to true, otherwise it will be set to false.\nData Type Boolean Property Type Output Is Advanced false Default Editor Variable Default Value ($)TextIsNullEmptyOrWhitespace with no value Exceptions No exceptions are thrown by the block.\nRemarks No remarks for the block.\n","categories":"","description":"Checks if text is `null`, empty (i.e. `\"\"`) or whitespace (i.e. `space`, `tab`, `carriage return`, `line feed` characters).","excerpt":"Checks if text is `null`, empty (i.e. `\"\"`) or whitespace (i.e. `space`, `tab`, `carriage return`, `line feed` characters).","ref":"/docs/reference/blocks/text/is-text/is-text-null-empty-or-whitespace-block/","tags":"","title":"Is Text Null, Empty Or Whitespace"},{"body":"","categories":"","description":"Join a set of values together (using a separator) to create text.","excerpt":"Join a set of values together (using a separator) to create text.","ref":"/docs/reference/blocks/text/join-text/","tags":"","title":"Join Text"},{"body":"\rJoin Text (Cortex.Blocks.Text.JoinText.JoinTextBlock`1)\nDescription Joins a set of Values together as Text, using the given Separator between each value.\nExamples Join a set of String Values together with a pipe Separator This example will join the set of String values, [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"], together with a pipe separator (i.e. \"|\").\nProperties Property Value Notes Values ($)Values, with value [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"] ($)Values is a variable of type IEnumerable\u003cString\u003e Separator ($)Separator, with value \"|\" ($)Separator is a variable of type String Text ($)Text, with no value ($)Text is a variable that will be set to a String Result Joining [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"] together as text with a pipe separator (i.e. \"|\"), results in the variable ($)Text being updated to the following:\n\"Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday\" Join a set of Int32 Values together with a comma Separator This example will join the set of Int32 values, [1, 2, 3], together with a comma separator (i.e. \",\").\nProperties Property Value Notes Values ($)Values, with value [1, 2, 3] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Separator ($)Separator, with value \",\" ($)Separator is a variable of type String Text ($)Text, with no value ($)Text is a variable that will be set to a String Result Each Int32 value will be converted to its text representation, by calling its ToString method (i.e. value.ToString()).\nJoining [1, 2, 3] together as text with a comma separator (i.e. \",\"), results in the variable ($)Text being updated to the following:\n\"1,2,3\" Properties Values The set of Values to join together as Text.\nValues will be joined together in the order they are defined.\nValues can be any IEnumerable\u003cTValue\u003e, where TValue represents the type of values.\nEach non-text value will be converted to its text representation, by calling its ToString method (i.e. value.ToString()).\nData Type IEnumerable\u003cTValue\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Values with no value Separator The text to use as a Separator between each of the Values.\nSeparator can contain zero or more characters.\nThe Separator is only included in the resultant Text if Values has more than 1 item.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value , Text The resultant Text containing the specified Values converted to their text representation and separated by the given Separator.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Text with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Values is null. OutOfMemoryException Thrown when the length of the resultant Text is longer than the maximum allowed length (2,147,483,647). Remarks Null or empty Separator If Separator is null or empty (i.e. \"\"), an empty text (i.e. \"\") will be used as the separator.\nNull or empty Value in Values If any value in Values is null or empty (i.e. \"\"), an empty text (i.e. \"\") will be used as the value.\n","categories":"","description":"Joins a set of values together as text, using the given separator between each value.","excerpt":"Joins a set of values together as text, using the given separator between each value.","ref":"/docs/reference/blocks/text/join-text/join-text-block-1/","tags":"","title":"Join Text"},{"body":"","categories":"","description":"Blocks related to working with Json.","excerpt":"Blocks related to working with Json.","ref":"/docs/reference/blocks/json/","tags":"","title":"Json"},{"body":"JsonSerializerSettings (Newtonsoft.Json.JsonSerializerSettings)\nSummary Remarks Create a JsonSerializerSettings Convert JsonSerializerSettings to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation TODO:\nNeed to have a link to default settings and explain that convert object to json sets formatting.indented ","categories":"","description":"Used to specify settings for converting objects to and from Json.","excerpt":"Used to specify settings for converting objects to and from Json.","ref":"/docs/reference/data-types/json/jsonserializersettings/","tags":"","title":"JsonSerializerSettings"},{"body":"KeyNotPresentException (Cortex.Exceptions.Dictionaries.KeyNotPresentException)\nThe exception thrown when trying to get an item from a dictionary, or set an item in a dictionary, with a key that is not present.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\n","categories":"","description":"The exception thrown when trying to get an item from a dictionary, or set an item in a dictionary, with a key that is not present.","excerpt":"The exception thrown when trying to get an item from a dictionary, or set an item in a dictionary, with a key that is not present.","ref":"/docs/reference/exceptions/dictionaries/keynotpresentexception/","tags":"","title":"KeyNotPresentException"},{"body":"KeyPresentException (Cortex.Exceptions.Dictionaries.KeyPresentException)\nThe exception thrown when trying to add an item to a dictionary with a key that is already present.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\n","categories":"","description":"The exception thrown when trying to add an item to a dictionary with a key that is already present.","excerpt":"The exception thrown when trying to add an item to a dictionary with a key that is already present.","ref":"/docs/reference/exceptions/dictionaries/keypresentexception/","tags":"","title":"KeyPresentException"},{"body":"Keys Summary TODO:\nOverview/summary What is a Key? How are they accessed? The type of the Key depends on the data type Keys are unique Keys cannot be null If you are using C# syntax, then the equality is done using reference equality for reference types, and value equality for value types If you are using Dictionary blocks, then the equality is done using reference equality for reference types and falls back to value equality if no reference was found, and value equality for value types Accessing an item using Keys Keys can be used in the Expression Editor to access items in a Collection.\nRemarks Known Limitations Complex Keys do not show sho correctly in the Variable Details Viewer Currently, if a Dictionary is shown in the Variable Details Viewer and contains Complex Data types as its keys, the data within the variable will not be displayed correctly.\nIn the future this limitation may be removed.\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with Keys.","excerpt":"Information related to working with Keys.","ref":"/docs/reference/concepts/working-with/collections/keys/","tags":"","title":"Keys"},{"body":"KeysNotPresentException (Cortex.Exceptions.Dictionaries.KeysNotPresentException)\nThe exception thrown when trying to get items from a dictionary, or set items in a dictionary, and one of the keys used to find the items is not present.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\n","categories":"","description":"The exception thrown when trying to get items from a dictionary, or set items in a dictionary, and one of the keys used to find the items is not present.","excerpt":"The exception thrown when trying to get items from a dictionary, or set items in a dictionary, and one of the keys used to find the items is not present.","ref":"/docs/reference/exceptions/dictionaries/keysnotpresentexception/","tags":"","title":"KeysNotPresentException"},{"body":"\r","categories":"","description":"Configure RBAC by assining roles to security groups.","excerpt":"Configure RBAC by assining roles to security groups.","ref":"/docs/guides/cortex-gateway/settings/ldap-authorisation/","tags":"","title":"LDAP Authorisation"},{"body":"\r","categories":"","description":"Connect to an Active Directory using LDAP.","excerpt":"Connect to an Active Directory using LDAP.","ref":"/docs/guides/cortex-gateway/settings/ldap-connection/","tags":"","title":"LDAP Connection"},{"body":"\r","categories":"","description":"Review current license consumption of flows in master.","excerpt":"Review current license consumption of flows in master.","ref":"/docs/guides/cortex-gateway/settings/license-consumption/","tags":"","title":"License Consumption"},{"body":"List\u003cTItem\u003e (System.Collections.Generic.List\u003cTItem\u003e)\nSummary The List\u003cTItem\u003e data type is used to represent a list of items that can iterated or looped over.\nTItem indicates the data type of the items contained in the list. Each TItem can be individually accessed by an index.\nCategory: Collections Name: List\u003cTItem\u003e Full Name: System.Collections.Generic.List\u003cTItem\u003e Alias: N/A Description: A list of items that can iterated or looped over. TItem indicates the data type of the items contained in the list. Each TItem can be individually accessed by an index. Size: Varies Default Value: null Can be used as: IList\u003cTItem\u003e, IEnumerable\u003cTItem\u003e, IEnumerable, Object, dynamic IEnumerable\u003cTItemBaseType\u003e (e.g. where List\u003cTItem\u003e is List\u003cInt32\u003e and IEnumerable\u003cTItemBaseType\u003e is IEnumerable\u003cObject\u003e as Object is a base type of Int32; this is called covariance) Can be cast to: N/A Remarks Create a List\u003cTItem\u003e The following table shows some of the ways that a List\u003cTItem\u003e can be created.\nMethod Example Result Editor Support Notes Declare a List\u003cTItem\u003e literal [] [] Expression List\u003cdynamic\u003e containing zero items [\"Some Text\"] [\"Some Text\"] Expression List\u003cString\u003e containing one String item [true, false] [true, false] Expression List\u003cBoolean\u003e containing two Boolean items [1, 2, 3] [1, 2, 3] Expression List\u003cInt32\u003e containing three Int32 items [\"Some Text\", true, 1] [\"Some Text\", true, 1] Expression List\u003cdynamic\u003e containing a String item, a Boolean item and an Int32 item Use a List\u003cTItem\u003e expression new List\u003cdynamic\u003e() [] Expression List\u003cdynamic\u003e containing zero items new List\u003cString\u003e() { \"Some Text\" } [\"Some Text\"] Expression List\u003cString\u003e containing one String item new List\u003cBoolean\u003e() { true, false } [true, false] Expression List\u003cBoolean\u003e containing two Boolean items new List\u003cInt32\u003e() { 1, 2, 3 } [1, 2, 3] Expression List\u003cInt32\u003e containing three Int32 items new List\u003cdynamic\u003e() { \"Some Text\", true, 1 } [\"Some Text\", true, 1] Expression List\u003cdynamic\u003e containing a String item, a Boolean item and an Int32 item Convert List\u003cTItem\u003e to Text The following table shows some of the ways that a List\u003cTItem\u003e can be converted to text.\nMethod Example Result Editor Support Notes Use Convert Object To Json block where Object property has a List\u003cdynamic\u003e value of [\"Some Text\", true, 1] \"[\\r\\n \\\"Some Text\\\",\\r\\n true,\\r\\n 1\\r\\n]\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is List\u003cTItem\u003e. The Literal Editor is not available for Input properties where the data type is List\u003cTItem\u003e. The Variable Editor is available for InputOutput and Output properties where the data type is List\u003cTItem\u003e. Known Limitations None\nSee Also Related Data Types IEnumerable IEnumerable\u003cTItem\u003e IList\u003cTItem\u003e Related Concepts Working with Collections External Documentation System.Collections.Generic.List\u003cTItem\u003e ","categories":"","description":"Used to represent a list of items that can iterated or looped over. `TItem` indicates the data type of the items contained in the list. Each `TItem` can be individually accessed by an index.","excerpt":"Used to represent a list of items that can iterated or looped over. `TItem` indicates the data type of the items contained in the list. Each `TItem` can be individually accessed by an index.","ref":"/docs/reference/data-types/collections/list-1/","tags":"","title":"List\u003cTItem\u003e"},{"body":"","categories":"","description":"Blocks related to working with Lists.","excerpt":"Blocks related to working with Lists.","ref":"/docs/reference/blocks/lists/","tags":"","title":"Lists"},{"body":"","categories":"","description":"Exceptions related to Lists","excerpt":"Exceptions related to Lists","ref":"/docs/reference/exceptions/lists/","tags":"","title":"List"},{"body":"","categories":"","description":"Log events to the filesystem.","excerpt":"Log events to the filesystem.","ref":"/docs/reference/blocks/logs/log-event/","tags":"","title":"Log Event"},{"body":"\rLog Event (Cortex.Blocks.Logs.LogEvent.LogEventBlock)\nDescription Logs an event to the filesystem.\nAdditional options can be specified:\nEvent Type can be specified to define the type of event being logged. Event Severity can be specified to define the severity of the event being logged. Started At can be specified to define the Date and Time the event being logged started. Ended At can be specified to define the Date and Time the event being logged ended. Examples Log an event This example will log details about all tasks of a multi-stage process that provisions a new user at a company.\nProcess: \"Provision New User\" Stage: \"Configure Active Directory\" Task: \"Add User to Azure Active Directory\" Task: \"Add User to On-Premise Active Directory\" Stage: \"Configure Email\" Task: \"Create Outlook Account\" Task: \"Create Default Signature\" Properties Property Value Notes Event Details ($)EventDetails, with value {\"Process\":{\"Provision New User\":{\"Stages\":[{\"Configure Active Directory\":{\"Tasks\":[\"Add User to Azure Active Directory\",\"Add User to On-Premise Active Directory\"]}},{\"Configure Email\":{\"Tasks\":[\"Create Outlook Account\",\"Create Default Signature\"]}}]}}} ($)EventDetails is a variable of type Structure. Event Type ($)EventType, with value \"User Provisioning\" ($)EventType is a variable of type String. Event Severity ($)EventSeverity, with value EventSeverity.Information ($)EventSeverity is a variable of type Nullable\u003cEventSeverity\u003e. Started At ($)StartedAt, with value of DateTimeOffset that has a text representation of 2021-11-15T10:05:32.0000000Z ($)StartedAt is a variable of type Nullable\u003cDateTimeOffset\u003e. Ended At ($)EndedAt, with value of DateTimeOffset that has a text representation of 2021-11-15T10:06:12.0000000Z ($)EndedAt is a variable of type Nullable\u003cDateTimeOffset\u003e. Result Logging the event results in the following log being written:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 { \"@t\":\"2021-11-15T10:06:15.0000000Z\", \"@mt\":\"{@Event}\", \"Event\":{ \"Type\":\"User Provisioning\", \"Duration\":{ \"StartedAt\":\"2021-11-15T10:05:32.0000000Z\", \"EndedAt\":\"2021-11-15T10:06:12.0000000Z\", \"InMs\":40000, \"$type\":\"EventDurationDetails\" }, \"Details\":{ \"Process\":{ \"Provision New User\":{ \"Stages\":[ { \"Configure Active Directory\":{ \"Tasks\":[ \"Add User to Azure Active Directory\", \"Add User to On-Premise Active Directory\" ] } }, { \"Configure Email\":{ \"Tasks\":[ \"Create Outlook Account\", \"Create Default Signature\" ] } } ] } }, \"Correlation\":{ \"TraceId\":null, \"SpanId\":null, \"ParentSpanId\":null, \"$type\":\"EventCorrelationDetails\" }, \"Service\":{ \"Type\":null, \"IpAddressOrFqdn\":null, \"$type\":\"ServiceDetails\" }, \"$type\":\"StructuredEventLog\" } } } For information about the format of the logs written, see Anatomy of a Log.\nFor information about where the logs are written to, see Configuring Logging.\nProperties Event Details The Event Details to log.\nEvent Details can be any object of any data type; it does not have to be a String. Using a data type like a Structure allows you to create richer logs with a more defined format. This makes them easier to consume, process and query by other systems that consume logs, such as Grafana, ElasticSearch and Splunk, which are commonly used for log analysis, reporting and dashboarding.\nData Type dynamic Property Type Input Is Advanced false Default Editor Variable Default Value ($)EventDetails with no value Event Type Event Type can be specified to define the type of event being logged.\nEvent Type is a free format text property. If left blank, null, or empty (i.e. \"\") it will default to Cortex.Blocks.Logs.LogEvent.LogEventBlock.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to null) Event Severity Event Severity can be specified to define the severity of the event being logged.\nEvent Severity can be any of the following predefined values:\nEventSeverity.Verbose - Logs that contain the most detailed messages. These messages may contain sensitive application data. These logs should never be enabled in a production environment. EventSeverity.Debug - Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value. EventSeverity.Information - Logs that track the general path of the flow execution. These logs should have long-term value. EventSeverity.Warning - Logs that highlight an abnormal or unexpected event in the path of the flow execution, but do not otherwise cause the flow execution to exit. EventSeverity.Error - Logs that highlight when the current flow execution exits due to an error. These should indicate a failure in the current flow execution, not a service-wide or process-wide failure. EventSeverity.Fatal - Logs that describe an unrecoverable service or process error, or a catastrophic failure that requires immediate attention. Event Severity can also be left blank or set to null, in which case it will default to EventSeverity.Information.\nLogs with an Event Severity of EventSeverity.Information, have the event severity ommitted from the log that is written to the filesystem. This is to save disk space, as typically the highest volume of logs produced are Information logs. This cannot be changed and is a restriction of the underlying logging system used. All non-Information logs do include the event severity in the log that is written to the filesystem.\nData Type Nullable\u003cEventSeverity\u003e Property Type Input Is Advanced false Default Editor Literal Default Value Information Started At Started At can be specified to define the Date and Time the event being logged started.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nIf Started At is left blank or set to null, a value of null will be logged.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type Nullable\u003cDateTimeOffset\u003e Property Type Input Is Advanced false Default Editor Expression Default Value DateTimeOffset.UtcNow Ended At Ended At can be specified to define the Date and Time the event being logged ended.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nIf Ended At is left blank or set to null, a value of null will be logged.\nFor more information about Date and Time, please see Working with Date and Time.\nData Type Nullable\u003cDateTimeOffset\u003e Property Type Input Is Advanced false Default Editor Expression Default Value DateTimeOffset.UtcNow Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Event Severity is not one of the specified EventSeverity types (e.g. (EventSeverity)10). PropertyNullException Thrown when Event Details is null. Remarks Configuring Logging Log settings exist for the following Cortex Services:\nService Default File Location Description Cortex Debugger Service \u003cinstall-location\u003e\\appsettings.json Debugger Service is used to debug flows when developing them in Cortex Studio Cortex Flow Execution Service \u003cinstall-location\u003e\\appsettings.json Flow Execution Service is used to execute published flows in a runtime environment (e.g. Development, UAT, Production) An example of the log settings can be found below (some settings that do not need to be modified have been ommitted):\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { \"Cortex.Blocks.Logs\": { \"Using\": [ \"Serilog.Sinks.File\" ], \"MinimumLevel\": { \"Default\": \"Verbose\" }, \"WriteTo\": [ { \"Name\": \"File\", \"Args\": { \"path\": \"%ProgramData%/Cortex/Logging/LogEventBlock-.json\", \"rollingInterval\": \"Day\", \"fileSizeLimitBytes\": 50000000, \"rollOnFileSizeLimit\": true, \"retainedFileCountLimit\": 365 } } ] } } A list of the main log settings (highlighted above) and an accompanying description can be found below:\nLog Setting Default Value Description Default \"Verbose\" The default minimum log level that will be logged.Possible options are \"Verbose\", \"Debug\", \"Information\", \"Warning\", \"Error\", \"Fatal\".The order of log levels is \"Verbose\"-\u003e\"Debug\"-\u003e\"Information\"-\u003e\"Warning\"-\u003e\"Error\"-\u003e\"Fatal\". When setting the default log level, that level and every level to its right will be logged. path \"%ProgramData%/Cortex/Logging/LogEventBlock-.json\" The location that logs will be written to.This value supports use of environment variables, as seen in the default value.If any part of the location does not exist, the logging will attempt to create it.The file names written will include a date format after the - and before .json (e.g. \"LogEventBlock-yyyyMMdd.json\" -\u003e \"LogEventBlock-20210921.json\")The date format used will be decided by the value specified in rollingInterval.The file name may also include a file count number and is added automatically to make sure file names are unique. This can happen if rollOnFileSizeLimit is set to true and a log file reaches the size specified in fileSizeLimitBytes. It can also happen if the log file is locked by another process, preventing it from being written to. rollingInterval \"Day\" The time interval at which the logging system will create and start logging to a new log file.Possible options are \"Infinite\", \"Year\", \"Month\", \"Day\", \"Hour\", \"Minute\".Infinite means that the log files never roll over based on a time interval. fileSizeLimitBytes 50000000 The maximum file size in bytes that the loggging system will write to. Once this size is exceeded the logging system will create and start logging to a new log file.Null can be used to mean unlimited size.rollOnFileSizeLimit must be set to true for this setting to take effect. rollOnFileSizeLimit true Whether the loggging system should start creating a new log file if the current one reaches the maximum file size specified in fileSizeLimitBytes.Possible options are true and false. retainedFileCountLimit 365 The maximum number of files to retain on disk. Once this number is reached, the loggging system will start delete the oldest file. Please note that if the appsetting.json file cannot be found for one of the services, the logger will use the same default settings specified above.\nAnatomy of a Log The format of the logs written by this block are the same as the logs written by the rest of the Cortex Services. This is to ensure logging is consistent and done one way within Cortex. Hopefully this will make it easier to work with logging, and also make it easier to gain a holistic picture into what has happened to a flow execution throughout its entire lifecycle (i.e. from initial request to returning the response to the caller), rather than just what happens inside of the flow.\nAn example log can be found below:\n{ \"@t\":\"2021-11-15T10:06:15.0000000Z\", \"@mt\":\"{@Event}\", \"@l\":\"Debug\", \"Event\":{ \"Type\":\"User Provisioning\", \"Duration\":{ \"StartedAt\":\"2021-11-15T10:05:32.0000000Z\", \"EndedAt\":\"2021-11-15T10:06:12.0000000Z\", \"InMs\":40000, \"$type\":\"EventDurationDetails\" }, \"Details\":{ \"Process\":{ \"Provision New User\":{ \"Stages\":[ { \"Configure Active Directory\":{ \"Tasks\":[ \"Add User to Azure Active Directory\", \"Add User to On-Premise Active Directory\" ] } }, { \"Configure Email\":{ \"Tasks\":[ \"Create Outlook Account\", \"Create Default Signature\" ] } } ] } } }, \"Correlation\":{ \"TraceId\":null, \"SpanId\":null, \"ParentSpanId\":null, \"$type\":\"EventCorrelationDetails\" }, \"Service\":{ \"Type\":null, \"IpAddressOrFqdn\":null, \"$type\":\"ServiceDetails\" }, \"$type\":\"StructuredEventLog\" } } } A list of each of the log’s properties and an accompanying description can be found below:\nLog Property Description @t The date and time the log was written. The format is ISO 8601 Standard. @mt The message template for the log. This is set to log the entire Event. @l The level for the log. The value of Event Severity is used here. Event The event that was logged. Event.Type The type of event that was logged. This can be used for log analysis and reporting. The value of Event Type is used here. Event.Duration Contains the date and time the event started at, ended at, and its duration. Event.Duration.StartedAt The date and time the event started. The format is ISO 8601 Standard. The value of Started At is used here. Event.Duration.EndedAt The date and time the event ended. The format is ISO 8601 Standard. The value of Ended At is used here. Event.Duration.InMs The duration of the event in milliseconds and is calculated using Event.Duration.StartedAt and Event.Duration.EndedAt . Event.Duration.$type The .Net data type used to represent the duration data. This can be ignored and is an artefact of the underlying implementation. Event.Details Contains the details of the event. The value of Event Details is written as a child property of this (e.g. in this example Event.Details.Process). Event.Correlation Contains details that can be used to correlate related events. E.g. The act of starting a new flow execution may result in multiple Cortex Services processing the event. As a result, each service may write its own logs, and additionally the flow developer may also write out multiple logs during the flow execution. The Correlation details allow all of these logs to easily be correlated back together when performing log analysis and reporting to gain a full picture of everything that happened. Event.Correlation.TraceId ID common to all related logs, so they can be easily correlated together. Event.Correlation.SpanId Unique ID for each log, so tools like Grafana can display a call stack, showing each step that occurred when processing an event. Event.Correlation.ParentSpanId The ID of the step that called this step of processing, so tools like Grafana can display a call stack, showing each step that occurred when processing an event. Event.Correlation.$type The .Net data type used to represent the correlation data. This can be ignored and is an artefact of the underlying implementation. Event.Service Contains details of the Cortex Service that logged this event, and will allow enhanced log analysis and reporting to gain a full picture of everything that happened. Event.Service.Type The type of the Cortex Service that logged this event. Event.Service.IpAddressOrFqdn The IP address or fully qualified domain name of the Cortex Service that logged this event. Event.Service.$type The .Net data type used to represent the service data. This can be ignored and is an artefact of the underlying implementation. Event.$type The .Net data type used to represent the event data. This can be ignored and is an artefact of the underlying implementation. Null or Empty Event Type If Event Type is left blank, null, or empty (i.e. \"\") it will default to Cortex.Blocks.Logs.LogEvent.LogEventBlock.\nNull Event Severity If Event Severity is left blank or set to null, it will default to EventSeverity.Information.\nNull Started At If Started At is left blank or set to null, a value of null will be logged.\nNull Ended At If Ended At is left blank or set to null, a value of null will be logged.\n","categories":"","description":"Logs an event to the filesystem.","excerpt":"Logs an event to the filesystem.","ref":"/docs/reference/blocks/logs/log-event/log-event-block/","tags":"","title":"Log Event"},{"body":"","categories":"","description":"Blocks related to creating Logs.","excerpt":"Blocks related to creating Logs.","ref":"/docs/reference/blocks/logs/","tags":"","title":"Logs"},{"body":"","categories":"","description":"Blocks used to perform looping.","excerpt":"Blocks used to perform looping.","ref":"/docs/reference/blocks/loops/","tags":"","title":"Loops"},{"body":"","categories":"","description":"Information related to working with loops, such as for and for each.","excerpt":"Information related to working with loops, such as for and for each.","ref":"/docs/reference/concepts/working-with/loops/","tags":"","title":"Loops"},{"body":"","categories":"","description":"Exceptions related to Loops.","excerpt":"Exceptions related to Loops.","ref":"/docs/reference/exceptions/loops/","tags":"","title":"Loops"},{"body":"","categories":"","description":"Blocks related to working with Microsoft365.","excerpt":"Blocks related to working with Microsoft365.","ref":"/docs/reference/blocks/microsoft365/","tags":"","title":"Microsoft365"},{"body":"\rMove File (Cortex.Blocks.FilesAndFolders.MoveFile.MoveFileBlock)\nDescription Moves a file at the specified File Path to the given Destination Path, with an option to Overwrite the file if it already exists.\nExamples Move a file to a folder keeping the same file name This example will move \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\", with the same file name of \"OriginalFile.txt\".\nIn this example assume \"C:\\Destination\" does not already contain a file named \"OriginalFile.txt\", so overwrite can be set to either true or false and it will still work.\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\OriginalFile.txt\" ($)FilePath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Result Moving \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\" that does not already contain a file named \"OriginalFile.txt\" will:\nMove \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\\OriginalFile.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move a file to a folder with a new name This example will move \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\", with a new file name of \"NewFile.txt\".\nTo rename the file when it is being moved, please note that the Destination Path must be a file path, rather than a folder path (e.g. \"C:\\Destination\\NewFile.txt\" rather than \"C:\\Destination\").\nIn this example assume \"C:\\Destination\" does not already contain a file named \"NewFile.txt\", so overwrite can be set to either true or false and it will still work.\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\OriginalFile.txt\" ($)FilePath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\\NewFile.txt\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Result Move \"C:\\Source\\OriginalFile.txt\" to the path \"C:\\Destination\\NewFile.txt\" that does not already exist will:\nMove \"C:\\Source\\OriginalFile.txt\" to \"C:\\Destination\\NewFile.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move a file to a folder overwriting any file that already exists with the same name This example will move \"C:\\Source\\FileAlreadyExists.txt\" to \"C:\\Destination\", with the same file name of \"FileAlreadyExists.txt\".\nIn this example assume \"C:\\Destination\" already contains a file named \"FileAlreadyExists.txt\", so overwrite must be set to true to ensure the content of the existing file can be overwritten.\nProperties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\FileAlreadyExists.txt\" ($)FilePath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Result Moving \"C:\\Source\\FileAlreadyExists.txt\" to \"C:\\Destination\" and overwriting the existing file named \"FileAlreadyExists.txt\" will:\nOverwrite the existing file at \"C:\\Destination\\FileAlreadyExists.txt\" with: The content copied from \"C:\\Source\\FileAlreadyExists.txt\". The Date Created copied from \"C:\\Source\\FileAlreadyExists.txt\". The Date Accessed copied from \"C:\\Source\\FileAlreadyExists.txt\" The Date Modified copied from \"C:\\Source\\FileAlreadyExists.txt\". The File Attributes copied from \"C:\\Source\\FileAlreadyExists.txt\". Properties File Path The File Path to move the file from.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Destination Path The Destination Path to move the file to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path can either point to a folder or a file:\nIf it points to a folder, the moved file will have the name specified in the File Path. If it points to a file, the moved file will have the name specified in the Destination Path. Any non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the file in the Destination Path if it already exists.\nIf the file exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The Destination Path (if it points to a file), or the Destination Path (if it points to a folder) plus the file name, exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException The File Path does not exist. The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path or Destination Path is invalid (for example, it is on an unmapped drive). The file in the specified Destination Path exists and overwrite is false. The file in the specified Destination Path exists, is read-only and overwrite is true. The user the flow is executing as does not have the required permissions to move the file (e.g. not having read access to the File Path or write access to the Destination Path). An unexpected error occurs when moving the file. PropertyEmptyException Thrown when File Path or Destination Path are empty (i.e. \"\"). PropertyNullException Thrown when File Path or Destination Path are null. Remarks File and Folder Paths For information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path and Destination Path need escaping File Path and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\OriginalFile.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\OriginalFile.txt\") and Destination Path (e.g. @\"C:\\Destination\"). File Attributes When moving a file from the File Path to the new Destination Path, all of the file’s attributes will also be moved.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\n","categories":"","description":"Moves a file at the specified file path to the given destination path.","excerpt":"Moves a file at the specified file path to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/move-file/move-file-block/","tags":"","title":"Move File"},{"body":"","categories":"","description":"Move a file or multiple files.","excerpt":"Move a file or multiple files.","ref":"/docs/reference/blocks/files-and-folders/move-file/","tags":"","title":"Move File(s)"},{"body":"\rMove Files (Cortex.Blocks.FilesAndFolders.MoveFile.MoveFilesBlock)\nDescription Moves files at the specified File Paths to the given Destination Path, with an option to Overwrite the files if they already exist.\nExamples Move files to a folder keeping the same file names This example will move [\"C:\\Source\\OriginalFile1.txt\", \"C:\\Source\\OriginalFile2.txt\"] to \"C:\\Destination\", with the same file names of \"OriginalFile1.txt\" and \"OriginalFile2.txt\".\nIn this example assume \"C:\\Destination\" does not already contain a file named \"OriginalFile1.txt\" or a file named \"OriginalFile2.txt\", so overwrite can be set to either true or false and it will still work.\nProperties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\OriginalFile1.txt\", @\"C:\\Source\\OriginalFile2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Result Moving [\"C:\\Source\\OriginalFile1.txt\", \"C:\\Source\\OriginalFile2.txt\"] to \"C:\\Destination\" that does not already contain files named \"OriginalFile1.txt\" and \"OriginalFile2.txt\" will:\nMove \"C:\\Source\\OriginalFile1.txt\" to \"C:\\Destination\\OriginalFile1.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move \"C:\\Source\\OriginalFile2.txt\" to \"C:\\Destination\\OriginalFile2.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move files to a folder overwriting any files that already exists with the same names This example will move [\"C:\\Source\\FileAlreadyExists1.txt\", \"C:\\Source\\FileAlreadyExists2.txt\"] to \"C:\\Destination\", with the same file names of \"FileAlreadyExists1.txt\" and \"FileAlreadyExists2.txt\".\nIn this example assume \"C:\\Destination\" already contains a file named \"FileAlreadyExists1.txt\" and a file named \"FileAlreadyExists2.txt\", so overwrite must be set to true to ensure the content of the existing files can be overwritten.\nProperties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\FileAlreadyExists1.txt\", @\"C:\\Source\\FileAlreadyExists2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Result Moving [\"C:\\Source\\FileAlreadyExists1.txt\", \"C:\\Source\\FileAlreadyExists2.txt\"] to \"C:\\Destination\" and overwriting the existing files named \"FileAlreadyExists1.txt\" and \"FileAlreadyExists2.txt\" will:\nOverwrite the existing file at \"C:\\Destination\\FileAlreadyExists1.txt\" with: The content copied from \"C:\\Source\\FileAlreadyExists1.txt\". The Date Created copied from \"C:\\Source\\FileAlreadyExists1.txt\". The Date Accessed copied from \"C:\\Source\\FileAlreadyExists1.txt\" The Date Modified copied from \"C:\\Source\\FileAlreadyExists1.txt\". The File Attributes copied from \"C:\\Source\\FileAlreadyExists1.txt\". Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists2.txt\" with: The content copied from \"C:\\Source\\FileAlreadyExists2.txt\". The Date Created copied from \"C:\\Source\\FileAlreadyExists2.txt\". The Date Accessed copied from \"C:\\Source\\FileAlreadyExists2.txt\". The Date Modified copied from \"C:\\Source\\FileAlreadyExists2.txt\". The File Attributes copied from \"C:\\Source\\FileAlreadyExists2.txt\". Properties File Paths The File Paths to move the files from.\nEach file path in File Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePaths with no value Destination Path The Destination Path to move the files to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path must point to a folder, otherwise an InvalidPathException will be thrown.\nThe moved files will have the names specified in the File Paths.\nAny non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the files in the Destination Path if they already exist.\nIf any file exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path does not point to a folder. The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The Destination Path (if it points to a file), or the Destination Path (if it points to a folder) plus the file name, exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException Any file path in File Paths is null or empty (i.e. \"\"). For more information, see Null or Empty File Paths Any file path in File Paths is duplicated. For more information, see Duplicate File Paths Any file path in File Paths does not exist. Any file path in File Paths points to a folder. Any file path in File Paths contains leading spaces. Any file path in File Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. Any file path in File Paths exceeds the system-defined maximum length (typically 32,767 characters). Any file path in File Paths or Destination Path is invalid (for example, it is on an unmapped drive). Any file path in File Paths exists in the specified Destination Path and overwrite is false. Any file path in File Paths exists in the specified Destination Path with the same name, is read-only and overwrite is true. The user the flow is executing as does not have the required permissions to move any file (e.g. not having read access to a file path in File Paths or write access to the Destination Path). An unexpected error occurs when moving a file. PropertyEmptyException Thrown when File Paths does not contain any items, or Destination Path is empty (i.e. \"\"). PropertyNullException Thrown when File Paths or Destination Path are null. Remarks File and Folder Paths For information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Paths and Destination Path need escaping Each file path in File Paths and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\OriginalFile.txt\"), or Prepending an @ character before the start of the file path (e.g. @\"C:\\Source\\OriginalFile.txt\") and Destination Path (e.g. @\"C:\\Destination\"). File Attributes When moving a file in the File Paths to the new Destination Path, all of the file’s attributes will also be moved.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nHandling of Exceptions If an exception occurs when trying to move a file in the File Paths, it will be recorded and the block will continue processing the remaining files. Once all files are processed, recorded exceptions will be thrown within an OperationFailedException.\n","categories":"","description":"Moves files at the specified file paths to the given destination path.","excerpt":"Moves files at the specified file paths to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/move-file/move-files-block/","tags":"","title":"Move Files"},{"body":"\rMove Folder (Cortex.Blocks.FilesAndFolders.MoveFolder.MoveFolderBlock)\nDescription Moves a folder at the specified Folder Path to the given Destination Path, with an option to move the folder and its content, or just its Content Only.\nAn option can also be specified to Overwrite anything being moved that already exists in the Destination Path.\nExamples Move a folder and its content This example will move \"C:\\Source\\Folder\" and its content to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". A file named \"File.txt\". \"C:\\Destination\" does not already contain a folder named \"Folder\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Moving \"C:\\Source\\Folder\" and its content to \"C:\\Destination\" that does not already contain a folder named \"Folder\" will:\nMove \"C:\\Source\\Folder\" to \"C:\\Destination\\Folder\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder\\SubFolder\" to \"C:\\Destination\\Folder\\SubFolder\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder\\File.txt\" to \"C:\\Destination\\Folder\\File.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move a folder and its content, overwriting any content that already exists This example will move \"C:\\Source\\Folder\" and its content to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". An empty sub-folder named \"SubFolderAlreadyExists\". A file named \"File.txt\". A file named \"FileAlreadyExists.txt\". \"C:\\Destination\" already contains a folder named \"Folder\", which already contains: A folder named \"SubFolderAlreadyExists\". A file named \"FileAlreadyExists.txt\". Therefore, overwrite must be set to true to ensure the existing \"SubFolderAlreadyExists\" and \"FileAlreadyExists.txt\" can be overwritten.\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Moving \"C:\\Source\\Folder\" and its content to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\Folder\", \"C:\\Destination\\Folder\\SubFolderAlreadyExists\" and \"C:\\Destination\\Folder\\FileAlreadyExists.txt\" already exist will:\nOverwrite the existing folder at \"C:\\Destination\\Folder\" with: The Date Created left unchanged. The Date Accessed set to the time the move occurred. The Date Modified set to the time the move occurred. The Folder attributes left unchanged. Move \"C:\\Source\\Folder\\SubFolder\" to \"C:\\Destination\\Folder\\SubFolder\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Overwrite the existing folder at \"C:\\Destination\\Folder\\SubFolderAlreadyExists\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder\\File.txt\" to \"C:\\Destination\\Folder\\File.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Overwrite the existing file at \"C:\\Destination\\Folder\\FileAlreadyExists.txt\" with: The content copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Created copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Accessed copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Modified copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The File attributes copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". Move a folder’s content only This example will move \"C:\\Source\\Folder\" content only to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". A file named \"File.txt\". \"C:\\Destination\" does not already contain a folder named \"SubFolder\" or a file named \"File.txt\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Moving \"C:\\Source\\Folder\" content only to \"C:\\Destination\" that does not already contain a folder named \"SubFolder\" or a file named \"File.txt\" will:\nMove \"C:\\Source\\Folder\\SubFolder\" to \"C:\\Destination\\SubFolder\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder\\File.txt\" to \"C:\\Destination\\File.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move a folder’s content only, overwriting any content that already exists This example will move \"C:\\Source\\Folder\" content only to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". An empty sub-folder named \"SubFolderAlreadyExists\". A file named \"File.txt\". A file named \"FileAlreadyExists.txt\". \"C:\\Destination\" already contains: A folder named \"SubFolderAlreadyExists\". A file named \"FileAlreadyExists.txt\". Therefore, overwrite must be set to true to ensure the existing \"SubFolderAlreadyExists\" and \"FileAlreadyExists.txt\" can be overwritten.\nProperties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Moving \"C:\\Source\\Folder\" content only to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\SubFolderAlreadyExists\" and \"C:\\Destination\\FileAlreadyExists.txt\" already exist will:\nMove \"C:\\Source\\Folder\\SubFolder\" to \"C:\\Destination\\SubFolder\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Overwrite the existing folder at \"C:\\Destination\\SubFolderAlreadyExists\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder\\File.txt\" to \"C:\\Destination\\File.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists.txt\" with: The content copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Created copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Accessed copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The Date Modified copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". The File attributes copied from \"C:\\Source\\Folder\\FileAlreadyExists.txt\". Move a folder and its content to the same location but with a different name If it is required to move a folder and its content into the same folder it is currently located in, but with a different name, then it is not possible to do with this block; the Rename Folder block must be used instead.\nMove a folder and its content to a different location but with a different name If it is required to move a folder and its content into a different folder than the one it is currently located in, but with a different name, it is not possible to do with a single block; you must use a combination of this block and the Rename Folder block.\nProperties Folder Path The Folder Path to move the folder and/or its content from.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value Destination Path The Destination Path to move the folder and/or its content to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path must point to a folder, otherwise an InvalidPathException will be thrown.\nThe moved folders and files will have the same names as the folders and files moved.\nAny non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the folder and/or contents being moved to in the Destination Path if they already exist.\nIf the folder and/or contents exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing folders and files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Content Only Option to specify whether to move the folder and its content or just the Content Only.\nTo move the folder and its content, Content Only must be set to false; to move just the content, Content Only must be set to true.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path points to a file. The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Destination Path exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException The Folder Path does not exist. The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The Folder Path or Destination Path is a win32 device path (i.e starts with a \"\\\\.\\\"). The Folder Path or Destination Path is invalid (for example, it is on an unmapped drive). The Folder Path and Destination Path point to the same folder and Content Only is true. The Folder Path is a child folder in the Destination Path and Content Only is false. Any file being moved already exists in the specified Destination Path and overwrite is false. Any file being moved already exists in the specified Destination Path, is read-only and overwrite is true. The user the flow is executing as does not have the required permissions to move the folder or any of its content (e.g. not having read access to the Folder Path or its content, or write access to the Destination Path). The operation is cyclic (e.g. moving a folder into one of its sub-folders). An unexpected error occurs when moving the folder or any of its content. PropertyEmptyException Thrown when Folder Path or Destination Path are empty (i.e. \"\"). PropertyNullException Thrown when Folder Path or Destination Path are null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path and Destination Path need escaping Folder Path and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\") and Destination Path (e.g. @\"C:\\Destination\"). Folder Attributes When moving the folder at the specified Folder Path or any folder under it to the new Destination Path, if the folder already exists in the destination its attributes remain unchanged.\nFor information about the folder attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nFile Attributes When moving a file under Folder Path to the new Destination Path, all of the file’s attributes are also moved.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nHandling of Exceptions If an exception occurs when trying to move Folder Path, an OperationFailedException will be thrown.\n","categories":"","description":"Moves a folder at the specified folder path to the given destination path.","excerpt":"Moves a folder at the specified folder path to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/move-folder/move-folder-block/","tags":"","title":"Move Folder"},{"body":"","categories":"","description":"Move a folder or folders.","excerpt":"Move a folder or folders.","ref":"/docs/reference/blocks/files-and-folders/move-folder/","tags":"","title":"Move Folder(s)"},{"body":"\rMove Folders (Cortex.Blocks.FilesAndFolders.MoveFolder.MoveFoldersBlock)\nDescription Moves folders at the specified Folder Paths to the given Destination Path, with an option to move the folders and their content, or just their Content Only.\nAn option can also be specified to Overwrite anything being moved that already exists in the Destination Path.\nExamples Move folders and their content This example will move [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". A file named \"File1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". A file named \"File2.txt\". \"C:\\Destination\" does not already contain a folder named \"Folder1\" or \"Folder2\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Moving [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\" that does not already contain folders named \"Folder1\" and \"Folder2\" will:\nMove \"C:\\Source\\Folder1\" to \"C:\\Destination\\Folder1\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder1\\SubFolder1\" to \"C:\\Destination\\Folder1\\SubFolder1\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder1\\File1.txt\" to \"C:\\Destination\\Folder1\\File1.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move \"C:\\Source\\Folder2\" to \"C:\\Destination\\Folder2\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder2\\SubFolder2\" to \"C:\\Destination\\Folder2\\SubFolder2\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder2\\File2.txt\" to \"C:\\Destination\\Folder2\\File2.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move folders and their content, overwriting any content that already exists This example will move [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". An empty sub-folder named \"SubFolderAlreadyExists1\". A file named \"File1.txt\". A file named \"FileAlreadyExists1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". An empty sub-folder named \"SubFolderAlreadyExists2\". A file named \"File2.txt\". A file named \"FileAlreadyExists2.txt\". \"C:\\Destination\" already contains: A folder named \"Folder1\", which already contains: A folder named \"SubFolderAlreadyExists1\". A file named \"FileAlreadyExists1.txt\". A folder named \"Folder2\", which already contains: A folder named \"SubFolderAlreadyExists2\". A file named \"FileAlreadyExists2.txt\". Therefore, overwrite must be set to true to ensure the existing folders and files can be overwritten.\nProperties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value false ($)ContentOnly is a variable of type Boolean Result Moving [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] and their content to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\Folder1\", \"C:\\Destination\\Folder1\\SubFolderAlreadyExists1\", \"C:\\Destination\\Folder1\\FileAlreadyExists1.txt\", \"C:\\Destination\\Folder2\", \"C:\\Destination\\Folder2\\SubFolderAlreadyExists2\" and \"C:\\Destination\\Folder2\\FileAlreadyExists2.txt\" already exist will:\nOverwrite the existing folder at \"C:\\Destination\\Folder1\" with: The Date Created left unchanged. The Date Accessed set to the time the move occurred. The Date Modified set to the time the move occurred. The Folder attributes left unchanged. Move \"C:\\Source\\Folder1\\SubFolder1\" to \"C:\\Destination\\Folder1\\SubFolder1\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Overwrite the existing folder at \"C:\\Destination\\Folder1\\SubFolderAlreadyExists1\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder1\\File1.txt\" to \"C:\\Destination\\Folder1\\File1.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Overwrite the existing file at \"C:\\Destination\\Folder1\\FileAlreadyExists1.txt\" with: The content copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Created copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Accessed copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Modified copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". Overwrite the existing folder at \"C:\\Destination\\Folder2\" with: The Date Created left unchanged. The Date Accessed set to the time the move occurred. The Date Modified set to the time the move occurred. The Folder attributes left unchanged. Move \"C:\\Source\\Folder2\\SubFolder2\" to \"C:\\Destination\\Folder2\\SubFolder2\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Overwrite the existing folder at \"C:\\Destination\\Folder2\\SubFolderAlreadyExists2\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder2\\File2.txt\" to \"C:\\Destination\\Folder2\\File2.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Overwrite the existing file at \"C:\\Destination\\Folder2\\FileAlreadyExists2.txt\" with: The content copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Created copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Accessed copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Modified copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". Move the folders’ content only This example will move [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\".\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". A file named \"File1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". A file named \"File2.txt\". \"C:\\Destination\" does not already contain a folder named \"SubFolder1\" or \"SubFolder2\" or a file named \"File1.txt\" or \"File2.txt\", so overwrite can be set to either true or false and it will still work. Properties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Moving [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\" that does not already contain a folder named \"SubFolder1\" or \"SubFolder2\" or a file named \"File1.txt\" or \"File2.txt\" will:\nMove \"C:\\Source\\Folder1\\SubFolder1\" to \"C:\\Destination\\SubFolder1\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder1\\File1.txt\" to \"C:\\Destination\\File1.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move \"C:\\Source\\Folder2\\SubFolder2\" to \"C:\\Destination\\SubFolder2\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder2\\File2.txt\" to \"C:\\Destination\\File2.txt\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Move folders’ content only, overwriting any content that already exists This example will move [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\", overwriting any content that already exists.\nIn this example assume:\n\"C:\\Source\\Folder1\" contains: An empty sub-folder named \"SubFolder1\". An empty sub-folder named \"SubFolderAlreadyExists1\". A file named \"File1.txt\". A file named \"FileAlreadyExists1.txt\". \"C:\\Source\\Folder2\" contains: An empty sub-folder named \"SubFolder2\". An empty sub-folder named \"SubFolderAlreadyExists2\". A file named \"File2.txt\". A file named \"FileAlreadyExists2.txt\". \"C:\\Destination\" already contains: A folder named \"SubFolderAlreadyExists1\". A folder named \"SubFolderAlreadyExists2\". A file named \"FileAlreadyExists1.txt\". A file named \"FileAlreadyExists2.txt\". Therefore, overwrite must be set to true to ensure the existing folders and files can be overwritten.\nProperties Property Value Notes Folder Paths ($)FolderPaths, with value [@\"C:\\Source\\Folder1\", @\"C:\\Source\\Folder2\"] ($)FolderPaths is a variable of type IEnumerable\u003cString\u003e Destination Path ($)DestinationPath, with value @\"C:\\Destination\" ($)DestinationPath is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Content Only ($)ContentOnly, with value true ($)ContentOnly is a variable of type Boolean Result Moving [\"C:\\Source\\Folder1\", \"C:\\Source\\Folder2\"] content only to \"C:\\Destination\" with the Overwrite option set to true, and where \"C:\\Destination\\SubFolderAlreadyExists1\", \"C:\\Destination\\SubFolderAlreadyExists2\", \"C:\\Destination\\FileAlreadyExists1.txt\" and \"C:\\Destination\\FileAlreadyExists2.txt\" already exist will:\nMove \"C:\\Source\\Folder1\\SubFolder1\" to \"C:\\Destination\\SubFolder1\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Overwrite the existing folder at \"C:\\Destination\\SubFolderAlreadyExists1\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder1\\File1.txt\" to \"C:\\Destination\\File1.txt\" with: The content copied left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists1.txt\" with: The content copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Created copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Accessed copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The Date Modified copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". The File attributes copied from \"C:\\Source\\Folder1\\FileAlreadyExists1.txt\". Move \"C:\\Source\\Folder2\\SubFolder2\" to \"C:\\Destination\\SubFolder2\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Overwrite the existing folder at \"C:\\Destination\\SubFolderAlreadyExists2\" with: The content left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. Move \"C:\\Source\\Folder2\\File2.txt\" to \"C:\\Destination\\File2.txt\" with: The content copied left unchanged. The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The File attributes left unchanged. Overwrite the existing file at \"C:\\Destination\\FileAlreadyExists2.txt\" with: The content copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Created copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Accessed copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The Date Modified copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". The File attributes copied from \"C:\\Source\\Folder2\\FileAlreadyExists2.txt\". Move folders and their content to the same location but with a different name If it is required to move folders and their content into the same folder they are currently located in, but with a different name, then it is not possible to do with this block; the Rename Folder block must be used instead.\nMove folders and their content to a different location but with a different name If it is required to move folders and their content into a different folder than the one they are currently located in, but with a different name, it is not possible to do with a single block; you must use a combination of this block and the Rename Folder block.\nProperties Folder Paths The Folder Paths to move the folders and/or their content from.\nEach folder path in Folder Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPaths with no value Destination Path The Destination Path to move the folders and/or their content to.\nThe Destination Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nThe Destination Path must point to a folder, otherwise an InvalidPathException will be thrown.\nThe moved folders and files will have the same names as the folders and files copied.\nAny non-existing folders within the Destination Path will be automatically created.\nFor information about the supported file and folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Overwrite Option to Overwrite the folders and/or contents being moved to in the Destination Path if they already exist.\nIf any of the folders and/or contents exists, Overwrite must be set to true, otherwise an OperationFailedException will be thrown. By default, this is set to false to avoid implicit and accidental overwriting of existing folders and files.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Content Only Option to specify whether to move the folders and their content or just the Content Only.\nTo move the folders and their content, Content Only must be set to false; to move just the content, Content Only must be set to true.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPathException The Destination Path points to a file. The Destination Path contains leading spaces. The Destination Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Destination Path exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException Any folder path in Folder Paths is null or empty (i.e. \"\"). For more information, see Null or Empty Folder Paths Any folder path in Folder Paths is duplicated. For more information, see Duplicate Folder Paths Any folder path in Folder Paths does not exist. Any folder path in Folder Paths points to a file. Any folder path in Folder Paths contains leading spaces. Any folder path in Folder Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. Any folder path in Folder Paths exceeds the system-defined maximum length (typically 32,767 characters). Any folder path in Folder Paths or Destination Path is a win32 device path (i.e starts with a \"\\\\.\\\"). Any folder path in Folder Paths or Destination Path is invalid (for example, it is on an unmapped drive). Any folder path in Folder Paths and Destination Path point to the same folder and Content Only is true. Any folder path in Folder Paths is a child folder in the Destination Path and Content Only is false. Any file being moved already exists in the specified Destination Path and overwrite is false. Any file being moved already exists in the specified Destination Path, is read-only and overwrite is true. The user the flow is executing as does not have the required permissions to move the folder or any of its content (e.g. not having read access to any of the folders in Folder Paths or its content, or write access to the Destination Path). The operation is cyclic (e.g. moving a folder into one of its sub-folders). An unexpected error occurs when moving a folder or any of its content. PropertyEmptyException Thrown when Folder Paths does not contain any items, or Destination Path are empty (i.e. \"\"). PropertyNullException Thrown when Folder Paths or Destination Path are null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path and Destination Path need escaping Each folder paths in Folder Paths and Destination Path require \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the folder path (e.g. @\"C:\\Source\") and Destination Path (e.g. @\"C:\\Destination\"). Folder Attributes When moving the folders at the specified Folder Paths or any folder under them to the new Destination Path, if the folder already exists in the destination its attributes remain unchanged.\nFor information about the folder attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nFile Attributes When moving a file under any of the Folder Paths to the new Destination Path, all of the file’s attributes are also moved.\nFor information about the file attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\nConflicting Content If two or more paths in the specified Folder Paths contain content (folders or files) with the same name, and Overwrite and Content Only are true:\nThe attributes of the folder/file in the Destination Path will be that of the first one moved. For files, the content of the file in the Destination Path will be that of the last one moved. Handling of Exceptions If an exception occurs when trying to move a folder in Folder Paths, it will be recorded and the block will continue processing the remaining folders. Once all folders are processed, recorded exceptions will be thrown within an OperationFailedException.\n","categories":"","description":"Moves folders at the specified folder paths to the given destination path.","excerpt":"Moves folders at the specified folder paths to the given destination path.","ref":"/docs/reference/blocks/files-and-folders/move-folder/move-folders-block/","tags":"","title":"Move Folders"},{"body":"NonQueryCommand (Cortex.DataTypes.Data.NonQueryCommand)\nSummary A NonQueryCommand data type is used to define single or multiple Non Query Statements that can be run against a data source. Statements can be parameterised, which is recommended to prevent SQL Injection.\nCategory: Data Name: NonQueryCommand Full Name: Cortex.DataTypes.Data.NonQueryCommand Alias: N/A Description: Defines single or multiple Non Query Statements that can be run against a data source. Default Value: null Can be used as: DataCommand, Object, dynamic Can be cast to: N/A Properties Command Text The Command Text is used to define single or multiple Non Query Statements that will be run against the data source.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value $@\"\" Parameters Parameters are used to pass information to the Non Query Statements that will be run against the data source.\nIt is recommended to always use Parameterised Commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nFor more information see Parameterised Commands.\nData Type dynamic Is Advanced true Default Editor Expression Default Value dynamic with no value Remarks Create a NonQueryCommand The following table shows some of the ways that a NonQueryCommand can be created.\nMethod Example Result Editor Support Notes Use a NonQueryCommand constructor new NonQueryCommand(\"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (\\\"Value1\\\", \\\"Value2\\\")\", null) {CommandText: \"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (\\\"Value1\\\", \\\"Value2\\\")\", Parameters: null} Expression new NonQueryCommand(\"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2)\", new { InsertParameter1 = \"Value1\", InsertParameter2 = \"Value2\" }) {\"CommandText\": \"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2)\", \"Parameters\": { \"InsertParameter1\": \\\"Value1\\\", \"InsertParameter2\": \\\"Value2\\\" } } Expression It is recommended to always use Parameterised Commands as they prevent SQL Injection A NonQueryCommand can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes CommandText EncryptableText $@\"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (@InsertParameter1, @InsertParameter2)\" The command that will be executed against the data source. Parameters dynamic new { InsertParameter1 = \"Value1\", InsertParameter2 = \"Value2\" }) The parameters that are used within a Parameterised Command. Convert NonQueryCommand to Text Method Example Result Editor Support Notes Use ToString ($)NonQueryCommand.ToString() \"Cortex.DataTypes.Data.NonQueryCommand\" Expression ToString will return the Full Name of the NonQueryCommand Data Type Use Convert Object To Text block where Object property has a value of {CommandText: \"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (\\\"Value1\\\", \\\"Value2\\\")\", Parameters: null} \"Cortex.DataTypes.Data.NonQueryCommand\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a value of {CommandText: \"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (\\\"Value1\\\", \\\"Value2\\\")\", Parameters: null} \"{\\r\\n \\\"CommandText\\\": \\\"INSERT INTO Table (FirstColumn, SecondColumn) VALUES (\\\\\\\"Value1\\\\\\\", \\\\\\\"Value2\\\\\\\")\\\",\\r\\n \\\"Parameters\\\": null\\r\\n}\" N/A See Convert Object To Json Parameterised Commands It is recommended to always use parameterised commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nThe @ symbol denotes a parameter within the CommandText (e.g. \"INSERT INTO Table (FirstColumn) VALUES (@Parameter)\"). An example of using parameters can be found in Executing Multiple Commands (Safe), whereas, an example of inserting variables into a statement without parameters can be found in Executing Multiple Commands (Unsafe)\nFor more information see Parameterised Commands.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is NonQueryCommand. The Literal Editor is available for Input properties where the data type is NonQueryCommand. The Variable Editor is available for Input, InputOutput and Output properties where the data type is Known limitations ToString Method always returns the Full Name Currently, if the ToString() method is used on a NonQueryCommand, then its Full Name will be returned; instead of a representation of the data within the NonQueryCommand.\nIn future this limitation may be removed.\nSee Also Related Data Types DataCommand Command Commands QueryCommand Related Concepts Working with Data Sources External Documentation SQL Injection ","categories":"","description":"Holds the information for running a Non Query command against a data source.","excerpt":"Holds the information for running a Non Query command against a data source.","ref":"/docs/reference/data-types/data/nonquerycommand/","tags":"","title":"NonQueryCommand"},{"body":"Nullable\u003cT\u003e (System.Nullable\u003cT\u003e)\nSummary Remarks Create a Nullable\u003cT\u003e Convert Nullable\u003cT\u003e to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent a value type that can be set to `null`.","excerpt":"Used to represent a value type that can be set to `null`.","ref":"/docs/reference/data-types/other/nullable-1/","tags":"","title":"Nullable\u003cT\u003e"},{"body":"","categories":"","description":"Information related to working with Numbers.","excerpt":"Information related to working with Numbers.","ref":"/docs/reference/concepts/working-with/numbers/","tags":"","title":"Numbers"},{"body":"Object (System.Object)\nSummary Any data type can be used where an Object data type is required, as all data types derive from Object.\nObject data type is identical to the dynamic data type, except for one difference; dynamic data types do not need to be explicitly cast to other data types to be used, whereas Object data types do.\nCategory: All Name: Object Full Name: System.Object Alias: object Description: Any data type can be used where an Object data type is required, as all data types derive from Object. Object data type is identical to the dynamic data type, except for one difference; dynamic data types do not need to be explicitly cast to other data types to be used, whereas Object data types do. Size: Varies Default Value: null Can be used as: Object, dynamic Can be cast to: N/A Remarks When is the Object Data Type Used? The Object data type is only likely to be encountered in the following circumstances:\nAn Input or InputOutput property of a Block can accept any data type An Output property of a Block can return any data type A Collection that contains different data types (e.g. [1, \"Text\", true]) is saved to a Variable Also note, in these circumstances it is more likely to encounter the dynamic data type, rather than Object. See Object vs dynamic for more information.\nIt is also highly unlikely that you will need to create an Object; typically you will create and work with other data types such as String or Int32 that derive from Object. However, if ever required you can create a new object using the following expression:\nnew Object() Object vs dynamic Object and dynamic data types are identical, except for one difference:\nOnce a variable contains an Object data type, if it needs to be used as its original data type it must be cast back to that data type (e.g. (Int32)($)ObjectVariableContainingAnInteger); a dynamic data type does not. Property Editor Support The Expression Editor is available for Input properties where the data type is Object. The Literal Editor is not available for Input properties where the data type is Object. The Variable Editor is available for InputOutput and Output properties where the data type is Object. Known Limitations None\nSee Also Related Data Types dynamic Related Concepts None\nExternal Documentation System.Object Using dynamic ","categories":"","description":"Any data type can be used where an `Object` data type is required, as all data types derive from `Object`.","excerpt":"Any data type can be used where an `Object` data type is required, as all data types derive from `Object`.","ref":"/docs/reference/data-types/all/object/","tags":"","title":"Object"},{"body":"Object Casting Summary TODO\nImplicit Cast TODO\nExplicit Cast TODO\nObject vs dynamic TODO\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding casting an object to different data types.","excerpt":"Information regarding casting an object to different data types.","ref":"/docs/reference/concepts/working-with/objects/object-casting/","tags":"","title":"Object Casting"},{"body":"Object Equality Summary TODO\nhttps://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/equality-comparisons\nValue Type vs Reference Type Equality TODO:\nValue Type Equality TODO: notes about value equality and a worked through example\nReference Type Equality TODO: notes about reference equality and a worked through example\nHow Cortex compares objects for equality TODO: notes about how cortex compares and a worked through example\nNotes:List and Dictionary equality is slightly different to normal equality as it will compare first based on reference and then fall back to value - compared to == .Equals .ReferenceEquals - blocks affected\nRemarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding object equality, and what defines two objects as equal.","excerpt":"Information regarding object equality, and what defines two objects as equal.","ref":"/docs/reference/concepts/working-with/objects/object-equality/","tags":"","title":"Object Equality"},{"body":"","categories":"","description":"Blocks common to all object data types.","excerpt":"Blocks common to all object data types.","ref":"/docs/reference/blocks/objects/","tags":"","title":"Objects"},{"body":"","categories":"","description":"Information related to working with Objects.","excerpt":"Information related to working with Objects.","ref":"/docs/reference/concepts/working-with/objects/","tags":"","title":"Objects"},{"body":"OccurrenceNotPresentException (Cortex.Exceptions.Dictionaries.OccurrenceNotPresentException)\nThe exception thrown when trying to get a specified occurrence of an item from a dictionary, or set a specified occurrence of an item in a dictionary.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\n","categories":"","description":"The exception thrown when trying to get a specified occurrence of an item from a dictionary, or set a specified occurrence of an item in a dictionary.","excerpt":"The exception thrown when trying to get a specified occurrence of an item from a dictionary, or set a specified occurrence of an item in a dictionary.","ref":"/docs/reference/exceptions/dictionaries/occurrencenotpresentexception/","tags":"","title":"OccurrenceNotPresentException"},{"body":"Occurrences Summary TODO\nSummary What is an Occurrence? How are they accessed? Positive or Negative int properties on blocks that operate on single items Difference between occurrence and indexes Positive Occurrences TODO:\nGet First, Second, Third, Nth Negative Occurrences TODO:\nGet Last, Second from Last, Third from Last, Nth from Last Remarks Occurrence Not Present TODO:\nBlocks will either throw an exception if the occurrence is not present (e.g. OccurrenceNotPresentException), or they will handle the occurrence not being present either by performing no operation or by returning a predetermined value.\nFor example:\nGet Index Of Item With Value (returns predetermined value) Remove Item With Value (no operation performed) Get Item With Key (throws OccurrenceNotPresentException) Known Limitations None\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information related to working with Occurrences.","excerpt":"Information related to working with Occurrences.","ref":"/docs/reference/concepts/working-with/collections/occurrences/","tags":"","title":"Occurrences"},{"body":"ODBC Summary TODO:\nSummary Table or other format to display verified data sources (e.g. postgres, mysql, access, excel, oracle) and examples (link to connection strings) Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding ODBC as a data source.","excerpt":"Information regarding ODBC as a data source.","ref":"/docs/reference/concepts/working-with/data-sources/supported-data-sources/odbc/","tags":"","title":"ODBC"},{"body":"OdbcConnectionDetails (Cortex.DataTypes.Data.OdbcConnectionDetails)\nSummary The OdbcConnectionDetails data type is used to establish and maintain a connection to an ODBC data source.\nCategory: Data Name: OdbcConnectionDetails Full Name: Cortex.DataTypes.Data.OdbcConnectionDetails Alias: N/A Description: The data type representing configuration for establishing and maintaining a connection to an ODBC data source. Default Value: null Can be used as: ConnectionDetails, Object, dynamic Can be cast to: N/A Properties Connection String The Connection String that is used to connect to an ODBC data source.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value $@\"Dsn=DSN Name;Driver=Driver Name;\" Remarks Create an OdbcConnectionDetails The following table shows some of the ways that a OdbcConnectionDetails can be created.\nMethod Example Result Editor Support Notes Use an OdbcConnectionDetails constructor new OdbcConnectionDetails(\"DSN=LocalHost;Driver={ODBC Driver Version}\") {\"ConnectionString\": \"DSN=LocalHost;Driver={ODBC Driver Version}\"} Expression A OdbcConnectionDetails can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes Connection String EncryptableText $@\"DSN=LocalHost;Driver={ODBC Driver Version}\" The Connection String that is used to connect to an ODBC data source. Connection Strings A Connection String must be provided in order to connect to an ODBC data source. The Connection String can be formatted differently depending on the ODBC driver. See ConnectionStrings.com for a list of ODBC connection strings under each specific data source.\nPlease see Working with Data Sources for a list of other supported data sources (e.g. SQL Server) and how to construct valid connection strings for them.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is OdbcConnectionDetails. The Literal Editor is not available for Input properties where the data type is OdbcConnectionDetails. The Variable Editor is available for Input, InputOutput and Output properties where the data type is OdbcConnectionDetails. Known limitations Currently string values cannot be used as a parameter when connected to an Microsoft Access data source. See Also Related Data Types ConnectionDetails SqlServerConnectionDetails Related Concepts Working with Data Sources External Documentation ConnectionStrings.com ","categories":"","description":"The data type representing configuration for establishing and maintaining a connection to an ODBC data source.","excerpt":"The data type representing configuration for establishing and maintaining a connection to an ODBC data source.","ref":"/docs/reference/data-types/data/odbcconnectiondetails/","tags":"","title":"OdbcConnectionDetails"},{"body":"OperationFailedException (Cortex.Exceptions.FilesAndFolders.OperationFailedException)\nThe exception thrown when a file or folder operation failed for one or more paths.\nPath Exceptions PathDoesNotExist The format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\nBlocks that can throw this exception TODO:\nPathTooLong The format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" How to fix TODO:\nBlocks that can throw this exception TODO:\nIndexes Of Duplicate Paths /// If any path in the specified filePaths is duplicated and no exception is thrown for that path, the block will only process the first occurrence of the path, skipping any other occurrences.\n/// If any path in the specified filePaths is duplicated and an exception occurs for that path an \u003csee cref=\"OperationFailedException\"\u003eOperationFailedException\u003c/see\u003e will be thrown, and the path added to the \"IndexesOfDuplicatePaths\" dictionary in \u003csee cref=\"OperationFailedException\"\u003eOperationFailedException\u003c/see\u003e.\rIndexes Of Null Or Empty Paths /// If any path in the specified filePaths is null or empty, an OperationFailedException will be thrown, and the path added to the “IndexesOfNullOrEmptyPaths” list in OperationFailedException.\nHow to fix TODO:\n","categories":"","description":"The exception thrown when a file or folder operation failed for one or more paths.","excerpt":"The exception thrown when a file or folder operation failed for one or more paths.","ref":"/docs/reference/exceptions/files-and-folders/operationfailedexception/","tags":"","title":"OperationFailedException"},{"body":"","categories":"","description":"Blocks related to working with Outlook.","excerpt":"Blocks related to working with Outlook.","ref":"/docs/reference/blocks/microsoft365/outlook/","tags":"","title":"Outlook"},{"body":"\r","categories":"","description":"Create and Manage Cortex Innovation Packages","excerpt":"Create and Manage Cortex Innovation Packages","ref":"/docs/guides/cortex-gateway/settings/packages/","tags":"","title":"Packages"},{"body":"Paths Summary TODO:\nSupported file and folder path formats and examples of using them How we determine is a path is a folder or a file path\\ = folder (path with terminating \\ or /) path = folder (path not ending in extension) path.extension = file (path ending in extension) path.anotherpartofpath\\ = folder (as it ends in a \\ or /) Valid file and folder names Links:\nhttps://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file https://docs.microsoft.com/en-us/windows/wsl/filesystems https://docs.microsoft.com/en-us/dotnet/standard/io/ https://docs.microsoft.com/en-us/dotnet/api/system.io.file?view=net-5.0 Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding file and folder paths.","excerpt":"Information regarding file and folder paths.","ref":"/docs/reference/concepts/working-with/files-and-folders/paths/","tags":"","title":"Paths"},{"body":"Pattern Matching Syntax Summary TODO\nWhat is pattern matching? how is it different to contains or regex Pattern matching can only be used in blocks * is 0 or more ? is 0 or 1 to use these as literals use \\\\* \\\\? Common pattern matching **/*.ext (Check that this works) Common file extensions to search for, how to search for them *.txt, *.pdf Link to Files and Folders for list of common extensions Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding pattern matching syntax.","excerpt":"Information regarding pattern matching syntax.","ref":"/docs/reference/concepts/working-with/text/pattern-matching-syntax/","tags":"","title":"Pattern Matching Syntax"},{"body":"Port Requirements for Application Servers and Load Balancer Cortex Innovation and Microsoft Service Fabric open a range of firewall ports between the servers and specific services. Some of them are opened during installation, others are opened dynamically as needed. These are opened on Windows Firewall. If any other firewall exists between the servers, it will be necessary to configure this selection of rules on it. Most ports may be altered if another program overlaps with them, the description will say if this is not possible.\nCortex Innovation Ports Name Description Default Port(s) Protocol Direction Cortex.RabbitMqAmqpPorts The port used by AMQP 0-9-1 and 1.0 clients with TLS. This cannot currently be changed. 5671 TCP Inbound Cortex.RabbitMqEpmdPorts The port used by epmd, a peer discovery service used by RabbitMQ nodes and CLI tools. This cannot currently be changed. 4369 TCP Inbound Cortex.RabbitMqErlangDistribut ionClientPorts The ports used by CLI tools (Erlang distribution client ports) for communication with nodes and is allocated from a dynamic range (computed as Erlang dist port + 10000 through dist port + 10010). This cannot currently be changed. 35672-35682 TCP Inbound Cortex.RabbitMqErlangDistribut ionServerPort The port used for RabbitMQ inter-node and CLI tools communication (Erlang distribution server port) and is allocated from a dynamic range (limited to a single port by default, computed as AMQP port + 20000). This cannot currently be changed. 25672 TCP Inbound Cortex.RabbitMqManagement ApiPort The port used by the RabbitMQ management plugin. This cannot currently be changed. 15671 TCP Inbound Cortex.WindowsSmbRemote Registry The ports used by Windows SMB and Remote Registry service. 135, 137, 138, 139, 445 TCP Inbound Cortex.ServiceFabric.Customer1. ClusterConnectionEndpointPort The port used by the client to connect to the cluster when client APIs are used. 8001 TCP Inbound Cortex.ServiceFabric.Customer1. ClientConnectionEndpointPort The port where the nodes communicate with each other. 8002 TCP Inbound Cortex.ServiceFabric.Customer1. ServiceConnectionEndpointPort The port used by the applications and services deployed on a node to communicate with the Service Fabric client on that particular node. 8004 TCP Inbound Microsoft Service Fabric Firewall Rules (present on all Application Servers, with Domain, Public and Private Profiles) These rules will all appear in Windows Firewall with names starting with ‘{CustomerName}.{NodeName} WindowsFabric’.\nName in Rule Name in Config Description Default Port(s) Protocol(s) Direction Application Processes application Ports The ports that are used by the Service Fabric applications. Service Fabric uses these ports whenever new dynamic ports are required. The application port range should be large enough to cater for the dynamic port allocation of the application. Currently at least 400 is recommended. This may change if new services are added. This range should not overlap the Dynamic Ports (ephemeralPorts) range as set in the configuration. Program: Any 10010-10500 TCP, UDP Inbound, Outbound BackupRestore Service Process N/A The port used by the Service Fabric process which manages the backup and restore of Application Services. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_\\BRS.Code.Current\\FabricBRS.exe Any TCP Inbound, Outbound CentralSecret Service Process N/A The port used by the Service Fabric process which manages secrets. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_\\BRS.Code.Current\\FabricCSS.exe Any TCP Inbound, Outbound DCA Process N/A The port used by the Service Fabric Diagnostics Collection Agent, which manages Diagnostic data. Program: %ProgramFiles%\\Microsoft Service Fabric\\bin\\ Fabric\\DCA.Code\\FabricDCA.exe Any TCP Outbound Dynamic Ports ephemeral Ports Override the dynamic ports used by the OS. Service Fabric uses a part of these ports as application ports, and the remaining are available for the OS. It also maps this range to the existing range present in the OS, so for all purposes, you can use the ranges given in the sample JSON files. Make sure that the difference between the start and the end ports is at least 255. You might run into conflicts if this difference is too low, because this range is shared with the OS. To see the configured dynamic port range, run netsh int ipv4 show dynamicport tcp. Program: Any 10501-20000 TCP, UDP Inbound, Outbound EventStore Service Process N/A The port used by the Service Fabric EventStore, which maintains events about the state of the Application Services. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\ES.Code.Current\\ EventStore.Service.exe Any TCP Inbound, Outbound Fabric Gateway Process N/A The port used by the Service Fabric Gateway, which allows REST and management functions to access the Application Services. Program: %ProgramFiles%\\Microsoft Service Fabric\\bin\\Fabric\\ Fabric.Code\\FabricGateway.exe Any TCP Inbound, Outbound Fabric Process N/A The port used by the main Service Fabric service. Program: %ProgramFiles%\\Microsoft Service Fabric\\bin\\Fabric\\ Fabric.Code\\Fabric.exe Any TCP Inbound, Outbound FabricUpgrade Service Process N/A The port used by the Service Fabric Upgrade service. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\US.Code.Current\\FabricUS.exe Any TCP Inbound, Outbound FaultAnalysis Service Process N/A The port used by the Service Fabric Fault Analysis service. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\FAS.Code.Current\\FabricFAS.exe Any TCP Inbound, Outbound FileStore Service Process N/A The port used by the Service Fabric File Store service, which manages the application file store and image store. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\FileStoreService.Code.Current\\ FileStoreService.exe Any TCP Inbound, Outbound GatewayResource Manager Process N/A The port used by the Service Fabric Gateway Resource Manager, which provides APIs to manage the Application Services and other resources. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\GRM.Code.Current\\FabricGRM.exe Any TCP Inbound, Outbound HTTP App Gateway reverse Proxy Endpoint Port This port cannot be changed at the current time. If it is already in use, please contact Cortex for assistance. The reverse proxy endpoint. For more information, see Service Fabric reverse proxy. Program: Any 9081 TCP Inbound, Outbound Http Gateway http Gateway Endpoint Port The port used by Service Fabric Explorer to connect to the cluster. This changes the port used to connect to the Service Fabric management portal as part of the post-install checks. Program: Any 9080 TCP Inbound, Outbound Infrastructure Service Process N/A The port used by the Service Fabric Infrastructure Service. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\IS.Code.Current\\FabricIS.exe Any TCP Inbound, Outbound Lease Driver lease Driver Endpoint Port The port used by the cluster lease driver to find out if the nodes are still active. Program: Any 9002 TCP Inbound, Outbound ManagedIdentity TokenService Process N/A The port used by the Service Fabric Managed Identity Token Service. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\MITS.Code.Current\\ ManagedIdentityTokenService.exe Any TCP Inbound, Outbound RepairManager Service Process N/A The port used by the Service Fabric Repair Manager Service. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\RM.Code.Current\\FabricRM.exe Any TCP Inbound, Outbound Upgrade Orchestration Service Process N/A The port used by the Service Fabric Upgrade Orchestration service. Program: %ProgramData%\\SF\\.\\Fabric\\work\\Applications\\ __FabricSystem_App*\\UOS.Code.Current\\FabricUOS.exe Any TCP Inbound, Outbound Cortex Application Service Rules Each service has an endpoint which is used to communicate with Service Fabric and the RabbitMQ message broker. These are configured in the ServiceManifest.xml file within each package in the ApplicationPackages\\Cortex directory of the installation media. These ports cannot be used by any other program. If they do clash with another program, they may be changed but additional configuration changes may be necessary, as described in the description of each port. The Application ports must not lie in the ephemeralPorts range.\nName of Service Description Default Port(s) Protocol(s) Direction Program API Gateway The port providing an entry into the API Gateway service. This is used by Cortex Gateway to communicate with the Application Services. If this is changed then it will be necessary to use the updated value in the \"Service Fabric Api Gateway Endpoint\" parameter of SetParameters.xml when configuring Cortex Gateway later in this document. 8722 TCP, UDP Inbound, Outbound Any Flow Execution The ports providing communication between other services and the stateful Cortex Flow Execution service. These are dynamic ports managed by Service Fabric. Dynamic – Uses the application ports N/A N/A N/A Cortex Load Balancer Rules Note\rOnly applicable for installations with HA.\rThe load balancer server must be able to retrieve traffic via HTTPS. The following firewall ports are opened by the installer (these rules will all appear in Windows Firewall with names starting with {CustomerName}):\nName in Rule Name in Config Default Port(s) Protocol(s) Direction Program GoBetweenTlsPort loadBalancerTlsPort 443 TCP Inbound Any ","categories":"","description":"Information about the ports opened when installing Cortex Innovation.","excerpt":"Information about the ports opened when installing Cortex Innovation.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/port-requirements/","tags":"","title":"Port Requirements for Application Servers and Load Balancer"},{"body":"Port Requirements for the Web Application Server All the required ports for the Web Application Server that forms part of the Grafana observability platform must be opened on any installed firewall. If any other firewall exists between the Application Servers and the Web Application Server, or Grafana users and the Web Application Server, it will be necessary to configure this selection of rules on it. These ports may be altered if there are any conflicts with other application requirements.\nGrafana Observability Platform Name Description Default Port(s) Protocol Direction Grafana The port used by the Grafana web application 3000 TCP Inbound Reverse proxy for Grafana Loki The port used by IIS serving the role of a reverse proxy for Grafana Loki 2100 TCP Inbound ","categories":"","description":"Information about the ports to be opened when installing the Grafana observability platform.","excerpt":"Information about the ports to be opened when installing the Grafana observability platform.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/port-requirements/","tags":"","title":"Port Requirements for the Web Application Server"},{"body":"","categories":"","description":"Blocks related to working with Windows PowerShell and PowerShell Core.","excerpt":"Blocks related to working with Windows PowerShell and PowerShell Core.","ref":"/docs/reference/blocks/powershell/","tags":"","title":"PowerShell"},{"body":"","categories":"","description":"Exceptions related to issues with Block Properties","excerpt":"Exceptions related to issues with Block Properties","ref":"/docs/reference/exceptions/common/property/","tags":"","title":"Property"},{"body":"PropertyContainsNullOrEmptyItemException (Cortex.Exceptions.Common.Property.PropertyContainsNullOrEmptyItemException)\nDescription The exception thrown when a property is provided with a value that contains at least one item that is either null or empty, but the item is required to have a value.\nReasons Value Contains null or empty item A null or empty item is contained in the value that was provided for the property.\nMessage Format The format of the Message is as follows:\n\"'\u003cproperty-name\u003e' contains at least one null or empty value; it must only contain values that are not null or empty. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cproperty-name\u003e is the name of the property. How to fix Ensure the value provided for the property named \u003cproperty-name\u003e does not contain items that are either null or empty.\nProperties Exception Type The type of the exception (i.e. PropertyContainsNullOrEmptyItemException).\nData Type String Message The exception message, providing information about the exception that occurred.\nFor this exception:\n\u003cproperty-name\u003e will be replaced with the name of the property. Data Type String Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations Currently, only the \u003cproperty-name\u003e has been included in the exception. In future, we will look to include the name and Id of the block, the id, name and value of the property, as well as allowing the exception to contain a link to take you directly to the offending value.\nSee Also Related Data Types String Related Concepts Blocks Block Properties Exceptions Related Blocks Exceptions Handle Block Exception Matching Type Names External Documentation None\n","categories":"","description":"The exception thrown when a property is provided with a value that contains at least one item that is either `null` or empty, but the item is required to have a value.","excerpt":"The exception thrown when a property is provided with a value that contains at least one item that is either `null` or empty, but the item is required to have a value.","ref":"/docs/reference/exceptions/common/property/property-contains-null-or-empty-item-exception/","tags":"","title":"PropertyContainsNullOrEmptyItemException"},{"body":"PropertyEmptyException (Cortex.Exceptions.Common.Property.PropertyEmptyException)\nDescription The exception thrown when a property is provided with an empty value, but a non-empty value is required.\nReasons Empty value An empty value was provided for the property.\nMessage Format The format of the Message is as follows:\n\"'\u003cproperty-name\u003e' is empty; it must be provided a value. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cproperty-name\u003e is the name of the property. How to fix Ensure the value provided for the property named \u003cproperty-name\u003e is not empty.\nProperties Exception Type The type of the exception (i.e. PropertyEmptyException).\nData Type String Message The exception message, providing information about the exception that occurred.\nFor this exception:\n\u003cproperty-name\u003e will be replaced with the name of the property. Data Type String Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations Currently, only the \u003cproperty-name\u003e has been included in the exception. In future, we will look to include the name and Id of the block, the id, name and value of the property, as well as allowing the exception to contain a link to take you directly to the offending value.\nSee Also Related Data Types String Related Concepts Blocks Block Properties Exceptions Related Blocks Data Execute Data Command Date \u0026 Time Convert Text To Date Time Email Send Email Using SMTP Server Exceptions Handle Block Exception Matching Messages Handle Block Exception Matching Type Name Handle Block Exception Matching Type Names Files \u0026 Folders Copy File Copy Files Copy Folder Copy Folders Create Folder Create Folders Delete File Delete Files Delete Folder Delete Folders Duplicate Folder Get File Information Get Folder Content Get Folder Information Move File Move Files Move Folder Move Folders Read All Lines Read All Text Rename Folder Search File Search Files Write All Lines Write All Text Json Convert Json To Object Lists Get Item At Beginning Get Item At End Set Item At Beginning Set Item At End Set Items At Beginning Set Items At End Set Items At Index Xml Convert Structure To Xml Convert Xml To Structure External Documentation None\n","categories":"","description":"The exception thrown when a property is provided with an empty value, but a non-empty value is required.","excerpt":"The exception thrown when a property is provided with an empty value, but a non-empty value is required.","ref":"/docs/reference/exceptions/common/property/property-empty-exception/","tags":"","title":"PropertyEmptyException"},{"body":"PropertyItemCountException (Cortex.Exceptions.Common.Property.PropertyItemCountException)\nDescription The exception thrown when the values provided for two properties are expected to contain the same number of items, but don’t.\nReasons Item Counts Are Different Values provided for two properties are expected to contain the same number of items, but don’t.\nMessage Format The format of the Message is as follows:\n\"Invalid '\u003csecond-property-name\u003e' provided. There are \u003citems-in-second-property\u003e items in '\u003csecond-property-name\u003e' and \u003citems-in-first-property\u003e items in '\u003cfirst-property-name\u003e'. The number of items in '\u003csecond-property-name\u003e' must be the same as the number of items in '\u003cfirst-property-name\u003e'. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cfirst-property-name\u003e is the name of the first property. \u003csecond-property-name\u003e is the name of the second property. \u003citems-in-first-property\u003e is the count of items in the first property. \u003citems-in-second-property\u003e is the count of items in the second property. How to fix Ensure that the value provided for each of the two properties contains the same number of items.\nProperties Exception Type The type of the exception (i.e. PropertyItemCountException).\nData Type String Message The exception message, providing information about the exception that occurred.\nFor this exception:\n\u003cfirst-property-name\u003e will be replaced with the name of the first property. \u003csecond-property-name\u003e will be replaced with the name of the second property. \u003citems-in-first-property\u003e will be replaced with the count of items in the first property. \u003citems-in-second-property\u003e will be replaced with the count of items in the second property. Data Type String Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations Currently, the \u003cfirst-property-name\u003e and \u003csecond-property-name\u003e have been included in the exception. In future, we will look to include the name and Id of the block, the id, name and value of the property, as well as allowing the exception to contain a link to take you directly to the offending value.\nSee Also Related Data Types String Related Concepts Blocks Block Properties Exceptions Related Blocks Dictionaries Set Items With Keys Set Items With Values Lists Set Items At Indexes Set Items With Values External Documentation None\n","categories":"","description":"The exception thrown when the values provided for two properties are expected to contain the same number of items, but don't.","excerpt":"The exception thrown when the values provided for two properties are expected to contain the same number of items, but don't.","ref":"/docs/reference/exceptions/common/property/property-item-count-exception/","tags":"","title":"PropertyItemCountException"},{"body":"PropertyNotNullableException (Cortex.Exceptions.Decisions.PropertyNotNullableException)\nThe exception thrown when a property cannot accept a non-nullable value type.\nThe format of the exception message is as follows:\n\"TODO. Please click the HelpLink for more information on how to fix this.\" TODO: This is an example of how we can do exceptions with categories and error codes\nCategory Error Code Notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials 300 Some notes 301 Some notes 302 Some notes BasicCredentials.AccessTokenUri 300 How to fix TODO:\n301 How to fix TODO:\n302 How to fix TODO:\n","categories":"","description":"The exception thrown when a property cannot accept a non-nullable value type.","excerpt":"The exception thrown when a property cannot accept a non-nullable value type.","ref":"/docs/reference/exceptions/decisions/propertynotnullableexception/","tags":"","title":"PropertyNotNullableException"},{"body":"PropertyNullException (Cortex.Exceptions.Common.Property.PropertyNullException)\nDescription The exception thrown when a property is provided with a null value, but a non-null value is required.\nReasons Value Is null A null value was provided for the property when a non-null was required.\nMessage Format The format of the Message is as follows:\n\"'\u003cproperty-name\u003e' is null; it must be provided with a non-null value. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cproperty-name\u003e is the name of the property. How to fix Provide a non-null value for the property.\nProperties Exception Type The type of the exception (i.e. PropertyNullException).\nData Type String Message The exception message, providing information about the exception that occurred.\nFor this exception:\n\u003cproperty-name\u003e will be replaced with the name of the property. Data Type String Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations Currently, only the \u003cproperty-name\u003e has been included in the exception. In future, we will look to include the name and Id of the block, the id, name and value of the property, as well as allowing the exception to contain a link to take you directly to the offending value.\nSee Also Related Data Types String Related Concepts Blocks Block Properties Exceptions Related Blocks Data Execute Data Command Date \u0026 Time Convert Text To Date Time Dictionaries Add Item With Key Contains Item With Key And Value Contains Item With Key Contains Item With Value Contains Items With Keys Contains Items With Values Get Count Of All Items Get Count Of Items With Value Get Counts Of Items With Values Get All Items Get All Keys Get Item With Key Get Items With Key Remove All Items Remove Item With Key Remove Item With Value Remove Items With Key Remove Items With Keys Remove Items With Value Remove Items With Values Set All Items Set Item With Key Set Item With Value Set Items With Key Set Items With Keys Set Items With Value Set Items With Values Exceptions Handle Block Exception Matching Messages Handle Block Exception Matching Type Name Handle Block Exception Matching Type Names Rethrow Exception Email Send Email Using SMTP Server Files \u0026 Folders Copy File Copy Files Copy Folder Copy Folders Create Folder Create Folders Delete File Delete Files Delete Folder Delete Folders Duplicate Folder Get File Information Get Folder Content Get Folder Information Move File Move Files Move Folder Move Folders Read All Lines Read All Text Rename Folder Search File Search Files Write All Lines Write All Text Json Convert Json To Object Lists Add Item At Beginning Add Item At End Add Item At Index Add Items At Beginning Add Items At End Add Items At Index Contains Item With Value Contains Items With Values Get Count Of All Items Get Count Of Items With Value Get Count Of Items With Values Get Index Of Item With Value Get Indexes Of Items With Value Get Item At Beginning Get Item At End Get Item At Index Get Items At Beginning Get Items At End Get Items At Index Get Items At Indexes Remove All Items Remove Duplicate Items Remove Item At Beginning Remove Item At End Remove Item At Index Remove Item With Value Remove Items At Beginning Remove Items At End Remove Items At Index Remove Items At Indexes Remove Items With Value Remove Items With Values Set All Items Set Item At Beginning Set Item At End Set Item At Index Set Item With Value Set Items At Beginning Set Items At End Set Items At Index Set Items At Indexes Set Items With Value Set Items With Values Logs Log Event Loops For Loop Objects Convert Object To Text Text Contains All Text Contains Any Text Format Text With Values Join Text Xml Convert Structure To Xml Convert Xml To Structure External Documentation None\n","categories":"","description":"The exception thrown when a property is provided with a `null` value, but a non-null value is required.","excerpt":"The exception thrown when a property is provided with a `null` value, but a non-null value is required.","ref":"/docs/reference/exceptions/common/property/property-null-exception/","tags":"","title":"PropertyNullException"},{"body":"PropertyValueOutOfRangeException (Cortex.Exceptions.Common.Property.PropertyValueOutOfRangeException)\nDescription The exception thrown when a property is provided with a value that falls outside its accepted range.\nThere are multiple reasons that this exception can be thrown:\nProperty Is Empty Property Is Empty Or null Property Is Invalid Property Is Negative Property Greater Than Maximum Value Property Less Than Minimum Value Reasons Property Is Empty An operation such as getting, setting or removing one or more items from an empty collection property was performed.\nMessage Format The format of the Message is as follows:\n\"Invalid '\u003cproperty-name\u003e' provided. There are no items in '\u003ccollection-property-name\u003e'. Check that '\u003ccollection-property-name\u003e' is not empty. Please click the HelpLink for more information on how to fix this.\" where:\n\u003ccollection-property-name\u003e is the name of the empty collection property. \u003cproperty-name\u003e is the name of another property used to perform the get, set or remove operation (e.g. index, indexes, count etc.). How to fix Provide a non-empty collection property.\nProperty Is Empty Or null An operation such as adding, getting or removing text from a null or empty (i.e. \"\") text property was performed.\nMessage Format The format of the Message is as follows:\n\"Invalid '\u003cproperty-name\u003e' provided. Check that '\u003cproperty-name\u003e' is not null or empty. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cproperty-name\u003e is the name of the null or empty (i.e. \"\") text property. How to fix Provide a non-null or non-empty text property.\nProperty Is Invalid A property was set to an invalid value.\nMessage Format The format of the Message can be one of the following:\n\"'\u003cproperty-name\u003e' given was \u003cinvalid-value\u003e; it must be a value between \u003cminimum-allowed-value\u003e and \u003cmaximum-allowed-value\u003e. Please click the HelpLink for more information on how to fix this.\" or\n\"'\u003cproperty-name\u003e' given was \u003cinvalid-value\u003e; it must be a value between \u003cminimum-allowed-value\u003e and \u003cmaximum-allowed-value\u003e (\u003ccalculation-of-maximum-allowed-value\u003e). Please click the HelpLink for more information on how to fix this.\" or\n\"'\u003crelated-property-name\u003e' given was \u003crelated-property-value\u003e and '\u003cproperty-name\u003e' given was \u003cinvalid-value\u003e. The '\u003cproperty-name\u003e' must be less than or equal to \u003cmaximum-allowed-value\u003e (\u003ccalculation-of-maximum-allowed-value\u003e). Please click the HelpLink for more information on how to fix this.\" or\n\"Invalid '\u003cproperty-name\u003e' provided. The values \u003cinvalid-value\u003e in '\u003cproperty-name\u003e' are outside of the expected range. Check that the provided values of '\u003cproperty-name\u003e' are between \u003cminimum-allowed-value\u003e and \u003cmaximum-allowed-value\u003e. Please click the HelpLink for more information on how to fix this.\" where:\n\u003cproperty-name\u003e is the name of the property with the invalid value (e.g. Length, Count, Index). \u003cinvalid-value\u003e is the invalid value of the property (e.g. 100 for non-collection values or 100, 200 for collection values). \u003cminimum-allowed-value\u003e is the minimum value allowed (e.g. 0). \u003cmaximum-allowed-value\u003e is the maximum value allowed (e.g. 9). \u003ccalculation-of-maximum-allowed-value\u003e is how the maximum allowed value is calculated (e.g. 'Text.Length' - 1). \u003crelated-property-name\u003e is the name of a related property relevant to the exception (e.g. Index). \u003crelated-property-value\u003e is the value of a related property relevant to the exception (e.g. 1). How to fix Provide a valid value for the property as instructed by the Message.\nProperty Is Negative A property was set to a negative TimePeriod when a positive TimePeriod was required.\nMessage Format The format of the Message is as follows:\n\"The provided 'TimePeriod' (\u003ctime-period-value-as-text\u003e) equates to \u003ctime-period-value-as-milliseconds\u003e milliseconds which is invalid; it must be a non-negative value. Please click the HelpLink for more information on how to fix this.\" where:\n\u003ctime-period-value-as-text\u003e is the TimePeriod value in its text representation (e.g. 0.0.0.0:0:0:-10). \u003ctime-period-value-as-milliseconds\u003e is the TimePeriod value represented as total milliseconds (e.g. -10). How to fix Provide a valid non-negative TimePeriod value for the property as instructed by the Message.\nProperty Greater Than Maximum Value A positive TimePeriod was added to the property or a negative TimePeriod was subtracted from the property, and the result is greater than the allowed maximum value of the DateTimeOffset data type.\nMessage Format The format of the Message can be one of the following:\nIf a positive TimePeriod was added \"The provided 'DateTimeOffset' (\u003cvalue-of-date-time-offset-property\u003e) with the addition of the given 'TimePeriod' (\u003cvalue-of-time-period-property\u003e) is greater than the maximum of a DateTimeOffset (\u003cmaximum-value-of-date-time-offset\u003e). Please click the HelpLink for more information on how to fix this.\" If a negative TimePeriod value was subtracted \"The provided 'DateTimeOffset' (\u003cvalue-of-date-time-offset-property\u003e) with the subtraction of the given 'TimePeriod' (\u003cvalue-of-time-period-property\u003e) is greater than the maximum of a DateTimeOffset (\u003cmaximum-value-of-date-time-offset\u003e). Please click the HelpLink for more information on how to fix this.\" where:\n\u003cvalue-of-date-time-property\u003e is the value of the DateTimeOffset in ISO 8601 format (i.e. 2022-07-01T14:00:00.0000000+01:00). \u003cvalue-of-time-period-property\u003e is the value of the TimePeriod in text format (i.e. 9999.0.0.0:0:0:0). \u003cmaximum-value-of-date-time-offset\u003e is the maximum value of a DateTimeOffset (i.e. 9999-12-31T23:59:59.9999999+00:00). How to fix Provide a TimePeriod value that when added to or subtracted from the property results in the property being less than the allowed maximum value of the DateTimeOffset data type.\nProperty Less Than Minimum Value A positive TimePeriod was subtracted from the property or a negative TimePeriod was added to the property, and the result was less than the allowed minimum value of the DateTimeOffset data type.\nMessage Format The format of the Message can be one of the following:\nIf a positive TimePeriod was subtracted \"The provided 'DateTimeOffset' (\u003cvalue-of-date-time-offset-property\u003e) with the subtraction of the given 'TimePeriod' (\u003cvalue-of-time-period-property\u003e) is less than the minimum of a DateTimeOffset (\u003cminimum-value-of-date-time-offset\u003e). Please click the HelpLink for more information on how to fix this.\" If a negative TimePeriod value was added \"The provided 'DateTimeOffset' (\u003cvalue-of-date-time-offset-property\u003e) with the addition of the given 'TimePeriod' (\u003cvalue-of-time-period-property\u003e) is less than the minimum of a DateTimeOffset (\u003cminimum-value-of-date-time-offset\u003e). Please click the HelpLink for more information on how to fix this.\" where:\n\u003cvalue-of-date-time-property\u003e is the value of the DateTimeOffset in ISO 8601 format (i.e. 2022-07-01T14:00:00.0000000+01:00). \u003cvalue-of-time-period-property\u003e is the value of the TimePeriod in text format (i.e. -9999.0.0.0:0:0:0). \u003cminimum-value-of-date-time-offset\u003e is the minimum value of a DateTimeOffset (i.e. 0001-01-01T00:00:00.0000000+00:00). How to fix Provide a TimePeriod value that when added to or subtracted from the property results in the property being greater than the allowed minimum value of the DateTimeOffset data type.\nProperties Exception Type The type of the exception (i.e. PropertyValueOutOfRangeException).\nData Type String Message The exception message, providing information about the exception that occurred.\nData Type String Help Link The URL for the relevant section of this exception’s help page.\nData Type String Remarks Known Limitations None\nSee Also Related Data Types Date \u0026 Time DateTimeOffset TimePeriod Text String Related Concepts Exceptions Working with Collections Working with Date and Time Working with Text Related Blocks Date \u0026 Time Add Time Period Subtract Time Period Lists Add Item At Index Add Items At Index Get Item At Index Get Items At Beginning Get Items At End Get Items At Index Get Items At Indexes Remove Item At Index Remove Items At Beginning Remove Items At End Remove Items At Index Remove Items At Indexes Set Item At Index Set Items At Index Set Items At Indexes Schedules Wait For Duration Text Add Text After Index Add Text Before Index Get Text At Beginning Get Text At End Get Text At Index Get Text Before Index Get Text Between Indexes Remove Text At Beginning Remove Text At End Remove Text At Index Remove Text Before Index Remove Text Between Indexes External Documentation None\n","categories":"","description":"The exception thrown when a property is provided with a value that falls outside its accepted range.","excerpt":"The exception thrown when a property is provided with a value that falls outside its accepted range.","ref":"/docs/reference/exceptions/common/property/property-value-out-of-range-exception/","tags":"","title":"PropertyValueOutOfRangeException"},{"body":"QueryCommand (Cortex.DataTypes.Data.QueryCommand)\nSummary A QueryCommand data type is used to define single or multiple Query Statements that can be run against a data source. Statements can be parameterised, which is recommended to prevent SQL Injection.\nCategory: Data Name: QueryCommand Full Name: Cortex.DataTypes.Data.QueryCommand Alias: N/A Description: Defines single or multiple Query Statements that can be run against a data source. Default Value: null Can be used as: DataCommand, Object, dynamic Can be cast to: N/A Properties Command Text The Command Text is used to define single or multiple Query Statements that will be run against the data source.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value $@\"\" Parameters Parameters are used to pass information to the Query Statements that will be run against the data source.\nIt is recommended to always use Parameterised Commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nFor more information see Parameterised Commands.\nData Type dynamic Is Advanced true Default Editor Expression Default Value dynamic with no value Remarks Create a QueryCommand The following table shows some of the ways that a QueryCommand can be created.\nMethod Example Result Editor Support Notes Use a QueryCommand constructor new QueryCommand(\"SELECT * FROM Table\", null) {CommandText: \"SELECT * FROM Table\", Parameters: null} Expression new QueryCommand(\"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", new {SelectParameter = 3}) {\"CommandText\": \"SELECT * FROM Table WHERE Id \u003c @SelectParameter\", \"Parameters\": {\"SelectParameter\": 3}} Expression It is recommended to always use Parameterised Commands as they prevent SQL Injection A QueryCommand can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes CommandText EncryptableText $@\"SELECT * FROM Table WHERE Id \u003c @SelectParameter\" The command that will be queried against the data source. Parameters dynamic new { SelectParameter = 3 }) The parameters that are used within a Parameterised Command. Convert QueryCommand to Text Method Example Result Editor Support Notes Use ToString ($)QueryCommand.ToString() \"Cortex.DataTypes.Data.QueryCommand\" Expression ToString will return the Full Name of the QueryCommand Data Type Use Convert Object To Text block where Object property has a value of {CommandText: \"SELECT * FROM Table\", Parameters: null} \"Cortex.DataTypes.Data.QueryCommand\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a value of {CommandText: \"SELECT * FROM Table\", Parameters: null} \"{\\r\\n \\\"CommandText\\\": \\\"SELECT * FROM Table\\\",\\r\\n \\\"Parameters\\\": null\\r\\n}\" N/A See Convert Object To Json Parameterised Commands It is recommended to always use parameterised commands as they prevent SQL Injection attacks by ensuring the parameters are sanitised before the command is executed.\nThe @ symbol denotes a parameter within the CommandText (e.g. \"SELECT * FROM Table WHERE Name = @Parameter\"). An example of using parameters can be found in Executing Multiple Commands (Safe), whereas, an example of inserting variables into a statement without parameters can be found in Executing Multiple Commands (Unsafe)\nFor more information see Parameterised Commands.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is QueryCommand. The Literal Editor is available for Input properties where the data type is QueryCommand. The Variable Editor is available for Input, InputOutput and Output properties where the data type is QueryCommand. Known limitations ToString Method always returns the Full Name Currently, if the ToString() method is used on a QueryCommand, then its Full Name will be returned; instead of a representation of the data within the QueryCommand.\nIn future this limitation may be removed.\nSee Also Related Data Types DataCommand Command Commands NonQueryCommand Related Concepts Working with Data Sources External Documentation SQL Injection ","categories":"","description":"Holds the information for running a Query command against a data source.","excerpt":"Holds the information for running a Query command against a data source.","ref":"/docs/reference/data-types/data/querycommand/","tags":"","title":"QueryCommand"},{"body":"\rRead All Lines (Cortex.Blocks.FilesAndFolders.ReadFile.ReadAllLinesBlock)\nDescription Reads all Lines from a file at the specified File Path, with an option to explicitly specify the Encoding of the file if needed.\nExamples Read all lines This example will read all lines from \"C:\\Source\\File.txt\", automatically detecting the encoding.\nIn this example assume \"C:\\Source\\File.txt\" is a UTF-8 encoded file containing 10 lines:\nThis is Line 1 This is Line 2 This is Line 3 This is Line 4 This is Line 5 This is Line 6 This is Line 7 This is Line 8 This is Line 9 This is Line 10 Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Lines ($)Lines, with no value ($)Lines is a variable that will be set to an IList\u003cString\u003e Result Reading all lines from \"C:\\Source\\File.txt\" results in the variable ($)Lines being updated to the following:\n[ \"This is Line 1\", \"This is Line 2\", \"This is Line 3\", \"This is Line 4\", \"This is Line 5\", \"This is Line 6\", \"This is Line 7\", \"This is Line 8\", \"This is Line 9\", \"This is Line 10\" ] Properties File Path The File Path to read all lines of the file from.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Encoding Option to specify the Encoding that should be used to read the file.\nMost of the time Encoding can be left as null; allowing the block to automatically attempt to detect the encoding of the file based on the presence of byte order marks. However, if it is found that the returned Lines are not in the correct format because the block was unable to detect the encoding of the file, it is possible to specify the Encoding explicitly using this property.\nFor information about encoding, examples of available encodings and using them, please see Encoding.\nData Type Encoding Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Lines All Lines that were read from the file.\nA line is defined as a sequence of characters followed by a carriage return (i.e. \\r), a line feed (i.e. \\n), or a carriage return immediately followed by a line feed. The resulting Lines do not contain the terminating carriage returns and/or line feeds.\nData Type IList\u003cString\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Lines with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Encoding is invalid (e.g. Encoding.GetEncoding(-1)). See Value Is Invalid. OperationFailedException The File Path does not exist. The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to read the file. An unexpected error occurs when reading the file. PropertyEmptyException Thrown when File Path is empty (i.e. \"\"). PropertyNullException Thrown when File Path is null. Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\File.txt\"). Encoding of text For information about encoding of text, examples of available encodings and using them, please see Encoding.\n","categories":"","description":"Reads all lines from a file at the specified file path.","excerpt":"Reads all lines from a file at the specified file path.","ref":"/docs/reference/blocks/files-and-folders/read-file/read-all-lines-block/","tags":"","title":"Read All Lines"},{"body":"\rRead All Text (Cortex.Blocks.FilesAndFolders.ReadFile.ReadAllTextBlock)\nDescription Reads all Text from a file at the specified File Path, with an option to explicitly specify the Encoding of the file if needed.\nExamples Read all text This example will read all text from \"C:\\Source\\File.txt\", automatically detecting the encoding.\nIn this example assume \"C:\\Source\\File.txt\" is a UTF-8 encoded file containing the following text:\nThis is Line 1 This is Line 2 This is Line 3 This is Line 4 This is Line 5 This is Line 6 This is Line 7 This is Line 8 This is Line 9 This is Line 10 Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Text ($)Text, with no value ($)Text is a variable that will be set to a String Result Reading all text from \"C:\\Source\\File.txt\" results in the variable ($)Text being updated to the following:\n\"This is Line 1 This is Line 2 This is Line 3 This is Line 4 This is Line 5 This is Line 6 This is Line 7 This is Line 8 This is Line 9 This is Line 10\" Properties File Path The File Path to read all text of the file from.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Encoding Option to specify the Encoding that should be used to read the file.\nMost of the time Encoding can be left as null; allowing the block to automatically attempt to detect the encoding of the file based on the presence of byte order marks. However, if it is found that the returned Text are not in the correct format because the block was unable to detect the encoding of the file, it is possible to specify the Encoding explicitly using this property.\nFor information about encoding, examples of available encodings and using them, please see Encoding.\nData Type Encoding Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Text All Text that was read from the file.\nData Type String Property Type Output Is Advanced false Default Editor Variable Default Value ($)Text with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Encoding is invalid (e.g. Encoding.GetEncoding(-1)). See Value Is Invalid. OperationFailedException The File Path does not exist. The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to read the file. An unexpected error occurs when reading the file. PropertyEmptyException Thrown when File Path is empty (i.e. \"\"). PropertyNullException Thrown when File Path is null. Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\File.txt\"). Encoding of text For information about encoding of text, examples of available encodings and using them, please see Encoding.\n","categories":"","description":"Reads all text from a file at the specified file path.","excerpt":"Reads all text from a file at the specified file path.","ref":"/docs/reference/blocks/files-and-folders/read-file/read-all-text-block/","tags":"","title":"Read All Text"},{"body":"","categories":"","description":"Read the content of a file.","excerpt":"Read the content of a file.","ref":"/docs/reference/blocks/files-and-folders/read-file/","tags":"","title":"Read File"},{"body":"","categories":"","description":"Exceptions related to issues with Regex","excerpt":"Exceptions related to issues with Regex","ref":"/docs/reference/exceptions/text/regex/","tags":"","title":"Regex"},{"body":"Regex Syntax Summary TODO:\nWhat is regex matching? how is it different to contains or pattern matching https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference Common regex expressions urls, emails, etc https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-example-scanning-for-hrefs and subsequent links State that we specify a timeout to prevent dos attacks Talk about no current support for old g2 syntax - may add in future TODO: Options\nhttps://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-options https://docs.microsoft.com/en-us/dotnet/standard/base-types/miscellaneous-constructs-in-regular-expressions Links:\nRegex Best Practices - https://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices Character Classes TODO:\nInclude information about any builtin snippets for each regex A character class matches any of a set of characters. Character classes include the language elements listed in the following table.\nSyntax Description Pattern Matches [characters] Matches any character found in characters. [oz] o in Cortex [^characters] Matches any character not found in characters. [^oz] C, r, t, e, x in Cortex [first-last] Matches any character in the range of characters from first to last. [A-C] C in Cortex . Wildcard. Matches any character except \\n. C.r Cor in Cortex \\p{category} Matches any character in a category of Unicode characters, specified by category. To see what you can use for category, please check the supported Unicode general categories and the supported named blocks. \\p{Lu} C in Cortex \\P{category} Matches any character not in a category of Unicode characters, specified by category. To see what you can use for category, please check the supported Unicode general categories, and the supported named blocks. \\P{Lu} o, r, t, e, x in Cortex \\w Matches any letter, decimal digit, or an underscore. \\w C, o, r, t, e, x in Cortex ! \\W Matches any character except a letter, decimal digit, or an underscore. \\W ! in Cortex ! \\s Matches any white-space character. \\w\\s x in Cortex ! \\S Matches any character except a white-space character. \\s\\S ! in Cortex ! \\d Matches any decimal digit. \\d 7 in Cortex 7! \\D Matches any character except a decimal digit. \\D C, o, r, t, e, x, , ! in Cortex 7! https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#SupportedUnicodeGeneralCategories https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#supported-named-blocks\nCharacter Escapes TODO:\nInclude information about any builtin snippets for each regex The following table lists the character escapes supported by regular expressions in .NET.\nSyntax Description Pattern Matches \\r Matches a carriage return. \\r\\n(\\w+) \\r\\nCortex in \\r\\nCortex with\\na new line \\n Matches a newline. \\r\\n(\\w+) \\r\\nCortex in \\r\\nCortex with\\na new line \\t Matches a tab. (\\w+)\\t Cortex1\\t, Cortex2\\t in Cortex1\\tCortex2\\t [\\b] Matches a backspace. Note that it must be enclosed in brackets to have this meaning. [\\b]{3,} \\b\\b\\b\\b in \\b\\b\\b\\b \\f Matches a form feed. [\\f]{2,} \\f\\f\\f in \\f\\f\\f \\e Matches an escape. \\e \\x001B in \\x001B \\v Matches a vertical tab. [\\v]{2,} \\v\\v\\v in \\v\\v\\v \\a Matches the bell character. \\a \\u0007 in Cortex ‘\\u0007’ \\octal Matches a character, where octal is the octal representation of that character. \\w\\040\\w x C in Cortex Cortex \\xhex Matches a character, where hex is the two-digit hexadecimal representation of that character. \\w\\x20\\w x C in Cortex Cortex \\uunicode Matches a Unicode character, where unicode is the four digit hexadecimal representation of that Unicode character. \\w\\u0020\\w x C in Cortex Cortex \\ccharacter Matches an ASCII control character specified by character. \\cC \\x0003 in \\x0003 Quantifiers TODO:\nInclude information about any builtin snippets for each regex A quantifier specifies how many instances of the previous element (which can be a character, a group, or a character class) must be present in the input string for a match to occur. Quantifiers include the language elements listed in the following table.\nSyntax Description Pattern Matches * Matches previous element zero or more times. co*rtex crtex, cortex, coortex, coooortex in crtex cortex coortex coooortex + Matches previous element one or more times. co+rtex cortex, coortex, coooortex in crtex cortex coortex coooortex ? Matches previous element zero or one times. co?rtex crtex, cortex in crtex cortex coortex coooortex {n} Matches previous element exactly n times. co{2}rtex coortex in crtex cortex coortex coooortex {n,} Matches previous element at least n times. co{2,}rtex coortex, coooortex in crtex cortex coortex coooortex {n,m} Matches previous element at least n times and at most m times. co{1,2}rtex cortex, coortex in crtex cortex coortex coooortex *? Matches previous element zero or more times, but as few times as possible. cort(ex)*? cort in cortexexex +? Matches previous element one or more times, but as few times as possible. cort(ex)+? cortex in cortexexex ?? Matches previous element zero or one time, but as few times as possible. cort(ex)?? cort in cortexexex {n,}? Matches previous element at least n times, but as few times as possible. cort(ex){2,}? cortexex in cortexexex {n,m}? Matches previous element at least n times and at most m times, but as few times as possible. cort(ex){1,3}? cortex in cortexexex Anchors TODO:\nInclude information about any builtin snippets for each regex Anchors cause a match to succeed or fail depending on the current position in the string.\nSyntax Description Pattern Matches ^ Matches the beginning of the input. ^\\w{3} Cor in Cortex $ Matches the end of the input, or the point before a final \\n at the end of the input. \\w{3}$ tex in Cortex \\A Matches the beginning of the input. Identical to ^, except it is unaffected by the multi-line option. \\A\\w{3} Cor in Cortex \\z Matches the end of the input, without exception. \\w{3}\\z tex in Cortex \\Z Matches the end of the input, or the point before a final \\n at the end of the input. Identical to $, except it is unaffected by the multi-line option. \\w{3}\\Z tex in Cortex \\G Matches the point that the previous match ended. Used to find contiguous matches. \\G\\D*\\s Cortex , reads in Cortex reads 7 files \\b Matches any word boundary. Specifically, any point between a \\w and a \\W. \\b\\w+\\s\\w+\\b Cortex reads, Cortex writes in Cortex reads Cortex writes \\B Matches any point that is not a word boundary. Specifically, any point not between a \\w and a \\W. \\Brt\\w*\\b rtex, rtex in Cortex reads Cortex writes Grouping Constructs TODO:\nInclude information about any builtin snippets for each regex Grouping constructs delineate sub-expressions of a regular expression and typically capture sub-strings of an input string. Grouping constructs include the language elements listed in the following table.\nSyntax Description Pattern Matches (subpattern) Captures subpattern as an unnamed group. (\\w)\\1 oo in Coortex (?\u003cname\u003esubpattern) Captures subpattern as a named group specified by name. (?\u003cdouble\u003e\\w)\\k\u003cdouble\u003e oo in Coortex (?\u003cname-previous\u003esubpattern) Balancing group definition. This allows nested constructs to be matched, such as parentheses or HTML tags. The previously defined group to balance against is specified by previous. Captures subpattern as a named group specified by name, or name can be omitted to capture as an unnamed group. (((?\u003copen\u003e\u003cspan\u003e)[^\u003c]*)+([^\u003c]*(?\u003cclose-open\u003e\u003c/span\u003e))+)+(?(open)(?!)) \u003cspan\u003eCortex this is included\u003c/span\u003e, \u003cspan\u003eCortex this is included too\u003c/span\u003e in not included \u003cspan\u003eCortex this is included\u003c/span\u003e not included either \u003cspan\u003eCortex this is included too\u003c/span\u003e (?:subpattern) Non-capturing group. Allows the use of parentheses without subpattern being captured into a group. Cortex\\s(?:include)? Cortex include, Cortex in Cortex include Cortex not include (?enabled-disabled:subpattern) Allows subpattern to be matched with different options than the rest of the pattern. Any inline option characters in enabled or disabled will enable or disable specific options, respectively. To see what inline option characters are available, please check the regular expressions options. (?i:c|v)(ortex) cortex, Cortex, Vortex in cortex Cortex Vortex CORTEX (?=subpattern) Zero-width positive look-ahead assertion. Continues matching only if subpattern matches on the right. \\w+(?=ex\\b) Cort, Vort in Cortex Vortex Balloon (?!subpattern) Zero-width negative look-ahead assertion. Continues matching only if subpattern does not match on the right. \\b\\w+\\.(?!exe)\\w+\\b cortex.jpg, cortex.html in cortex.jpg cortex.html .*.html cortex.exe (?\u003c=subpattern) Zero-width positive look-behind assertion. Continues matching only if subpattern matches on the left. (?\u003c=\\(\\$\\))\\w+ variable, 22 in ($)variable ($)22 ($)– (?\u003c!subpattern) Zero-width negative look-behind assertion. Continues matching only if subpattern does not match on the left. \\b\\w(?\u003c![aeiou])\\w* Cortex, words, which, does, not, start, with, vowel, like in Cortex words which does not start with a vowel like all (?\u003esubpattern) Prevents backtracking over subpattern, which can improve performance. [cv](?\u003eo+r+) cor, coor, vor in cortex coortex vortex gortex Back-reference Constructs TODO:\nInclude information about any builtin snippets for each regex A back-reference allows a previously matched sub-expression to be identified subsequently in the same regular expression. The following table lists the back-reference constructs supported by regular expressions in .NET.\nSyntax Description Pattern Matches \\number Matches the value of a previously captured group, specified by number. \\b(\\w)\\w*\\1\\b xcortex, that in Finds all words like xcortex that start and end with the same letter \\k\u003cname\u003e Matches the value of a previously captured named group, specified by name. (?\u003cpunctuation\u003e\\p{P})\\w+\\k\u003cpunctuation\u003e !cortex!, ?cortex? in !cortex! ?cortex? XcortexX Alternation Constructs TODO:\nInclude information about any builtin snippets for each regex Alternation constructs changes a regular expression to enable either/or matching. These constructs include the language elements listed in the following table.\nSyntax Description Pattern Matches | Functions as a logical or. Matches any elements it separates. (c|v)ortex cortex, vortex in cortex vortex xortex (?(subpattern)yes|no) Treats subpattern as a zero-width assertion to check if it matches. If so, attempts to match with the yes subpattern. Otherwise, tries the no subpattern. The |no part is optional. \\b(?(\\w+tez\\b)\\w{3}|cortex) cortex, cor in cortex cortez vortex (?(group)yes|no) Checks if a previously defined group was successfully captured, specified by group, which can be a number or a name for a named group. If so, attempts to match with the yes subpattern. Otherwise, tries the no subpattern. The |no part is optional. (?(\u003cquoted\u003e\\(\\$\\)))\\w+|'\\w+' cortex, ‘cortex’ in ($)cortex ‘cortex’ Substitutions TODO:\nInclude information about any builtin snippets for each regex Substitutions are regular expression language elements supported in replacement patterns.\nSyntax Description Pattern Replacement Result $number Substitutes the value of a group, specified by number. \\b(\\w+)(\\s)(\\w+)\\b $3$2$1 Cortex Great becomes Great Cortex ${name} Substitutes the value of a named group, specified by name. \\b(?\u003cword1\u003e\\w+)(\\s)(?\u003cword2\u003e\\w+)\\b ${word2} ${word1} Cortex Great becomes Great Cortex $$ Substitutes the $ character. \\b(dollar) $$ (dollar)name becomes ($)name $\u0026 Substitutes the entire match. \\w+ \\*\\*$\u0026\\*\\* Cortex becomes **Cortex** $` Substitutes all input text found before the match. #+ $` Co##rtex becomes CoCortex $' Substitutes all input text found after the match. #+ $' Cort##ex becomes Cortexex $+ Substitutes the last group captured. Co(r) $+ CoCortex becomes Cortex $_ Substitutes the entire input. \\w+? $_ Cortex becomes Cortex Cortex Cortex Cortex Cortex Cortex Remarks Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO: List blocks which support using regex\nTODO: All blocks which support regex should link back here from the properties that support it\nExternal Documentation TODO\n","categories":"","description":"Information regarding .Net regex syntax.","excerpt":"Information regarding .Net regex syntax.","ref":"/docs/reference/concepts/working-with/text/regex-syntax/","tags":"","title":"Regex Syntax"},{"body":"RegexParsingFailedException (Cortex.Exceptions.Text.Regex.RegexParsingFailedException)\nThe exception thrown when a property is provided with an invalid regex value.\nThe format of the exception message is as follows:\nTODO How to fix Provide a valid regex value for the property.\n","categories":"","description":"The exception thrown when a property is provided with an invalid regex value.","excerpt":"The exception thrown when a property is provided with an invalid regex value.","ref":"/docs/reference/exceptions/text/regex/regexparsingfailedexception/","tags":"","title":"RegexParsingFailedException"},{"body":"\r","categories":"","description":"Release notes for all currently available Cortex Versions.","excerpt":"Release notes for all currently available Cortex Versions.","ref":"/docs/guides/cortex-gateway/help/cortex-release-notes/","tags":"","title":"Release Notes"},{"body":"\rRemove All Items (Cortex.Blocks.Dictionaries.RemoveItem.RemoveAllItemsBlock`3)\nDescription Removes all items from a Dictionary.\nExamples Remove all items from an empty Dictionary This example will attempt to remove all items from {}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Result Attempting to remove all items from {} results in no operation, as there is nothing to remove. Therefore, the variable ($)Dictionary remains:\n{} Remove all items from a Dictionary This example will remove all items from {\"Key1\" : 1, \"Key2\" : 2}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Result Removing all items from {\"Key1\" : 1, \"Key2\" : 2} results in the variable ($)Dictionary being updated to the following:\n{} Properties Dictionary The Dictionary where all items are removed from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor [Variable][] Default Value ($)Dictionary with no value Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. PropertyNullException Thrown when Dictionary is null. Remarks Empty Dictionary If Dictionary is empty (i.e. {}) there is nothing to remove, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Removes all items from a Dictionary.","excerpt":"Removes all items from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/remove-all-items-block-3/","tags":"","title":"Remove All Items"},{"body":"\rRemove All Items (Cortex.Blocks.Lists.RemoveItem.RemoveAllItemsBlock`2)\nDescription Removes all items from a List.\nExamples Remove all items from an empty List This example will attempt to remove all items from [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Result Attempting to remove all items from [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove all items from a List This example will remove all items from [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Result Removing all items from [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[] Properties List The List where all items are removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. Remarks Empty List If List is empty (i.e. []) there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes all items from a List.","excerpt":"Removes all items from a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-all-items-block-2/","tags":"","title":"Remove All Items"},{"body":"\rRemove Duplicate Items (Cortex.Blocks.Lists.RemoveItem.RemoveDuplicateItemsBlock`2)\nDescription Removes duplicate items from a List.\nExamples Remove duplicate items from an empty List This example will attempt to remove duplicate items from [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Result Attempting to remove duplicate items from [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove duplicate items from a List without duplicates This example will attempt to remove duplicate items from [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Result Attempting to remove duplicate items from [\"Some Text\", 1] results in no operation, as there are no duplicates to remove. Therefore, the variable ($)List remains:\n[\"Some Text\", 1] Remove duplicate items from a List containing duplicates This example will remove duplicate items from [\"Some Text\", 1, \"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Result Removing duplicate items from [\"Some Text\", 1, \"Some Text\", 1] results in the second occurrences of \"Some Text\" and 1 being removed; with the variable ($)List being updated to the following:\n[\"Some Text\", 1] Properties List The List where duplicate items are removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nFor information and examples of how it is determined whether two items are considered the same, please see Object Equality.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. Remarks Empty List If List is empty (i.e. []) there is nothing to remove, so no operation is performed.\nList with no duplicates If List does not contain duplicates there is nothing to remove, so no operation is performed.\nWhich duplicates are removed? If List contains duplicates, the first occurrences of the duplicated items are kept; all other occurrences are removed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes duplicate items from a List.","excerpt":"Removes duplicate items from a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-duplicate-items-block-2/","tags":"","title":"Remove Duplicate Items"},{"body":"\rRemove Item At Beginning (Cortex.Blocks.Lists.RemoveItem.RemoveItemAtBeginningBlock`2)\nDescription Removes the item at the beginning of a List.\nExamples Remove the Item at the beginning of an empty List This example will attempt to remove the item at the beginning of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Result Attempting to remove the item at the beginning of [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove the Item at the beginning of a List This example will remove the item at the beginning of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Result Removing the item at the beginning of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[1] Properties List The List where the item is removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. Remarks Empty List If List is empty (i.e. []) there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes the item at the beginning of a List.","excerpt":"Removes the item at the beginning of a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-item-at-beginning-block-2/","tags":"","title":"Remove Item At Beginning"},{"body":"\rRemove Item At End (Cortex.Blocks.Lists.RemoveItem.RemoveItemAtEndBlock`2)\nDescription Removes the item at the end of a List.\nExamples Remove the Item at the end of an empty List This example will attempt to remove the item at the end of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Result Attempting to remove the item at the end of [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove the Item at the end of a List This example will remove the item at the end of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Result Removing the item at the end of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"Some Text\"] Properties List The List where the item is removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. Remarks Empty List If List is empty (i.e. []) there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes the item at the end of a List.","excerpt":"Removes the item at the end of a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-item-at-end-block-2/","tags":"","title":"Remove Item At End"},{"body":"\rRemove Item At Index (Cortex.Blocks.Lists.RemoveItem.RemoveItemAtIndexBlock`2)\nDescription Removes the item at the specified Index of a List.\nExamples Remove the Item at the first Index (i.e. 0) of an empty List This example will attempt to remove the item at index 0 of [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Attempting to remove the item at index 0 of [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove the Item at the first Index (i.e. 0) of a List This example will remove the item at index 0 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Removing the item at index 0 of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[1] Remove the Item at the last Index (i.e. Index equals count of items - 1) of a List This example will remove the item at index 1 of [\"Some Text\", 1].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e Index ($)Index, with value 1 ($)Index is a variable of type Int32 Result Remove the item at index 1 of [\"Some Text\", 1] results in the variable ($)List being updated to the following:\n[\"Some Text\"] Properties List The List where the item is removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Index The Index to remove the item at.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Index is out of the range of the list indexes. Valid indexes are between and including 0 and the count of items in the List - 1. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes the item at the specified index of a List.","excerpt":"Removes the item at the specified index of a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-item-at-index-block-2/","tags":"","title":"Remove Item At Index"},{"body":"\rRemove Item With Key (Cortex.Blocks.Dictionaries.RemoveItem.RemoveItemWithKeyBlock`3)\nDescription Removes the specified Occurrence of an item with the given Key from a Dictionary.\nExamples Remove the first Occurrence of an item with a Key from an empty Dictionary This example will attempt to remove the first occurrence of an item with the key \"Key1\" from {}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result Attempting to remove the first occurrence of an item with the key \"Key1\" from {} results in no operation, as there is nothing to remove. Therefore, the variable ($)Dictionary remains:\n{} Remove the first Occurrence of an item with a Key from a Dictionary This example will attempt to remove the first occurrence of an item with the key \"Key1\" from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result An Occurrence of 1 means remove the first occurrence; 2 means second etc.\nAttempting to remove the first occurrence of an item with the key \"Key1\" from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Dictionary being updated to the following:\n{\"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} Remove the last Occurrence of an item with a Key from a Dictionary Typically keys are simple data types such as String, Int32, Boolean, and for these a dictionary cannot the same key value more than once. This is due to how the data type’s object equality is implemented (two items are considered equal if they have the same value rather than being the same object reference).\nHowever, other data types such as IList\u003cInt32\u003e can also be used as keys. For these data types, object equality only considers two items equal if they are the same reference; it does not care about whether they have the same value. Therefore, it is possible to have the same key value more than once, and as a result you should be able to remove any occurrence of item with that key.\nThis example will illustrate this, by attempting to remove the last occurrence of an item with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} ($)Dictionary is a variable of type IDictionary\u003cIList\u003cInt32\u003e, Int32\u003e Key ($)Key, with value [1] ($)Key is a variable of type IList\u003cInt32\u003e Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Result An Occurrence of -1 means remove the last occurrence; -2 means second last etc.\nAttempting to remove the last occurrence of an item with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} results in the variable ($)Dictionary being updated to the following:\n{[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2} Properties Dictionary The Dictionary to remove the specified Occurrence of item with the given Key from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key the item to remove must have.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of matching item to remove from the Dictionary.\nItems are considered matching if they have the specified Key.\nUnlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nOccurrences Unlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to remove, so no operation is performed.\nNo items with given Key, or Occurrence is not present If Dictionary does not contain items with the given Key or the specified Occurrence is not present, there is nothing to remove, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Removes the specified occurrence of an item with the given key from a Dictionary.","excerpt":"Removes the specified occurrence of an item with the given key from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/remove-item-with-key-block-3/","tags":"","title":"Remove Item With Key"},{"body":"\rRemove Item With Value (Cortex.Blocks.Dictionaries.RemoveItem.RemoveItemWithValueBlock`3)\nDescription Removes the specified Occurrence of an item matching a Value from a Dictionary.\nExamples Remove the first Occurrence of an item matching a Value from an empty Dictionary This example will attempt to remove the first occurrence of an item matching the value 1 from {}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result Attempting to remove the first occurrence of an item matching the value 1 from {} results in no operation, as there is nothing to remove. Therefore, the variable ($)Dictionary remains:\n{} Remove the first Occurrence of an item matching a Value from a Dictionary This example will attempt to remove the first occurrence of an item matching the value 1 from {\"Key1\" : 1, \"Key2\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result An Occurrence of 1 means remove the first occurrence; 2 means second etc.\nAttempting to remove the first occurrence of an item matching the value 1 from {\"Key1\" : 1, \"Key2\" : 1} results in the variable ($)Dictionary being updated to the following:\n{\"Key2\" : 1} Remove the last Occurrence of an item matching a Value from a Dictionary This example will attempt to remove the last occurrence of an item matching the value 1 from {\"Key1\" : 1, \"Key2\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Result An Occurrence of -1, means remove the last occurrence; -2 means second last etc.\nAttempting to remove the last occurrence of an item matching the value 1 from {\"Key1\" : 1, \"Key2\" : 1} results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 1} Properties Dictionary The Dictionary to remove the specified Occurrence of matching item from.\nItems are considered matching if they have the specified Value.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Value The Value the item to remove must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of matching item to remove from the Dictionary.\nItems are considered matching if they have the specified Value.\nUnlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nOccurrences Unlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to remove, so no operation is performed.\nNo items matching Value, or Occurrence is not present If Dictionary does not contain items matching the specified Value or the specified Occurrence is not present, there is nothing to remove, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Removes the specified occurrence of an item matching a value from a Dictionary.","excerpt":"Removes the specified occurrence of an item matching a value from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/remove-item-with-value-block-3/","tags":"","title":"Remove Item With Value"},{"body":"\rRemove Item With Value (Cortex.Blocks.Lists.RemoveItem.RemoveItemWithValueBlock`2)\nDescription Removes the specified Occurrence of an item matching a Value from a List.\nExamples Remove the first Occurrence of an item matching a Value from an empty List This example will attempt to remove the first occurrence of an item matching the value 1 from [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result Attempting to remove the first occurrence of an item matching the value 1 from [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove the first Occurrence of an item matching a Value from a List This example will attempt to remove the first occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result An Occurrence of 1 means remove the first occurrence; 2 means second etc.\nAttempting to remove the first occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1] results in the variable ($)List being updated to the following:\n[2, 3, 3, 2, 1] Remove the last Occurrence of an item matching a Value from a List This example will attempt to remove the last occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Result An Occurrence of -1, means remove the last occurrence; -2 means second last etc.\nAttempting to remove the last occurrence of an item matching the value 1 from [1, 2, 3, 3, 2, 1] results in the variable ($)List being updated to the following:\n[1, 2, 3, 3, 2] Properties List The List to remove the specified Occurrence of matching item from.\nItems are considered matching if they have the specified Value.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value the item to remove must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of matching item to remove from the List.\nItems are considered matching if they have the specified Value.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nOccurrences For information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nEmpty List If List is empty (i.e. []) there is nothing to remove, so no operation is performed.\nNo items matching Value, or Occurrence is not present If List does not contain items matching the specified Value or the specified Occurrence is not present, there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes the specified occurrence of an item matching a value from a List.","excerpt":"Removes the specified occurrence of an item matching a value from a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-item-with-value-block-2/","tags":"","title":"Remove Item With Value"},{"body":"","categories":"","description":"Remove an item or multiple items from a dictionary.","excerpt":"Remove an item or multiple items from a dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/","tags":"","title":"Remove Item(s)"},{"body":"","categories":"","description":"Remove an item or multiple items from a list.","excerpt":"Remove an item or multiple items from a list.","ref":"/docs/reference/blocks/lists/remove-item/","tags":"","title":"Remove Item(s)"},{"body":"\rRemove Items At Beginning (Cortex.Blocks.Lists.RemoveItem.RemoveItemsAtBeginningBlock`2)\nDescription Removes the specified Count of items from the beginning of a List.\nExamples Remove Count of items from the beginning of a List This example will remove 2 items from the beginning of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Count ($)Count, with value 2 ($)Count is a variable of type Int32 Result Removing 2 items from the beginning of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)List being updated to the following:\n[\"Some More Text\", 2] Properties List The List where the items are removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Count The Count of items to remove.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Count is greater than the count of items in the List - 1. Remarks Negative Count If Count is negative all items in the List are removed.\nZero Count If Count is 0 there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes a count of items from the beginning of a List.","excerpt":"Removes a count of items from the beginning of a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-items-at-beginning-block-2/","tags":"","title":"Remove Items At Beginning"},{"body":"\rRemove Items At End (Cortex.Blocks.Lists.RemoveItem.RemoveItemsAtEndBlock`2)\nDescription Removes the specified Count of items from the end of a List.\nExamples Remove Count of items from the end of a List This example will remove 2 items from the end of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Count ($)Count, with value 2 ($)Count is a variable of type Int32 Result Removing 2 items from the end of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)List being updated to the following:\n[\"Some Text\", 1] Properties List The List where the items are removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Count The Count of items to remove.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Count is greater than the count of items in the List - 1. Remarks Negative Count If Count is negative all items in the List are removed.\nZero Count If Count is 0 there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes a count of items from the end of a List.","excerpt":"Removes a count of items from the end of a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-items-at-end-block-2/","tags":"","title":"Remove Items At End"},{"body":"\rRemove Items At Index (Cortex.Blocks.Lists.RemoveItem.RemoveItemsAtIndexBlock`2)\nDescription Removes the specified Count of items starting at the given Index of a List.\nExamples Remove Count of items at the first Index (i.e. 0) of a List This example will remove 2 items at index 0 of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Count ($)Count, with value 2 ($)Count is a variable of type Int32 Result Removing 2 items at index 0 of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)List being updated to the following:\n[\"Some More Text\", 2] Properties List The List where the items are removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Index The Index to remove the Count of items at. This is an inclusive index, which means the item at the specified index will be included.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Count The Count of items to remove.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when Index is less than 0 or greater than the count of items in List - 1. Thrown when Index + Count is greater than the count of items in the List - 1. Remarks Index is inclusive The Index is an inclusive index, which means the item at the index will be included in the removed items.\nNegative Count If Count is negative all items after and including the specified Index in the List are removed.\nZero Count If Count is 0 there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes a count of items starting at the specified index of a List.","excerpt":"Removes a count of items starting at the specified index of a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-items-at-index-block-2/","tags":"","title":"Remove Items At Index"},{"body":"\rRemove Items At Indexes (Cortex.Blocks.Lists.RemoveItem.RemoveItemsAtIndexesBlock`2)\nDescription Removes the items at each of the specified Indexes of a List.\nExamples Remove items at the first and third Indexes (i.e. [0, 2]) of a List This example will remove items at indexes 0 and 2 of [\"Some Text\", 1, \"Some More Text\", 2].\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e Indexes ($)Indexes, with value [0, 2] ($)Indexes is a variable of type IEnumerable\u003cInt32\u003e Result Removing items at indexes 0 and 2 of [\"Some Text\", 1, \"Some More Text\", 2] results in the variable ($)List being updated to the following:\n[1, 2] Properties List The List where the items are removed from.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Indexes The Indexes of the items to remove.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type IEnumerable\u003cInt32\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cint\u003e() {} Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. DuplicateValueException Thrown when Indexes contains duplicate values. PropertyNullException Thrown when List or Indexes is null. PropertyValueOutOfRangeException Thrown when Indexes contains no values. Thrown when any index in Indexes is less than 0 or greater than the count of items in List - 1. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes the items at each of the specified indexes of a List.","excerpt":"Removes the items at each of the specified indexes of a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-items-at-indexes-block-2/","tags":"","title":"Remove Items At Indexes"},{"body":"\rRemove Items With Key (Cortex.Blocks.Dictionaries.RemoveItem.RemoveItemsWithKeyBlock`3)\nDescription Removes all items with the given Key from a Dictionary.\nExamples Remove all items with a Key from an empty Dictionary This example will attempt to remove all items with the key \"Key1\" from {}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String Result Attempting to remove all items with the key \"Key1\" from {} results in no operation, as there is nothing to remove. Therefore, the variable ($)Dictionary remains:\n{} Remove all items with a Key from a Dictionary Typically keys are simple data types such as String, Int32, Boolean, and for these a dictionary cannot the same key value more than once. This is due to how the data type’s object equality is implemented (two items are considered equal if they have the same value rather than being the same object reference).\nHowever, other data types such as IList\u003cInt32\u003e can also be used as keys. For these data types, object equality only considers two items equal if they are the same reference; it does not care about whether they have the same value. Therefore, it is possible to have the same key value more than once, and as a result you should be able to remove all items with that key.\nThis example will illustrate this, by attempting to remove all items with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} ($)Dictionary is a variable of type IDictionary\u003cIList\u003cInt32\u003e, Int32\u003e Key ($)Key, with value [1] ($)Key is a variable of type IList\u003cInt32\u003e Result Attempting to remove all items with the key [1] from {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} results in the variable ($)Dictionary being updated to the following:\n{[2] : 2, [3] : 3, [3] : 3, [2] : 2} Properties Dictionary The Dictionary to remove all items with the given Key from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key the items to remove must have.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to remove, so no operation is performed.\nNo items with given Key If Dictionary does not contain items with the given Key there is nothing to remove, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Removes all items with the given key from a Dictionary.","excerpt":"Removes all items with the given key from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/remove-items-with-key-block-3/","tags":"","title":"Remove Items With Key"},{"body":"\rRemove Items With Keys (Cortex.Blocks.Dictionaries.RemoveItem.RemoveItemsWithKeysBlock`3)\nDescription Removes all items with any of the given Keys from a Dictionary.\nExamples Remove all items with any of the given Keys from an empty Dictionary This example will attempt to remove all items with any of the given keys in [\"Key1\", \"Key2\"] from {}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Keys ($)Keys, with value [\"Key1\", \"Key2\"] ($)Keys is a variable of type IDictionary\u003cString\u003e Result Attempting to remove all items with any of the given keys in [\"Key1\", \"Key2\"] from {} results in no operation, as there is nothing to remove. Therefore, the variable ($)Dictionary remains:\n{} Remove all items with any of the given Keys from a Dictionary This example will attempt to remove all items with any of the given keys in [\"Key1\", \"Key2\"] from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Keys ($)Keys, with value [\"Key1\", \"Key2\"] ($)Keys is a variable of type IDictionary\u003cString\u003e Result Attempting to remove all items with any of the given keys in [\"Key1\", \"Key2\"] from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Dictionary being updated to the following:\n{\"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} Properties Dictionary The Dictionary to remove all items with any of the given Keys from.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Keys The Keys the items to remove must have one of.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type IEnumerable\u003cTKey\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentNullException Thrown when any key in Keys is null CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. PropertyNullException Thrown when Dictionary or Keys are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to remove, so no operation is performed.\nEmpty Keys If Keys is empty (i.e. []) there are no keys to match, therefore nothing can be removed and no operation is performed.\nNo items with one of the given Keys If Dictionary does not contain items with one of the given Keys, there is nothing to remove for that key.\nNo items with any of the given Keys If Dictionary does not contain items with any of the given Keys there is nothing to remove, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Removes all items with any of the given keys from a Dictionary.","excerpt":"Removes all items with any of the given keys from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/remove-items-with-keys-block-3/","tags":"","title":"Remove Items With Keys"},{"body":"\rRemove Items With Value (Cortex.Blocks.Dictionaries.RemoveItem.RemoveItemsWithValueBlock`3)\nDescription Removes all items matching a Value from a Dictionary.\nExamples Remove all items matching a Value from an empty Dictionary This example will attempt to remove all items matching the value 1 from {}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Result Attempting to remove all items matching the value 1 from {} results in no operation, as there is nothing to remove. Therefore, the variable ($)Dictionary remains:\n{} Remove all items matching a Value from a Dictionary This example will attempt to remove all items matching the value 1 from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Result Attempting to remove all items matching the value 1 from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Dictionary being updated to the following:\n{\"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2} Properties Dictionary The Dictionary to remove all matching items from.\nItems are considered matching if they have the specified Value.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Value The Value the items to remove must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to remove, so no operation is performed.\nNo items matching Value If Dictionary does not contain items matching the specified Value, there is nothing to remove, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Removes all items matching a value from a Dictionary.","excerpt":"Removes all items matching a value from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/remove-items-with-value-block-3/","tags":"","title":"Remove Items With Value"},{"body":"\rRemove Items With Value (Cortex.Blocks.Lists.RemoveItem.RemoveItemsWithValueBlock`2)\nDescription Removes all items matching a Value from a List.\nExamples Remove all items matching a Value from an empty List This example will attempt to remove all items matching the value 1 from [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Result Attempting to remove all items matching the value 1 from [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove all items matching a Value from a List This example will attempt to remove all items matching the value 1 from [1, 2, 3, 3, 2, 1].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 Result Attempting to remove all items matching the value 1 from [1, 2, 3, 3, 2, 1] results in the variable ($)List being updated to the following:\n[2, 3, 3, 2] Properties List The List to remove all matching items from.\nItems are considered matching if they have the specified Value.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value the items to remove must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []) there is nothing to remove, so no operation is performed.\nNo items matching Value If List does not contain items matching the specified Value, there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes all items matching a value from a List.","excerpt":"Removes all items matching a value from a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-items-with-value-block-2/","tags":"","title":"Remove Items With Value"},{"body":"\rRemove Items With Values (Cortex.Blocks.Dictionaries.RemoveItem.RemoveItemsWithValuesBlock`3)\nDescription Removes all items matching one of the specified Values from a Dictionary.\nExamples Remove all items matching one of the specified Values from an empty Dictionary This example will attempt to remove all items matching one of the values [1, 2] from {}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {} ($)Dictionary is a variable of type IDictionary\u003cdynamic, dynamic\u003e Values ($)Values, with value [1, 2] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Result Attempting to remove all items matching one of the values [1, 2] from {} results in no operation, as there is nothing to remove. Therefore, the variable ($)Dictionary remains:\n{} Remove all items matching one of the specified Values from a Dictionary This example will attempt to remove all items matching one of the values [1, 2] from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1}.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Values ($)Values, with value [1, 2] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Result Attempting to remove all items matching one of the values [1, 2] from {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} results in the variable ($)Dictionary being updated to the following:\n{\"Key3\" : 3, \"Key4\" : 3} Properties Dictionary The Dictionary to remove all matching items from.\nItems are considered matching if they have one of the specified Values.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Values The Values the items to remove must match one of.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. PropertyNullException Thrown when Dictionary or Values is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to remove, so no operation is performed.\nEmpty Values If Values is empty (i.e. []) there are no values to match, therefore nothing can be removed and no operation is performed.\nNo items matching a specified value in Values If Dictionary does not contain items matching one of the specified Values, there is nothing to remove for that value.\nNo items matching Values If Dictionary does not contain items matching any of the specified Values, there is nothing to remove, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Removes all items matching one of the specified values from a Dictionary.","excerpt":"Removes all items matching one of the specified values from a Dictionary.","ref":"/docs/reference/blocks/dictionaries/remove-item/remove-items-with-values-block-3/","tags":"","title":"Remove Items With Values"},{"body":"\rRemove Items With Values (Cortex.Blocks.Lists.RemoveItem.RemoveItemsWithValuesBlock`2)\nDescription Removes all items matching one of the specified Values from a List.\nExamples Remove all items matching one of the specified Values from an empty List This example will attempt to remove all items matching one of the values [1, 2] from [].\nProperties Property Value Notes List ($)List, with value [] ($)List is a variable of type IList\u003cdynamic\u003e Values ($)Values, with value [1, 2] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Result Attempting to remove all items matching one of the values [1, 2] from [] results in no operation, as there is nothing to remove. Therefore, the variable ($)List remains:\n[] Remove all items matching one of the specified Values from a List This example will attempt to remove all items matching one of the values [1, 2] from [1, 2, 3, 3, 2, 1].\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Values ($)Values, with value [1, 2] ($)Values is a variable of type IEnumerable\u003cInt32\u003e Result Attempting to remove all items matching one of the values [1, 2] from [1, 2, 3, 3, 2, 1] results in the variable ($)List being updated to the following:\n[3, 3] Properties List The List to remove all matching items from.\nItems are considered matching if they have one of the specified Values.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items that can be removed from the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Values The Values the items to remove must match one of.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyNullException Thrown when List or Values is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []) there is nothing to remove, so no operation is performed.\nEmpty Values If Values is empty (i.e. []) there are no values to match, therefore nothing can be removed and no operation is performed.\nNo items matching a specified value in Values If List does not contain items matching one of the specified Values, there is nothing to remove for that value.\nNo items matching Values If List does not contain items matching any of the specified Values, there is nothing to remove, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Removes all items matching one of the specified values from a List.","excerpt":"Removes all items matching one of the specified values from a List.","ref":"/docs/reference/blocks/lists/remove-item/remove-items-with-values-block-2/","tags":"","title":"Remove Items With Values"},{"body":"","categories":"","description":"Remove a length of text from a given text.","excerpt":"Remove a length of text from a given text.","ref":"/docs/reference/blocks/text/remove-text/","tags":"","title":"Remove Text"},{"body":"\rRemove Text At Beginning (Cortex.Blocks.Text.RemoveText.RemoveTextAtBeginningBlock)\nDescription Removes a Length of text from the beginning of a given Text.\nExamples Remove a Length of text from the beginning of a given Text This example will remove the first 3 characters from the beginning of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Length ($)Length, with value 3 ($)Length is a variable of type Int32 Result Removing the first 3 characters from the beginning of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" results in the variable ($)Text being updated to the following:\n\"DEFGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text to remove the Length of text from.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Length The Length of text to remove.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Length is greater than the length of Text. Remarks Negative Length If Length is negative, all text will be removed and the variable specified in the Text property will be set to empty (i.e. \"\").\nZero Length If Length is 0, no text will be removed and the variable specified in the Text property will remain unchanged.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Length of text removed at the beginning and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Removes a length of text from the beginning of a given text.","excerpt":"Removes a length of text from the beginning of a given text.","ref":"/docs/reference/blocks/text/remove-text/remove-text-at-beginning-block/","tags":"","title":"Remove Text At Beginning"},{"body":"\rRemove Text At End (Cortex.Blocks.Text.RemoveText.RemoveTextAtEndBlock)\nDescription Removes a Length of text from the end of a given Text.\nExamples Remove a Length of text from the end of a given Text This example will remove the last 3 characters from the end of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Length ($)Length, with value 3 ($)Length is a variable of type Int32 Result Removing the last 3 characters from the end of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" results in the variable ($)Text being updated to the following:\n\"ABCDEFGHIJKLMNOPQRSTUVW\" Properties Text The Text to remove the Length of text from.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Length The Length of text to remove.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Length is greater than the length of Text. Remarks Negative Length If Length is negative, all text will be removed and the variable specified in the Text property will be set to empty (i.e. \"\").\nZero Length If Length is 0, no text will be removed and the variable specified in the Text property will remain unchanged.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Length of text removed at the end and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Removes a length of text from the end of a given text.","excerpt":"Removes a length of text from the end of a given text.","ref":"/docs/reference/blocks/text/remove-text/remove-text-at-end-block/","tags":"","title":"Remove Text At End"},{"body":"\rRemove Text At Index (Cortex.Blocks.Text.RemoveText.RemoveTextAtIndexBlock)\nDescription Removes a Length of text at the specified Index of a given Text.\nExamples Remove a Length of text at the specified Index of a given Text This example will remove 3 characters at index 3 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Index ($)Index, with value 3 ($)Index is a variable of type Int32 Length ($)Length, with value 3 ($)Length is a variable of type Int32 Result \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, removing 3 characters at (and including) index 3 results in the variable ($)Text being updated to the following:\n\"ABCGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text to remove the Length of text from.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Index The Index to remove the text from. This is an inclusive index, which means the character at the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Length The Length of text to remove.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Index is less than zero or greater than the length of Text - 1. Thrown when Index + a positive Length is greater than the length of Text - 1. Remarks Negative Length A negative Length can be used to remove all text at and after the Index of Text.\nZero Length If Length is 0, no text will be removed and the variable specified in the Text property will remain unchanged.\nIndex is inclusive The Index property is an inclusive index, which means the character at the index will be included in the removed text.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Length of text removed at the specified Index and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Removes a length of text at the specified index of a given text.","excerpt":"Removes a length of text at the specified index of a given text.","ref":"/docs/reference/blocks/text/remove-text/remove-text-at-index-block/","tags":"","title":"Remove Text At Index"},{"body":"\rRemove Text Before Index (Cortex.Blocks.Text.RemoveText.RemoveTextBeforeIndexBlock)\nDescription Removes a Length of text before the specified Index of a given Text.\nExamples Remove a Length of text before the specified Index of a given Text This example will remove 3 characters before index 3 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Index ($)Index, with value 3 ($)Index is a variable of type Int32 Length ($)Length, with value 3 ($)Length is a variable of type Int32 Result \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, removing 3 characters before index 3 results in the variable ($)Text being updated to the following:\n\"DEFGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text to remove the Length of text from.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Index The Index to remove the text before. This is an exclusive index, which means the character at the specified index won’t be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Length The Length of text to remove.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value -1 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Index is less than 1 or greater than the length of Text - 1. Thrown when Index - a positive Length is less than 1. Remarks Negative Length A negative Length can be used to remove all text before the Index of Text.\nZero Length If Length is 0, the variable specified in the Text property will be set to empty (i.e. \"\").\nIndex is exclusive The Index property is an exclusive index, which means the character at the index will not be included in the removed text.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the Length of text removed before the specified Index and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Removes a length of text before the specified index of a given text.","excerpt":"Removes a length of text before the specified index of a given text.","ref":"/docs/reference/blocks/text/remove-text/remove-text-before-index-block/","tags":"","title":"Remove Text Before Index"},{"body":"\rRemove Text Between Indexes (Cortex.Blocks.Text.RemoveText.RemoveTextBetweenIndexesBlock)\nDescription Removes text between the specified Start Index and End Index of a given Text.\nExamples Remove text between the specified Start Index and End Index of a given Text This example will remove all characters between start index 0 and end index 3 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Start Index ($)StartIndex, with value 0 ($)StartIndex is a variable of type Int32 End Index ($)EndIndex, with value 3 ($)EndIndex is a variable of type Int32 Result \"A\" is at index 0 and \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\". Therefore, removing all characters between (and including) start index 0 and end index 3 results in the variable ($)Text being updated to the following:\n\"EFGHIJKLMNOPQRSTUVWXYZ\" Remove text where Start Index is greater than End Index This example will remove all characters between start index 3 and end index 0 of \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nProperties Property Value Notes Text ($)Text, with value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" ($)Text is a variable of type String Start Index ($)StartIndex, with value 3 ($)StartIndex is a variable of type Int32 End Index ($)EndIndex, with value 0 ($)EndIndex is a variable of type Int32 Result In this example the start index 3 is greater than the end index 0. When this occurs, the block simply swaps the indexes before it processes the text.\nTherefore, having start index 3 and end index 0 is the same as having start index 0 and end index 3.\n\"A\" is at index 0 and \"D\" is at index 3 in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\nTherefore, removing all characters between (and including) start index 3 and end index 0, or start index 0 and end index 3, results in the variable ($)Text being updated to the following:\n\"EFGHIJKLMNOPQRSTUVWXYZ\" Properties Text The Text to remove the text from.\nData Type String Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Text with no value Start Index The Start Index used to remove the text. This is an inclusive index, which means the character at the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 End Index The End Index used to remove the text. This is an inclusive index, which means the character at the specified index will be included.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when Text is null or empty (i.e. \"\"). Thrown when Start Index or End Index is less than zero or greater than the length of Text - 1. Remarks Start Index and End Index are inclusive The Start Index and End Index properties are both inclusive indexes, which means the characters at those indexes will be included in the removed text.\nStart Index greater than End Index Start Index can be greater than End Index. If this is the case, the values of the indexes will be swapped. See Example above.\nImmutable String data type The String data type used to represent Text is immutable, which means it is read-only and cannot be changed once created.\nTo overcome this, this block creates a new String which has the text removed between the specified Start Index and End Index, and re-assigns it to the variable specified in the Text property.\n","categories":"","description":"Removes text between the specified start index and end index of a given text.","excerpt":"Removes text between the specified start index and end index of a given text.","ref":"/docs/reference/blocks/text/remove-text/remove-text-between-indexes-block/","tags":"","title":"Remove Text Between Indexes"},{"body":"","categories":"","description":"Rename a folder.","excerpt":"Rename a folder.","ref":"/docs/reference/blocks/files-and-folders/rename-folder/","tags":"","title":"Rename Folder"},{"body":"\rRename Folder (Cortex.Blocks.FilesAndFolders.RenameFolder.RenameFolderBlock)\nDescription Renames a folder at the specified Folder Path to a New Name.\nExamples Rename a folder This example will rename \"C:\\Source\\Folder\" to \"C:\\Source\\RenamedFolder\".\nIn this example assume:\n\"C:\\Source\\Folder\" contains: An empty sub-folder named \"SubFolder\". A file named \"File.txt\". Properties Property Value Notes Folder Path ($)FolderPath, with value @\"C:\\Source\\Folder\" ($)FolderPath is a variable of type String New Name ($)NewName, with value \"RenamedFolder\" ($)NewName is a variable of type String Result Renaming \"C:\\Source\\Folder\" to \"RenamedFolder\" will:\nRename the existing folder at \"C:\\Source\\Folder\" to \"C:\\Source\\RenamedFolder\" with: The Date Created left unchanged. The Date Accessed left unchanged. The Date Modified left unchanged. The Folder attributes left unchanged. \"SubFolder\" and \"File.txt\" will be located under \"C:\\Source\\RenamedFolder\" and their names, dates, attributes and content will be left unchanged. Other Move Operations If any other folder move operation is required, the Move Folder or Move Folders blocks must be used instead.\nProperties Folder Path The Folder Path of the folder to rename.\nThe Folder Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FolderPath with no value New Name The New Name to rename the folder to.\nThe New Name is case-insensitive and any trailing spaces will be automatically removed.\nThe New Name must be a valid folder name, otherwise an InvalidFolderNameException will be thrown.\nFor information about valid folder names, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidFolderNameException A folder or file with the New Name already exists. The New Name contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /). The New Name exceeds the system-defined maximum length (typically 32,767 characters). OperationFailedException The Folder Path does not exist. The Folder Path points to a file. The Folder Path contains leading spaces. The Folder Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any folder names. The Folder Path exceeds the system-defined maximum length (typically 32,767 characters). The Folder Path is a win32 device path (i.e starts with a \"\\\\.\\\"). The Folder Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to rename the folder or any of its content (e.g. not having read access to the Folder Path or its content, or write access to the parent of Folder Path. An unexpected error occurs when renaming the folder. PropertyEmptyException Thrown when Folder Path or New Name are empty (i.e. \"\"). PropertyNullException Thrown when Folder Path or New Name are null. Remarks Folder Paths For information about the supported folder path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFolder Path needs escaping Folder Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\\"), or Prepending an @ character before the start of the Folder Path (e.g. @\"C:\\Source\"). Folder Attributes When renaming the folder at the specified Folder Path all of the folder’s attributes are left unchanged.\nFor information about the folder attributes (i.e. ReadOnly, Hidden, Archive etc.), please see File \u0026 Folder Attributes.\n","categories":"","description":"Renames a folder at the specified folder path to a new name.","excerpt":"Renames a folder at the specified folder path to a new name.","ref":"/docs/reference/blocks/files-and-folders/rename-folder/rename-folder-block/","tags":"","title":"Rename Folder"},{"body":"","categories":"","description":"Rethrow a previously thrown and handled exception.","excerpt":"Rethrow a previously thrown and handled exception.","ref":"/docs/reference/blocks/exceptions/rethrow-exception/","tags":"","title":"Rethrow Exception"},{"body":"\rRethrow Exception (Cortex.Blocks.Exceptions.RethrowException.RethrowExceptionBlock)\nDescription Rethrows an Exception which has previously been thrown and handled.\nExamples Rethrowing an Exception This example will rethrow the following handled Exception thrown by an Add Item At Beginning block:\nProperties Property Value Notes Exception ($)Exception, with value of{\"Exception Type\": \"PropertyNullException\",\"Message\": \"'List' is null; it must be provided with a non-null value.\\r\\nPlease click the HelpLink for more information on how to fix this.\",\"HelpLink\": \"https://v2022.docs.cortex-ia.com/docs/reference/exceptions/common/property/property-null-exception\"} ($)Exception is a variable of type PropertyNullException Result Rethrowing ($)Exception results in the Exception being rethrown and shown in the Exceptions Viewer:\nProperties Exception The Exception that is rethrown.\nException can be any Exception data type.\nData Type Exception Property Type Input Is Advanced false Default Editor Variable Default Value ($)Exception with no value Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyNullException Thrown when Exception is null. Remarks Propagating Exceptions Sometimes it is necessary to propagate exceptions thrown in a child flow to the flow that called it. Currently, using the Rethrow Exception block to rethrow the Exception from the Handle Flow Exception workspace is the only way to achieve this. This can be seen below:\nIn future, additional ways to propagate exceptions between flows may be added.\n","categories":"","description":"Rethrows an Exception which has previously been thrown and handled.","excerpt":"Rethrows an Exception which has previously been thrown and handled.","ref":"/docs/reference/blocks/exceptions/rethrow-exception/rethrow-exception-block/","tags":"","title":"Rethrow Exception"},{"body":"Rollover CA certificates This process MUST be undertaken before certificates expire, otherwise your system will become unusable. If certificates have already expired, contact Cortex Service Portal at the earliest opportunity.\nOnly platforms which use CA certificates can have their certificates updated using this mechanism. Systems using self-signed certificates must be reinstalled.\nThis mechanism cannot be used to switch from self-signed to CA certificates; that requires a reinstall.\nWarning\rUpdating the certificates on a single-server system with no high availability will result in downtime while the upgrade takes place. Ensure that this is undertaken at a suitable time. Systems with high availability will use a rollover mechanism which should not result in any downtime.\rApplication Server Prerequisites Certificate Requirements A new, valid X.509 certificate needs to be obtained to update the certificates.\nThe certificate can be obtained from a Certificate Authority, such as Let’s Encrypt, and must meet the following requirements:\nSubject field must be in a wildcard format, pertaining to the domain of the Application Servers (e.g. CN=*.domain.com). Subject alternative names must include any additional host names that should be able to be used to access the API Gateway Service. Certificate file must be in a .PFX file format, with a known password. Certificate file must contain the full chain of certificates. Certificate file must include the private key. Key Usage extension must have a value of Digital Signature, Key Encipherment (a0). Enhanced Key Usage must include Server Authentication and Client Authentication. This file should be placed in a known location on the Application Server where the certificate update script will be run. This location will be required when running the update script.\nIf required, a separate X.509 SSL certificate can be obtained to be used by the load balancer to communicate with the Application Services. It must meet all of the other requirements laid out above, except the subject field can also be the FQDN of the load balancer (e.g. CN=machine-name.domain.com).\nConfigure Update Certificates Script In the Cortex Innovation 2022.9 - App Server Install Scripts folder, locate the Cortex.Innovation.Update.Certificates.ps1 script and open it with a text editor.\nChoose the tab below that matches the configuration for this installation, then update the script to match, changing the parameters according to the details given below:\nMultiple Servers with HA\rSingle Server without HA\r.\\Cortex.Innovation.Update.Certificates.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -ClientCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ClientCertificatePwd \"myPassword\" ` -Credential $Credential .\\Cortex.Innovation.Update.Certificates.ps1 -ConfigFileName Cortex.Innovation.Install.Config.json ` -ServerCertificatePath \"C:\\Install\\Certificates\\cert.pfx\" ` -ServerCertificatePwd \"myPassword\" ` -SkipLoadBalancer ` -Credential $Credential Name Description ServerCertificatePath The local path of a new, valid .PFX certificate file on the server. Environment variables cannot be used. The certificate should meet the Certificate Requirements. This certificate will be used for: Securing communication between the Application Services.Allowing Application Services to identify themselves to clients such as Gateway.Preventing unauthorised nodes from joining the single node cluster.Connecting to Service Fabric Explorer from each of the Application Servers. ServerCertificatePwd The password for the .PFX certificate file specified in ServerCertificatePath. ClientCertificatePath The local path of a .PFX certificate file on the first Application Server in the ApplicationServerIPv4Addresses list. This can be the same certificate as the ServerCertificatePath. Environment variables cannot be used. This is only needed if installing with CA Certificates (Recommended) and using the Built-In Load Balancer. The certificate should meet the Certificate Requirements.\nThis certificate will be used for: Securing communication between the load balancer and the nodes on the Application Servers. ClientCertificatePwd The password for the .PFX certificate file specified in ClientCertificatePath. This is only needed if using the Built-In Load Balancer. SkipLoadBalancer Updates certificates without updating a load balancer. Credential The credentials of the user which will be used to perform remote operations on the server. It must be a domain user that is a member of the local Administrators group on the server. This does not need to be changed, a prompt will appear to enter this information when the script is run. Test Update Certificates Script Open a Windows PowerShell (x64) window as administrator.\nNavigate PowerShell to inside the Cortex Innovation 2022.9 - App Server Install Scripts folder using the following command, modifying the path as necessary:\ncd \"C:\\Install\\Cortex Innovation 2022.9 - App Server Install Scripts\" Test Cortex.Innovation.Update.Certificates.ps1 by running the following command:\n.\\Cortex.Innovation.Update.Certificates.ps1 -WhatIf A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nWait for the command to finish. It will display the output of the certificate update command without making any changes to the system.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are no errors, continue to the next section; otherwise, check if the errors have any instructions for rectifying the issue and follow them.\nIf there are no useful instructions, check that all previous steps have been followed correctly and, if not, rectify it and run the command again. If this does not work, please contact Cortex Service Portal for further assistance. The WhatIf script will have created a temporary version of the config file in the script location, showing what changes would be made to it when the script runs. The name is appended with -WhatIf (e.g. Cortex.Innovation.Install.Config-WhatIf.json). This file can be provided when obtaining support.\nRun Update Certificates Script Update the certificates for the Application Services and the required infrastructure by running the following command (Tee-Object will write output to both the PowerShell console and a log file, the FilePath value can be changed if required):\n.\\Cortex.Innovation.Update.Certificates.ps1 | Tee-Object -FilePath \"cortex-app-certificate-update-log.txt\" A credentials prompt will appear. Enter credentials of a domain user that is a member of the local Administrators group on the server and press OK.\nWait for the script to finish running. This should take approximately 10 minutes.\nCheck that there have been no errors in the script; these would appear in red in the console.\nIf there are any errors, then please follow any instructions given within them to rectify the situation.\nIf the errors do not give any instructions on how to rectify, see Troubleshooting During Installation for further information; if this does not help then please contact Cortex Service Portal for assistance.\nCheck Application Services Log on to the server.\nImport the certificate, used in the ServerCertificatePath parameter of the Configure Update Certificates Script section, to your Current User certificate store. This can be achieved by double clicking on the certificate .PFX file and following the wizard.\nOpen a web browser.\nNavigate to https://server.domain.com:9080/Explorer, where server.domain.com is the fully qualified domain name of the server. Replace 9080 with new httpGatewayEndpointPort value if it was changed during configuration.\nThe screen should resemble that in the following figure: Healthy Service Fabric Explorer Cluster\rThe status circles should be entirely green - this indicates that the node and all services and instances are healthy. Other status pages can be accessed by expanding items in the leftmost pane. Issues can be tracked down to the failing component by expanding items with warning triangles or error icons on.\nIf there is still a warning that the certificate is close to expiring, wait a few hours and refresh the page and it should go away. It can take some time for the certificate to rollover.\nWeb Application Server If the Web Applications also use an expiring certificate, it will also need to be updated:\nImport the Certificate If using a single server and using the same certificates for both the Application Services and Web Applications, a new certificate will already be installed. Otherwise, follow the following instructions to import the new certificate for use with the Web Applications:\nPut the new, valid certificate in .pfx format on the Web Application Server. Double click on the certificate file to open the install certificate wizard. Select Local Machine then click Next. Click Next. Enter the Export Password which the certificate was generated with then click Next. Select Place all certificates in the following store. Click Browse…. Select Personal, click OK then click Next. Click Finish. Apply the Certificate Open Internet Information Services (IIS) Manager. In the left-hand pane of Internet Information Service (IIS) Manager, expand the server node. Right-click on the Site node (usually Cortex) which contains the Debugger and Gateway. Click Edit Bindings... Click on the https binding and click Edit.... Click the SSL Certificate Select... button and select the new certificate from the table. Click OK to close the dialog. Click OK to close Edit Bindings dialog. Click Close to close the Bindings dialog. Open Gateway in a browser. Click the padlock icon next to the URL. The certificate displayed should be the updated one. ","categories":"","description":"Information about updating the certificates on a single or multi-server Cortex platform which uses CA certificates.","excerpt":"Information about updating the certificates on a single or multi-server Cortex platform which uses CA certificates.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/rollover-certificates/","tags":"","title":"Rollover CA certificates"},{"body":"","categories":"","description":"Blocks that are used to run another flow.","excerpt":"Blocks that are used to run another flow.","ref":"/docs/reference/blocks/flows/run-flow/","tags":"","title":"Run Flow"},{"body":"\rRun Flow (Cortex.Blocks.Flows.RunFlow.RunFlowBlock)\nDescription Runs a chosen Flow using the Inputs provided, returning any Output Variables from the Flow in the Outputs variable.\nExamples Running a Flow This example will run the Flow square-number-flow saving the output variables to ($)Outputs.\nThe Flow square-number-flow takes an Input Variable ($)NumberToSquare, which is then multiplied by itself and saved to the Output Variable ($)SquaredNumber. If no value is given for ($)NumberToSquare the default value 10 is used. The flow contains a block that checks that the Input Variable ($)NumberToSquare is larger than 0, an exception is thrown by square-number-flow if ($)NumberToSquare is not larger than 0.\nProperties Property Value Notes Flow Flow, with value square-number-flow Flow is of type FlowReference Inputs Inputs is of type InputVariables \u003e NumberToSquare ($)NumberToSquare, with value 5 ($)NumberToSquare is of type Int32 Outputs ($)Outputs, with no value ($)Outputs is a variable of type Structure Result 5 is passed into the Input Variable ($)NumberToSquare for the Flow square-number-flow, which results in 25 being saved to the Output Variable ($)SquaredNumber. This results in the variable ($)Outputs being updated to the following:\n{ \"SquaredNumber\": 25 } Running a Flow with Default Input Variables This example will run the Flow square-number-flow saving the output variables to ($)Outputs.\nThe Flow square-number-flow takes an Input Variable ($)NumberToSquare, which is then multiplied by itself and saved to the Output Variable ($)SquaredNumber. If no value is given for ($)NumberToSquare the default value 10 is used. The flow contains a block that checks that the Input Variable ($)NumberToSquare is larger than 0, an exception is thrown by square-number-flow if ($)NumberToSquare is not larger than 0.\nProperties Property Value Notes Flow Flow, with value square-number-flow Flow is of type FlowReference Inputs Inputs is of type InputVariables \u003e NumberToSquare No value (defaults to 10) NumberToSquare is of type Int32 Outputs ($)Outputs, with no value ($)Outputs is a variable of type Structure Result As no value is passed into the Input Variable ($)NumberToSquare for the Flow square-number-flow the default of 10 is used, which results in 100 being saved to the Output Variable ($)SquaredNumber. This results in the variable ($)Outputs being updated to the following:\n{ \"SquaredNumber\": 100 } For more information see Default Values.\nRunning a Flow that Throws an Exception This example will run the Flow square-number-flow saving the output variables to ($)Outputs.\nThe Flow square-number-flow takes an Input Variable ($)NumberToSquare, which is then multiplied by itself and saved to the Output Variable ($)SquaredNumber. If no value is given for ($)NumberToSquare the default value 10 is used. The flow contains a block that checks that the Input Variable ($)NumberToSquare is larger than 0, an exception is thrown by square-number-flow if ($)NumberToSquare is not larger than 0.\nProperties Property Value Notes Flow Flow, with value square-number-flow Flow is of type FlowReference Inputs Inputs is of type InputVariables \u003e NumberToSquare ($)NumberToSquare, with value -1 ($)NumberToSquare is of type Int32 Outputs ($)Outputs, with no value ($)Outputs is a variable of type Structure Result The Flow square-number-flow contains a block that checks that the Input Variable ($)NumberToSquare is larger than 0; if this is not the case an exception is thrown.\nIn this example, as -1 is passed into the Input Variable ($)NumberToSquare and is not greater than 0, ($)Outputs is not updated and an exception is thrown. For more information on how the exception is thrown and how to handle the exception see Exceptions Thrown by a Child Flow.\nProperties Flow The Flow that will be run.\nThe Literal Editor is the only editor available for this property, and it provides the developer a list of all available flows to choose from.\nData Type FlowReference Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to null) Inputs The Input Variables that are passed to the Flow that will be run.\nIt is recommended to use the Literal Editor for this property as it detects and warns of changes to the Flow Contract, allowing users to Sync the Editor.\nData Type InputVariables Property Type Input Is Advanced false Default Editor Literal Default Value No initial value (Will be synced when the Flow is first selected) Outputs The Output Variables from the Flow.\nEach of the Output Variables will be saved to a Structure, where the key is the name of the variable and the item is the value of the variable.\nData Type Structure Property Type Output Is Advanced false Default Editor Variable Default Value ($)Outputs with no value Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidInputVariablesException Thrown when Inputs is missing any Input Variables from the chosen Flow. See Missing Input Variables. Thrown when Inputs has any extra Input Variables that are not in the chosen Flow. See Extra Input Variables. Thrown when Inputs has any Input Variables that are not a valid type for Input Variable. See Input Variables of an Invalid Type. Remarks Selecting a Flow A flow can be selected using the Literal Editor on the Flow Property, a list of all available flows will be presented to the developer and can be searched by the Name or Id of a flow.\nWhen a Flow is selected the Inputs Property will be Synced with the Flow Contract.\nDefault Values If an Input Variable has a default value, then this default value will be used when running the Flow if the corresponding value in the Inputs Property is left empty. See Running a Flow with Default Input Variables for an example.\nAlso, if an Input Variable has a default value, and the corresponding value in the Inputs Property is not of the same type, a Validation Error will be raised when the flow is validated.\nFor more information see Input Variables.\nExceptions Thrown by a Child Flow If the Flow run by the Run Flow block throws an exception that is unhandled then it is rethrown by the Run Flow block. This can then be handled by any connected Handle Block Exception blocks. See Running a Flow that Throws an Exception for an example.\nIf an exception thrown by a block is not handled by any connected Handle Block Exception blocks, it will be passed to the Handle Workspace Exception block on the same workspace.\nThis process repeats until:\nThe exception is handled, or The exception reaches the flow’s top-level workspace, is not handled by any Handle Block Exception blocks and the top-level workspace does not contain a Handle Workspace Exception block. At this stage, the exception is handled by the flow’s Handle Flow Exception block. For more information see Handling Exceptions.\nSyncing the Inputs Property with the Flow Contract When a flow is first selected the Inputs Property will be synced with the Flow Contract.\nWhen the contract of the flow changes (e.g. Input Variables of a called Flow are updated), a prompt will appear when the block is selected, allowing the user to sync the editor.\nThis will cause:\nAny missing Input Variables not present in the Inputs Property to be added Any extra Input Variables present in the Inputs Property to be removed Any Input Variables already present in the Inputs Property to be retained Undoing this action will cause the Inputs Property to return to its previous state, from before it was synced, allowing any data to be retrieved from any extra Input Variables.\nKnown Limitations The Flow Property can only use the Literal Editor The Literal Editor is the only editor available for the Flow Property\nIn future this limitation may be removed.\nSyncing the Inputs Property with the Flow Contract is not available when using editors other than the Literal Editor Syncing the Inputs Property with the Flow Contract is only available when the Inputs Property uses the Literal Editor. If any other editor is used, the prompt to sync will not be displayed and any changes will need to be resolved manually.\n","categories":"","description":"Runs a chosen Flow, returning any output variables.","excerpt":"Runs a chosen Flow, returning any output variables.","ref":"/docs/reference/blocks/flows/run-flow/run-flow-block/","tags":"","title":"Run Flow"},{"body":"","categories":"","description":"Blocks related to working with Schedules.","excerpt":"Blocks related to working with Schedules.","ref":"/docs/reference/blocks/schedules/","tags":"","title":"Schedules"},{"body":"\rSearch File (Cortex.Blocks.FilesAndFolders.SearchFile.SearchFileBlock)\nDescription Searches the file at the specified File Path for text that matches a given Search Pattern.\nResults are returned as a list of Matches.\nAdditional options can be specified:\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search. Encoding can be specified if needed to explicitly state the encoding that should be used to read and search the file. A Comparison Type option can specified to choose how it is determined whether text matches the Search Pattern (e.g. whether the search is case-sensitive or case-insensitive). Examples Get matches for a given text This example will get all matches in the file \"C:\\Source\\File.txt\" that match the text \"error\".\nIt will perform a case-insensitive search, and let the block determine the encoding of the file automatically.\nIn this example assume \"C:\\Source\\File.txt\" contains the following text:\nError: Failed to determine uptime. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: An terminal error has occurred. The service will restart now. Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Search Pattern ($)SearchPattern, with value \"error\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Matches ($)Matches, with no value ($)Matches is a variable that will be set to an IList\u003cFileMatch\u003e value Result Searching \"C:\\Source\\File.txt\" for all text matching \"error\" (case-insensitive), results in the variable ($)Matches being updated to the following:\n[ { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 1, \"Value\": \"Error\", \"Index\": 0, \"Length\": 5, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 4, \"Value\": \"Error\", \"Index\": 0, \"Length\": 5, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 4, \"Value\": \"error\", \"Index\": 19, \"Length\": 5, \"Groups\": {} } ] Get matches for a given pattern This example will get all matches in the file \"C:\\Source\\File.txt\" that match the pattern \"Uptime is * hours.\".\nIt will perform a case-sensitive search, and let the block determine the encoding of the file automatically.\nIn this example assume \"C:\\Source\\File.txt\" contains the following text:\nError: Failed to determine uptime. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: An terminal error has occurred. The service will restart now. Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Search Pattern ($)SearchPattern, with value \"Uptime is * hours.\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Matches ($)Matches, with no value ($)Matches is a variable that will be set to an IList\u003cFileMatch\u003e value Result Searching \"C:\\Source\\File.txt\" for all text matching the pattern \"Uptime is * hours.\" (case-sensitive), results in the variable ($)Matches being updated to the following:\n[ { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 2, \"Value\": \"Uptime is 2 hours.\", \"Index\": 13, \"Length\": 18, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 3, \"Value\": \"Uptime is 3 hours.\", \"Index\": 13, \"Length\": 18, \"Groups\": {} } ] Get matches for a given regex This example will get all matches in the file \"C:\\Source\\File.txt\" that match the regex \"^Error:.*$\".\nIt will perform a case-sensitive search, explicitly specify the encoding of the file as UTF-8 and will match any line that starts with \"Error:\".\nIn this example assume \"C:\\Source\\File.txt\" contains the following text:\nError: Failed to determine uptime. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: An terminal error has occurred. The service will restart now. Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Search Pattern ($)SearchPattern, with value \"^Error:.*$\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Encoding ($)Encoding, with value Encoding.UTF8 ($)Encoding is a variable of type Encoding Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Matches ($)Matches, with no value ($)Matches is a variable that will be set to an IList\u003cFileMatch\u003e value Result Searching \"C:\\Source\\File.txt\" for all text matching the regex \"^Error:.*$\" (case-sensitive), results in the variable ($)Matches being updated to the following:\n[ { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 1, \"Value\": \"Error: Failed to determine uptime.\", \"Index\": 0, \"Length\": 34, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 4, \"Value\": \"Error: An terminal error has occurred. The service will restart now.\", \"Index\": 0, \"Length\": 68, \"Groups\": {} } ] Properties File Path The File Path to search for text that matches a given Search Pattern.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Search Pattern The Search Pattern which text must match to be included in the returned Matches.\nA null or empty (i.e. \"\") Search Pattern means match anything; all additional block options such as Search Options etc. still take effect.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Search Options Search Options can be specified to choose whether Search Pattern should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Encoding Option to specify the Encoding that should be used to read and search the file.\nMost of the time Encoding can be left as null; allowing the block to automatically attempt to detect the encoding of the file based on the presence of byte order marks. However, if it is found that the returned Matches are not correct because the block was unable to detect the encoding of the file, it is possible to specify the Encoding explicitly using this property.\nFor information about encoding, examples of available encodings and using them, please see Encoding.\nData Type Encoding Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Comparison Type The Comparison Type specifying the rules used to match text against the given Search Pattern.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Matches Matches containing a FileMatch for every text that matches the specified Search Pattern based on the other specified options.\nA basic example with a single FileMatch can be seen below:\n[ { \"FilePath\": \"C:\\\\Source\\\\File.txt\", \"Line\": 1, \"Value\": \"Error: Failed to determine uptime.\", \"Index\": 0, \"Length\": 34, \"Groups\": {} } ] For more information see the example above, or the FileMatch data type.\nData Type IList\u003cFileMatch\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Matches with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). InvalidPropertyValueException Thrown when Encoding is invalid (e.g. Encoding.GetEncoding(-1)). See Value Is Invalid. OperationFailedException The File Path does not exist. The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to search the File Path. An unexpected error occurs when searching the File Path. PropertyEmptyException Thrown when File Path is empty (i.e. \"\"). PropertyNullException Thrown when File Path is null. RegexMatchTimeoutException Thrown when using Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and the Search Pattern is not a valid regex (e.g. (). Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\File.txt\"). Null or empty Search Pattern A null or empty (i.e. \"\") Search Pattern means match anything; all additional block options such as Search Options etc. still take effect.\nEncoding of text For information about encoding of text, examples of available encodings and using them, please see Encoding.\nComparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nKnown Limitations The text in the file at the specified File Path is searched line-by-line. As a result, when using SearchOptions.Regex the in-line s regex character is not supported. If the text in the file at the specified File Path ends with a blank line (0 length) that line will not be read and therefore not matched against. If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal. ","categories":"","description":"Searches a file at a specified file path for a matching search pattern.","excerpt":"Searches a file at a specified file path for a matching search pattern.","ref":"/docs/reference/blocks/files-and-folders/search-file/search-file-block/","tags":"","title":"Search File"},{"body":"","categories":"","description":"Search a file or multiple files.","excerpt":"Search a file or multiple files.","ref":"/docs/reference/blocks/files-and-folders/search-file/","tags":"","title":"Search File(s)"},{"body":"\rSearch Files (Cortex.Blocks.FilesAndFolders.SearchFile.SearchFilesBlock)\nDescription Searches the files at the specified File Paths for text that matches a given Search Pattern.\nResults are returned as Matches.\nAdditional options can be specified:\nSearch Options can be specified to choose whether to use a ContainsText, PatternMatching or Regex search. Encoding can be specified if needed to explicitly state the encoding that should be used to read and search the files. A Comparison Type option can specified to choose how it is determined whether text matches the Search Pattern (e.g. whether the search is case-sensitive or case-insensitive). Examples Get matches for a given text This example will get all matches in the files [\"C:\\Source\\File1.txt\", \"C:\\Source\\File2.txt\"] that match the text \"error\".\nIt will perform a case-insensitive search, and let the block determine the encoding of the files automatically.\nIn this example assume \"C:\\Source\\File1.txt\" contains the following text:\nError: Failed to determine uptime. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: An terminal error has occurred. The service will restart now. and \"C:\\Source\\File2.txt\" contains the following text:\nInformation: Uptime is 1 hour. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: Failed to determine uptime. Error: Failed to determine uptime. Information: Uptime is 6 hours. Properties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\File1.txt\", @\"C:\\Source\\File2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Search Pattern ($)SearchPattern, with value \"error\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.ContainsText ($)SearchOptions is a variable of type SearchOptions Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Comparison Type ($)ComparisonType, with value StringComparison.OrdinalIgnoreCase ($)ComparisonType is a variable of type StringComparison Matches ($)Matches, with no value ($)Matches is a variable that will be set to an IDictionary\u003cString, IList\u003cFileMatch\u003e\u003e value Result Searching \"C:\\Source\\File.txt\" for all text matching \"error\" (case-insensitive), results in the variable ($)Matches being updated to the following:\n{ \"C:\\\\Source\\\\File1.txt\" : [ { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 1, \"Value\": \"Error\", \"Index\": 0, \"Length\": 5, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 4, \"Value\": \"Error\", \"Index\": 0, \"Length\": 5, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 4, \"Value\": \"error\", \"Index\": 19, \"Length\": 5, \"Groups\": {} } ], \"C:\\\\Source\\\\File2.txt\" : [ { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 4, \"Value\": \"Error\", \"Index\": 0, \"Length\": 5, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 5, \"Value\": \"Error\", \"Index\": 0, \"Length\": 5, \"Groups\": {} } ] } Get matches for a given pattern This example will get all matches in the files [\"C:\\Source\\File1.txt\", \"C:\\Source\\File2.txt\"] that match the pattern \"Uptime is * hour?.\".\nIt will perform a case-sensitive search, and let the block determine the encoding of the files automatically.\nIn this example assume \"C:\\Source\\File1.txt\" contains the following text:\nError: Failed to determine uptime. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: An terminal error has occurred. The service will restart now. and \"C:\\Source\\File2.txt\" contains the following text:\nInformation: Uptime is 1 hour. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: Failed to determine uptime. Error: Failed to determine uptime. Information: Uptime is 6 hours. Properties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\File1.txt\", @\"C:\\Source\\File2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Search Pattern ($)SearchPattern, with value \"Uptime is * hour?.\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.PatternMatching ($)SearchOptions is a variable of type SearchOptions Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Matches ($)Matches, with no value ($)Matches is a variable that will be set to an IDictionary\u003cString, IList\u003cFileMatch\u003e\u003e value Result Searching the files [\"C:\\Source\\File1.txt\", \"C:\\Source\\File2.txt\"] for all text matching the pattern \"Uptime is * hour?.\" (case-sensitive), results in the variable ($)Matches being updated to the following:\n{ \"C:\\\\Source\\\\File1.txt\" : [ { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 2, \"Value\": \"Uptime is 2 hours.\", \"Index\": 13, \"Length\": 18, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 3, \"Value\": \"Uptime is 3 hours.\", \"Index\": 13, \"Length\": 18, \"Groups\": {} } ], \"C:\\\\Source\\\\File2.txt\" : [ { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 1, \"Value\": \"Uptime is 1 hour.\", \"Index\": 13, \"Length\": 17, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 2, \"Value\": \"Uptime is 2 hours.\", \"Index\": 13, \"Length\": 18, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 3, \"Value\": \"Uptime is 3 hours.\", \"Index\": 13, \"Length\": 18, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 6, \"Value\": \"Uptime is 6 hours.\", \"Index\": 13, \"Length\": 18, \"Groups\": {} } ] } Get matches for a given regex This example will get all matches in the files [\"C:\\Source\\File1.txt\", \"C:\\Source\\File2.txt\"] that match the regex \"^Error:.*$\".\nIt will perform a case-sensitive search, explicitly specify the encoding of the files as UTF-8 and will match any lines that start with \"Error:\".\nIn this example assume \"C:\\Source\\File1.txt\" contains the following text:\nError: Failed to determine uptime. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: An terminal error has occurred. The service will restart now. and \"C:\\Source\\File2.txt\" contains the following text:\nInformation: Uptime is 1 hour. Information: Uptime is 2 hours. Information: Uptime is 3 hours. Error: Failed to determine uptime. Error: Failed to determine uptime. Information: Uptime is 6 hours. Properties Property Value Notes File Paths ($)FilePaths, with value [@\"C:\\Source\\File1.txt\", @\"C:\\Source\\File2.txt\"] ($)FilePaths is a variable of type IEnumerable\u003cString\u003e Search Pattern ($)SearchPattern, with value \"^Error:.*$\" ($)SearchPattern is a variable of type String Search Options ($)SearchOptions, with value SearchOptions.Regex ($)SearchOptions is a variable of type SearchOptions Encoding ($)Encoding, with value Encoding.UTF8 ($)Encoding is a variable of type Encoding Comparison Type ($)ComparisonType, with value StringComparison.Ordinal ($)ComparisonType is a variable of type StringComparison Matches ($)Matches, with no value ($)Matches is a variable that will be set to an IDictionary\u003cString, IList\u003cFileMatch\u003e\u003e value Result Searching the files [\"C:\\Source\\File1.txt\", \"C:\\Source\\File2.txt\"] for all text matching the regex \"^Error:.*$\" (case-sensitive), results in the variable ($)Matches being updated to the following:\n{ \"C:\\\\Source\\\\File1.txt\" : [ { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 1, \"Value\": \"Error: Failed to determine uptime.\", \"Index\": 0, \"Length\": 34, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 4, \"Value\": \"Error: An terminal error has occurred. The service will restart now.\", \"Index\": 0, \"Length\": 68, \"Groups\": {} } ], \"C:\\\\Source\\\\File2.txt\" : [ { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 4, \"Value\": \"Error: Failed to determine uptime.\", \"Index\": 0, \"Length\": 34, \"Groups\": {} }, { \"FilePath\": \"C:\\\\Source\\\\File2.txt\", \"Line\": 5, \"Value\": \"Error: Failed to determine uptime.\", \"Index\": 0, \"Length\": 34, \"Groups\": {} } ] } Properties File Paths The File Paths to search for text that matches a given Search Pattern.\nEach file path in File Paths is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nFor information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePaths with no value Search Pattern The Search Pattern which text must match to be included in the returned Matches.\nA null or empty (i.e. \"\") Search Pattern means match anything; all additional block options such as Search Options etc. still take effect.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value No value (defaults to \"\") Search Options Search Options can be specified to choose whether Search Pattern should be interpreted as a ContainsText, PatternMatching or Regex search:\nSearchOptions.ContainsText matches text exactly. SearchOptions.PatternMatching allows wildcard text matching using Pattern Matching Syntax: * wildcard character can be used to match 0 or more characters. ? wildcard character can be used to match 0 or 1 character. All other characters are treated as a literal character. SearchOptions.Regex allows regex text matching using .Net Regex Syntax. Please note that with SearchOptions.ContainsText overlapping matches are detected (e.g. searching for \"aa\" in \"aaa\" matches \"aa\" at index 0 and \"aa\" at index 1). With SearchOptions.Regex only \"aa\" at index 0 will be matched.\nData Type SearchOptions Property Type Input Is Advanced true Default Editor Literal Default Value ContainsText Encoding Option to specify the Encoding that should be used to read and search the files.\nMost of the time Encoding can be left as null; allowing the block to automatically attempt to detect the encoding of the files based on the presence of byte order marks. However, if it is found that the returned Matches are not correct because the block was unable to detect the encoding of the files, it is possible to specify the Encoding explicitly using this property.\nFor information about encoding, examples of available encodings and using them, please see Encoding.\nData Type Encoding Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Comparison Type The Comparison Type specifying the rules used to match text against the given Search Pattern.\nFor information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nData Type StringComparison Property Type Input Is Advanced true Default Editor Literal Default Value Ordinal Matches Matches containing an entry for each file in File Paths.\nThe key of each entry is the file path, and the value contains a FileMatch for every text in the file path that matches the specified Search Pattern based on the other specified options.\nA basic example with a single file path and a single FileMatch can be seen below:\n{ \"C:\\\\Source\\\\File1.txt\" : [ { \"FilePath\": \"C:\\\\Source\\\\File1.txt\", \"Line\": 1, \"Value\": \"Error: Failed to determine uptime.\", \"Index\": 0, \"Length\": 34, \"Groups\": {} } ] } For more information see the example above, or the FileMatch data type.\nData Type IDictionary\u003cString, IList\u003cFileMatch\u003e\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Matches with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Search Options is not one of the specified SearchOptions types (e.g. (SearchOptions)10). Thrown when Comparison Type is not one of the specified StringComparison types (e.g. (StringComparison)10). InvalidPropertyValueException Thrown when Encoding is invalid (e.g. Encoding.GetEncoding(-1)). See Value Is Invalid. OperationFailedException Any file path in File Paths is null or empty (i.e. \"\"). For more information, see Null or Empty File Paths Any file path in File Paths is duplicated. For more information, see Duplicate File Paths Any file path in File Paths does not exist. Any file path in File Paths points to a folder. Any file path in File Paths contains leading spaces. Any file path in File Paths contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. Any file path in File Paths exceeds the system-defined maximum length (typically 32,767 characters). Any file path in File Paths is invalid (for example, it is on an unmapped drive). The user the flow is executing as does not have the required permissions to search a file path in File Paths. An unexpected error occurs when searching any file path in File Paths. PropertyEmptyException Thrown when File Paths does not contain any items. PropertyNullException Thrown when File Paths is null. RegexMatchTimeoutException Thrown when using Search Options is either SearchOptions.Regex or SearchOptions.PatternMatching and the execution time of the search exceeds 30 seconds. RegexParsingFailedException Thrown when Search Options is SearchOptions.Regex and the Search Pattern is not a valid regex (e.g. (). Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Paths needs escaping Each file path in File Paths requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Paths (e.g. @\"C:\\Source\\File.txt\"). Null or empty Search Pattern A null or empty (i.e. \"\") Search Pattern means match anything; all additional block options such as Search Options etc. still take effect.\nEncoding of text For information about encoding of text, examples of available encodings and using them, please see Encoding.\nComparison Types For information about the supported values for the Comparison Type property and examples of how it is determined whether two pieces of text match, please see Equality.\nHandling of Exceptions If an exception occurs when trying to search a file in the File Paths, it will be recorded and the block will continue processing the remaining files. Once all files are processed, recorded exceptions will be thrown within an OperationFailedException.\nKnown Limitations The text in the files at the specified File Paths is searched line-by-line. As a result, when using SearchOptions.Regex the in-line s regex character is not supported. If the text in the files at the specified File Paths ends with a blank line (0 length) that line will not be read and therefore not matched against. If Search Options is set to SearchOptions.Regex or SearchOptions.PatternMatching and Comparison Type is set to StringComparison.CurrentCulture, some characters such as æ that is equivalent to ae may not evaluate as equal. ","categories":"","description":"Searches files at the specified file paths for a matching search pattern.","excerpt":"Searches files at the specified file paths for a matching search pattern.","ref":"/docs/reference/blocks/files-and-folders/search-file/search-files-block/","tags":"","title":"Search Files"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"SearchOptions (Cortex.DataTypes.Text.SearchOptions)\nSummary Values ContainsText Regex PatternMatching Remarks Create SearchOptions Convert SearchOptions to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to define how text searches determine whether text matches the search (i.e. text contains the searched for text or matches the specified regex or pattern).","excerpt":"Used to define how text searches determine whether text matches the search (i.e. text contains the searched for text or matches the specified regex or pattern).","ref":"/docs/reference/data-types/text/searchoptions/","tags":"","title":"SearchOptions"},{"body":"","categories":"","description":"Blocks related to sending Emails.","excerpt":"Blocks related to sending Emails.","ref":"/docs/reference/blocks/email/send-email/","tags":"","title":"Send Email"},{"body":"","categories":"","description":"Blocks related to sending Emails.","excerpt":"Blocks related to sending Emails.","ref":"/docs/reference/blocks/google-workspace/gmail/send-email/","tags":"","title":"Send Email"},{"body":"","categories":"","description":"Blocks related to sending Emails.","excerpt":"Blocks related to sending Emails.","ref":"/docs/reference/blocks/microsoft365/outlook/send-email/","tags":"","title":"Send Email"},{"body":"\rSend Email Using Gmail (Cortex.Blocks.GoogleWorkspace.Gmail.SendEmail.SendEmailUsingGmailBlock)\nDescription Sends an email using Gmail.\nExamples Properties Exceptions Remarks Known Limitations ","categories":"","description":"Sends an email using Gmail.","excerpt":"Sends an email using Gmail.","ref":"/docs/reference/blocks/google-workspace/gmail/send-email/send-email-using-gmail-block/","tags":"","title":"Send Email Using Gmail"},{"body":"\rSend Email Using Microsoft365 (Cortex.Blocks.Microsoft365.Outlook.SendEmail.SendEmailUsingMicrosoft365Block)\nDescription Sends an email using Microsoft365.\nExamples Properties Exceptions Remarks Known Limitations ","categories":"","description":"Sends an email using Microsoft365.","excerpt":"Sends an email using Microsoft365.","ref":"/docs/reference/blocks/microsoft365/outlook/send-email/send-email-using-microsoft365-block/","tags":"","title":"Send Email Using Microsoft365"},{"body":"\rSend Email Using SMTP Server (Cortex.Blocks.Email.SendEmail.SendEmailUsingSmtpServerBlock)\nDescription Connects to an SMTP server using the specified Basic Email Session Details, and sends an Email Message.\nClose Session can be specified to choose whether the connection to the SMTP server is closed or is kept open for use on subsequent Send Email Using SMTP Server blocks.\nExamples Sending an email to a single recipient This example will send an email from sender@gmail.com to recipient@outlook.com. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be to set to true within the Basic Email Session Details.\nFor more information about when UseSsl should be set to true or false, see Setting UseSsl.\nProperties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": []}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: null, bcc: null, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: null) ($)EmailMessage is a variable of type EmailMessage\nAs Priority and BodyFormat are null, the email will be sent with a Text body and Normal priority. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority is sent from sender@gmail.com to recipient@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\", and then the session is closed.\nSending an email to multiple recipients This example will send an email from sender@gmail.com to recipient1@outlook.com, recipient2@outlook.com and recipient3@outlook.com. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be set to true within the Basic Email Session Details.\nFor more information about when UseSsl should be set to true or false, see Setting UseSsl.\nProperties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient1@outlook.com\"}, {\"Name\": null, \"Address\": \"recipient2@outlook.com\"}, {\"Name\": null, \"Address\": \"recipient3@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": []}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient1@outlook.com\"), new EmailAddress(\"recipient2@outlook.com\"), new EmailAddress(\"recipient3@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: null, bcc: null, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: null) ($)EmailMessage is a variable of type EmailMessage\nAs Priority and BodyFormat are null, the email will be sent with a Text body and Normal priority. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority is sent from sender@gmail.com to recipient1@outlook.com, recipient2@outlook.com and recipient3@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\", and then the session is closed.\nSending an email with a CC or BCC recipient This example will send an email from sender@gmail.com to recipient@outlook.com with cc@outlook.com and bcc@outlook.com as the CC and BCC recipients for the email respectively. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be set to true within the Basic Email Session Details.\nFor more information about when UseSsl should be set to true or false, see Setting UseSsl.\nProperties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [{\"Name\": null, \"Address\": \"cc@outlook.com\"}], \"Bcc\": [{\"Name\": null, \"Address\": \"bcc@outlook.com\"}], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": []}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"cc@outlook.com\") }, bcc: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"bcc@outlook.com\") }, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: null) ($)EmailMessage is a variable of type EmailMessage\nAs Priority and BodyFormat are null, the email will be sent with a Text body and Normal priority. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority is sent from sender@gmail.com to recipient@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\". Both cc@outlook.com and bcc@outlook.com will also recieve copies of the email as they are listed as CC and BCC recipients, and then the session is closed.\nSending an email with multiple CC or BCC recipients This example will send an email from sender@gmail.com to recipient@outlook.com with cc1@outlook.com and cc2@outlook.com as the CC recipients and bcc1@outlook.com and bcc2@outlook.com as the BCC recipients for the email. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be set to true within the Basic Email Session Details.\nFor more information about when UseSsl should be set to true or false, see Setting UseSsl.\nProperties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [{\"Name\": null, \"Address\": \"cc1@outlook.com\"}, {\"Name\": null, \"Address\": \"cc2@outlook.com\"}], \"Bcc\": [{\"Name\": null, \"Address\": \"bcc1@outlook.com\"}, {\"Name\": null, \"Address\": \"bcc2@outlook.com\"}], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": []}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"cc1@outlook.com\"), new EmailAddress(\"cc2@outlook.com\") }, bcc: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"bcc1@outlook.com\"), new EmailAddress(\"bcc2@outlook.com\") }, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: null) ($)EmailMessage is a variable of type EmailMessage\nAs Priority and BodyFormat are null, the email will be sent with a Text body and Normal priority. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority is sent from sender@gmail.com to recipient@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\". Both cc1@outlook.com and cc2@outlook.com will also recieve copies of the email as they are listed as CC recipients, and both bcc1@outlook.com and bcc2@outlook.com will recieve copies of the email as they are listed as BCC recipients. Finally, the session is closed.\nSending an email with a different priority This example will send an email with Urgent priority from sender@gmail.com to recipient@outlook.com. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be set to true within the Basic Email Session Details.\nFor more information on:\nWhat priorities an email can be sent as, see EmailMessagePriority The effect of changing the Priority of the Email Message, see How does Priority affect sending an email? When UseSsl should be set to true or false, see Setting UseSsl. Properties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": \"EmailMessagePriority.Urgent\", \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": []}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: null, bcc: null, priority: EmailMessagePriority.Urgent, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: null) ($)EmailMessage is a variable of type EmailMessage\nAs BodyFormat is null, the email will be sent with a Text body. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Urgent priority is sent from sender@gmail.com to recipient@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\", and then the session is closed.\nSending an email with an HTML body This example will send an email with an HTML body from sender@gmail.com to recipient@outlook.com. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be set to true within the Basic Email Session Details.\nFor more information on:\nWhat other body formats an email can be sent with, see EmailMessageBodyFormat The effect of changing the BodyFormat of the Email Message, see How does BodyFormat affect sending an email? When UseSsl should be set to true or false, see Setting UseSsl. Properties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": \"EmailMessageBodyFormat.Html\", \"Body\": \"\u003ch1\u003eExample email body\u003c/h1\u003e\", \"Attachments\": []}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: null, bcc: null, priority: null, subject: \"Example email subject\", bodyFormat: EmailMessageBodyFormat.Html, body: \"\u003ch1\u003eExample email body\u003c/h1\u003e\", attachments: null) ($)EmailMessage is a variable of type EmailMessage\nAs Priority is null, the email will be sent with Normal priority. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority is sent from sender@gmail.com to recipient@outlook.com with a subject of \"Example email subject\" and an HTML body of \"\u003ch1\u003eExample email body\u003c/h1\u003e\", and then the session is closed.\nSending an email with a single attachment This example will send an email with a single attachment, attachment.txt, from sender@gmail.com to recipient@outlook.com. The attachment is located at C:\\attachment.txt on the server executing the flow. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be set to true within the Basic Email Session Details.\nFor more information on:\nEmail attachments, see Attachments When UseSsl should be set to true or false, see Setting UseSsl. Properties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": [\"C:\\\\attachment.txt\"]}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: null, bcc: null, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: new List\u003cstring\u003e(){ @\"C:\\attachment.txt\" }) ($)EmailMessage is a variable of type EmailMessage\nAs Priority and BodyFormat are null, the email will be sent with a Text body and Normal priority.\nThe Attachments are added to the email by providing file paths pointing to the files to be attached to the email. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority containing a text file attachment, attachment.txt, is sent from sender@gmail.com to recipient@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\", and then the session is closed.\nSending an email with multiple attachments This example will send an email with mutiple attachments, attachment1.txt and attachment2.txt from sender@gmail.com to recipient@outlook.com. The attachments are located at the paths C:\\attachment1.txt and C:\\attachment2.txt on the server executing the flow. The example uses the SMTP server hosted at smtp.gmail.com on Port 465 which requires UseSsl to be set to true within the Basic Email Session Details.\nFor more information on:\nEmail attachments, see Attachments When UseSsl should be set to true or false, see Setting UseSsl. Properties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@gmail.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": [\"C:\\\\attachment1.txt\", \"C:\\\\attachment2.txt\"]}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@gmail.com\"), cc: null, bcc: null, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: new List\u003cstring\u003e(){ @\"C:\\attachment1.txt\", @\"C:\\attachment2.txt\" }) ($)EmailMessage is a variable of type EmailMessage\nAs Priority and BodyFormat are null, the email will be sent with a Text body and Normal priority.\nThe Attachments are added to the email by providing file paths pointing to the files to be attached to the email. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@gmail.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp.gmail.com\", 465, true), credentials: new UserCredentials(\"sender@gmail.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority containing two text file attachments, attachment1.txt and attachment2.txt, is sent from sender@gmail.com to recipient@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\", and then the session is closed.\nSending an email with UseSsl set to false This example will send an email from sender@outlook.com to recipient@outlook.com. The example uses the SMTP server hosted at smtp-mail.outlook.com on Port 587 which requires UseSsl to be set to false within the Basic Email Session Details.\nFor more information on when UseSsl should be set to true or false, see Setting UseSsl.\nProperties Property Value Notes Email Message ($)EmailMessage with value {\"To\": [{\"Name\": null, \"Address\": \"recipient@outlook.com\"}], \"From\": {\"Name\": null, \"Address\": \"sender@outlook.com\"}, \"Cc\": [], \"Bcc\": [], \"Priority\": null, \"Subject\": \"Example email subject\", \"BodyFormat\": null, \"Body\": \"Example email body\", \"Attachments\": []}\nIn this example ($)EmailMessage has been set up using the following Expression:\nnew EmailMessage(to: new List\u003cEmailAddress\u003e(){ new EmailAddress(\"recipient@outlook.com\") }, from: new EmailAddress(\"sender@outlook.com\"), cc: null, bcc: null, priority: null, subject: \"Example email subject\", bodyFormat: null, body: \"Example email body\", attachments: null) ($)EmailMessage is a variable of type EmailMessage\nAs Priority and BodyFormat are null, the email will be sent with a Text body and Normal priority. Basic Email Session Details ($)BasicEmailSessionDetails with value {\"ServerDetails\": {\"Host\": \"smtp-mail.outlook.com\", \"Port\": 587, \"UseSsl\": false}, \"Credentials\": {\"Domain\": null, \"Username\": \"sender@outlook.com\", \"Password\": \"encryptedPassword\"}}\nIn this example ($)BasicEmailSessionDetails has been set up using the following Expression:\nnew BasicEmailSessionDetails(serverDetails: new ServerDetails(\"smtp-mail.outlook.com\", 587, false), credentials: new UserCredentials(\"sender@outlook.com\", \"encryptedPassword\")) ($)BasicEmailSessionDetails is a variable of type BasicEmailSessionDetails\nThe Password property in the UserCredentials must be encrypted, for more information on how to encrypt the password, see EncryptedText. Close Session ($)CloseSession with value true ($)CloseSession is a variable of type Boolean Result An email with Normal priority is sent from sender@outlook.com to recipient@outlook.com with a subject of \"Example email subject\" and a Text body of \"Example email body\", and then the session is closed.\nProperties Email Message The Email Message to send via the SMTP server specified in the Basic Email Session Details. This property contains all of the information in relation to the email to be sent, these are:\nTo From Cc Bcc Priority Subject BodyFormat Body Attachments Note that if the properties Priority and BodyFormat are set to null when creating an EmailMessage using a constructor, the email will be sent with Normal priority and with a text body.\nFor more detailed information on each of the properties, see EmailMessage.\nData Type EmailMessage Property Type Input Is Advanced false Default Editor Literal Default Value EmailMessage with value shown below: { \"To\": [ { \"Name\": null, \"Address\": \"\" } ], \"From\": { \"Name\": \"\", \"Address\": \"\" }, \"Cc\": [], \"Bcc\": [], \"Priority\": \"EmailMessagePriority.Normal\", \"Subject\": \"\", \"BodyFormat\": \"EmailMessageBodyFormat.Text\", \"Body\": \"\", \"Attachments\": [] } Basic Email Session Details The Basic Email Session Details object that includes all of the information required to open and maintain a session with an SMTP server, including:\nServerDetails - must be provided in order to connect to an SMTP server. This object contains the properties Host, Port and UseSsl. For more information on: Supported server address formats, see Supported formats for ServerDetails.Host. When UseSsl should be set to true or false, see Setting UseSsl. Credentials - must be provided in order to connect to an SMTP server. This object contains the properties Username and Password to be used for authentication. For more information, see Setting Credentials. If the Close Session property is set to false, then the session will be kept open and can be used in subsequent Send Email Using SMTP Server blocks which improves performance, see Opening Sessions for more information.\nFor more detailed information on each of the properties, see BasicEmailSessionDetails.\nData Type BasicEmailSessionDetails Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)BasicEmailSessionDetails with no value Close Session Close Session can be specified to choose whether the session is closed or is kept open for use on subsequent Send Email Using SMTP Server blocks, this defaults to false if left blank, please see Closing Sessions for more information.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value Boolean with value true Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when BodyFormat within the Email Message is not one of the specified EmailMessageBodyFormat values (e.g. (EmailMessageBodyFormat)10). Thrown when Priority within the Email Message is not one of the specified EmailMessagePriority values (e.g. (EmailMessagePriority)10). Thrown when a file path provided in the Attachments within the Email Message is empty (i.e. \"\"), contains only whitespace (i.e. \" \") or contains the NUL character (i.e. \\0). ArgumentNullException Thrown when a file path provided in the Attachments within the Email Message is null. EmailSessionException Thrown when an invalid Port is provided in the ServerDetails within the Basic Email Session Details. For more information, see Invalid Port. Thrown when an invalid Host is provided in the ServerDetails within the Basic Email Session Details. For more information, see Invalid Host. Thrown when a connection cannot be established; this typically occurs when UseSsl within Basic Email Session Details is set to false with a Port which requires it to be set to true. For more information, see SSL Required. Thrown when a connection cannot be established; this typically occurs when UseSsl within Basic Email Session Details is set to true with a Port which requires it to be set to false. For more information, see SSL Unsupported. Thrown when the TLS/SSL certificate has expired on the Host or is untrusted or invalid. For more information, see SSL Unsupported. Note that this exception has the same category and error code as the above row, this is a known limitation, see EmailSessionErrorCode Limitations. Thrown when a locally installed anti-virus software replaces the TLS/SSL certificate in order to scan web traffic. For more information, see SSL Unsupported. Note that this exception has the same category and error code as the above row, this is a known limitation, see EmailSessionErrorCode Limitations. Thrown when the CRL (Certificate Revocation List) server for the TLS/SSL certificate is down. For more information, see SSL Unsupported. Note that this exception has the same category and error code as the above row, this is a known limitation, see EmailSessionErrorCode Limitations. Thrown when the Username and Password in the UserCredentials within Basic Email Session Details is incorrect. For more information, see Invalid User Credentials. FileNotFoundException Thrown when a non-existent file path is provided in Attachments within Email Message. IOException Thrown when the desired socket is held by another process; re-running the flow typically solves this. Thrown when a file path within Attachments within the Email Message contains leading spaces. Thrown when a file path within Attachments within the Email Message contains invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /). PathTooLongException Thrown when a file path provided in the Attachments within the Email Message exceeds the system-defined maximum length (typically 32,767). PropertyNullException Thrown when the Basic Email Session Details is null. Thrown when the UserCredentials within Basic Email Session Details is null. Thrown when the ServerDetails within Basic Email Session Details is null. Thrown when the Host in ServerDetails within Basic Email Session Details is null. Thrown when the Email Message is null. Thrown when the To within Email Message is null. Thrown when the From within Email Message is null. Thrown when the Address in an EmailAddress within Email Message is null. PropertyEmptyException Thrown when the Host in ServerDetails within Basic Email Session Details is empty (i.e. \"\"). Thrown when the To within Email Message is empty (i.e. []). Thrown when the Address in an EmailAddress within Email Message is empty (i.e. \"\"). PropertyValueOutOfRangeException Thrown when the Port in the ServerDetails within Basic Email Session Details is below 1 or above 65535. For more information, see Property Is Invalid. SmtpCommandException Thrown when the Address in an EmailAddress within Email Message is not of the correct format (RFC 5321). Thrown when the combined size of all of the attachments in the list of Attachments within the Email Message is greater than the limit specified by the email service provider; for Outlook this is 20 MB and for Gmail this is 25 MB). UnauthorizedAccessException Thrown when access is denied to a file provided in Attachments within Email Message. Thrown when a file path within the Attachments property within Email Message points to a folder. Remarks How does Priority affect sending an email? An email sent with Urgent or NonUrgent priority will have its priority displayed differently depending on the email client. For example, Outlook displays an email that has an Urgent priority with a red exclamation mark like so:\nFor more information on how the priority of an email will be displayed, see the help provided by the respective email client.\nHow does BodyFormat affect sending an email? An email sent with an HTML body will have its body displayed as an HTML page instead of as plain text. How the email looks in the email client may differ depending on the email client in use. For example, if the Email Message has its BodyFormat set to HTML and the Body has a value of:\n\"\u003ch1\u003eExample header text\u003c/h1\u003e\\n\u003cp\u003eExample paragraph text\u003c/p\u003e\" Outlook will display the email body as follows:\nFor more information on how the body of an email will be displayed, see the help provided by the respective email client.\nAttachments Attachments can be sent in an email by providing a list of file paths in the Attachments property of the Email Message. For more information concerning attaching files to an email, see the sections below.\nSupported file path formats Each file path in the Attachments within the Email Message can be an:\nAbsolute file path Relative file path UNC file path where each file path must be accessible from the server executing the flow.\nFor more information about each of these supported file path formats, please see File \u0026 Folder Paths.\nFile paths need escaping Each file path in the Attachments within the Email Message requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Attachments\\\\attachment.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Attachments\\attachment.txt\") Null file path If null is provided as a file path in the Attachments within the Email Message, an ArgumentNullException is thrown.\nEmpty file path If an empty string is provided as a file path in the the Attachments within the Email Message, an ArgumentException is thrown.\nFile path does not exist If a file path in the Attachments within the Email Message does not exist, a FileNotFoundException is thrown.\nInvalid file path If a file path in the Attachments within the Email Message is invalid (i.e. contains any of the following characters: “, *, ?, |, \u003c, \u003e, :, , /), an IOException will be thrown.\nFile path points to a folder If a file path in the Attachments within the Email Message points to a folder, an UnauthorizedAccessException will be thrown.\nFile path contains leading spaces If a file path in the Attachments within the Email Message contains leading spaces they are not removed and an IOException will be thrown; however, trailing spaces are removed.\nFile path contains only whitespace or the NUL character If a file path in the Attachments within the Email Message contains only whitespace (i.e. \" \") or the NUL character (i.e. \\0), an ArgumentException will be thrown.\nFile path exceeds the system-defined maximum length If a file path in the Attachments within the Email Message exceeds the system-defined maximum length (typically 32,767), a PathTooLongException will be thrown.\nUser does not have necessary permissions to attach the file If the user the flow is executing as does not have permissions to access the file at the provided file path in the Attachments within the Email Message, an UnauthorizedAccessException will be thrown.\nAttachment size limit The combined size of all the Attachments within the Email Message must be less than the limit specified by the email service provider. If the combined size of all of the attachments is greater than the limit, an SmtpCommandException will be thrown.\nFor Outlook this is 20 MB and for Gmail this is 25 MB, for more information on the size limits for other email service providers, see the help provided by the respective email service provider.\nSupported formats for ServerDetails.Host The following formats are supported for Host in ServerDetails:\nFully Qualified Domain Name (e.g. \"smtp.gmail.com\") Machine name (e.g. \"mail-server1\") IP address (e.g. \"127.0.0.1\") Localhost (e.g. \"localhost\") Setting UseSsl The ServerDetails within the Basic Email Session Details specifies which SMTP server to connect to. The value of the UseSsl property inside this object depends on the Host and Port being connected to. There are two types of SSL/TLS connections that can occur:\nSSL/TLS is used as soon as a connection is established SSL/TLS is used via the STARTTLS command if it is available The above two points correspond to the UseSsl property being set to true and false respectively. As such, generally the following rules can be followed to determine whether UseSsl should be set to true or false:\nIf the Port being connected to is 465 then UseSsl should be set to true If the Port being connected to is 25 or 567 then UseSsl should be set to false Setting Credentials The UserCredentials within the Basic Email Session Details specifies what user to connect as on the SMTP server. The value of the Username property may optionally be encrypted, however the Password must be encrypted otherwise an UnencryptedTextException will be thrown when the object is created. For more information on how to encrypt the password, see EncryptedText.\nNote that the UserCredentials object also contains a Domain property which is ignored by this block.\nOpening Sessions The Send Email Using SMTP Server block automatically handles creating and opening sessions for the specified Basic Email Session Details using the following rules:\nIf a session does not exist, a new session will be created, opened and used when the block runs. If a session already exists but is closed, the session will be opened and used when the block runs. If a session already exists and is open, the session will be used when the block runs. Basic Email Session Details will keep the session open across multiple Send Email Using SMTP Server blocks as long as Close Session is set to false. Keeping the session open helps increase the performance of the block due to the subsequent blocks not having to spend resources creating and opening sessions for each execution.\nNote that for all SSL connections, the protocol to be used will be negotiated with the server depending on which protocols are available. Similarly, the SASL mechanism to be used will be negotiated with the mail server based on the available mechanisms.\nFor information on how to explicitly close a session, please see Closing Sessions.\nClosing Sessions Sessions can be explicitly closed by setting Close Session to true. This causes the session to be closed after the Email Message has been sent.\nIf Close Session is set to false the session will be closed when the Variable that Basic Email Session Details is set to goes out of scope or the flow ends, whichever happens first. For more information about variables and scope, please see Variables.\nFor information on how to open a session, please see Opening Sessions.\nKnown Limitations Currently unauthenticated SMTP servers are not supported.\nThis limitation may be removed in the future.\n","categories":"","description":"Sends an email using the specified SMTP server.","excerpt":"Sends an email using the specified SMTP server.","ref":"/docs/reference/blocks/email/send-email/send-email-using-smtp-server-block/","tags":"","title":"Send Email Using SMTP Server"},{"body":"ServerDetails (Cortex.DataTypes.SessionDetails.ServerDetails)\nSummary The ServerDetails data type is used to represent details required to connect to a server.\nCategory: Session Details Name: ServerDetails Full Name: Cortex.DataTypes.SessionDetails.ServerDetails Alias: N/A Description: Details required to connect to a server. Default Value: null Can be used as: ServerDetails, Object, dynamic Can be cast to: N/A Properties Host The Host is used to define the address of the server to connect to. The value of this property may optionally be encrypted; for more information on how to encrypt this property, see EncryptableText.\nA server address can typically be represented in one of the following formats:\nFully Qualified Domain Name (e.g. \"smtp.gmail.com\") Machine name (e.g. \"mail-server1\") IP address (e.g. \"127.0.0.1\") Localhost (e.g. \"localhost\") The server address formats supported are dependent on the block being used:\nSend Email Using SMTP Server Block Data Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value \"\" Port The Port is used to define the port on the server to connect to.\nData Type Int32 Is Advanced false Default Editor Literal Default Value Int32 with value 0 UseSsl UseSsl is used to define whether or not connection to the server should use SSL.\nWhen using this data type with Send Email Using SMTP Server Block, the value of this property depends on the Port. For more information, see Send Email Using SMTP Server Block.\nData Type Boolean Is Advanced false Default Editor Literal Default Value Boolean with value true Remarks Create a ServerDetails The following table shows some of the ways that ServerDetails can be created.\nMethod Example Result Editor Support Notes Use a ServerDetails constructor new ServerDetails(host: \"smtp.gmail.com\", port: 465, useSsl: true) {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true} Expression A ServerDetails can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes Host EncryptableText \"smtp.gmail.com\" Host defines the address of the server to connect to. Port Int32 465 Port defines the port on the server to connect to. UseSsl Boolean true UseSsl defines whether or not connection to the server should use SSL. Convert ServerDetails to Text Method Example Result Editor Support Notes Use Convert Object To Json block where Object property has a value of {\"Host\": \"smtp.gmail.com\", \"Port\": 465, \"UseSsl\": true} \"{\\r\\n \\\"Host\\\": \\\"smtp.gmail.com\\\",\\r\\n \\\"Port\\\": 465,\\r\\n \\\"UseSsl\\\": true\\r\\n}\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is ServerDetails. The Literal Editor is available for Input properties where the data type is ServerDetails. The Variable Editor is available for Input, InputOutput and Output properties where the data type is ServerDetails. Known Limitations None\nSee Also Related Data Types BasicEmailSessionDetails Boolean EncryptableText Int32 Related Concepts Working with Email External Documentation None\n","categories":"","description":"Used to represent details required to connect to a server.","excerpt":"Used to represent details required to connect to a server.","ref":"/docs/reference/data-types/session-details/serverdetails/","tags":"","title":"ServerDetails"},{"body":"\rSet All Items (Cortex.Blocks.Dictionaries.SetItem.SetAllItemsBlock`3)\nDescription Sets all items in a Dictionary to a New Value.\nExamples Set all items in a Dictionary to a New Value This example will set all items in {\"Key1\" : 1, \"Key2\" : 2} to 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Result Setting all items in {\"Key1\" : 1, \"Key2\" : 2} to 10 results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 10, \"Key2\" : 10} Properties Dictionary The Dictionary to set all items in.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value New Value The New Value to set all items in Dictionary to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when New Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary is null. Remarks Empty Dictionary If Dictionary is empty (i.e. {}) there is nothing to set, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Sets all items in a Dictionary to a new value.","excerpt":"Sets all items in a Dictionary to a new value.","ref":"/docs/reference/blocks/dictionaries/set-item/set-all-items-block-3/","tags":"","title":"Set All Items"},{"body":"\rSet All Items (Cortex.Blocks.Lists.SetItem.SetAllItemsBlock`2)\nDescription Sets all items in a List to a New Value.\nExamples Set all items in a List to a New Value This example will set all items in [\"Some Text\", 1] to \"New Value\".\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e New Value ($)NewValue, with value \"New Value\" ($)NewValue is a variable of type String Result Setting all items in [\"Some Text\", 1] to \"New Value\" results in the variable ($)List being updated to the following:\n[\"New Value\", \"New Value\"] Properties List The List to set all items in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Value The New Value to set all items in List to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when New Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Empty List If List is empty (i.e. []) there is nothing to set, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets all items in a List to a new value.","excerpt":"Sets all items in a List to a new value.","ref":"/docs/reference/blocks/lists/set-item/set-all-items-block-2/","tags":"","title":"Set All Items"},{"body":"\rSet Item At Beginning (Cortex.Blocks.Lists.SetItem.SetItemAtBeginningBlock`2)\nDescription Sets the item at the beginning of a List to a New Value.\nExamples Set the item at the beginning of a List to a New Value This example will set the item at the beginning of [\"Some Text\", 1] to \"Some Modified Text\".\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e New Value ($)NewValue, with value \"Some Modified Text\" ($)NewValue is a variable of type String Result Setting the item at the beginning of [\"Some Text\", 1] to \"Some Modified Text\" results in the variable ($)List being updated to the following:\n[\"Some Modified Text\", 1] Properties List The List to set the item in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Value The New Value to set the item at the beginning of List to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when New Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyEmptyException Thrown when List contains no items. PropertyNullException Thrown when List is null. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the item at the beginning of a List to a new value.","excerpt":"Sets the item at the beginning of a List to a new value.","ref":"/docs/reference/blocks/lists/set-item/set-item-at-beginning-block-2/","tags":"","title":"Set Item At Beginning"},{"body":"\rSet Item At End (Cortex.Blocks.Lists.SetItem.SetItemAtEndBlock`2)\nDescription Sets the item at the end of a List to a New Value.\nExamples Set the item at the end of a List to a New Value This example will set the item at the end of [\"Some Text\", 1] to 10.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Result Setting the item at the end of [\"Some Text\", 1] to 10 results in the variable ($)List being updated to the following:\n[\"Some Text\", 10] Properties List The List to set the item in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Value The New Value to set the item at the end of List to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when New Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyEmptyException Thrown when List contains no items. PropertyNullException Thrown when List is null. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the item at the end of a List to a new value.","excerpt":"Sets the item at the end of a List to a new value.","ref":"/docs/reference/blocks/lists/set-item/set-item-at-end-block-2/","tags":"","title":"Set Item At End"},{"body":"\rSet Item At Index (Cortex.Blocks.Lists.SetItem.SetItemAtIndexBlock`2)\nDescription Sets the item at the specified Index of a List to a New Value.\nExamples Set the Item at the first Index (i.e. 0) of a List to a New Value This example will set the item at index 0 of [\"Some Text\", 1] to 10.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Setting the item at index 0 of [\"Some Text\", 1] to 10 results in the variable ($)List being updated to the following:\n[10, 1] Set the Item at the last Index (i.e. Index equals count of items - 1) of a List This example will set the item at index 1 of [\"Some Text\", 1] to 10.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1] ($)List is a variable of type IList\u003cdynamic\u003e New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Index ($)Index, with value 1 ($)Index is a variable of type Int32 Result Setting the item at index 1 of [\"Some Text\", 1] to 10 results in the variable ($)List being updated to the following:\n[\"Some Text\", 10] Properties List The List to set the item in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Value The New Value to set the item at the specified Index of List to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Index The Index to set the item at.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when New Value is null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. PropertyValueOutOfRangeException Thrown when List contains no items. Thrown when Index is out of the range of the list indexes. Valid indexes are between and including 0 and the count of items in the List - 1. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the item at the specified index of a List to a new value.","excerpt":"Sets the item at the specified index of a List to a new value.","ref":"/docs/reference/blocks/lists/set-item/set-item-at-index-block-2/","tags":"","title":"Set Item At Index"},{"body":"\rSet Item With Key (Cortex.Blocks.Dictionaries.SetItem.SetItemWithKeyBlock`3)\nDescription Sets the specified Occurrence of an item with the given Key in a Dictionary to a New Value.\nExamples Set the first Occurrence of an item with a Key in a Dictionary to a New Value This example will attempt to set the first occurrence of an item with the key \"Key1\" in {\"Key1\" : 1, \"Key2\" : 2} to 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Key ($)Key, with value \"Key1\" ($)Key is a variable of type String New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result An Occurrence of 1 means set the first occurrence; 2 means second etc.\nAttempting to set the first occurrence of an item with the key \"Key1\" in {\"Key1\" : 1, \"Key2\" : 2} to 10 results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 10, \"Key2\" : 1} Set the last Occurrence of an item with a Key in a Dictionary to a New Value Typically keys are simple data types such as String, Int32, Boolean, and for these a dictionary cannot the same key value more than once. This is due to how the data type’s object equality is implemented (two items are considered equal if they have the same value rather than being the same object reference).\nHowever, other data types such as IList\u003cInt32\u003e can also be used as keys. For these data types, object equality only considers two items equal if they are the same reference; it does not care about whether they have the same value. Therefore, it is possible to have the same key value more than once, and as a result you should be able to set an occurrence of item with that key.\nThis example will illustrate this, by attempting to set the last occurrence of an item with the key [1] in {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} to 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} ($)Dictionary is a variable of type IDictionary\u003cIList\u003cInt32\u003e, Int32\u003e Key ($)Key, with value [1] ($)Key is a variable of type IList\u003cInt32\u003e New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Result An Occurrence of -1, means set the last occurrence; -2 means second last etc.\nAttempting to set the last occurrence of an item with the key [1] in {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} to 10 results in the variable ($)Dictionary being updated to the following:\n{[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10} Properties Dictionary The Dictionary to set the specified Occurrence of item with the given Key in.\nItems are considered matching if they have the specified Key.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key the item to set must have.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Value The New Value to set the specified Occurrence of item with the given Key in Dictionary to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of item with the given Key to set in the Dictionary.\nItems are considered matching if they have the specified Key.\nUnlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when New Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. KeyNotPresentException Thrown when the Key is not present in the Dictionary. OccurrenceNotPresentException Thrown when the specified Occurrence of item with the given Key is not present in the Dictionary. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nOccurrences Unlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Sets the specified occurrence of an item with the given key in a Dictionary to a new value.","excerpt":"Sets the specified occurrence of an item with the given key in a Dictionary to a new value.","ref":"/docs/reference/blocks/dictionaries/set-item/set-item-with-key-block-3/","tags":"","title":"Set Item With Key"},{"body":"\rSet Item With Value (Cortex.Blocks.Dictionaries.SetItem.SetItemWithValueBlock`3)\nDescription Sets the specified Occurrence of an item matching a Value in a Dictionary to a New Value.\nExamples Set the first Occurrence of an item matching a Value in a Dictionary to a New Value This example will attempt to set the first occurrence of an item matching the value 1 in {\"Key1\" : 1, \"Key2\" : 1} to 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result An Occurrence of 1 means set the first occurrence; 2 means second etc.\nAttempting to set the first occurrence of an item matching the value 1 in {\"Key1\" : 1, \"Key2\" : 1} to 10 results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 10, \"Key2\" : 1} Set the last Occurrence of an item matching a Value in a Dictionary to a New Value This example will attempt to set the last occurrence of an item matching the value 1 in {\"Key1\" : 1, \"Key2\" : 1} to 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Result An Occurrence of -1, means set the last occurrence; -2 means second last etc.\nAttempting to set the last occurrence of an item matching the value 1 in {\"Key1\" : 1, \"Key2\" : 1} to 10 results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 1, \"Key2\" : 10} Properties Dictionary The Dictionary to set the specified Occurrence of matching item in.\nItems are considered matching if they have the specified Value.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Value The Value the item to set must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Value The New Value to set the specified Occurrence of matching item in Dictionary to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of matching item to set in the Dictionary.\nItems are considered matching if they have the specified Value.\nUnlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when Value or New Value are null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nOccurrences Unlike lists, dictionaries do not have a defined order. This means the nth occurrence is determined by the underlying Microsoft .Net implementation; this is not published and could change if the algorithm were to change.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to set, so no operation is performed.\nNo items matching Value, or Occurrence is not present If Dictionary does not contain items matching the specified Value or the specified Occurrence is not present, there is nothing to set, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Sets the specified occurrence of an item matching a value in a Dictionary to a new value.","excerpt":"Sets the specified occurrence of an item matching a value in a Dictionary to a new value.","ref":"/docs/reference/blocks/dictionaries/set-item/set-item-with-value-block-3/","tags":"","title":"Set Item With Value"},{"body":"\rSet Item With Value (Cortex.Blocks.Lists.SetItem.SetItemWithValueBlock`2)\nDescription Sets the specified Occurrence of an item matching a Value in a List to a New Value.\nExamples Set the first Occurrence of an item matching a Value in a List to a New Value This example will attempt to set the first occurrence of an item matching the value 1 in [1, 2, 3, 3, 2, 1] to 10.\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Occurrence ($)Occurrence, with value 1 ($)Occurrence is a variable of type Int32 Result An Occurrence of 1 means set the first occurrence; 2 means second etc.\nAttempting to set the first occurrence of an item matching the value 1 in [1, 2, 3, 3, 2, 1] to 10 results in the variable ($)List being updated to the following:\n[10, 2, 3, 3, 2, 1] Set the last Occurrence of an item matching a Value in a List to a New Value This example will attempt to set the last occurrence of an item matching the value 1 in [1, 2, 3, 3, 2, 1] to 10.\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Occurrence ($)Occurrence, with value -1 ($)Occurrence is a variable of type Int32 Result An Occurrence of -1, means set the last occurrence; -2 means second last etc.\nAttempting to set the last occurrence of an item matching the value 1 in [1, 2, 3, 3, 2, 1] to 10 results in the variable ($)List being updated to the following:\n[1, 2, 3, 3, 2, 10] Properties List The List to set the specified Occurrence of matching item in.\nItems are considered matching if they have the specified Value.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value the item to set must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Value The New Value to set the specified Occurrence of matching item in List to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Occurrence The Occurrence of matching item to set in the List.\nItems are considered matching if they have the specified Value.\nFor information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 1 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when Value or New Value are null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nOccurrences For information about supported values for the Occurrence property and examples of how it can be used, please see Occurrences.\nEmpty List If List is empty (i.e. []) there is nothing to set, so no operation is performed.\nNo items matching Value, or Occurrence is not present If List does not contain items matching the specified Value or the specified Occurrence is not present, there is nothing to set, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the specified occurrence of an item matching a value in a List to a new value.","excerpt":"Sets the specified occurrence of an item matching a value in a List to a new value.","ref":"/docs/reference/blocks/lists/set-item/set-item-with-value-block-2/","tags":"","title":"Set Item With Value"},{"body":"","categories":"","description":"Set an item or multiple items in a dictionary to a new value.","excerpt":"Set an item or multiple items in a dictionary to a new value.","ref":"/docs/reference/blocks/dictionaries/set-item/","tags":"","title":"Set Item(s)"},{"body":"","categories":"","description":"Set an item or multiple items in a list to a new value.","excerpt":"Set an item or multiple items in a list to a new value.","ref":"/docs/reference/blocks/lists/set-item/","tags":"","title":"Set Item(s)"},{"body":"\rSet Items At Beginning (Cortex.Blocks.Lists.SetItem.SetItemsAtBeginningBlock`2)\nDescription Sets the items at the beginning of a List to New Values.\nExamples Set the items at the beginning of a List to New Values This example will set the first and second items at the beginning of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", 10] respectively.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e New Values ($)NewValues, with value [\"Some Modified Text\", 10] ($)NewValues is a variable of type IEnumerable\u003cdynamic\u003e Result Setting the first and second items at the beginning of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", 10] respectively, results in the variable ($)List being updated to the following:\n[\"Some Modified Text\", 10, \"Some More Text\", 2] Properties List The List to set the items in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Values The New Values to set the items at the beginning of List to.\nThe number of items in New Values determines the number of items that will be set at the beginning of List. One item means only the first item is set, two items means the first and second items are set etc.\nThe first item in List will be set to the first value in New Values; the second item in List will be set to the second value in New Values etc.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyEmptyException Thrown when List contains no items. PropertyNullException Thrown when List or New Values is null. Remarks Empty New Values If New Values is empty (i.e. []) there is nothing to set, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the items at the beginning of a List to new values.","excerpt":"Sets the items at the beginning of a List to new values.","ref":"/docs/reference/blocks/lists/set-item/set-items-at-beginning-block-2/","tags":"","title":"Set Items At Beginning"},{"body":"\rSet Items At End (Cortex.Blocks.Lists.SetItem.SetItemsAtEndBlock`2)\nDescription Sets the items at the end of a List to New Values.\nExamples Set the items at the end of a List to New Values This example will set the second last and last items at the end of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", 10] respectively.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e New Values ($)NewValues, with value [\"Some Modified Text\", 10] ($)NewValues is a variable of type IEnumerable\u003cdynamic\u003e Result Setting the second last and last items at the end of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", 10] respectively, results in the variable ($)List being updated to the following:\n[\"Some Text\", 1, \"Some Modified Text\", 10] Properties List The List to set the items in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Values The New Values to set the items at the end of List to.\nThe number of items in New Values determines the number of items that will be set at the end of List. One item means only the last item is set, two items means the second last and last items are set etc.\nThe last item in List will be set to the last value in New Values; the second last item in List will be set to the second last value in New Values etc.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyEmptyException Thrown when List contains no items. PropertyNullException Thrown when List or New Values is null. Remarks Empty New Values If New Values is empty (i.e. []) there is nothing to set, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the items at the end of a List to new values.","excerpt":"Sets the items at the end of a List to new values.","ref":"/docs/reference/blocks/lists/set-item/set-items-at-end-block-2/","tags":"","title":"Set Items At End"},{"body":"\rSet Items At Index (Cortex.Blocks.Lists.SetItem.SetItemsAtIndexBlock`2)\nDescription Sets the items at the specified Index of a List to New Values.\nExamples Set the Items at the first Index (i.e. 0) of a List to New Values This example will set the 2 items starting at index 0 of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", 10] respectively.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e New Values ($)NewValues, with value [\"Some Modified Text\", 10] ($)NewValues is a variable of type IEnumerable\u003cdynamic\u003e Index ($)Index, with value 0 ($)Index is a variable of type Int32 Result Setting the two items at index 0 of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", 10] respectively, results in the variable ($)List being updated to the following:\n[\"Some Modified Text\", 10, \"Some More Text\", 2] Properties List The List to set the items in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Values The New Values to set the items at the specified Index of List to.\nThe number of items in New Values determines the number of items that will be set at the end of List. One item means one item is set, two items means two items are set etc.\nThe item at Index of List will be set to the first value in New Values; the item at Index + 1 of List will be set to the second value in New Values etc.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Index The Index to start setting the items at. This is an inclusive index, which means the item at the specified index will be included.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type Int32 Property Type Input Is Advanced false Default Editor Literal Default Value 0 Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. PropertyEmptyException Thrown when New Values contains no items. PropertyNullException Thrown when List or New Values is null. PropertyValueOutOfRangeException Thrown when Index is less than 0 or greater than the count of items in List - 1. Thrown when Index + count of items in New Values is greater than the count of items in the List - 1. Remarks Index is inclusive The Index is an inclusive index, which means the item at the index will be included in the set items.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the items at the specified index of a List to new values.","excerpt":"Sets the items at the specified index of a List to new values.","ref":"/docs/reference/blocks/lists/set-item/set-items-at-index-block-2/","tags":"","title":"Set Items At Index"},{"body":"\rSet Items At Indexes (Cortex.Blocks.Lists.SetItem.SetItemsAtIndexesBlock`2)\nDescription Sets the items at each of the specified Indexes of a List to New Values.\nExamples Sets items at the first and third Indexes (i.e. [0, 2]) of a List to New Values This example will set items at indexes 0 and 2 of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", \"Some More Modified Text\"] respectively.\nProperties Property Value Notes List ($)List, with value [\"Some Text\", 1, \"Some More Text\", 2] ($)List is a variable of type IList\u003cdynamic\u003e New Values ($)NewValues, with value [\"Some Modified Text\", \"Some More Modified Text\"] ($)NewValues is a variable of type IEnumerable\u003cString\u003e Indexes ($)Indexes, with value [0, 2] ($)Indexes is a variable of type IEnumerable\u003cInt32\u003e Result Setting items at indexes 0 and 2 of [\"Some Text\", 1, \"Some More Text\", 2] to [\"Some Modified Text\", \"Some More Modified Text\"] respectively, results in the variable ($)List being updated to the following:\n[\"Some Modified Text\", 1, \"Some More Modified Text\", 2] Properties List The List to set the items in.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value New Values The New Values to set the items at the specified Indexes of List to.\nThe number of items in New Values must match the number of items in Indexes.\nThe List item at the first index in Indexes will be set to the first value in New Values; the List item at the second index in Indexes will be set to the second value in New Values etc.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Indexes The Indexes of the items to set.\nValid values are between and including 0 and the total count of items in the List - 1.\nFor information about what an index is, please see Indexes.\nData Type IEnumerable\u003cInt32\u003e Property Type Input Is Advanced false Default Editor Expression Default Value new List\u003cint\u003e() {} Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. DuplicateValueException Thrown when Indexes contains duplicate values. PropertyItemCountException Thrown when the count of items in New Values and the count of items in Indexes are not the same. PropertyNullException Thrown when List or New Values or Indexes is null. PropertyValueOutOfRangeException Thrown when Indexes contains no values. Thrown when any index in Indexes is less than 0 or greater than the count of items in List - 1. Remarks Defining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets the items at each of the specified indexes of a List to new values.","excerpt":"Sets the items at each of the specified indexes of a List to new values.","ref":"/docs/reference/blocks/lists/set-item/set-items-at-indexes-block-2/","tags":"","title":"Set Items At Indexes"},{"body":"\rSet Items With Key (Cortex.Blocks.Dictionaries.SetItem.SetItemsWithKeyBlock`3)\nDescription Sets all items with the given Key in a Dictionary to a New Value.\nExamples Sets all items with a Key in a Dictionary to a New Value Typically keys are simple data types such as String, Int32, Boolean, and for these a dictionary cannot the same key value more than once. This is due to how the data type’s object equality is implemented (two items are considered equal if they have the same value rather than being the same object reference).\nHowever, other data types such as IList\u003cInt32\u003e can also be used as keys. For these data types, object equality only considers two items equal if they are the same reference; it does not care about whether they have the same value. Therefore, it is possible to have the same key value more than once, and as a result you should be able to set all items with that key.\nThis example will illustrate this, by attempting to set all items with the key [1] in {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} to 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} ($)Dictionary is a variable of type IDictionary\u003cIList\u003cInt32\u003e, Int32\u003e Key ($)Key, with value [1] ($)Key is a variable of type IList\u003cInt32\u003e New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Result Attempting to set all items with the key [1] in {[1] : 1, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 1} to 10 results in the variable ($)Dictionary being updated to the following:\n{[1] : 10, [2] : 2, [3] : 3, [3] : 3, [2] : 2, [1] : 10} Properties Dictionary The Dictionary to set all items with the given Key in.\nItems are considered matching if they have the specified Key.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Key The Key the items to set must have.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nFor information about what a key is, please see Keys.\nData Type TKey Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Value The New Value to set all items with the given Key in Dictionary to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when New Value is null and Dictionary only accepts non-nullable value types. See Value Is Invalid. KeyNotPresentException Thrown when the Key is not present in the Dictionary. PropertyNullException Thrown when Dictionary or Key are null. Remarks Key Equality For information and examples of how it is determined whether a key is already present, please see Object Equality.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Sets all items with the given key in a Dictionary to a new value.","excerpt":"Sets all items with the given key in a Dictionary to a new value.","ref":"/docs/reference/blocks/dictionaries/set-item/set-items-with-key-block-3/","tags":"","title":"Set Items With Key"},{"body":"\rSet Items With Keys (Cortex.Blocks.Dictionaries.SetItem.SetItemsWithKeysBlock`3)\nDescription Sets all items with any of the given Keys in a Dictionary to New Values.\nExamples Set all items with any of the given Keys in a Dictionary to New Values This example will attempt to set all items with any of the keys [\"Key1\", \"Key2\"] in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} to [10, 20] respectively.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Keys ($)Keys, with value [\"Key1\", \"Key2\"] ($)Keys is a variable of type IEnumerable\u003cString\u003e NewValues ($)NewValues, with value [10, 20] ($)NewValues is a variable of type IEnumerable\u003cInt32\u003e Result Attempting to set all items with any of the keys [\"Key1\", \"Key2\"] in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} to [10, 20] respectively, results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 10, \"Key2\" : 20, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} Properties Dictionary The Dictionary to set all matching items in.\nItems are considered matching if they have any of the specified Keys.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Keys The Keys the items to set must have one of.\nFor information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nData Type IEnumerable\u003cTKey\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Values The New Values to set the items with the corresponding Keys in Dictionary to.\nThe number of items in New Values must match the number of items in Keys.\nDictionary items with the first key in Keys will be set to the first value in New Values; Dictionary items with the second key in Keys will be set to the second value in New Values etc.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentNullException Thrown when any key in Keys is null CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. KeysNotPresentException Thrown when any key in the Keys is not present in the Dictionary. PropertyItemCountException Thrown when the count of items in Keys and the count of items in New Values are not the same, or neither contain any items. PropertyNullException Thrown when Dictionary or Keys or New Values are null. Remarks Key Equality For information and examples of how it is determined whether an item has a specified key, please see Object Equality.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Sets all items with any of the given keys in a Dictionary to new values.","excerpt":"Sets all items with any of the given keys in a Dictionary to new values.","ref":"/docs/reference/blocks/dictionaries/set-item/set-items-with-keys-block-3/","tags":"","title":"Set Items With Keys"},{"body":"\rSet Items With Value (Cortex.Blocks.Dictionaries.SetItem.SetItemsWithValueBlock`3)\nDescription Sets all items matching a Value in a Dictionary to a New Value.\nExamples Set all items matching a Value in a Dictionary to a New Value This example will attempt to set all items matching the value 1 in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} to 10.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Result Attempting to set all items matching the value 1 in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} to 10 results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 10, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 10} Properties Dictionary The Dictionary to set all matching items in.\nItems are considered matching if they have the specified Value.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Value The Value the items to set must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Value The New Value to set all matching items in Dictionary to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. InvalidPropertyValueException Thrown when Value or New Value are null and Dictionary only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when Dictionary is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to set, so no operation is performed.\nNo items matching Value If Dictionary does not contain items matching the specified Value, there is nothing to set, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Sets all items matching a value in a Dictionary to a new value.","excerpt":"Sets all items matching a value in a Dictionary to a new value.","ref":"/docs/reference/blocks/dictionaries/set-item/set-items-with-value-block-3/","tags":"","title":"Set Items With Value"},{"body":"\rSet Items With Value (Cortex.Blocks.Lists.SetItem.SetItemsWithValueBlock`2)\nDescription Sets all items matching a Value in a List to a New Value.\nExamples Set all items matching a Value in a List to a New Value This example will attempt to set all items matching the value 1 in [1, 2, 3, 3, 2, 1] to 10.\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Value ($)Value, with value 1 ($)Value is a variable of type Int32 New Value ($)NewValue, with value 10 ($)NewValue is a variable of type Int32 Result Attempting to set all items matching the value 1 in [1, 2, 3, 3, 2, 1] to 10 results in the variable ($)List being updated to the following:\n[10, 2, 3, 3, 2, 10] Properties List The List to set all matching items in.\nItems are considered matching if they have the specified Value.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Value The Value the items to set must match.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Value The New Value to set all matching items in List to.\nData Type TItem Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. InvalidPropertyValueException Thrown when Value or New Value are null and List only accepts non-nullable value types. See Value Is Invalid. PropertyNullException Thrown when List is null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []) there is nothing to set, so no operation is performed.\nNo items matching Value If List does not contain items matching the specified Value, there is nothing to set, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets all items matching a value in a List to a new value.","excerpt":"Sets all items matching a value in a List to a new value.","ref":"/docs/reference/blocks/lists/set-item/set-items-with-value-block-2/","tags":"","title":"Set Items With Value"},{"body":"\rSet Items With Values (Cortex.Blocks.Dictionaries.SetItem.SetItemsWithValuesBlock`3)\nDescription Set all items matching one of the specified Values in a Dictionary to New Values.\nExamples Set all items matching one of the specified Values in a Dictionary to New Values This example will attempt to set all items matching one of the values [1, 2] in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} to [10, 20] respectively.\nProperties Property Value Notes Dictionary ($)Dictionary, with value {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} ($)Dictionary is a variable of type IDictionary\u003cString, Int32\u003e Values ($)Values, with value [1, 2] ($)Values is a variable of type IEnumerable\u003cInt32\u003e NewValues ($)NewValues, with value [10, 20] ($)NewValues is a variable of type IEnumerable\u003cInt32\u003e Result Attempting to set all items matching one of the values [1, 2] in {\"Key1\" : 1, \"Key2\" : 2, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 2, \"Key6\" : 1} to [10, 20] respectively, results in the variable ($)Dictionary being updated to the following:\n{\"Key1\" : 10, \"Key2\" : 20, \"Key3\" : 3, \"Key4\" : 3, \"Key5\" : 20, \"Key6\" : 10} Properties Dictionary The Dictionary to set all matching items in.\nItems are considered matching if they have one of the specified Values.\nDictionary can be any IDictionary\u003cTKey, TItem\u003e, where TKey represents the type of keys used to lookup items in the Dictionary, and TItem represents the type of items in the Dictionary.\nData Type IDictionary\u003cTKey, TItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)Dictionary with no value Values The Values the items to set must match one of.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Values The New Values to set the items matching the corresponding Values in Dictionary to.\nThe number of items in New Values must match the number of items in Values.\nDictionary items matching the first value in Values will be set to the first value in New Values; Dictionary items matching the second value in Values will be set to the second value in New Values etc.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyDictionaryException Thrown when Dictionary is read-only. DuplicateValueException Thrown when Values contains duplicate values. PropertyItemCountException Thrown when the count of items in Values and the count of items in New Values are not the same, or neither contain any items. PropertyNullException Thrown when Dictionary or Values or New Values are null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty Dictionary If Dictionary is empty (i.e. {}) there is nothing to set, so no operation is performed.\nNo items matching a specified value in Values If Dictionary does not contain items matching one of the specified Values, there is nothing to set for that value.\nNo items matching Values If Dictionary does not contain items matching any of the specified Values, there is nothing to set, so no operation is performed.\nDefining dictionaries using literal syntax For information about how to define dictionaries using literal syntax, see Dictionary Literals.\nDefining dictionaries using expression syntax For information about how to define dictionaries using expression syntax, see Create a Dictionary\u003cTKey, TItem\u003e.\nDictionaries containing items with same data types vs different data types For information about the different types of dictionaries, including those that can contain only the same type of item, and those that can contain different types of item, see Dictionaries.\n","categories":"","description":"Sets all items matching one of the specified values in a Dictionary to new values.","excerpt":"Sets all items matching one of the specified values in a Dictionary to new values.","ref":"/docs/reference/blocks/dictionaries/set-item/set-items-with-values-block-3/","tags":"","title":"Set Items With Values"},{"body":"\rSet Items With Values (Cortex.Blocks.Lists.SetItem.SetItemsWithValuesBlock`2)\nDescription Set all items matching one of the specified Values in a List to New Values.\nExamples Set all items matching one of the specified Values in a List to New Values This example will attempt to set all items matching one of the values [1, 2] in [1, 2, 3, 3, 2, 1] to [10, 20] respectively.\nProperties Property Value Notes List ($)List, with value [1, 2, 3, 3, 2, 1] ($)List is a variable of type IList\u003cInt32\u003e Values ($)Values, with value [1, 2] ($)Values is a variable of type IEnumerable\u003cInt32\u003e NewValues ($)NewValues, with value [10, 20] ($)NewValues is a variable of type IEnumerable\u003cInt32\u003e Result Attempting to set all items matching one of the values [1, 2] in [1, 2, 3, 3, 2, 1] to [10, 20] respectively, results in the variable ($)List being updated to the following:\n[10, 20, 3, 3, 20, 10] Properties List The List to set all matching items in.\nItems are considered matching if they have one of the specified Values.\nList can be any IList\u003cTItem\u003e, where TItem represents the type of items in the List.\nData Type IList\u003cTItem\u003e Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)List with no value Values The Values the items to set must match one of.\nFor information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) New Values The New Values to set the items matching the corresponding Values in List to.\nThe number of items in New Values must match the number of items in Values.\nList items matching the first value in Values will be set to the first value in New Values; List items matching the second value in Values will be set to the second value in New Values etc.\nData Type IEnumerable\u003cTItem\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description CannotModifyReadOnlyListException Thrown when List is read-only. DuplicateValueException Thrown when Values contains duplicate values. PropertyItemCountException Thrown when the count of items in Values and the count of items in New Values are not the same, or neither contain any items. PropertyNullException Thrown when List or Values or New Values are null. Remarks Item Equality For information and examples of how it is determined whether an item matches a specified value, please see Object Equality.\nEmpty List If List is empty (i.e. []) there is nothing to set, so no operation is performed.\nNo items matching a specified value in Values If List does not contain items matching one of the specified Values, there is nothing to set for that value.\nNo items matching Values If List does not contain items matching any of the specified Values, there is nothing to set, so no operation is performed.\nDefining lists using literal syntax For information about how to define lists using literal syntax, see Create a List\u003cTItem\u003e.\nDefining lists using expression syntax For information about how to define lists using expression syntax, see Create a List\u003cTItem\u003e.\nLists containing items of a single data type vs multiple data types For information about the different types of lists, including those that can contain only a single type of item, and those that can contain multiple types of item, see Lists.\n","categories":"","description":"Sets all items matching one of the specified values in a List to new values.","excerpt":"Sets all items matching one of the specified values in a List to new values.","ref":"/docs/reference/blocks/lists/set-item/set-items-with-values-block-2/","tags":"","title":"Set Items With Values"},{"body":"","categories":"","description":"Information about setting up observability in the cloud for a Cortex Innovation platform.","excerpt":"Information about setting up observability in the cloud for a Cortex Innovation platform.","ref":"/docs/getting-started/cloud/","tags":"","title":"Set up in the Cloud"},{"body":"","categories":"","description":"Blocks that are used to set Variables.","excerpt":"Blocks that are used to set Variables.","ref":"/docs/reference/blocks/variables/set-variable/","tags":"","title":"Set Variable"},{"body":"\rSet Variable (Cortex.Blocks.Variables.SetVariable.SetVariableBlock`1)\nDescription Sets a Variable to a given Value.\nAny type of Value can be set, including Lists, Dictionaries, Structures etc.\nIf a Variable is set to the Value of another Variable that is a Reference Type then they will refer to the same instance. This means that if either Variable has new items added to it, items updated in it, or items removed from it, then both will be affected, please see Reference Types for more information.\nIf a Variable is set to the Value of another Variable that is a Value Type then they will refer to different instances. This means that if either Variable is updated, then only the updated variable will be affected, please see Value Types for more information.\nExamples Setting a Variable This example will set a Variable to a list of [[1, 2, 3], [4, 5, 6]].\nProperties Property Value Notes Value Value, with value [[1, 2, 3], [4, 5, 6]] The Value is of type List\u003cList\u003cInt32\u003e\u003e Variable ($)Variable, with no value ($)Variable is a variable that will be set to the type of the value (i.e. List\u003cList\u003cInt32\u003e\u003e) Result Setting ($)Variable to [[1, 2, 3], [4, 5, 6]] results in the variable ($)Variable being updated to the following:\n[ [ 1, 2, 3 ], [ 4, 5, 6 ] ] Overwriting a Variable This example will overwrite an existing Variable that has the text value \"A text value\", to a list value of [1, 2, 3].\nProperties Property Value Notes Value Value, with value [1, 2, 3] The Value is of type List\u003cInt32\u003e Variable ($)Variable, with value \"A text value\" ($)Variable is a variable that will be set to the type of the value (i.e. List\u003cInt32\u003e) Result Setting ($)Variable to [1, 2, 3] results in the variable ($)Variable being updated to the following:\n[ 1, 2, 3 ] Note that ($)Variable is overwritten, any data previously stored within the variable will be lost.\nOverwriting a Variable Property This example will update the Items property within an existing Variable that has the text value \"A text value\", to a list of [1, 2, 3].\n($)Variable has an initial value of:\n{ \"Items\": \"A text value\", } Properties Property Value Notes Value Value, with value [1, 2, 3] The Value is of type List\u003cInt32\u003e Variable ($)Variable.Items, with value \"A text value\" ($)Variable.Items is a property within variable that will be set to the type of the value (i.e. List\u003cInt32\u003e) Result Setting the ($)Variable.Items property to [1, 2, 3] results in the ($)Variable being updated to the following:\n{ \"Items\": [ 1, 2, 3 ] } Note that ($)Variable.Items is overwritten, any data previously stored within the property will be lost.\nProperties Value The Value to set the Variable to.\nA Variable can be set to any type of object, including Lists, Dictionaries, Structures etc.\nData Type TValue Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Variable The Variable that will be set to the Value.\nIf a Variable is set to the Value of another Variable that is a Reference Type then they will refer to the same instance. This means that if either Variable has new items added to it, items updated in it, or items removed from it, then both will be affected, please see Reference Types for more information.\nIf a Variable is set to the Value of another Variable that is a Value Type then they will refer to different instances. This means that if either Variable is updated, then only the updated variable will be affected, please see Value Types for more information.\nData Type TValue Property Type Output Is Advanced false Default Editor Variable Default Value ($)Variable with no value Exceptions No exceptions are thrown by the block.\nRemarks Initialising Variables If the Set Variable block is used to set a Variable that is not initialised, the Variable will be initialised with the given Value when the block is run.\nOverwriting Variables If the Set Variable block is used to set a Variable that is already initialised and has a Value, the Variable will be overwritten with the new Value when the block is run.\nA property of a Variable can also be overwritten, instead of the whole object. This is shown in the example above, Overwriting a Variable Property\nVariable Scope Each workspace has its own scope; as a result, variables can be defined that only exist and are accessible in this workspace and any of its sub-workspaces. On exiting a workspace any variables defined for the workspace’s scope are deleted.\nThe Set Variable block can only set a Variable that is accessible from its scope.\nFor information about variables and scope, please see Variables.\nNull Value If Value is not provided or is set to null, Variable will be set to null.\n","categories":"","description":"Sets a Variable to a given Value.","excerpt":"Sets a Variable to a given Value.","ref":"/docs/reference/blocks/variables/set-variable/set-variable-block-1/","tags":"","title":"Set Variable"},{"body":"Single (System.Single)\nSummary The Single data type is used to represent a fractional, or very large or small number from -3.402823e+38 through 3.402823e+38.\nCategory: Numbers Name: Single Full Name: System.Single Alias: float Description: A fractional, or very large or small number from -3.402823e+38 through 3.402823e+38 Size: 4 bytes Default Value: 0 Can be used as: Double, Object, dynamic Can be cast to: Int16, as long as value is from -32,768 through 32,767 (e.g. (Int16)32767 or (System.Int16)32767 or (short)32767) Int32, as long as value is from -2,147,483,648 through 2,147,483,647 (e.g. (Int32)2147483647 or (System.Int32)2147483647 or (int)2147483647) Int64, as long as value is from -9,223,372,036,854,775,808 through 9,223,372,036,854,775,807 (e.g. (Int64)9223372036854775807 or (System.Int64)9223372036854775807 or (long)9223372036854775807) Remarks Create a Single The following table shows some of the ways that a Single can be created.\nMethod Example Result Editor Support Notes Use a Single expression 1.0f + 1.0f 2.0 Expression Add 1.0f - 1.0f 0.0 Expression Subtract 1.0f * 1.0f 1.0 Expression Multiply 1.0f / 1.0f 1.0 Expression Divide Single.MaxValue 3.402823e+38 Expression Maximum value of a Single. See Single.MaxValue Single.MinValue -3.402823e+38 Expression Minimum value of a Single. See Single.MinValue Single.Parse(\"1\") 1.0 Expression Attempts to parse text and convert it to a Single value. See Single.Parse Convert.ToSingle(\"1\") 1.0 Expression Attempts to convert text to a Single value. See Convert.ToSingle Convert Single to Text The following table shows some of the ways that a Single can be converted to text.\nMethod Example Result Editor Support Notes Use ToString 1.0f.ToString() \"1\" Expression See Single.ToString ($)SingleVariable.ToString() where ($)SingleVariable has a Single value of 1.0 \"1\" Expression See Single.ToString Use Convert.ToString Convert.ToString(1.0f) \"1\" Expression See Convert.ToString Convert.ToString(($)SingleVariable) where ($)SingleVariable has a Single value of 1.0 \"1\" Expression See Convert.ToString Use Convert Object To Text block where Object property has a Single value of 1.0 \"1\" N/A See Convert Object To Text Use Convert Object To Json block where Object property has a Single value of 1.0 \"1.0\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is Single. The Literal Editor is available for Input properties where the data type is Single. Expression syntax is not supported within the Literal Editor for the Single data type. The Variable Editor is available for InputOutput and Output properties where the data type is Single. Known Limitations None\nSee Also Related Data Types Int16 Int32 Int64 Double Related Concepts Working with Numbers External Documentation System.Single ","categories":"","description":"Used to represent a fractional, or very large or small number from `-3.402823e+38` through `3.402823e+38`.","excerpt":"Used to represent a fractional, or very large or small number from `-3.402823e+38` through `3.402823e+38`.","ref":"/docs/reference/data-types/numbers/single/","tags":"","title":"Single"},{"body":"","categories":"","description":"Split text (using a separator) into a list of values.","excerpt":"Split text (using a separator) into a list of values.","ref":"/docs/reference/blocks/text/split-text/","tags":"","title":"Split Text"},{"body":"\rSplit Text (Cortex.Blocks.Text.SplitText.SplitTextBlock)\nDescription Splits Text into a list of String Values, using the given Separator to determine where to split.\nSplit Options can be used to specify how to treat empty entries (i.e. \"\").\nExamples Split Text into a list of String Values using a pipe Separator This example will split the text \"Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday\" into a list of String values, using the pipe separator (i.e. \"|\") to determine where to split.\nProperties Property Value Notes Text ($)Text, with value \"Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday\" ($)Text is a variable of type String Separator ($)Separator, with value \"|\" ($)Separator is a variable of type String Split Options ($)SplitOptions, with value StringSplitOptions.None ($)SplitOptions is a variable of type StringSplitOptions Values ($)Values, with no value ($)Values is a variable that will be set to an IList\u003cString\u003e Result Splitting \"Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday\" using a pipe separator (i.e. \"|\"), results in the variable ($)Values being updated to the following:\n[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"] Split Text into a list of String Values using a comma Separator (removing empty entries) This example will split the text \"1,2,3,,\" into a list of String values, using the comma separator (i.e. \",\") to determine where to split, and removing empty entries (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \"1,2,3,,\" ($)Text is a variable of type String Separator ($)Separator, with value \",\" ($)Separator is a variable of type String Split Options ($)SplitOptions, with value StringSplitOptions.RemoveEmptyEntries ($)SplitOptions is a variable of type StringSplitOptions Values ($)Values, with no value ($)Values is a variable that will be set to an IList\u003cString\u003e Result Splitting \"1,2,3,,\" using a comma separator (i.e. \",\") and removing the last 2 entries which are empty (i.e. \"\"), results in the variable ($)Values being updated to the following:\n[\"1\", \"2\", \"3\"] Split Text into a list of String Values using a comma Separator (keeping empty entries) This example will split the text \"1,2,3,,\" into a list of String values, using the comma separator (i.e. \",\") to determine where to split, and keeping empty entries (i.e. \"\").\nProperties Property Value Notes Text ($)Text, with value \"1,2,3,,\" ($)Text is a variable of type String Separator ($)Separator, with value \",\" ($)Separator is a variable of type String Split Options ($)SplitOptions, with value StringSplitOptions.None ($)SplitOptions is a variable of type StringSplitOptions Values ($)Values, with no value ($)Values is a variable that will be set to an IList\u003cString\u003e Result Splitting \"1,2,3,,\" using a comma separator (i.e. \",\") and keeping the last 2 entries which are empty, results in the variable ($)Values being updated to the following:\n[\"1\", \"2\", \"3\", \"\", \"\"] Properties Text The Text to split into Values using the given Separator.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Separator The Separator used to determine where to split the Text into the Values.\nSeparator can contain zero or more characters.\nThe Separator is not included in the resultant Values.\nData Type String Property Type Input Is Advanced false Default Editor Literal Default Value , Split Options Split Options used to specify how to treat empty entries (i.e. \"\").\nCurrently supported values for the Split Options property are:\nStringSplitOptions.None (Default) - empty entries are included in Values. StringSplitOptions.RemoveEmptyEntries - empty entries are excluded from Values. Data Type StringSplitOptions Property Type Input Is Advanced true Default Editor Literal Default Value None Values The resultant Values containing an entry for each piece of split text in the order they are defined in Text.\nData Type IList\u003cString\u003e Property Type Output Is Advanced false Default Editor Variable Default Value ($)Values with no value Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentException Thrown when Split Options is not one of the specified StringSplitOptions types (e.g. (StringSplitOptions)10). Remarks Null or empty Text If Text is null or empty (i.e. \"\"), then null or empty (i.e. \"\") respectively is added as the only entry to Values.\nNull or empty Separator If Separator is null or empty (i.e. \"\"), the value of the variable specified for the Text property is added as the only entry to Values.\nSeparator not found If the Separator is not found in Text, the value of the variable specified for the Text property is added as the only entry to Values.\n","categories":"","description":"Splits text into a list of String values, using the given separator to determine where to split.","excerpt":"Splits text into a list of String values, using the given separator to determine where to split.","ref":"/docs/reference/blocks/text/split-text/split-text-block/","tags":"","title":"Split Text"},{"body":"SQL Server Summary TODO:\nSummary Table or other format to display verified data sources (SQL Server versions) and examples (link to connection strings) Remarks TODO:\nConnected as the user running the service or as a custom user (e.g. trusted user vs username and password) can have issues when there is a difference in permissions between the flow debugger service user vs flow execution service user check that impersonation works with trusted when implemented Known Limitations TODO\nSee Also Related Concepts TODO\nRelated Data Types TODO\nRelated Blocks TODO\nExternal Documentation TODO\n","categories":"","description":"Information regarding SQL Server as a data source.","excerpt":"Information regarding SQL Server as a data source.","ref":"/docs/reference/concepts/working-with/data-sources/supported-data-sources/sql-server/","tags":"","title":"SQL Server"},{"body":"SqlServerConnectionDetails (Cortex.DataTypes.Data.SqlServerConnectionDetails)\nSummary The SqlServerConnectionDetails data type is used to establish and maintain a connection to a SQL Server data source.\nCategory: Data Name: SqlServerConnectionDetails Full Name: Cortex.DataTypes.Data.SqlServerConnectionDetails Alias: N/A Description: The data type representing configuration for establishing and maintaining a connection to an SQL Server data source. Default Value: null Can be used as: ConnectionDetails, Object, dynamic Can be cast to: N/A Properties Connection String The Connection String that is used to connect to the data source.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value $@\"Server=localhost;Database=YourDatabase;Trusted_Connection=true;\" Remarks Create a SqlServerConnectionDetails The following table shows some of the ways that a SqlServerConnectionDetails can be created.\nMethod Example Result Editor Support Notes Use a SqlServerConnectionDetails constructor new SqlServerConnectionDetails(\"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\") {\"ConnectionString\": \"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\"} Expression A SqlServerConnectionDetails can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes Connection String EncryptableText $@\"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\" The Connection String that is used to connect to the data source. Connection Strings A Connection String must be provided in order to connect to a SQL Server data source. The Connection String can be formatted differently depending either on the version of SQL Server or the way the connection will be created and maintained (e.g. Trusted connection vs explicit user). See ConnectionStrings.com for a list of connection strings for SQL Server.\nPlease see Working with Data Sources for a list of other supported data sources (e.g. ODBC) and how to construct valid connection strings for them.\nProperty Editor Support The Expression Editor is available for Input properties where the data type is SqlServerConnectionDetails. The Literal Editor is not available for Input properties where the data type is SqlServerConnectionDetails. The Variable Editor is available for Input, InputOutput and Output properties where the data type is SqlServerConnectionDetails. Known limitations None\nSee Also Related Data Types ConnectionDetails OdbcConnectionDetails Related Concepts Working with Data Sources External Documentation ConnectionStrings.com ","categories":"","description":"The data type representing configuration for establishing and maintaining a connection to an SQL Server data source.","excerpt":"The data type representing configuration for establishing and maintaining a connection to an SQL Server data source.","ref":"/docs/reference/data-types/data/sqlserverconnectiondetails/","tags":"","title":"SqlServerConnectionDetails"},{"body":"","categories":"","description":"Blocks related to working with SSH.","excerpt":"Blocks related to working with SSH.","ref":"/docs/reference/blocks/ssh/","tags":"","title":"Ssh"},{"body":"SSL Best Practices A collection of registry settings can be applied during installation to guarantee your server is only using the recommended encryption algorithms and TLS protocols:\nType Name Enabled Ciphers AES 128/128 ✓ AES 256/256 ✓ Triple DES 168 ✓ DES 56/56 ✕ NULL ✕ RC2 128/128 ✕ RC2 40/128 ✕ RC2 56/128 ✕ RC4 128/128 ✕ RC4 40/128 ✕ RC4 56/128 ✕ RC4 64/128 ✕ Hashes MD5 ✕ SHA ✓ SHA256 ✓ SHA384 ✓ SHA512 ✓ KeyExchangeAlgorithms Diffie-Hellman ✓ ECDH ✓ PKCS ✓ Protocols Multi-Protocol Unified Hello ✕ PCT 1.0 ✕ SSL 2.0 ✕ SSL 3.0 ✕ TLS 1.0 ✕ TLS 1.1 ✕ TLS 1.2 ✓ Cipher Suites TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ✓ TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 ✓ TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 ✕ TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA25 ✕ TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ✕ TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ✕ TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 ✕ TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 ✕ TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 ✕ TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 ✕ TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA ✕ TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA ✕ TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA ✕ TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA ✕ TLS_DHE_RSA_WITH_AES_256_CBC_SHA ✕ TLS_DHE_RSA_WITH_AES_128_CBC_SHA ✕ TLS_RSA_WITH_AES_256_GCM_SHA384 ✕ TLS_RSA_WITH_AES_128_GCM_SHA256 ✕ TLS_RSA_WITH_AES_256_CBC_SHA256 ✕ TLS_RSA_WITH_AES_128_CBC_SHA256 ✕ TLS_RSA_WITH_AES_256_CBC_SHA ✕ TLS_RSA_WITH_AES_128_CBC_SHA ✕ TLS_RSA_WITH_3DES_EDE_CBC_SHA ✕ TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 ✕ TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 ✕ TLS_DHE_DSS_WITH_AES_256_CBC_SHA ✕ TLS_DHE_DSS_WITH_AES_128_CBC_SHA ✕ TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA ✕ TLS_RSA_WITH_RC4_128_SHA ✕ TLS_RSA_WITH_RC4_128_MD5 ✕ TLS_RSA_WITH_NULL_SHA256 ✕ TLS_RSA_WITH_NULL_SHA ✕ TLS_PSK_WITH_AES_256_GCM_SHA384 ✕ TLS_PSK_WITH_AES_128_GCM_SHA256 ✕ TLS_PSK_WITH_AES_256_CBC_SHA384 ✕ TLS_PSK_WITH_AES_128_CBC_SHA256 ✕ TLS_PSK_WITH_NULL_SHA384 ✕ TLS_PSK_WITH_NULL_SHA256 ✕ Warning\rDisabling specific TLS versions or specific Cipher Suites can have impact on other applications as well as their communication capabilities with third party systems and services. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\r","categories":"","description":"Information about the recommended security settings for the Grafana observability platform servers.","excerpt":"Information about the recommended security settings for the Grafana observability platform servers.","ref":"/docs/getting-started/on-premise/add-observability-to-innovation/grafana/advanced/ssl-best-practices/","tags":"","title":"SSL Best Practices"},{"body":"SSL Best Practices A collection of registry settings can be applied during installation to guarantee your server is only using the recommended encryption algorithms and TLS protocols:\nType Name Enabled Ciphers AES 128/128 ✓ AES 256/256 ✓ Triple DES 168 ✓ DES 56/56 ✕ NULL ✕ RC2 128/128 ✕ RC2 40/128 ✕ RC2 56/128 ✕ RC4 128/128 ✕ RC4 40/128 ✕ RC4 56/128 ✕ RC4 64/128 ✕ Hashes MD5 ✕ SHA ✓ SHA256 ✓ SHA384 ✓ SHA512 ✓ KeyExchangeAlgorithms Diffie-Hellman ✓ ECDH ✓ PKCS ✓ Protocols Multi-Protocol Unified Hello ✕ PCT 1.0 ✕ SSL 2.0 ✕ SSL 3.0 ✕ TLS 1.0 ✕ TLS 1.1 ✕ TLS 1.2 ✓ Cipher Suites TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ✓ TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 ✓ TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 ✕ TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA25 ✕ TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ✕ TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ✕ TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 ✕ TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 ✕ TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 ✕ TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 ✕ TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA ✕ TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA ✕ TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA ✕ TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA ✕ TLS_DHE_RSA_WITH_AES_256_CBC_SHA ✕ TLS_DHE_RSA_WITH_AES_128_CBC_SHA ✕ TLS_RSA_WITH_AES_256_GCM_SHA384 ✕ TLS_RSA_WITH_AES_128_GCM_SHA256 ✕ TLS_RSA_WITH_AES_256_CBC_SHA256 ✕ TLS_RSA_WITH_AES_128_CBC_SHA256 ✕ TLS_RSA_WITH_AES_256_CBC_SHA ✕ TLS_RSA_WITH_AES_128_CBC_SHA ✕ TLS_RSA_WITH_3DES_EDE_CBC_SHA ✕ TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 ✕ TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 ✕ TLS_DHE_DSS_WITH_AES_256_CBC_SHA ✕ TLS_DHE_DSS_WITH_AES_128_CBC_SHA ✕ TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA ✕ TLS_RSA_WITH_RC4_128_SHA ✕ TLS_RSA_WITH_RC4_128_MD5 ✕ TLS_RSA_WITH_NULL_SHA256 ✕ TLS_RSA_WITH_NULL_SHA ✕ TLS_PSK_WITH_AES_256_GCM_SHA384 ✕ TLS_PSK_WITH_AES_128_GCM_SHA256 ✕ TLS_PSK_WITH_AES_256_CBC_SHA384 ✕ TLS_PSK_WITH_AES_128_CBC_SHA256 ✕ TLS_PSK_WITH_NULL_SHA384 ✕ TLS_PSK_WITH_NULL_SHA256 ✕ Warning\rDisabling specific TLS versions or specific Cipher Suites can have impact on Cortex components themselves as well as their communication capabilities with third party systems and services, e.g. Flow Debugger Service executing flows with blocks which communicate with 3rd parties via PowerShell or REST. All parties communicating together must support a shared protocol version and cipher suite, otherwise they will not be able to establish a secure communication link between each other.\r","categories":"","description":"Information about the recommended security settings for Innovation servers.","excerpt":"Information about the recommended security settings for Innovation servers.","ref":"/docs/getting-started/on-premise/install-innovation-only/advanced/ssl-best-practices/","tags":"","title":"SSL Best Practices"},{"body":"","categories":"","description":"Blocks that indicate the start of a flow.","excerpt":"Blocks that indicate the start of a flow.","ref":"/docs/reference/blocks/flows/start-flow/","tags":"","title":"Start Flow"},{"body":"\rStart Flow (Cortex.Blocks.Flows.StartFlow.StartFlowBlock)\nDescription Indicates the start of a flow.\nThis is always the first block in a flow. It cannot be deleted, and a flow can only contain one of these blocks.\nThe block has no block specific properties, but it does have the Description property that is common to all blocks. This allows users to give each block a description; typically this will be left blank for this block.\nA breakpoint can be added to this block when debugging.\nExamples No examples for the block.\nProperties No properties for the block, other than the Description property that is common to all blocks.\nExceptions No exceptions are thrown by the block.\nRemarks No remarks for the block.\n","categories":"","description":"Indicates the start of a flow.","excerpt":"Indicates the start of a flow.","ref":"/docs/reference/blocks/flows/start-flow/start-flow-block/","tags":"","title":"Start Flow"},{"body":"","categories":"","description":"Blocks that indicate the start of a workspace.","excerpt":"Blocks that indicate the start of a workspace.","ref":"/docs/reference/blocks/workspaces/start-workspace/","tags":"","title":"Start Workspace"},{"body":"\rStart Workspace (Cortex.Blocks.Workspaces.StartWorkspace.StartWorkspaceBlock)\nDescription Indicates the start of a workspace; when a flow execution reaches this block it will create a new scope for the workspace.\nThis is always the first block in a workspace. It cannot be deleted, and a workspace can only contain one of these blocks.\nThe block has no block specific properties, but it does have the Description property that is common to all blocks. This allows users to give each block a description; typically this will be left blank for this block.\nA breakpoint can be added to this block when debugging.\nExamples No examples for the block.\nProperties No properties for the block, other than the Description property that is common to all blocks.\nExceptions No exceptions are thrown by the block.\nRemarks Workspace Scope Each workspace has its own scope; as a result, variables can be defined that only exist and are accessible in this workspace and any of its sub-workspaces. On exiting a workspace any variables defined for the workspace’s scope are deleted.\nFor information about variables and scope, please see Variables.\n","categories":"","description":"Indicates the start of a workspace.","excerpt":"Indicates the start of a workspace.","ref":"/docs/reference/blocks/workspaces/start-workspace/start-workspace-block/","tags":"","title":"Start Workspace"},{"body":"String (System.String)\nSummary The String data type is used to represent text.\nCategory: Text Name: String Full Name: System.String Alias: string Description: A sequence of unicode characters, surrounded by double quotes (e.g. \"This is a string\") Size: Varies depending upon the number of characters it contains Default Value: null Can be used as: IEnumerable, IEnumerable\u003cChar\u003e, Object, dynamic Can be cast to: N/A Remarks Create a String The following table shows some of the ways that a String can be created.\nMethod Example Result Editor Support Notes Declare a String literal \"Hello World!\" \"Hello World!\" Literal, Expression In the Expression Editor the surrounding double quotes (i.e. \"\") are needed (e.g. \"Hello World!\"); in the Literal Editor they are not (e.g. Hello World!). Any double quotes in the Literal Editor will be treated as literal characters that are part of the String. Use a String expression $\"Hello {($)Variable}!\" where ($)Variable is set to \"World!\" \"Hello World!\" Expression Uses [String Interpolation][] String.Format(\"Hello {0}!\", ($)Variable) where ($)Variable is set to \"World!\" \"Hello World!\" Expression Uses String.Format String.Concat(\"Hello\", \" \", \"World!\") \"Hello World!\" Expression Uses String.Concat String.Join(\" \", {\"Hello\", \"World!\"}) \"Hello World!\" Expression Uses String.Join \"Hello!\".Insert(5, \" World\") \"Hello World!\" Expression Uses String.Insert \"Hello\" + \" \" + \"World!\" \"Hello World!\" Expression Uses String Concatenation Operator (i.e. +) Property Editor Support The Expression Editor is available for Input properties where the data type is String. The Literal Editor is available for Input properties where the data type is String. Expression syntax is not supported within the Literal Editor for the String data type. The Variable Editor is available for InputOutput and Output properties where the data type is String. Known Limitations None\nSee Also Related Data Types Char Related Concepts Working with Text External Documentation System.String ","categories":"","description":"Used to represent text.","excerpt":"Used to represent text.","ref":"/docs/reference/data-types/text/string/","tags":"","title":"String"},{"body":"StringComparison (System.StringComparison)\nSummary Remarks Create a StringComparison Convert StringComparison to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to indicate how 2 pieces of text are compared against each other (i.e. which culture to use and whether to consider case or not).","excerpt":"Used to indicate how 2 pieces of text are compared against each other (i.e. which culture to use and whether to consider case or not).","ref":"/docs/reference/data-types/text/stringcomparison/","tags":"","title":"StringComparison"},{"body":"StringSplitOptions (System.StringSplitOptions)\nSummary Remarks Create StringSplitOptions Convert StringSplitOptions to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to specify settings for splitting text (i.e. whether to include or remove empty entries from results).","excerpt":"Used to specify settings for splitting text (i.e. whether to include or remove empty entries from results).","ref":"/docs/reference/data-types/text/stringsplitoptions/","tags":"","title":"StringSplitOptions"},{"body":"Structure (Cortex.DataTypes.Dictionaries.Structure)\nSummary The Structure data type is used to represent a collection of key/item pairs.\nThe data type of the keys used to access the items contained in the collection is String and the items contained in the collection can be any data type. Each item can be individually accessed by its String key.\nCategory: Collections Name: Structure Full Name: Cortex.DataTypes.Dictionaries.Structure Alias: N/A Description: Used to represent a collection of key/item pairs, where the data type of the keys used to access the items contained in the collection is String and the items contained in the collection can be any data type. Each item can be individually accessed by its String key. Size: Varies Default Value: null Can be used as: IDictionary\u003cTKey, TItem\u003e, IEnumerable, Object, dynamic IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e (e.g. where Structure is IDictionary\u003cString, Object\u003e and IEnumerable\u003cKeyValuePair\u003cTKey, TItem\u003e\u003e is IEnumerable\u003cKeyValuePair\u003cString, Object\u003e\u003e) Can be cast to: N/A Remarks Create a Structure The following table shows some of the ways that a Structure can be created.\nMethod Example Result Editor Support Notes Declare a Structure literal {} {} Expression Structure containing zero items { \"StringKey1\": \"StringValue\" } { \"StringKey1\": \"StringValue\" } Expression Structure containing one String item with a String key { \"StringKey1\": true, \"StringKey2\": false } { \"StringKey1\": true, \"StringKey2\": false } Expression Structure containing two Boolean items with String keys { \"StringKey1\": 1, \"StringKey2\": 2, \"StringKey3\": 3 } { \"StringKey1\": 1, \"StringKey2\": 2, \"StringKey3\": 3 } Expression Structure containing three Int32 item with String keys { \"StringKey1\": \"StringValue\", \"StringKey2\": true, \"StringKey3\": 1 } { \"StringKey1\": \"StringValue\", \"StringKey2\": true, \"StringKey3\": 1 } Expression Structure containing a String item, a Boolean item and an Int32 item with String keys Use a Structure expression new Structure() {} Expression Structure containing zero items new Structure() { { \"StringKey1\", \"StringValue\" } } { \"StringKey1\": \"StringValue\" } Expression Structure containing one String item with a String key new Structure() { { \"StringKey1\", true }, { \"StringKey2\", false } } { \"StringKey1\": true, \"StringKey2\": false } Expression Structure containing two Boolean items with String keys new Structure() { { \"StringKey1\", 1 }, { \"StringKey2\", 2 }, { \"StringKey3\", 3 } } { \"StringKey1\": 1, \"StringKey2\": 2, \"StringKey3\": 3 } Expression Structure containing three Int32 item with String keys new Structure() { { \"StringKey1\", \"StringValue\" }, { \"StringKey2\", true }, { \"StringKey3\", 1 } } { \"StringKey1\": \"StringValue\", \"StringKey2\": true, \"StringKey3\": 1 } Expression Structure containing a String item, a Boolean item and an Int32 item with String keys Convert Structure to Text The following table shows some of the ways that a Structure can be converted to text.\nMethod Example Result Editor Support Notes Use Convert Object To Json block where Object property has a Structure value of { \"StringKey1\": \"StringValue\", \"StringKey2\": true, \"StringKey3\": 1 } \"{\\r\\n \\\"StringKey1\\\": \\\"StringValue\\\",\\r\\n \\\"StringKey2\\\": true,\\r\\n \\\"StringKey3\\\": 1\\r\\n}\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is Structure. The Literal Editor is not available for Input properties where the data type is Structure. The Variable Editor is available for InputOutput and Output properties where the data type is Structure. Known Limitations None\nSee Also Related Data Types IEnumerable IEnumerable\u003cTItem\u003e IDictionary\u003cTKey, TItem\u003e Related Concepts Working with Collections External Documentation N/A\n","categories":"","description":"Used to represent a collection of key/item pairs, where the data type of the keys used to access the items contained in the collection is `String` and the items contained in the collection can be any data type. Each item can be individually accessed by its `String` key.","excerpt":"Used to represent a collection of key/item pairs, where the data type of the keys used to access the items contained in the collection is `String` and the items contained in the collection can be any …","ref":"/docs/reference/data-types/collections/structure/","tags":"","title":"Structure"},{"body":"\r","categories":"","description":"Assign access rights to flows based on security groups.","excerpt":"Assign access rights to flows based on security groups.","ref":"/docs/guides/cortex-gateway/settings/studio-authorisation/","tags":"","title":"Studio Authorisation"},{"body":"\r","categories":"","description":"Create Cortex Studio Packages by exporting flows.","excerpt":"Create Cortex Studio Packages by exporting flows.","ref":"/docs/guides/cortex-gateway/settings/studio-export/","tags":"","title":"Studio Export"},{"body":"\r","categories":"","description":"Manage the location of flows in the Flow Hierarchy.","excerpt":"Manage the location of flows in the Flow Hierarchy.","ref":"/docs/guides/cortex-gateway/settings/studio-hierarchy/","tags":"","title":"Studio Hierarchy"},{"body":"\r","categories":"","description":"Import Cortex Studio Packages.","excerpt":"Import Cortex Studio Packages.","ref":"/docs/guides/cortex-gateway/settings/studio-import/","tags":"","title":"Studio Import"},{"body":"","categories":"","description":"Subtract a time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds) from a date time.","excerpt":"Subtract a time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds) from a date time.","ref":"/docs/reference/blocks/date-and-time/subtract-time-period/","tags":"","title":"Subtract Time Period"},{"body":"\rSubtract Time Period (Cortex.Blocks.DateAndTime.SubtractTimePeriod.SubtractTimePeriodBlock)\nDescription Subtracts a Time Period from the specified Date Time.\nThis block can subtract both positive and negative TimePeriod values.\nExamples Subtract a positive Time Period This example will subtract 1 year from 2022-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2022-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Time Period ($)TimePeriod, with value of {\"Years\": 1, \"Months\": 0, \"Days\": 0, \"Hours\": 0, \"Minutes\": 0, \"Seconds\": 0, \"Milliseconds\": 0} ($)TimePeriod is a variable of type TimePeriod Result Subtracting 1 year from 2022-01-01T00:00:00+00:00 will result in the variable ($)DateTime being updated. Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2021-01-01T00:00:00+00:00\" Subtract a negative Time Period This example will subtract -1 year from 2021-01-01T00:00:00+00:00.\nProperties Property Value Notes Date Time ($)DateTime, with value of DateTimeOffset that has a text representation of 2021-01-01T00:00:00+00:00 ($)DateTime is a variable of type DateTimeOffset Time Period ($)TimePeriod, with value of {\"Years\": -1, \"Months\": 0, \"Days\": 0, \"Hours\": 0, \"Minutes\": 0, \"Seconds\": 0, \"Milliseconds\": 0} ($)TimePeriod is a variable of type TimePeriod Result Subtracting -1 year from 2021-01-01T00:00:00+00:00 will result in 1 year being added and the variable ($)DateTime being updated. Its text representation will be in the ISO 8601 Standard, which can be seen below:\n\"2022-01-01T00:00:00+00:00\" Properties Date Time The Date Time to subtract the Time Period from.\nIts text representation will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type DateTimeOffset Property Type InputOutput Is Advanced false Default Editor Variable Default Value ($)DateTime with no value Time Period The Time Period to subtract from the Date Time.\nTime Period can have positive and negative components where components are:\nYears Months Days Hours Minutes Seconds Milliseconds When subtracting a Time Period, the block will first subtract years, followed by months, days, hours, minutes, seconds and finally milliseconds.\nWhen subtracting months, if the current day component is greater than the last day in the resultant month, it will update the day to the last day for that month (e.g. subtracting one month from 2021-02-28T23:59:59+00:00 will equate to 2021-01-31T23:59:59+00:00).\nFor more information about Date and Time, please see Working with Date and Time.\nData Type TimePeriod Property Type Input Is Advanced false Default Editor Literal Default Value Years: 0 Months: 0 Days: 0 Hours: 0 Minutes: 0 Seconds: 0 Milliseconds: 0 Exceptions The exceptions thrown by the block can be found below:\nName Description PropertyValueOutOfRangeException Thrown when subtracting Time Period from Date Time will result in the Date Time being less than 0001-01-01T00:00:00+00:00. See Property Less Than Minimum Value. Thrown when subtracting Time Period from Date Time will result in the Date Time being greater than 9999-12-31T23:59:59+00:00. See Property Greater Than Maximum Value. Remarks Dates and Time The default text representation of Date and Time will be in the ISO 8601 Standard (e.g. 2021-11-05T08:48:08.0307614+00:00).\nFor more information, please see Working with Date and Time.\nOrder of calculations When subtracting a Time Period, the block will first subtract years, followed by months, days, hours, minutes, seconds and finally milliseconds.\nSubtraction of Months When subtracting months from the Date Time, if the current day component is greater than the last day in the resultant month, it will update the day to the last day for that month (e.g. subtracting one month from 2021-02-28T23:59:59+00:00 will equate to 2021-01-31T23:59:59+00:00).\nDaylight Savings This block copes with UTC time offsets but does not know anything about which time zone the Date Time represents; as a result it cannot take daylight savings into account as these are related to time zones rather than UTC time offsets.\n","categories":"","description":"Subtracts a Time Period to from specified Date Time.","excerpt":"Subtracts a Time Period to from specified Date Time.","ref":"/docs/reference/blocks/date-and-time/subtract-time-period/subtract-time-period-block/","tags":"","title":"Subtract Time Period"},{"body":"","categories":"","description":"Information regarding supported data sources.","excerpt":"Information regarding supported data sources.","ref":"/docs/reference/concepts/working-with/data-sources/supported-data-sources/","tags":"","title":"Supported Data Sources"},{"body":"","categories":"","description":"Blocks related to working with Text.","excerpt":"Blocks related to working with Text.","ref":"/docs/reference/blocks/text/","tags":"","title":"Text"},{"body":"","categories":"","description":"Information related to working with Text.","excerpt":"Information related to working with Text.","ref":"/docs/reference/concepts/working-with/text/","tags":"","title":"Text"},{"body":"","categories":"","description":"Exceptions related to Text blocks","excerpt":"Exceptions related to Text blocks","ref":"/docs/reference/exceptions/text/","tags":"","title":"Text"},{"body":"","categories":"","description":"Throw an exception.","excerpt":"Throw an exception.","ref":"/docs/reference/blocks/exceptions/throw-exception/","tags":"","title":"Throw Exception"},{"body":"\rThrow New Flow Exception (Cortex.Blocks.Exceptions.ThrowException.ThrowNewFlowExceptionBlock)\nDescription Throws a new FlowException with the specified Message, Category, Error Code, Details, Inner Exception and Help Link.\nAll properties are optional, and if not supplied will be set to the following default values:\nProperty Default Value Message \"Exception of type 'Cortex.Exceptions.Flows.FlowException' was thrown.\" Category null Error Code null Details null InnerException null HelpLink https://v2022.docs.cortex-ia.com/docs/reference/exceptions/flows/flow-exception Examples Throw new FlowException with full configuration This example will throw a new FlowException with all properties configured.\nProperties Property Value Notes Message ($)Message, with value \"Custom Message\" ($)Message is a variable of type String Category ($)Category, with value \"Custom Category\" ($)Category is a variable of type String Error Code ($)ErrorCode, with value 100 ($)ErrorCode is a variable of type Nullable\u003cInt32\u003e Details ($)Details, with value {\"DetailsKey1\" : \"DetailsValue1\", \"DetailsKey2\" : \"DetailsValue2\"} ($)Details is a variable of type IDictionary\u003cString, String\u003e InnerException ($)InnerException, with value ($)Exception containing another FlowException with default properties ($)InnerException is a variable of type FlowException HelpLink ($)HelpLink, with value \"http://customdomain.com/customurl\" ($)HelpLink is a variable of type String Result Throwing a new FlowException with properties configured as above will result in the following exception:\nThrow new FlowException with no configuration This example will throw a new FlowException with no configuration.\nProperties No properties are configured for this example.\nResult Throwing a new FlowException without configuring any of the block’s properties will result in the following exception:\nProperties Message A Message describing the exception that occurred.\nIf Message is not provided or is set to null, it will default to \"Exception of type 'Cortex.Exceptions.Flows.FlowException' was thrown.\".\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value $@\"\" Category A Category that can be used to categorise similar types of exception that has occurred (e.g. an AuthenticationError category may be set for exceptions relating to authentication issues). This can then be used for future decision making in the flow, or to assist in troubleshooting and reporting.\nData Type String Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Error Code An Error Code that can be used to uniquely identify the type of exception (e.g. There may be multiple exceptions with the same AuthenticationError category set, such as InvalidCredentials, TokenExpired. In this case each exception can be assigned its own unique Error Code; InvalidCredentials = 100 and TokenExpired = 101). This can then be used for future decision making in the flow, or to assist in troubleshooting and reporting.\nIf Error Code is not provided, it will default to null.\nData Type Nullable\u003cInt32\u003e Property Type Input Is Advanced false Default Editor Expression Default Value No value (defaults to null) Details Details can be used to provide more detailed information about the exception. It can be any type of Object. This can then be used for future decision making in the flow, or to assist in troubleshooting and reporting.\nData Type dynamic Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Inner Exception Inner Exception can be used to include another exception within the thrown exception (e.g. If the FlowException has been thrown as a result of handling another exception, then the handled exception can be included within the FlowException to add traceability).\nData Type Exception Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Help Link A Help Link can be specified where further information can be found about the exception being thrown.\nIf Help Link is not provided or is set to null, it will default to a link to the FlowException page; please note this page will not provide any guidance on how to fix the solution specific exception.\nData Type String Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Exceptions No exceptions are thrown by the block.\nRemarks Null Message If Message is not provided or is set to null, it will default to \"Exception of type 'Cortex.Exceptions.Flows.FlowException' was thrown.\".\nNull Help Link If Help Link is not provided or is set to null, it will default to a link to the FlowException page, please note this page will not provide any guidance on how to fix the solution specific exception.\n","categories":"","description":"Throws a new FlowException with the specified message, category, error code, details, inner exception and help link.","excerpt":"Throws a new FlowException with the specified message, category, error code, details, inner exception and help link.","ref":"/docs/reference/blocks/exceptions/throw-exception/throw-new-flow-exception-block/","tags":"","title":"Throw New Flow Exception"},{"body":"TimePeriod (Cortex.DataTypes.DateAndTime.TimePeriod)\nSummary Properties Years Months Days Hours Minutes Seconds Milliseconds Remarks Create a TimePeriod Convert TimePeriod to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent a time interval (duration of time or elapsed time) that is measured as a positive or negative number of `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`.","excerpt":"Used to represent a time interval (duration of time or elapsed time) that is measured as a positive or negative number of `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`.","ref":"/docs/reference/data-types/date-and-time/timeperiod/","tags":"","title":"TimePeriod"},{"body":"TimeSpan (System.TimeSpan)\nSummary Remarks Create a TimeSpan Convert TimeSpan to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent a time interval (duration of time or elapsed time) that is measured as a positive or negative number of `days`, `hours`, `minutes`, `seconds`, and `milliseconds`. It can be used wherever a `TimePeriod` is expected, and wll be converted to a `TimePeriod` automatically.","excerpt":"Used to represent a time interval (duration of time or elapsed time) that is measured as a positive or negative number of `days`, `hours`, `minutes`, `seconds`, and `milliseconds`. It can be used …","ref":"/docs/reference/data-types/date-and-time/timespan/","tags":"","title":"TimeSpan"},{"body":"UnencryptedTextException (Cortex.Exceptions.Common.UnencryptedTextException)\n","categories":"","description":"","excerpt":"UnencryptedTextException (Cortex.Exceptions.Common.UnencryptedTextException)\n","ref":"/docs/reference/exceptions/common/unencryptedtextexception/","tags":"","title":"UnencryptedTextException"},{"body":"UnicodeEncoding (System.Text.UnicodeEncoding)\nSummary Remarks Create a UnicodeEncoding Convert UnicodeEncoding to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent Unicode character encoding.","excerpt":"Used to represent Unicode character encoding.","ref":"/docs/reference/data-types/text/unicodeencoding/","tags":"","title":"UnicodeEncoding"},{"body":"UserCredentials (Cortex.DataTypes.Credentials.UserCredentials)\nSummary The UserCredentials data type is used to represent details required to authenticate with a domain or server.\nCategory: Credentials Name: UserCredentials Full Name: Cortex.DataTypes.Credentials.UserCredentials Alias: N/A Description: Details required to authenticate with a domain or server. Default Value: null Can be used as: EmailUserCredentials, EmailCredentials, IEmailCredentials, HttpUserCredentials, HttpCredentials, IHttpCredentials, SshUserCredentials, SshCredentials, ISshCredentials, UserCredentials, NetworkCredential, Object, dynamic Can be cast to: N/A Properties Domain The Domain is used to define the domain or server to authenticate with. The value of this property may optionally be encrypted; for more information on how to encrypt this property, see EncryptableText.\nWhether or not the Domain is required is dependent on the block being used:\nSend Email Using SMTP Server Block Data Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value \"\" Username The Username is used to define the user to authenticate as. The value of this property may optionally be encrypted; for more information on how to encrypt this property, see EncryptableText.\nData Type EncryptableText Is Advanced false Default Editor Expression Default Value EncryptableText with value \"\" Password The Password is used to define the password of the user to authenticate as. This property is an EncryptedText and so it must be encrypted; for more information on how to encrypt the password, see EncryptedText.\nData Type EncryptedText Is Advanced false Default Editor Expression Default Value EncryptedText with value \"\" Exceptions The exceptions thrown by the data type can be found below:\nName Description UnencryptedTextException Thrown when the Password is not encrypted. Remarks Create a UserCredentials The following table shows some of the ways that UserCredentials can be created.\nMethod Example Result Editor Support Notes Use a UserCredentials constructor new UserCredentials(domain: \"domain\", username: \"username\", password: \"encryptedPassword\") {\"Domain\": \"domain\", \"Username\": \"username\", \"Password\": \"encryptedPassword\"} Expression Domain specified new UserCredentials(username: \"username\", password: \"encryptedPassword\") {\"Domain\": null, \"Username\": \"username\", \"Password\": \"encryptedPassword\"} Expression Domain not specified A UserCredentials can also be created using the Literal Editor by filling in the necessary values for the following properties:\nProperty Data Type Example Notes Domain EncryptableText \"domain\" Domain defines the domain or server to authenticate with. Username EncryptableText \"username\" Username defines the user to authenticate as. Password EncryptedText \"encryptedPassword\" Password defines the password of the user to authenticate as. Convert UserCredentials to Text Method Example Result Editor Support Notes Use Convert Object To Json block where Object property has a value of {\"Domain\": \"domain\", \"Username\": \"username\", \"Password\": \"encryptedPassword\"} \"{\\r\\n \\\"Domain\\\": \\\"domain\\\",\\r\\n \\\"Username\\\": \\\"username\\\",\\r\\n \\\"Password\\\": \\\"encryptedPassword\\\"\\r\\n}\" N/A See Convert Object To Json Property Editor Support The Expression Editor is available for Input properties where the data type is UserCredentials. The Literal Editor is available for Input properties where the data type is UserCredentials. The Variable Editor is available for Input, InputOutput and Output properties where the data type is UserCredentials. Known Limitations None\nSee Also Related Data Types BasicEmailSessionDetails EmailCredentials EmailUserCredentials EncryptableText EncryptedText HttpCredentials HttpUserCredentials IEmailCredentials IHttpCredentials ISshCredentials SshCredentials SshUserCredentials Related Concepts Working with Email External Documentation NetworkCredential ","categories":"","description":"Used to represent details required to authenticate with a domain or server.","excerpt":"Used to represent details required to authenticate with a domain or server.","ref":"/docs/reference/data-types/credentials/usercredentials/","tags":"","title":"UserCredentials"},{"body":"UTF32Encoding (System.Text.UTF32Encoding)\nSummary Remarks Create a UTF32Encoding Convert UTF32Encoding to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent UTF32 character encoding.","excerpt":"Used to represent UTF32 character encoding.","ref":"/docs/reference/data-types/text/utf32encoding/","tags":"","title":"UTF32Encoding"},{"body":"UTF8Encoding (System.Text.UTF8Encoding)\nSummary Remarks Create a UTF8Encoding Convert UTF8Encoding to Text Property Editor Support Known Limitations See Also Related Data Types Related Concepts External Documentation ","categories":"","description":"Used to represent UTF8 character encoding.","excerpt":"Used to represent UTF8 character encoding.","ref":"/docs/reference/data-types/text/utf8encoding/","tags":"","title":"UTF8Encoding"},{"body":"","categories":"","description":"Blocks related to working with Variables.","excerpt":"Blocks related to working with Variables.","ref":"/docs/reference/blocks/variables/","tags":"","title":"Variables"},{"body":"\r","categories":"","description":"High level view of flows out of sync with master. Allow for mass Commit or Get Master","excerpt":"High level view of flows out of sync with master. Allow for mass Commit or Get Master","ref":"/docs/guides/cortex-gateway/settings/version-control/","tags":"","title":"Version Control"},{"body":"","categories":"","description":"Wait for certain events to occur (i.e. a duration to pass).","excerpt":"Wait for certain events to occur (i.e. a duration to pass).","ref":"/docs/reference/blocks/schedules/wait-for/","tags":"","title":"Wait For"},{"body":"\rWait For Duration (Cortex.Blocks.Schedules.WaitFor.WaitForDurationBlock)\nDescription Waits for a specified Duration.\nExamples Wait for duration This example will wait for 30 seconds.\nProperties Property Value Notes Duration ($)Duration, with value of {\"Years\": 0, \"Months\": 0, \"Days\": 0, \"Hours\": 0, \"Minutes\": 0, \"Seconds\": 30, \"Milliseconds\": 0} ($)Duration is a variable of type TimePeriod Result The block will wait for 30 seconds before completing, at which stage the flow execution will proceed to the next block.\nProperties Duration The Duration to wait for.\nDuration can have positive and negative components where components are:\nYears Months Days Hours Minutes Seconds Milliseconds When waiting for Duration, the block will calculate the date time to wait until by adding the Duration to the current date time. It will first add years, followed by months, days, hours, minutes, seconds and finally milliseconds.\nWhen adding months, if the current day component is greater than the last day in the resultant month, it will update the day to the last day for that month (e.g. adding one month onto 2021-01-31T23:59:59+00:00 will equate to 2021-02-28T23:59:59+00:00).\nData Type TimePeriod Property Type Input Is Advanced false Default Editor Literal Default Value Years: 0 Months: 0 Days: 0 Hours: 0 Minutes: 0 Seconds: 0 Milliseconds: 0 Exceptions The exceptions thrown by the block can be found below:\nName Description ArgumentOutOfRangeException Thrown when any of the values or the sum of components of Duration are out of range. PropertyValueOutOfRangeException Thrown when Duration is negative (i.e. the sum of the components of Duration is less than 0 milliseconds). Remarks No remarks for the block.\n","categories":"","description":"Waits for a specified time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds).","excerpt":"Waits for a specified time period (Years, Months, Days, Hours, Minutes, Seconds and Milliseconds).","ref":"/docs/reference/blocks/schedules/wait-for/wait-for-duration-block/","tags":"","title":"Wait For Duration"},{"body":"","categories":"","description":"Blocks that represent a new workspace.","excerpt":"Blocks that represent a new workspace.","ref":"/docs/reference/blocks/workspaces/workspace/","tags":"","title":"Workspace"},{"body":"\rWorkspace (Cortex.Blocks.Workspaces.Workspace.WorkspaceBlock)\nDescription This block represents a new workspace; when a flow execution reaches this block it will move to the Start Workspace block within this block’s workspace; each workspace has its own scope.\nThe Workspace block can be used to organise block logic into smaller steps with distinct functions. When a new Workspace block is placed on a flow, it will contain a Start Workspace and End Workspace block within its workspace.\nIf a Workspace block is copied and pasted its workspace is also copied, along with all blocks and variables within its scope.\nThe block has no block specific properties, but it does have the Description property that is common to all blocks. This allows users to give each block a description; typically this will be left blank for this block. Any description given will become the name for this block’s scope\nA breakpoint can be added to this block when debugging.\nExamples No examples for the block.\nProperties No properties for the block, other than the Description property that is common to all blocks, and the Block Timeout property that is common to most blocks.\nExceptions No exceptions are thrown by the block.\nRemarks Block Restrictions A workspace can contain any number of blocks. The only restrictions within a workspace are that there can only be one Start Workspace block and one Handle Workspace Exception block within a workspace.\nStarting a flow that contains more than one of the restricted blocks within a workspace will cause a Validation Error to occur.\nUnhandled Exceptions If an exception thrown by a block is not handled by any connected Handle Block Exception blocks, it will be passed to the Handle Workspace Exception block on the same workspace.\nIf the workspace does not contain a Handle Workspace Exception block it will be rethrown by the Workspace block the workspace belongs to.\nThis process repeats until:\nThe exception is handled, or The exception reaches the flow’s top-level workspace, is not handled by any Handle Block Exception blocks and the top-level workspace does not contain a Handle Workspace Exception block. At this stage, the exception is handled by the flow’s Handle Flow Exception block. If an exception occurs within the workspace of the Handle Flow Exception block and is not handled, the flow will end with a status of Error.\nFor more information about chaining of exception handling blocks and passing of exceptions, please see Exception Handling.\nWorkspace Scope Each workspace has its own scope; as a result, variables can be defined that only exist and are accessible in this workspace and any of its sub-workspaces. On exiting a workspace any variables defined for the workspace’s scope are deleted.\nFor information about variables and scope, please see Variables.\n","categories":"","description":"Represents a new workspace.","excerpt":"Represents a new workspace.","ref":"/docs/reference/blocks/workspaces/workspace/workspace-block/","tags":"","title":"Workspace"},{"body":"","categories":"","description":"Blocks used to organise flows and group related logic and actions together.","excerpt":"Blocks used to organise flows and group related logic and actions together.","ref":"/docs/reference/blocks/workspaces/","tags":"","title":"Workspaces"},{"body":"\rWrite All Lines (Cortex.Blocks.FilesAndFolders.WriteFile.WriteAllLinesBlock)\nDescription Writes all specified Lines to the end of the file at the given File Path, with an option to explicitly specify the Encoding to write the file as if needed.\nAn option can also be specified to Overwrite rather than append to the file.\nExamples Write all lines, appending to the end of the file This example will append [\"New Line 1\", \"New Line 2\"] to \"C:\\Source\\File.txt\", using UTF-8 encoding without a byte order mark.\nIn this example assume \"C:\\Source\\File.txt\" contains 2 lines:\nOriginal Line 1 Original Line 2 Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Lines ($)Lines, with value [\"New Line 1\", \"New Line 2\"] ($)Lines is a variable of type IEnumerable\u003cString\u003e Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Result Writing [\"New Line 1\", \"New Line 2\"] to \"C:\\Source\\File.txt\" results in the content being updated to the following:\nOriginal Line 1 Original Line 2 New Line 1 New Line 2 Write all lines, overwriting the file content This example will overwrite the content of \"C:\\Source\\File.txt\" with [\"New Line 1\", \"New Line 2\"], using UTF-8 encoding without a byte order mark.\nIn this example assume \"C:\\Source\\File.txt\" contains 2 lines:\nOriginal Line 1 Original Line 2 Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Lines ($)Lines, with value [\"New Line 1\", \"New Line 2\"] ($)Lines is a variable of type IEnumerable\u003cString\u003e Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Result Overwriting \"C:\\Source\\File.txt\" with [\"New Line 1\", \"New Line 2\"] results in the content being updated to the following:\nNew Line 1 New Line 2 Properties File Path The File Path to write all Lines to.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nIf the file does not exist at the File Path, a new file is created, and any non-existing folders will also be created.\nIf the file already exists at the File Path and Overwrite is:\ntrue, the Lines overwrite the existing file content. false, the Lines are appended to the existing file content. For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Lines The Lines to write to the file.\nLines can be null or empty (i.e. \"\").\nIf Lines is null or empty (i.e. \"\") and Overwrite is:\ntrue, a blank file will be written. false, nothing is written. If Lines contains an entry that is null or empty (i.e. \"\") a blank line will be written for that entry.\nData Type IEnumerable\u003cString\u003e Property Type Input Is Advanced false Default Editor Variable Default Value ($)Lines with no value Overwrite Option to Overwrite the file content with the Lines, rather than appending them.\nBy default, this is set to false to avoid implicit and accidental overwriting of the file content.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Encoding Option to specify the Encoding that should be used to write the file.\nIf the Encoding is left as null, the Lines will be written using UTF-8 encoding without a byte order mark.\nFor information about encoding, examples of available encodings and using them, please see Encoding.\nData Type Encoding Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Encoding is invalid (e.g. Encoding.GetEncoding(-1)). See Value Is Invalid. OperationFailedException The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path is invalid (for example, it is on an unmapped drive). The file at the specified File Path is hidden or is a System file, and overwrite is true. The file at the specified File Path is a read-only file. The user the flow is executing as does not have the required permissions to write to the file. An unexpected error occurs when writing the file. PropertyEmptyException Thrown when File Path is empty (i.e. \"\"). PropertyNullException Thrown when File Path is null. Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\File.txt\"). Encoding of text For information about encoding of text, examples of available encodings and using them, please see Encoding.\n","categories":"","description":"Writes all specified lines to a file at the given file path.","excerpt":"Writes all specified lines to a file at the given file path.","ref":"/docs/reference/blocks/files-and-folders/write-file/write-all-lines-block/","tags":"","title":"Write All Lines"},{"body":"\rWrite All Text (Cortex.Blocks.FilesAndFolders.WriteFile.WriteAllTextBlock)\nDescription Writes all specified Text to the end of the file at the given File Path, with an option to explicitly specify the Encoding to write the file as if needed.\nAn option can also be specified to Overwrite rather than append to the file.\nExamples Write all text, appending to the end of the file This example will append \"New Line 1\\r\\nNew Line 2\" to \"C:\\Source\\File.txt\", using UTF-8 encoding without a byte order mark.\nIn this example assume \"C:\\Source\\File.txt\" contains the following text:\nOriginal Line 1 Original Line 2 Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Text ($)Text, with value \"New Line 1\\r\\nNew Line 2\" ($)Text is a variable of type String Overwrite ($)Overwrite, with value false ($)Overwrite is a variable of type Boolean Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Result Writing \"New Line 1\\r\\nNew Line 2\" to \"C:\\Source\\File.txt\" results in the content being updated to the following:\nOriginal Line 1 Original Line 2 New Line 1 New Line 2 Write all text, overwriting the file content This example will overwrite the content of \"C:\\Source\\File.txt\" with \"New Line 1\\r\\nNew Line 2\", using UTF-8 encoding without a byte order mark.\nIn this example assume \"C:\\Source\\File.txt\" contains the following text:\nOriginal Line 1 Original Line 2 Properties Property Value Notes File Path ($)FilePath, with value @\"C:\\Source\\File.txt\" ($)FilePath is a variable of type String Text ($)Text, with value \"New Line 1\\r\\nNew Line 2\" ($)Text is a variable of type String Overwrite ($)Overwrite, with value true ($)Overwrite is a variable of type Boolean Encoding ($)Encoding, with value null ($)Encoding is a variable of type Encoding Result Overwriting \"C:\\Source\\File.txt\" with \"New Line 1\\r\\nNew Line 2\" results in the content being updated to the following:\nNew Line 1 New Line 2 Properties File Path The File Path to write the Text to.\nThe File Path is case-insensitive, cannot contain any wildcard characters, and any trailing spaces will be automatically removed.\nIf the file does not exist at the File Path, a new file is created, and any non-existing folders will also be created.\nIf the file already exists at the File Path and Overwrite is:\ntrue, the Text overwrites the existing file content. false, the Text is appended to the existing file content. For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, please see File \u0026 Folder Paths.\nData Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)FilePath with no value Text The Text to write to the file.\nText can be null or empty (i.e. \"\").\nIf Text is null or empty (i.e. \"\") and Overwrite is:\ntrue, a blank file will be written. false, nothing is written. Data Type String Property Type Input Is Advanced false Default Editor Variable Default Value ($)Text with no value Overwrite Option to Overwrite the file content with the Text, rather than appending it.\nBy default, this is set to false to avoid implicit and accidental overwriting of the file content.\nData Type Boolean Property Type Input Is Advanced false Default Editor Literal Default Value false Encoding Option to specify the Encoding that should be used to write the file.\nIf the Encoding is left as null, the Text will be written using UTF-8 encoding without a byte order mark.\nFor information about encoding, examples of available encodings and using them, please see Encoding.\nData Type Encoding Property Type Input Is Advanced true Default Editor Expression Default Value No value (defaults to null) Exceptions The exceptions thrown by the block can be found below:\nName Description InvalidPropertyValueException Thrown when Encoding is invalid (e.g. Encoding.GetEncoding(-1)). See Value Is Invalid. OperationFailedException The File Path points to a folder. The File Path contains leading spaces. The File Path contains only whitespace, or the NUL character (i.e. \\0), or contains one or more invalid characters (i.e. \", *, ?, |, \u003c, \u003e, :, \\, /) in any file or folder names. The File Path exceeds the system-defined maximum length (typically 32,767 characters). The File Path is invalid (for example, it is on an unmapped drive). The file at the specified File Path is hidden or is a System file, and overwrite is true. The file at the specified File Path is a read-only file. The user the flow is executing as does not have the required permissions to write to the file. An unexpected error occurs when writing the file. PropertyEmptyException Thrown when File Path is empty (i.e. \"\"). PropertyNullException Thrown when File Path is null. Remarks File Paths For information about the supported file path formats (i.e. absolute, relative, UNC etc.) and examples of each, including how it is determined if a path points to a folder or a file, please see File \u0026 Folder Paths.\nFile Path needs escaping File Path requires \\ characters to be escaped, otherwise each unescaped \\ will be reported as an Invalid property value message when trying to debug the flow.\nEscaping can be done in two ways:\nEscaping the \\ character with another \\ character (e.g. \"C:\\\\Source\\\\File.txt\"), or Prepending an @ character before the start of the File Path (e.g. @\"C:\\Source\\File.txt\"). Encoding of text For information about encoding of text, examples of available encodings and using them, please see Encoding.\n","categories":"","description":"Writes all specified text to a file at the given file path.","excerpt":"Writes all specified text to a file at the given file path.","ref":"/docs/reference/blocks/files-and-folders/write-file/write-all-text-block/","tags":"","title":"Write All Text"},{"body":"","categories":"","description":"Write the content of a file.","excerpt":"Write the content of a file.","ref":"/docs/reference/blocks/files-and-folders/write-file/","tags":"","title":"Write File"},{"body":"","categories":"","description":"Blocks related to working with Xml.","excerpt":"Blocks related to working with Xml.","ref":"/docs/reference/blocks/xml/","tags":"","title":"Xml"},{"body":"","categories":"","description":"Exceptions related to Xml blocks.","excerpt":"Exceptions related to Xml blocks.","ref":"/docs/reference/exceptions/xml/","tags":"","title":"Xml"},{"body":"XmlSerializationException (Cortex.Exceptions.Xml.XmlSerializationException)\nTODO: The exception thrown when…\nThe format of the exception message is as follows:\nTODO: Format How to fix TODO: How to fix…\n","categories":"","description":"The exception thrown when an Xml Serialization errors occur.","excerpt":"The exception thrown when an Xml Serialization errors occur.","ref":"/docs/reference/exceptions/xml/xmlserializationexception/","tags":"","title":"XmlSerializationException"}]